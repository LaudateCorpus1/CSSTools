(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    245107,       5029]
NotebookOptionsPosition[    230643,       4727]
NotebookOutlinePosition[    231380,       4752]
CellTagsIndexPosition[    231299,       4747]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"359efbcb-ba88-49f6-821e-160198930594"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"42f4d81d-a8da-4dd8-9230-61d1faca6694"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"03c862ee-f52e-4052-a308-6b05de65d9a3"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"64489cc9-ae33-4017-8988-ce0fe8bae917"]
}], "History",
 CellID->1247902091,ExpressionUUID->"b963dd0e-2ae0-4bef-8390-6af6fa842855"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"c495ac8d-8920-4d27-b3ba-9038f3156a20"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"7d7d90ea-2ece-45b0-9cf6-13cebe9e84ef"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"f23ff687-8482-4b4d-a488-635c6d0d4eaa"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"9354ecd5-bbda-4ef1-b34c-e54cbd4a7893"],

Cell["CSSTools/ref/CSSSubjects", "Categorization",
 CellLabel->"URI",ExpressionUUID->"9b47b82d-aa09-42ca-aef5-d19cdd932691"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"c3e80f50-5da8-4be4-b875-54b5586fe112"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"3824289e-0223-4408-8255-518fa77ac9ee"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"f76fd9f0-ba0e-477d-a28d-7435a42a2512"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"c496f639-7be6-4260-9aa7-e653edb0c462"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"60d70f58-4f1d-4151-b66c-aa56629083cf"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"2f4cb131-1441-487c-9c2d-0b88836ec0e4"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"dbc32a5f-69df-4b53-84e3-76d5653b1549"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"ea12768c-0adf-4fed-937f-01a52b7795bc"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->670882175,ExpressionUUID->"1a92df4d-d9fa-4905-9770-a31acbdac47e"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"1605c55d-cfd9-47cf-b51c-1ceca4338a07"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->8391405,ExpressionUUID->"58328697-22d3-421a-8041-cc705745bb0b"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->3610269,ExpressionUUID->"6d3d4754-9fd5-4fe3-b948-cd8ff7903554"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->401364205,ExpressionUUID->"a289faf6-9e51-4eb9-baf2-f9b929022998"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->350204745,ExpressionUUID->"ad7a1075-10c1-4e59-aea5-da1dbc9e2c8d"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->732958810,ExpressionUUID->"1b67277b-8f27-4b0a-819d-463ed6e7ae67"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->222905350,ExpressionUUID->"dbb90348-312c-458c-b13b-e76f0fd6bd75"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"e845ec65-8041-4026-b841-28b2c0f0e608"]
}, Closed]],

Cell[CellGroupData[{

Cell["CSSSubjects", "ObjectName",
 CellChangeTimes->{{3.7743718114597683`*^9, 3.7743718116782117`*^9}},
 CellID->1224892054,ExpressionUUID->"aa96cb4e-84c3-41c3-b6cc-6b05088b20b4"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"c210f5b6-6fdd-4ea4-922c-94976b6986ec"],
 Cell[BoxData[
  RowBox[{"CSSSubjects", "[", 
   RowBox[{
    StyleBox["XMLObject", "TI"], ",", 
    StyleBox["CSSData", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "3d380e3f-eb70-42d5-afd8-74d5a7ab5dc0"],
 " \[LineSeparator]Applies the ",
 Cell[BoxData[
  RowBox[{
   StyleBox["CSSData", "TI"], " "}]], "InlineFormula",ExpressionUUID->
  "7d2c2adb-c0ff-4c02-9ee3-c73fafa625cf"],
 " to the symbolic XML, returning the ",
 Cell[BoxData[
  RowBox[{
   StyleBox["CSSData", "TI"], " "}]], "InlineFormula",ExpressionUUID->
  "a58b6fc9-9b3a-465e-bd3a-14f27101cae6"],
 " with additional information about the XML element targeted by the CSS \
selector."
}], "Usage",
 CellChangeTimes->{{3.7646277991238575`*^9, 3.7646278168032475`*^9}, {
   3.7646278767965403`*^9, 3.7646279010989494`*^9}, {3.7646279373630285`*^9, 
   3.764627971942741*^9}, 3.764628732250373*^9, 3.7646287733943896`*^9, {
   3.764628828973998*^9, 3.764628840862364*^9}, {3.7771369239566383`*^9, 
   3.7771369304723873`*^9}, {3.7925912309562883`*^9, 3.7925912636129546`*^9}},
 CellID->982511436,ExpressionUUID->"af62aba0-e7af-4bba-b86a-6db18f5a2406"],

Cell[TextData[{
 "CSS data is independent of the document that it applies to. Use ",
 Cell[BoxData[
  ButtonBox["CSSSubjects",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjects"]], "InlineFormula",
  ExpressionUUID->"a42b1b18-37d3-49cd-9878-2d0c35e770d8"],
 " to see which XML elements the CSS rules target. "
}], "Notes",
 CellChangeTimes->{{3.764628564784794*^9, 3.764628568585408*^9}, {
   3.764628605545632*^9, 3.764628690594613*^9}, {3.7646288615178003`*^9, 
   3.76462890939322*^9}, {3.7646290018916283`*^9, 3.7646290274293723`*^9}, {
   3.7646300475682735`*^9, 3.764630083596959*^9}, {3.774372242606331*^9, 
   3.7743722442659254`*^9}, {3.7771369426677017`*^9, 3.777136942855216*^9}, {
   3.792591287020337*^9, 3.792591287628704*^9}, 3.7925943105338373`*^9},
 CellID->1067943069,ExpressionUUID->"7fd37375-aabc-441d-b315-e90736bb430a"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSSubjects",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjects"]], "InlineFormula",
  ExpressionUUID->"d75cc477-5bc9-4ac3-9fae-a57a4a703110"],
 " returns a list of ",
 Cell[BoxData[
 "CSSSubject"], "InlineFormula",ExpressionUUID->
  "5659dacb-6a15-4b35-abd9-09365b357c21"],
 " expressions. A CSSSubject Use ",
 Cell[BoxData[
  ButtonBox["CSSSubjectQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjectQ"]], "InlineFormula",
  ExpressionUUID->"94ad4323-857e-4089-a8b1-9c2381abdd30"],
 " to test whether an expression is a valid ",
 Cell[BoxData[
 "CSSSubject"], "InlineFormula",ExpressionUUID->
  "3c3ecf05-5779-4680-a662-2e2080d47810"],
 " expression."
}], "Notes",
 CellChangeTimes->{{3.792594492500741*^9, 3.7925945453100796`*^9}},
 CellID->68078935,ExpressionUUID->"4bfaa189-ffe3-44b6-b10d-d4f4295cfb7b"],

Cell["The following options can be given:", "Notes",
 CellChangeTimes->{{3.760830052433822*^9, 3.7608300591339173`*^9}},
 CellID->249298714,ExpressionUUID->"5df5a5f3-a24d-4f4e-b1d5-84bcdbe77862"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "0d2f43aa-d0be-4197-a52c-3337f09fcd04"], "\"\<ID\>\"", "\"\<id\>\"", 
    Cell["\<\
Attribute name to use when expanding the # shorthand notation in a selector.\
\>", "TableText",ExpressionUUID->"db83dfff-b63c-4992-9a36-f7e82092be97"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "f7f89fb9-fb61-4e91-9173-bead2d00660e"], "\"\<CaseSensitive\>\"", 
    "False", Cell[
    "Ignore case in type, attribute name, and attribute value.", "TableText",
     ExpressionUUID->"6f0c6691-d989-4935-bf40-11b9464fa18a"]}
  }]], "3ColumnTableMod",
 CellChangeTimes->{{3.7608300842734365`*^9, 3.760830133964576*^9}, {
   3.7608302236775723`*^9, 3.76083022415931*^9}, {3.760830441721583*^9, 
   3.760830460745923*^9}, {3.7608305326030455`*^9, 3.760830605934944*^9}, {
   3.761131790337678*^9, 3.761131794552402*^9}, 3.7611320948935533`*^9, {
   3.774372694487541*^9, 3.7743726961889915`*^9}, {3.7743727380096116`*^9, 
   3.77437276319728*^9}},
 CellID->410826631,ExpressionUUID->"984eb4de-3e53-4465-b5ce-a2729ac81eb1"],

Cell[TextData[{
 "CSS is case-insensitive but some document languages like XML are not. The ",
 StyleBox["\"CaseSensitive\"", "InlineCode"],
 " option allows for fine control over which aspects of the document or CSS \
ignore case. Possible settings for ",
 StyleBox["\"CaseSensitive\"", "InlineCode"],
 " include:"
}], "Notes",
 CellChangeTimes->{{3.7608301678239627`*^9, 3.7608301796820326`*^9}, {
  3.7608306190747566`*^9, 3.7608306707425547`*^9}, {3.761996190263495*^9, 
  3.76199619302361*^9}, {3.7743720926190186`*^9, 3.7743721225584135`*^9}},
 CellID->823635335,ExpressionUUID->"577733e8-2add-4d44-a29d-1498883105e5"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "07b1a2eb-7512-4b81-bae7-f5e6b11eeeb7"], "\"\<Type\>\"", "False", Cell[
    "Ignore case of type element names.", "TableText",ExpressionUUID->
     "cf737996-25ab-4286-983b-c684ac7865f0"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "5f8ed989-cccd-4727-91cb-f01d53fc2df0"], "\"\<AttributeName\>\"", 
    "False", Cell[
    "Ignore case of attribute names. ", "TableText",ExpressionUUID->
     "e8c2acb6-8b1f-4034-a937-eb596419c11b"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "624425fd-08b4-4910-9df2-d8e69b73ffa9"], "\"\<AttributeValue\>\"", 
    "False", Cell[
    "Ignore case of attribute values", "TableText",ExpressionUUID->
     "b3bfd048-1144-421d-b69c-6927238235f3"]}
  }]], "3ColumnTableMod",
 CellChangeTimes->{{3.7608302145519814`*^9, 3.7608302207873116`*^9}, {
  3.7608302530310845`*^9, 3.7608303291706123`*^9}, {3.7611318093626423`*^9, 
  3.7611318150982046`*^9}, {3.7743721449240513`*^9, 3.774372161199188*^9}},
 CellID->327274850,ExpressionUUID->"37be4b8f-0ab5-4b5a-8e2b-7f45f851e67f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"bd2a4361-46b3-4ec1-9a05-2c7dacf16c60"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/tutorial/CSSTools"]], "Tutorials",
 CellID->341631938,ExpressionUUID->"cefb1b9a-e467-4183-b956-1ad384341fc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"1368574f-04ad-42f2-97fa-05e490e2c22c"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"0d0d254f-429f-4f0c-bc54-7197be33bc74"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"3aea2dd4-b2cd-4666-a745-71ce2d9368d2"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"47afa91a-e2e6-42b1-a9c3-d2ab945effe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"7c243234-9f36-468b-939b-52f51ec4093c"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  ExpressionUUID->"d86b6e3f-e9da-4517-a6dd-a078342697c5"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSSelectorQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelectorQ"]], "InlineFormula",
  ExpressionUUID->"a562b068-ee2e-420e-b904-d2c27f8764ca"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSSubjectQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjectQ"]], "InlineFormula",
  ExpressionUUID->"bcce126b-2e63-4a72-b5b9-7055a89bc362"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["ExtractCSSFromXML",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"]], "InlineFormula",
  ExpressionUUID->"94641b53-2985-4b67-85e7-6bb75f128e6c"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSCascade",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSCascade"]], "InlineFormula",
  ExpressionUUID->"a603ec87-a262-48ad-bc02-3e7630dc0047"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  ExpressionUUID->"490ddc7a-e8bc-4802-ad43-76b2b82663b0"]
}], "SeeAlso",
 CellChangeTimes->{{3.764628292809229*^9, 3.7646283053821387`*^9}, {
  3.764628356165416*^9, 3.764628356773979*^9}, {3.792591525600471*^9, 
  3.7925915776242905`*^9}, {3.792594793051092*^9, 3.792594793771747*^9}, {
  3.7928699233501797`*^9, 3.7928699840041804`*^9}},
 CellID->929782353,ExpressionUUID->"99c5bf7f-ae99-4e7c-8bc9-041d1b3f0891"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"2fc67282-00b6-4825-b08c-f10e0076b3ae"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "MoreAbout",
 CellID->1665078683,ExpressionUUID->"2a7e3174-7709-4e31-bd4b-d1daaf148618"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"1315783e-b980-4875-a24c-2cf6ddfd2982"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["CSSSubjects",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjects"]], "InlineFormula",
  ExpressionUUID->"07af15bd-9ffb-4425-a25c-3debc6ffe840"],
 " to extract the positions of ",
 Cell[BoxData[
  ButtonBox["XMLElement",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/XMLElement"]], "InlineFormula",ExpressionUUID->
  "3bfafb4c-6f24-4b99-b7f6-8b49bb49bc9f"],
 " instances that the selector targets:"
}], "ExampleText",
 CellChangeTimes->{{3.774374756319338*^9, 3.774374783527765*^9}, {
   3.7771369634161825`*^9, 3.77713696784848*^9}, 3.792591648546199*^9, {
   3.7925916845152054`*^9, 3.7925916988038597`*^9}, {3.792956377174292*^9, 
   3.792956377829511*^9}},
 CellID->356787859,ExpressionUUID->"1773d1e3-3427-40ab-8249-e8d3d1c537ee"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->156532367,ExpressionUUID->"435cc560-8b7c-4b43-9540-9e3014b9846f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head><title>Test</title></head><body \
xmlns='http://www.w3.org/1999/xhtml'><p class='red' myid='unique'>Here is \
some math.</p><p><m:math xmlns:m='http://www.w3.org/1998/Math/MathML'><m:mi \
m:title='cat'>x</m:mi><m:mo>+</m:mo><m:mn>1</m:mn></m:math></p></body></html>\
\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754323140444131*^9, 3.754323154582312*^9}, 
   3.7608307136894164`*^9, 3.792956501503684*^9, 3.792956775838769*^9},
 CellLabel->"In[2]:=",
 CellID->16992958,ExpressionUUID->"493420c9-dd16-4dfd-9598-071cb44051a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", 
   RowBox[{"CSSSelector", "[", "\"\<mo\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7608307308233023`*^9, 3.760830744750086*^9}, {
  3.774374686650566*^9, 3.774374688365012*^9}, {3.7743747247195253`*^9, 
  3.774374737778901*^9}},
 CellLabel->"In[3]:=",
 CellID->201089156,ExpressionUUID->"c78dbdd4-8c55-4009-a020-eec0dd591cbc"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   StyleBox[
    TagBox[
     TooltipBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"XML \"", 
          RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"mo\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[1, 0.9, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0.5, 0, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      RowBox[{"{", 
        RowBox[{
         "2", ",", "3", ",", "2", ",", "3", ",", "2", ",", "3", ",", "1", ",",
           "3", ",", "2"}], "}"}]],
     Annotation[#, {2, 3, 2, 3, 2, 3, 1, 3, 2}, "Tooltip"]& ],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSubject[
    Association[
    "Type" -> "mo", "Namespace" -> "http://www.w3.org/1998/Math/MathML", 
     "Position" -> {2, 3, 2, 3, 2, 3, 1, 3, 2}, "Attributes" -> Association[],
      "ID" -> "id", "CaseSensitive" -> 
     Association[
      "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
       False]]]], "}"}]], "Output",
 CellChangeTimes->{3.803914640054367*^9},
 CellLabel->"Out[3]=",
 CellID->213002576,ExpressionUUID->"a231a5dd-faca-4815-94d3-53f31c9d65f5"]
}, Open  ]],

Cell[TextData[{
 "A ",
 Cell[BoxData[
 "CSSSubject"], "InlineFormula",ExpressionUUID->
  "0479788d-41ad-4cce-9f24-cc2b41b7c837"],
 " expression contains useful information when performing the CSS cascade \
algorithm via either the ",
 Cell[BoxData[
  ButtonBox["CSSCascade",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSCascade"]], "InlineFormula",
  ExpressionUUID->"77a3a695-8bc8-4aeb-89be-f1e62a7d18b1"],
 " or ",
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  ExpressionUUID->"e061cf29-7607-43bc-9227-f99c7d2db36a"],
 " functions:"
}], "ExampleText",
 CellChangeTimes->{{3.792594607746131*^9, 3.7925946601015873`*^9}, {
  3.792956515517192*^9, 3.7929565158463144`*^9}},
 CellID->209715665,ExpressionUUID->"96203288-e364-47e3-9fd5-5a5e2909a704"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"CSSSubjects", "[", 
   RowBox[{"obj", ",", 
    RowBox[{"CSSSelector", "[", "\"\<mo\>\"", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792594670490715*^9, 3.7925946791991725`*^9}},
 CellLabel->"In[4]:=",
 CellID->391333396,ExpressionUUID->"61c98180-add7-4945-84bf-f4b91d040aab"],

Cell["\<\
{CSSSubject[<|\"Type\" -> \"mo\", \"Namespace\" -> \
\"http://www.w3.org/1998/Math/MathML\", \"Position\" -> {2, 3, 2, 3, 2, 3, 1, \
3, 2}, \"Attributes\" -> <||>, \"ID\" -> \"id\", 
   \"CaseSensitive\" -> <|\"Type\" -> False, \"AttributeName\" -> False, \
\"AttributeValue\" -> False|>|>]}\
\>", "Output",
 CellChangeTimes->{3.803914640101241*^9},
 CellLabel->"Out[4]//InputForm=",
 CellID->385704079,ExpressionUUID->"610e85f9-82bf-4bfc-b0d1-25194fa75df2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "55925c2c-906e-4bb1-b003-3b32f1b51cae"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->150864650,ExpressionUUID->"b3ef7344-f673-4f81-aa54-5ed9129801fd"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSSubjects",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjects"]], "InlineFormula",
  ExpressionUUID->"f65442bb-593c-4a70-8be1-04bbc6642975"],
 " also works with CSS data. Start with CSS data that stands alone from any \
XML document. The data is modified to include the targeted ",
 Cell[BoxData[
  ButtonBox["XMLElement",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/XMLElement"]], "InlineFormula",ExpressionUUID->
  "67320d09-1aef-4291-9818-fd3fe5a920f3"],
 " instances:"
}], "ExampleText",
 CellChangeTimes->{{3.774534308487095*^9, 3.7745343885497975`*^9}, {
  3.777136977519577*^9, 3.7771369830209274`*^9}, {3.79259175149924*^9, 
  3.792591758821332*^9}, {3.7929566014453197`*^9, 3.792956601837268*^9}},
 CellID->429255363,ExpressionUUID->"93177224-3af8-4f6d-974c-30226c716d8a"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->897416440,ExpressionUUID->"3152f218-80e4-4982-bdf2-77e1a2462c86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<tag {color:red;}\>\"", ",", " ", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.7646295268142614`*^9},
 CellLabel->"In[2]:=",
 CellID->557491354,ExpressionUUID->"197dbd67-3eb9-450b-87fc-509e2edfbb7e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "color", "Value" -> "red", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[1, 0, 0]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 182072459978272], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Selector", 
                  Style[
                  "Selector", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Selector"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{All, "Selector"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{All, "Block"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Property", 
                  Style[
                  "Property", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Property"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{
                All, "Block", All, "Property"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Value"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{
                All, "Block", All, "Value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Important", 
                  Style[
                  "Important", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Important"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{
                All, "Block", All, "Important"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{
                All, "Block", All, "Interpretation"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Condition", 
                  Style[
                  "Condition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Condition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{
                All, "Block", All, "Condition"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", FontSize -> 
                 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "27a1d877-66b3-4893-94f9-fcac274ec033"][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{420., {43.25, 47.75}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{420., {43.25, 47.75}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8039146402638054`*^9},
 CellLabel->"Out[2]=",
 CellID->78851130,ExpressionUUID->"5a6909f6-c9a9-4349-ad62-5c592d5995f0"]
}, Open  ]],

Cell["\<\
Some XML may contain elements that can be targeted by this CSS data:\
\>", "ExampleText",
 CellChangeTimes->{{3.7646291180240855`*^9, 3.7646291436438446`*^9}, {
  3.7929566137653255`*^9, 3.7929566140695477`*^9}},
 CellID->518384591,ExpressionUUID->"e8fd351b-8614-4ed7-a903-bd4b4c24a16c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><tag>Tag content.</tag><label><tag>Another \
tag.</tag></label></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.764629150232545*^9, {3.764629527863301*^9, 3.7646295302125125`*^9}},
 CellLabel->"In[3]:=",
 CellID->716083783,ExpressionUUID->"bcfc86a9-e614-4153-8dbf-3a796aeeb272"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"doc", ",", "cssData"}], "]"}]], "Input",
 CellChangeTimes->{{3.7646291599052906`*^9, 3.764629169774357*^9}},
 CellLabel->"In[4]:=",
 CellID->78224434,ExpressionUUID->"88c2553b-692c-400e-850d-7dd53828eba5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Subjects" -> {
          CSSTools`CSSSubject[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSSubject[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "color", "Value" -> "red", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[1, 0, 0]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 182076754945568], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Selector", 
                  Style[
                  "Selector", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Selector"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{All, "Selector"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Subjects", 
                  Style[
                  "Subjects", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Subjects"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{All, "Subjects"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{All, "Block"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Property", 
                  Style[
                  "Property", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Property"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{
                All, "Block", All, "Property"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Value"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{
                All, "Block", All, "Value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Important", 
                  Style[
                  "Important", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Important"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{
                All, "Block", All, "Important"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{
                All, "Block", All, "Interpretation"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Condition", 
                  Style[
                  "Condition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Condition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{
                All, "Block", All, "Condition"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 1}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]], 
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 1}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]], 
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Subjects"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Subjects"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", FontSize -> 
                 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "56271eaf-251d-4440-855e-1186dd0319de"][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{512., {43.25, 47.75}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{512., {43.25, 47.75}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8039146404951887`*^9},
 CellLabel->"Out[4]=",
 CellID->24671180,ExpressionUUID->"c6c61e62-c44f-4f40-939d-09077236ffe3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"9e1bf2bb-3c01-41f2-b1f0-000d0accb7c7"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "edf817c0-6e5e-46bd-942b-2185b031b353"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"e28a35c7-e6b2-4219-a041-672d77d94a4c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "7aac2142-7b5f-4a3f-9508-299576667181"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"a5417a91-7d48-439b-9a99-381a826599ba"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "2c6eb7c8-5da7-41f5-a604-787c0e58ab81"],
  $Line = 0; Null]], "ExampleSection",
 CellID->435074752,ExpressionUUID->"c5fe26f8-170d-4bb3-8390-853ca0abf4b1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"CaseSensitive\"", "ExampleSubsection",ExpressionUUID->
   "f07de8a2-ee53-426e-9716-55ec2fc56129"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.7611311844361916`*^9, 3.7611311890428734`*^9}, {
  3.76199690798454*^9, 3.7619969085513783`*^9}},
 CellID->29964789,ExpressionUUID->"6afc368d-a635-4a5f-b057-cdda6a7e047c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->38158038,ExpressionUUID->"cfbabfc7-1a4b-4ea0-be91-db436c75416c"],

Cell[TextData[{
 "XML is case-sensitive but CSS is not. Use the ",
 Cell[BoxData[
  RowBox[{
  "\[OpenCurlyDoubleQuote]", "CaseSensitive", "\[CloseCurlyDoubleQuote]"}]], 
  "InlineFormula",ExpressionUUID->"dde76222-f68d-465e-9782-988870377d06"],
 " option to enforce case sensitivity:"
}], "ExampleText",
 CellChangeTimes->{{3.754324117981344*^9, 3.754324161389723*^9}, {
   3.754324267181501*^9, 3.7543242678301315`*^9}, {3.761996917410562*^9, 
   3.761996917845441*^9}, {3.774374880733637*^9, 3.774374883861125*^9}, 
   3.7925918041662917`*^9, {3.7925918407645063`*^9, 3.7925918440118227`*^9}, {
   3.7929566191810064`*^9, 3.792956620340824*^9}},
 CellID->21623525,ExpressionUUID->"e9530efe-18d7-46f1-9feb-6b1dea94c817"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head><title>Test</title></head><body \
xmlns='http://www.w3.org/1999/xhtml'><p class='red' myid='unique'>Here is \
some math.</p><p><m:math xmlns:m='http://www.w3.org/1998/Math/MathML'><m:mi \
m:title='cat'>x</m:mi><m:mo>+</m:mo><m:mn>1</m:mn></m:math></p></body></html>\
\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.7611316917591085`*^9, 3.7929566322788277`*^9},
 CellLabel->"In[2]:=",
 CellID->41721981,ExpressionUUID->"8422d393-2b2e-442d-a16f-6cc62da51b1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"targets", "=", 
  RowBox[{"CSSSubjects", "[", 
   RowBox[{"obj", ",", 
    RowBox[{"CSSSelector", "[", "\"\<[myID=unique]\>\"", "]"}], ",", 
    RowBox[{"\"\<CaseSensitive\>\"", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7743749013990545`*^9, 3.7743749198048396`*^9}, {
  3.7925919097266493`*^9, 3.792591910587024*^9}},
 CellLabel->"In[3]:=",
 CellID->202039918,ExpressionUUID->"ecc8c871-cc03-4a08-ae6c-15a2443e6085"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   StyleBox[
    TagBox[
     TooltipBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"XML \"", 
          RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[1, 0.9, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0.5, 0, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "1"}], "}"}]],
     Annotation[#, {2, 3, 2, 3, 1}, "Tooltip"]& ],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSubject[
    Association[
    "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
     "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
     Association[
      "class" -> Association["Namespace" -> None, "Value" -> "red"], "myid" -> 
       Association["Namespace" -> None, "Value" -> "unique"]], "ID" -> "id", 
     "CaseSensitive" -> 
     Association[
      "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
       False]]]], "}"}]], "Output",
 CellChangeTimes->{3.8039146408312855`*^9},
 CellLabel->"Out[3]=",
 CellID->195994890,ExpressionUUID->"c6e25597-3c44-4f06-85b0-861ef4f9c8fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", 
   RowBox[{"CSSSelector", "[", "\"\<[myID=unique]\>\"", "]"}], ",", 
   RowBox[{"\"\<CaseSensitive\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7743749342405243`*^9, 3.7743749348628654`*^9}},
 CellLabel->"In[4]:=",
 CellID->820163369,ExpressionUUID->"2155a660-8e0d-4a9a-a4f0-804444d3a72f"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8039146408861427`*^9},
 CellLabel->"Out[4]=",
 CellID->82833888,ExpressionUUID->"9529d3da-94a3-494c-aa77-f2f15cb1a8ed"]
}, Open  ]],

Cell["\<\
You can specify the case-sensitivity separately for attribute name and value:\
\>", "ExampleText",
 CellChangeTimes->{{3.754324271181525*^9, 3.754324297567556*^9}, {
  3.7543244830099106`*^9, 3.754324516915105*^9}, {3.792956644692893*^9, 
  3.792956645181311*^9}},
 CellID->90374195,ExpressionUUID->"58f369d2-c75d-41f5-9c87-bb7423ced995"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{"obj", ",", 
   RowBox[{"Through", "[", 
    RowBox[{"targets", "[", "\"\<Position\>\"", "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7745331802636995`*^9, 3.774533186941334*^9}, 
   3.792591938763295*^9},
 CellLabel->"In[5]:=",
 CellID->46840407,ExpressionUUID->"ff01a824-7855-453f-b450-ce85e47fe7af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"XMLElement", "[", 
   RowBox[{"\<\"p\"\>", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"class\"\>", "\[Rule]", "\<\"red\"\>"}], ",", 
      RowBox[{"\<\"myid\"\>", "\[Rule]", "\<\"unique\"\>"}]}], "}"}], ",", 
    RowBox[{"{", "\<\"Here is some math.\"\>", "}"}]}], "]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.803914640938002*^9},
 CellLabel->"Out[5]=",
 CellID->81953247,ExpressionUUID->"4f1638d5-71f4-4d58-9e56-998c0d7dd47e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<[myID=Unique]\>\"", ",", 
   RowBox[{"\"\<CaseSensitive\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<AttributeName\>\"", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"\"\<AttributeValue\>\"", " ", "->", " ", "True"}]}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7543243050721273`*^9, 3.7543243258409142`*^9}, {
   3.754324363962705*^9, 3.7543243642494564`*^9}, {3.754324457139866*^9, 
   3.754324463197956*^9}, 3.761131784531006*^9, {3.761131838807005*^9, 
   3.76113186708615*^9}, {3.7745330921605773`*^9, 3.774533096166871*^9}},
 CellLabel->"In[6]:=",
 CellID->220880907,ExpressionUUID->"41198a7a-253d-4bf4-ab1c-c73292ea636a"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8039146409918375`*^9},
 CellLabel->"Out[6]=",
 CellID->102749361,ExpressionUUID->"38602566-cb64-47e8-8453-e0a5504b85e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<[myID=Unique]\>\"", ",", 
   RowBox[{"\"\<CaseSensitive\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<AttributeName\>\"", " ", "->", " ", "True"}], ",", " ", 
      RowBox[{"\"\<AttributeValue\>\"", " ", "->", " ", "False"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7543243050721273`*^9, 3.7543243258409142`*^9}, {
   3.754324363962705*^9, 3.7543243642494564`*^9}, 3.761131785490403*^9, {
   3.7611318394530687`*^9, 3.7611318721207056`*^9}, {3.7745331324725933`*^9, 
   3.774533134197982*^9}},
 CellLabel->"In[7]:=",
 CellID->949920742,ExpressionUUID->"1a855afa-8343-417a-9ba8-7490557d4d6f"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.803914641036739*^9},
 CellLabel->"Out[7]=",
 CellID->344233862,ExpressionUUID->"940b5bd3-827f-46e9-a96c-75c4773d06c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<[myID=Unique]\>\"", ",", 
   RowBox[{"\"\<CaseSensitive\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<AttributeName\>\"", " ", "->", " ", "False"}], ",", " ", 
      RowBox[{"\"\<AttributeValue\>\"", " ", "->", " ", "False"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7543243340760756`*^9, 3.754324368553824*^9}, 
   3.7611317864089756`*^9, 3.7611318400676155`*^9, {3.7611318814287987`*^9, 
   3.761131884812772*^9}, {3.7745331371022468`*^9, 3.7745331380137777`*^9}},
 CellLabel->"In[8]:=",
 CellID->150083342,ExpressionUUID->"3701a204-5697-4ab1-8f3c-c7cd109aed0f"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   StyleBox[
    TagBox[
     TooltipBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"XML \"", 
          RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[1, 0.9, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0.5, 0, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "1"}], "}"}]],
     Annotation[#, {2, 3, 2, 3, 1}, "Tooltip"]& ],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSubject[
    Association[
    "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
     "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
     Association[
      "class" -> Association["Namespace" -> None, "Value" -> "red"], "myid" -> 
       Association["Namespace" -> None, "Value" -> "unique"]], "ID" -> "id", 
     "CaseSensitive" -> 
     Association[
      "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
       False]]]], "}"}]], "Output",
 CellChangeTimes->{3.8039146410816135`*^9},
 CellLabel->"Out[8]=",
 CellID->452499708,ExpressionUUID->"7b57f233-8f31-4ea4-acda-6043a3daf940"]
}, Open  ]],

Cell["You can specify the case-sensitivity separately for type:", \
"ExampleText",
 CellChangeTimes->{{3.7543245043346395`*^9, 3.7543245189165955`*^9}, {
  3.792956660581094*^9, 3.792956661293208*^9}},
 CellID->211596893,ExpressionUUID->"ea9b1cf2-9185-4508-9439-5c05a9457ed3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<P\>\"", ",", 
   RowBox[{"\"\<CaseSensitive\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Type\>\"", " ", "->", " ", "False"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7543244145781393`*^9, 3.7543244184523573`*^9}, 
   3.7611317875279827`*^9, 3.7611318405900564`*^9, {3.7611318929978943`*^9, 
   3.7611318935275555`*^9}, {3.774533230276332*^9, 3.774533231228741*^9}},
 CellLabel->"In[9]:=",
 CellID->564785717,ExpressionUUID->"e2fde25f-b8c4-4f9d-a31d-e368bb925ef1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"XML \"", 
           RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[1, 0.9, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
          FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0.5, 0, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "1"}], "}"}]],
      Annotation[#, {2, 3, 2, 3, 1}, "Tooltip"]& ],
     Editable->False,
     StripOnInput->False,
     ShowStringCharacters->False],
    CSSTools`CSSSubject[
     Association[
     "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
      "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
      Association[
       "class" -> Association["Namespace" -> None, "Value" -> "red"], "myid" -> 
        Association["Namespace" -> None, "Value" -> "unique"]], "ID" -> "id", 
      "CaseSensitive" -> 
      Association[
       "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
        False]]]], ",", 
   InterpretationBox[
    StyleBox[
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"XML \"", 
           RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[1, 0.9, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
          FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0.5, 0, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
      Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
     Editable->False,
     StripOnInput->False,
     ShowStringCharacters->False],
    CSSTools`CSSSubject[
     Association[
     "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
      "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
      "id", "CaseSensitive" -> 
      Association[
       "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
        False]]]]}], "}"}]], "Output",
 CellChangeTimes->{3.803914641126499*^9},
 CellLabel->"Out[9]=",
 CellID->99807259,ExpressionUUID->"1ff42eba-2722-4cce-98dd-147a4cf025b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<P\>\"", ",", 
   RowBox[{"\"\<CaseSensitive\>\"", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Type\>\"", " ", "->", " ", "True"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7543244247933197`*^9, 3.7543244252341757`*^9}, 
   3.76113178848243*^9, 3.761131842111988*^9, {3.761131895957931*^9, 
   3.761131896646087*^9}, 3.7745332336911573`*^9},
 CellLabel->"In[10]:=",
 CellID->3546532,ExpressionUUID->"4a234fe0-b4ca-4dba-8c69-a71eea2c2b85"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.803914641170384*^9},
 CellLabel->"Out[10]=",
 CellID->546863862,ExpressionUUID->"eed075cf-dd68-4a6d-a184-6fa6ce39ab67"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"ID\"", "ExampleSubsection",ExpressionUUID->
   "fd6e3ff7-3ee3-4d9f-ab90-2ec4e0ecf5b1"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.7611310293623395`*^9, 3.761131030015709*^9}},
 CellID->1295379749,ExpressionUUID->"fea821c4-5561-4720-b248-76e26cd03332"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->43094833,ExpressionUUID->"e36cec6e-683f-437b-8218-26a4e3f8e04e"],

Cell[TextData[{
 "XML can define its own unique ID tags. Use the ",
 Cell[BoxData[
  RowBox[{"\[OpenCurlyDoubleQuote]", "ID", "\[CloseCurlyDoubleQuote]"}]], 
  "InlineFormula",ExpressionUUID->"af866f4e-12bb-4ddd-89e2-e5e6396d318a"],
 " option to indicate what tag name is in use. This is equivalent to using \
the attribute selector but with higher specificity."
}], "ExampleText",
 CellChangeTimes->{{3.754323541053567*^9, 3.7543235862391624`*^9}, {
   3.75432374727379*^9, 3.754323766178648*^9}, {3.7543239969940095`*^9, 
   3.754324053243313*^9}, 3.7925920236068325`*^9},
 CellID->350125271,ExpressionUUID->"5f71d8f5-8af8-4717-99dc-a625fed2f790"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head><title>Test</title></head><body \
xmlns='http://www.w3.org/1999/xhtml'><p class='red' myid='unique'>Here is \
some math.</p><p><m:math xmlns:m='http://www.w3.org/1998/Math/MathML'><m:mi \
m:title='cat'>x</m:mi><m:mo>+</m:mo><m:mn>1</m:mn></m:math></p></body></html>\
\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611308749517727`*^9, 3.761130899505102*^9}, 
   3.792956676542411*^9},
 CellLabel->"In[2]:=",
 CellID->298476894,ExpressionUUID->"e526ef59-3f18-4142-a05a-26a0d4ffa5e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<#unique\>\"", ",", 
   RowBox[{"\"\<ID\>\"", "\[Rule]", "\"\<myid\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.754323595679926*^9, 3.754323616017607*^9}, {
   3.754323986409196*^9, 3.7543239864988985`*^9}, 3.7611311183539824`*^9, 
   3.774533267661092*^9},
 CellLabel->"In[3]:=",
 CellID->4767336,ExpressionUUID->"3b9cdc4a-7f65-4e5a-a440-d33d46e6f464"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   StyleBox[
    TagBox[
     TooltipBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"XML \"", 
          RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[1, 0.9, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0.5, 0, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "1"}], "}"}]],
     Annotation[#, {2, 3, 2, 3, 1}, "Tooltip"]& ],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSubject[
    Association[
    "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
     "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
     Association[
      "class" -> Association["Namespace" -> None, "Value" -> "red"], "myid" -> 
       Association["Namespace" -> None, "Value" -> "unique"]], "ID" -> "myid",
      "CaseSensitive" -> 
     Association[
      "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
       False]]]], "}"}]], "Output",
 CellChangeTimes->{3.8039146413159914`*^9},
 CellLabel->"Out[3]=",
 CellID->132941269,ExpressionUUID->"18db5564-9f4b-43d6-bc3a-157d714f2d76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"obj", ",", "\"\<[myid=unique]\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.754323649673148*^9, 3.754323661296779*^9}, {
   3.754323726790798*^9, 3.7543237307303343`*^9}, 3.7611311199727297`*^9, 
   3.7745332687182665`*^9},
 CellLabel->"In[4]:=",
 CellID->168884424,ExpressionUUID->"17ea84e9-75da-49c8-a7fb-8e4bac842285"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   StyleBox[
    TagBox[
     TooltipBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"XML \"", 
          RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[1, 0.9, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0.5, 0, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "1"}], "}"}]],
     Annotation[#, {2, 3, 2, 3, 1}, "Tooltip"]& ],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSubject[
    Association[
    "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
     "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
     Association[
      "class" -> Association["Namespace" -> None, "Value" -> "red"], "myid" -> 
       Association["Namespace" -> None, "Value" -> "unique"]], "ID" -> "id", 
     "CaseSensitive" -> 
     Association[
      "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
       False]]]], "}"}]], "Output",
 CellChangeTimes->{3.803914641368849*^9},
 CellLabel->"Out[4]=",
 CellID->14318332,ExpressionUUID->"36575e77-e0ef-4774-93a2-7e58fcf95396"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "9c22aeb9-15bb-47b5-8c34-24e006a5eabd"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"82e2aa92-ff93-4b0b-9a67-326bd5786927"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "b27622b8-b1ca-4138-bf27-bf5a2ba1e755"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"c3369d95-0b4a-4729-94a3-2e8c386caeca"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "a27d4174-906a-4d54-95c0-6e050e1d8709"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"d859dda0-9a5f-4418-859e-a76bf0a70914"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->214239584,ExpressionUUID->"9fbe83f6-bf54-485c-9a22-68120ca2ac66"],

Cell["\<\
XML documents can contain embedded stylesheets and in-line style attributes. \
The following XML has embedded style data:\
\>", "ExampleText",
 CellChangeTimes->{{3.762728331700509*^9, 3.7627283350285563`*^9}, {
  3.7627283674381456`*^9, 3.76272837674811*^9}, {3.7646294757344007`*^9, 
  3.7646295138757305`*^9}, {3.764629657799653*^9, 3.764629668819416*^9}, {
  3.7925921082939005`*^9, 3.792592168724807*^9}, {3.7925924486882887`*^9, 
  3.7925924603693705`*^9}, {3.792956690149044*^9, 3.792956691613064*^9}},
 CellID->302647184,ExpressionUUID->"146a05ae-4b48-4386-a402-44b57a03ab5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><style type=\\\"text/css\\\">tag {font-size:2em; \
color:blue}</style><tag>Tag content.</tag><label><tag>Another \
tag.</tag></label></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762728383675127*^9, 3.7627284526369658`*^9}, {
   3.7627285182842627`*^9, 3.7627285208144965`*^9}, {3.762728563580153*^9, 
   3.762728569836383*^9}, {3.7627286003269615`*^9, 3.762728607817879*^9}, {
   3.7627295437587895`*^9, 3.7627295625709257`*^9}, 3.7646295527157044`*^9},
 CellLabel->"In[2]:=",
 CellID->823104529,ExpressionUUID->"396d3b7e-fb8f-4ee4-8cc5-be8e33670a12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellChangeTimes->{{3.7627284604240875`*^9, 3.76272846794901*^9}},
 CellLabel->"In[3]:=",
 CellID->55848347,ExpressionUUID->"f0aacecd-79c4-40a3-b7d6-5548b6a2264a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Subjects" -> {
          CSSTools`CSSSubject[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSSubject[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 3, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "2em", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 2 Inherited], 
           "Condition" -> None], 
          Association[
          "Property" -> "color", "Value" -> "blue", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[0, 0, 1]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
     Association["ID" -> 182081049912866], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Selector", 
                  Style[
                  "Selector", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Selector"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{All, "Selector"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Subjects", 
                  Style[
                  "Subjects", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Subjects"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{All, "Subjects"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{All, "Block"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Property", 
                  Style[
                  "Property", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Property"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{
                All, "Block", All, "Property"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Value"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{
                All, "Block", All, "Value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Important", 
                  Style[
                  "Important", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Important"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{
                All, "Block", All, "Important"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{
                All, "Block", All, "Interpretation"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Condition", 
                  Style[
                  "Condition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Condition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{
                All, "Block", All, "Condition"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]], 
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 3, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]], 
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 3, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Subjects"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Subjects"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2em", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2", " ", "Inherited"}], FontFamily -> 
                 "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", FontSize -> 
                 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "64f2a368-3f42-4dee-9a1e-8eb795108164"][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{542., {53.25, 57.75}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{542., {53.25, 57.75}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8039146415952435`*^9},
 CellLabel->"Out[3]=",
 CellID->646988634,ExpressionUUID->"41fbf33e-9165-49aa-9e17-ade689e79e35"]
}, Open  ]],

Cell["\<\
When applying a stylesheet to an XML document with embedded style \
information, the embedded style information is ignored:\
\>", "ExampleText",
 CellChangeTimes->{{3.7646297802561088`*^9, 3.764629834656655*^9}, {
  3.7925924700771847`*^9, 3.7925925061092305`*^9}, {3.792956700916478*^9, 
  3.792956701349047*^9}},
 CellID->61377304,ExpressionUUID->"8bd42adb-2b5b-4459-a89a-e38874b5fc7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssData", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{"\"\<tag {color:red;}\>\"", ",", " ", "\"\<CSS\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7646295672159643`*^9},
 CellLabel->"In[4]:=",
 CellID->287230934,ExpressionUUID->"61d9b72e-1ba3-4e26-a533-691930f53e12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSSubjects", "[", 
  RowBox[{"doc", ",", "cssData"}], "]"}]], "Input",
 CellChangeTimes->{{3.764629568952777*^9, 3.764629577175458*^9}},
 CellLabel->"In[5]:=",
 CellID->647369780,ExpressionUUID->"c7016109-c0d2-4134-a84e-fe324ae18c87"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Subjects" -> {
          CSSTools`CSSSubject[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSSubject[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 3, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "color", "Value" -> "red", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[1, 0, 0]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 182089639847458], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Selector", 
                  Style[
                  "Selector", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Selector"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{All, "Selector"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Subjects", 
                  Style[
                  "Subjects", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Subjects"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{All, "Subjects"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{All, "Block"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Property", 
                  Style[
                  "Property", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Property"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{
                All, "Block", All, "Property"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Value"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{
                All, "Block", All, "Value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Important", 
                  Style[
                  "Important", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Important"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{
                All, "Block", All, "Important"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{
                All, "Block", All, "Interpretation"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Condition", 
                  Style[
                  "Condition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Condition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{
                All, "Block", All, "Condition"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]], 
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 3, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]], 
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 3, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Subjects"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Subjects"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", FontSize -> 
                 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "b937ce79-c7eb-48db-af7f-fda84eba1b69"][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{512., {43.25, 47.75}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{512., {43.25, 47.75}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.803914641850567*^9},
 CellLabel->"Out[5]=",
 CellID->393317645,ExpressionUUID->"887607d8-3582-4168-9dad-e89478441375"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "1f0e2271-19e6-42d1-a05d-b7eb8156b0f5"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"fbc21a9a-591e-458e-bc24-4b18c0f15b81"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "ad3ed080-5a02-44e1-91a1-030f0b18a94a"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"20573ca9-11ab-4477-be68-6f35bde514fb"]
}, Open  ]]
},
WindowSize->{795.75, 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->"Global`",
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"d328df74-9da9-4356-ab85-b83f20140c16"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[109102, 2225, 155, 2, 42, "ExtendedExamplesSection",ExpressionUUID->"9e1bf2bb-3c01-41f2-b1f0-000d0accb7c7",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 231103, 4740}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 18, "History",ExpressionUUID->"b963dd0e-2ae0-4bef-8390-6af6fa842855",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 22, "CategorizationSection",ExpressionUUID->"c495ac8d-8920-4d27-b3ba-9038f3156a20",
 CellID->1122911449],
Cell[1309, 41, 134, 2, 70, "Categorization",ExpressionUUID->"7d7d90ea-2ece-45b0-9cf6-13cebe9e84ef",
 CellID->686433507],
Cell[1446, 45, 136, 2, 70, "Categorization",ExpressionUUID->"f23ff687-8482-4b4d-a488-635c6d0d4eaa",
 CellID->605800465],
Cell[1585, 49, 133, 2, 70, "Categorization",ExpressionUUID->"9354ecd5-bbda-4ef1-b34c-e54cbd4a7893",
 CellID->468444828],
Cell[1721, 53, 124, 1, 70, "Categorization",ExpressionUUID->"9b47b82d-aa09-42ca-aef5-d19cdd932691"]
}, Closed]],
Cell[CellGroupData[{
Cell[1882, 59, 110, 1, 15, "KeywordsSection",ExpressionUUID->"c3e80f50-5da8-4be4-b875-54b5586fe112",
 CellID->477174294],
Cell[1995, 62, 100, 1, 70, "Keywords",ExpressionUUID->"3824289e-0223-4408-8255-518fa77ac9ee",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2132, 68, 120, 1, 15, "TemplatesSection",ExpressionUUID->"f76fd9f0-ba0e-477d-a28d-7435a42a2512",
 CellID->1872225408],
Cell[2255, 71, 149, 2, 70, "Template",ExpressionUUID->"c496f639-7be6-4260-9aa7-e653edb0c462",
 CellID->1562036412],
Cell[2407, 75, 137, 2, 70, "Template",ExpressionUUID->"60d70f58-4f1d-4151-b66c-aa56629083cf",
 CellID->158391909],
Cell[2547, 79, 136, 2, 70, "Template",ExpressionUUID->"2f4cb131-1441-487c-9c2d-0b88836ec0e4",
 CellID->1360575930],
Cell[2686, 83, 137, 2, 70, "Template",ExpressionUUID->"dbc32a5f-69df-4b53-84e3-76d5653b1549",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[2860, 90, 108, 1, 15, "DetailsSection",ExpressionUUID->"ea12768c-0adf-4fed-937f-01a52b7795bc",
 CellID->307771771],
Cell[2971, 93, 118, 2, 70, "Details",ExpressionUUID->"1a92df4d-d9fa-4905-9770-a31acbdac47e",
 CellID->670882175],
Cell[3092, 97, 124, 2, 70, "Details",ExpressionUUID->"1605c55d-cfd9-47cf-b51c-1ceca4338a07",
 CellID->350963985],
Cell[3219, 101, 119, 2, 70, "Details",ExpressionUUID->"58328697-22d3-421a-8041-cc705745bb0b",
 CellID->8391405],
Cell[3341, 105, 124, 2, 70, "Details",ExpressionUUID->"6d3d4754-9fd5-4fe3-b948-cd8ff7903554",
 CellID->3610269],
Cell[3468, 109, 116, 2, 70, "Details",ExpressionUUID->"a289faf6-9e51-4eb9-baf2-f9b929022998",
 CellID->401364205],
Cell[3587, 113, 116, 2, 70, "Details",ExpressionUUID->"ad7a1075-10c1-4e59-aea5-da1dbc9e2c8d",
 CellID->350204745],
Cell[3706, 117, 118, 2, 70, "Details",ExpressionUUID->"1b67277b-8f27-4b0a-819d-463ed6e7ae67",
 CellID->732958810],
Cell[3827, 121, 133, 2, 70, "Details",ExpressionUUID->"dbb90348-312c-458c-b13b-e76f0fd6bd75",
 CellID->222905350],
Cell[3963, 125, 122, 2, 70, "Details",ExpressionUUID->"e845ec65-8041-4026-b841-28b2c0f0e608",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4122, 132, 179, 2, 47, "ObjectName",ExpressionUUID->"aa96cb4e-84c3-41c3-b6cc-6b05088b20b4",
 CellID->1224892054],
Cell[4304, 136, 1214, 26, 68, "Usage",ExpressionUUID->"af62aba0-e7af-4bba-b86a-6db18f5a2406",
 CellID->982511436],
Cell[5521, 164, 861, 15, 33, "Notes",ExpressionUUID->"7fd37375-aabc-441d-b315-e90736bb430a",
 CellID->1067943069],
Cell[6385, 181, 891, 23, 33, "Notes",ExpressionUUID->"4bfaa189-ffe3-44b6-b10d-d4f4295cfb7b",
 CellID->68078935],
Cell[7279, 206, 195, 2, 19, "Notes",ExpressionUUID->"5df5a5f3-a24d-4f4e-b1d5-84bcdbe77862",
 CellID->249298714],
Cell[7477, 210, 1082, 18, 55, "3ColumnTableMod",ExpressionUUID->"984eb4de-3e53-4465-b5ce-a2729ac81eb1",
 CellID->410826631],
Cell[8562, 230, 624, 11, 44, "Notes",ExpressionUUID->"577733e8-2add-4d44-a29d-1498883105e5",
 CellID->823635335],
Cell[9189, 243, 1093, 19, 43, "3ColumnTableMod",ExpressionUUID->"37be4b8f-0ab5-4b5a-8e2b-7f45f851e67f",
 CellID->327274850]
}, Open  ]],
Cell[CellGroupData[{
Cell[10319, 267, 112, 1, 35, "TutorialsSection",ExpressionUUID->"bd2a4361-46b3-4ec1-9a05-2c7dacf16c60",
 CellID->250839057],
Cell[10434, 270, 195, 3, 15, "Tutorials",ExpressionUUID->"cefb1b9a-e467-4183-b956-1ad384341fc7",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[10666, 278, 138, 1, 25, "RelatedDemonstrationsSection",ExpressionUUID->"1368574f-04ad-42f2-97fa-05e490e2c22c",
 CellID->1268215905],
Cell[10807, 281, 113, 1, 15, "RelatedDemonstrations",ExpressionUUID->"0d0d254f-429f-4f0c-bc54-7197be33bc74",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[10957, 287, 120, 1, 25, "RelatedLinksSection",ExpressionUUID->"3aea2dd4-b2cd-4666-a745-71ce2d9368d2",
 CellID->1584193535],
Cell[11080, 290, 104, 1, 15, "RelatedLinks",ExpressionUUID->"47afa91a-e2e6-42b1-a9c3-d2ab945effe5",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[11221, 296, 110, 1, 25, "SeeAlsoSection",ExpressionUUID->"7c243234-9f36-468b-939b-52f51ec4093c",
 CellID->1255426704],
Cell[11334, 299, 1691, 41, 31, "SeeAlso",ExpressionUUID->"99c5bf7f-ae99-4e7c-8bc9-041d1b3f0891",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[13062, 345, 112, 1, 25, "MoreAboutSection",ExpressionUUID->"2fc67282-00b6-4825-b08c-f10e0076b3ae",
 CellID->38303248],
Cell[13177, 348, 193, 3, 15, "MoreAbout",ExpressionUUID->"2a7e3174-7709-4e31-bd4b-d1daaf148618",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[13407, 356, 411, 11, 51, "PrimaryExamplesSection",ExpressionUUID->"1315783e-b980-4875-a24c-2cf6ddfd2982",
 CellID->880084151],
Cell[13821, 369, 809, 19, 20, "ExampleText",ExpressionUUID->"1773d1e3-3427-40ab-8249-e8d3d1c537ee",
 CellID->356787859],
Cell[14633, 390, 172, 3, 20, "Input",ExpressionUUID->"435cc560-8b7c-4b43-9540-9e3014b9846f",
 CellID->156532367],
Cell[14808, 395, 670, 13, 111, "Input",ExpressionUUID->"493420c9-dd16-4dfd-9598-071cb44051a2",
 CellID->16992958],
Cell[CellGroupData[{
Cell[15503, 412, 403, 8, 20, "Input",ExpressionUUID->"c78dbdd4-8c55-4009-a020-eec0dd591cbc",
 CellID->201089156],
Cell[15909, 422, 1530, 41, 29, "Output",ExpressionUUID->"a231a5dd-faca-4815-94d3-53f31c9d65f5",
 CellID->213002576]
}, Open  ]],
Cell[17454, 466, 858, 22, 31, "ExampleText",ExpressionUUID->"96203288-e364-47e3-9fd5-5a5e2909a704",
 CellID->209715665],
Cell[CellGroupData[{
Cell[18337, 492, 341, 7, 20, "Input",ExpressionUUID->"61c98180-add7-4945-84bf-f4b91d040aab",
 CellID->391333396],
Cell[18681, 501, 468, 9, 32, "Output",ExpressionUUID->"610e85f9-82bf-4bfc-b0d1-25194fa75df2",
 CellID->385704079]
}, Open  ]],
Cell[CellGroupData[{
Cell[19186, 515, 242, 5, 14, "ExampleDelimiter",ExpressionUUID->"b3ef7344-f673-4f81-aa54-5ed9129801fd",
 CellID->150864650],
Cell[19431, 522, 852, 18, 34, "ExampleText",ExpressionUUID->"93177224-3af8-4f6d-974c-30226c716d8a",
 CellID->429255363],
Cell[20286, 542, 172, 3, 20, "Input",ExpressionUUID->"3152f218-80e4-4982-bdf2-77e1a2462c86",
 CellID->897416440],
Cell[CellGroupData[{
Cell[20483, 549, 302, 7, 20, "Input",ExpressionUUID->"197dbd67-3eb9-450b-87fc-509e2edfbb7e",
 CellID->557491354],
Cell[20788, 558, 40919, 761, 100, "Output",ExpressionUUID->"5a6909f6-c9a9-4349-ad62-5c592d5995f0",
 CellID->78851130]
}, Open  ]],
Cell[61722, 1322, 297, 5, 18, "ExampleText",ExpressionUUID->"e8fd351b-8614-4ed7-a903-bd4b4c24a16c",
 CellID->518384591],
Cell[62022, 1329, 423, 10, 59, "Input",ExpressionUUID->"bcfc86a9-e614-4153-8dbf-3a796aeeb272",
 CellID->716083783],
Cell[CellGroupData[{
Cell[62470, 1343, 260, 5, 20, "Input",ExpressionUUID->"88c2553b-692c-400e-850d-7dd53828eba5",
 CellID->78224434],
Cell[62733, 1350, 46308, 868, 100, "Output",ExpressionUUID->"c6c61e62-c44f-4f40-939d-09077236ffe3",
 CellID->24671180]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109102, 2225, 155, 2, 42, "ExtendedExamplesSection",ExpressionUUID->"9e1bf2bb-3c01-41f2-b1f0-000d0accb7c7",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[109260, 2229, 242, 5, 24, "ExampleSection",ExpressionUUID->"e28a35c7-e6b2-4219-a041-672d77d94a4c",
 CellID->1293636265],
Cell[109505, 2236, 265, 5, 16, "ExampleSection",ExpressionUUID->"a5417a91-7d48-439b-9a99-381a826599ba",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[109795, 2245, 243, 5, 16, "ExampleSection",ExpressionUUID->"c5fe26f8-170d-4bb3-8390-853ca0abf4b1",
 CellID->435074752],
Cell[CellGroupData[{
Cell[110063, 2254, 378, 7, 18, "ExampleSubsection",ExpressionUUID->"6afc368d-a635-4a5f-b057-cdda6a7e047c",
 CellID->29964789],
Cell[110444, 2263, 171, 3, 20, "Input",ExpressionUUID->"cfbabfc7-1a4b-4ea0-be91-db436c75416c",
 CellID->38158038],
Cell[110618, 2268, 722, 13, 27, "ExampleText",ExpressionUUID->"e9530efe-18d7-46f1-9feb-6b1dea94c817",
 CellID->21623525],
Cell[111343, 2283, 600, 12, 111, "Input",ExpressionUUID->"8422d393-2b2e-442d-a16f-6cc62da51b1d",
 CellID->41721981],
Cell[CellGroupData[{
Cell[111968, 2299, 463, 9, 32, "Input",ExpressionUUID->"ecc8c871-cc03-4a08-ae6c-15a2443e6085",
 CellID->202039918],
Cell[112434, 2310, 1586, 42, 29, "Output",ExpressionUUID->"c6e25597-3c44-4f06-85b0-861ef4f9c8fc",
 CellID->195994890]
}, Open  ]],
Cell[CellGroupData[{
Cell[114057, 2357, 379, 7, 20, "Input",ExpressionUUID->"2155a660-8e0d-4a9a-a4f0-804444d3a72f",
 CellID->820163369],
Cell[114439, 2366, 186, 4, 19, "Output",ExpressionUUID->"9529d3da-94a3-494c-aa77-f2f15cb1a8ed",
 CellID->82833888]
}, Open  ]],
Cell[114640, 2373, 348, 6, 70, "ExampleText",ExpressionUUID->"58f369d2-c75d-41f5-9c87-bb7423ced995",
 CellID->90374195],
Cell[CellGroupData[{
Cell[115013, 2383, 365, 9, 20, "Input",ExpressionUUID->"ff01a824-7855-453f-b450-ce85e47fe7af",
 CellID->46840407],
Cell[115381, 2394, 484, 12, 19, "Output",ExpressionUUID->"4f1638d5-71f4-4d58-9e56-998c0d7dd47e",
 CellID->81953247]
}, Open  ]],
Cell[CellGroupData[{
Cell[115902, 2411, 746, 14, 32, "Input",ExpressionUUID->"41198a7a-253d-4bf4-ab1c-c73292ea636a",
 CellID->220880907],
Cell[116651, 2427, 187, 4, 19, "Output",ExpressionUUID->"38602566-cb64-47e8-8453-e0a5504b85e4",
 CellID->102749361]
}, Open  ]],
Cell[CellGroupData[{
Cell[116875, 2436, 708, 14, 32, "Input",ExpressionUUID->"1a855afa-8343-417a-9ba8-7490557d4d6f",
 CellID->949920742],
Cell[117586, 2452, 185, 4, 19, "Output",ExpressionUUID->"940b5bd3-827f-46e9-a96c-75c4773d06c7",
 CellID->344233862]
}, Open  ]],
Cell[CellGroupData[{
Cell[117808, 2461, 681, 13, 32, "Input",ExpressionUUID->"3701a204-5697-4ab1-8f3c-c7cd109aed0f",
 CellID->150083342],
Cell[118492, 2476, 1586, 42, 29, "Output",ExpressionUUID->"7b57f233-8f31-4ea4-acda-6043a3daf940",
 CellID->452499708]
}, Open  ]],
Cell[120093, 2521, 276, 4, 70, "ExampleText",ExpressionUUID->"ea9b1cf2-9185-4508-9439-5c05a9457ed3",
 CellID->211596893],
Cell[CellGroupData[{
Cell[120394, 2529, 562, 11, 20, "Input",ExpressionUUID->"e2fde25f-b8c4-4f9d-a31d-e368bb925ef1",
 CellID->564785717],
Cell[120959, 2542, 2926, 78, 29, "Output",ExpressionUUID->"1ff42eba-2722-4cce-98dd-147a4cf025b5",
 CellID->99807259]
}, Open  ]],
Cell[CellGroupData[{
Cell[123922, 2625, 529, 11, 20, "Input",ExpressionUUID->"4a234fe0-b4ca-4dba-8c69-a71eea2c2b85",
 CellID->3546532],
Cell[124454, 2638, 186, 4, 19, "Output",ExpressionUUID->"eed075cf-dd68-4a6d-a184-6fa6ce39ab67",
 CellID->546863862]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124689, 2648, 317, 6, 70, "ExampleSubsection",ExpressionUUID->"fea821c4-5561-4720-b248-76e26cd03332",
 CellID->1295379749],
Cell[125009, 2656, 171, 3, 70, "Input",ExpressionUUID->"e36cec6e-683f-437b-8218-26a4e3f8e04e",
 CellID->43094833],
Cell[125183, 2661, 649, 11, 70, "ExampleText",ExpressionUUID->"5f71d8f5-8af8-4717-99dc-a625fed2f790",
 CellID->350125271],
Cell[125835, 2674, 627, 13, 70, "Input",ExpressionUUID->"e526ef59-3f18-4142-a05a-26a0d4ffa5e1",
 CellID->298476894],
Cell[CellGroupData[{
Cell[126487, 2691, 427, 8, 20, "Input",ExpressionUUID->"3b9cdc4a-7f65-4e5a-a440-d33d46e6f464",
 CellID->4767336],
Cell[126917, 2701, 1588, 42, 29, "Output",ExpressionUUID->"18db5564-9f4b-43d6-bc3a-157d714f2d76",
 CellID->132941269]
}, Open  ]],
Cell[CellGroupData[{
Cell[128542, 2748, 377, 7, 20, "Input",ExpressionUUID->"17ea84e9-75da-49c8-a7fb-8e4bac842285",
 CellID->168884424],
Cell[128922, 2757, 1583, 42, 29, "Output",ExpressionUUID->"36575e77-e0ef-4774-93a2-7e58fcf95396",
 CellID->14318332]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[130544, 2804, 248, 5, 70, "ExampleSection",ExpressionUUID->"82e2aa92-ff93-4b0b-9a67-326bd5786927",
 CellID->258228157],
Cell[130795, 2811, 259, 5, 70, "ExampleSection",ExpressionUUID->"c3369d95-0b4a-4729-94a3-2e8c386caeca",
 CellID->2123667759],
Cell[CellGroupData[{
Cell[131079, 2820, 252, 5, 70, "ExampleSection",ExpressionUUID->"d859dda0-9a5f-4418-859e-a76bf0a70914",
 CellID->1305812373],
Cell[131334, 2827, 172, 3, 70, "Input",ExpressionUUID->"9fbe83f6-bf54-485c-9a22-68120ca2ac66",
 CellID->214239584],
Cell[131509, 2832, 594, 9, 70, "ExampleText",ExpressionUUID->"146a05ae-4b48-4386-a402-44b57a03ab5c",
 CellID->302647184],
Cell[132106, 2843, 698, 13, 70, "Input",ExpressionUUID->"396d3b7e-fb8f-4ee4-8cc5-be8e33670a12",
 CellID->823104529],
Cell[CellGroupData[{
Cell[132829, 2860, 236, 4, 20, "Input",ExpressionUUID->"f0aacecd-79c4-40a3-b7d6-5548b6a2264a",
 CellID->55848347],
Cell[133068, 2866, 49692, 943, 120, "Output",ExpressionUUID->"41fbf33e-9165-49aa-9e17-ade689e79e35",
 CellID->646988634]
}, Open  ]],
Cell[182775, 3812, 398, 7, 70, "ExampleText",ExpressionUUID->"8bd42adb-2b5b-4459-a89a-e38874b5fc7e",
 CellID->61377304],
Cell[183176, 3821, 321, 8, 70, "Input",ExpressionUUID->"61d9b72e-1ba3-4e26-a533-691930f53e12",
 CellID->287230934],
Cell[CellGroupData[{
Cell[183522, 3833, 259, 5, 20, "Input",ExpressionUUID->"c7016109-c0d2-4134-a84e-fe324ae18c87",
 CellID->647369780],
Cell[183784, 3840, 46307, 868, 100, "Output",ExpressionUUID->"887607d8-3582-4168-9dad-e89478441375",
 CellID->393317645]
}, Open  ]]
}, Open  ]],
Cell[230118, 4712, 257, 5, 70, "ExampleSection",ExpressionUUID->"fbc21a9a-591e-458e-bc24-4b18c0f15b81",
 CellID->1653164318],
Cell[230378, 4719, 249, 5, 70, "ExampleSection",ExpressionUUID->"20573ca9-11ab-4477-be68-6f35bde514fb",
 CellID->589267740]
}, Open  ]]
}
]
*)

(* End of internal cache information *)


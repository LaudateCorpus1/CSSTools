(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    329353,       6801]
NotebookOptionsPosition[    312298,       6430]
NotebookOutlinePosition[    312748,       6447]
CellTagsIndexPosition[    312705,       6444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"486157d1-eb89-4ba2-9925-26bbcfdab4bf"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"d7a697a3-197b-4843-bc9e-8358df558c4b"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"0198be3b-f65c-40ae-a084-378c9ca9ec32"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"ee456c63-f64e-4996-9777-ce9419444c95"]
}], "History",
 CellID->1247902091,ExpressionUUID->"556fa402-2c77-4a24-a370-5cb7a61adceb"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"ddd71c5d-9749-40ff-8f70-c36e360a20a5"],

Cell["Tutorial", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"6954bea3-1515-43f7-8e5c-72573c1793f7"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"43deaff8-d954-4d2f-803a-06c22082f272"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"76c1083d-999f-426b-8e36-8a95d6b6a8f8"],

Cell["CSSTools/tutorial/CSSWorkflow", "Categorization",
 CellLabel->"URI",ExpressionUUID->"31ea085a-f8b2-4985-857f-1aaa445de6f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1427428552,ExpressionUUID->"9b787d58-885f-4ebd-a7fe-2f4e86f445e1"],

Cell["XXXX", "Keywords",
 CellID->1251852827,ExpressionUUID->"d6a64ed8-1d45-4ce5-ac30-f1b2b416b04a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"7c7b6e67-c5dd-4052-b113-99197990e551"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->218895918,ExpressionUUID->"31be05ff-9b8a-4f38-ab1b-f7766c4b0ad4"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"56e30e92-6375-477a-9fb9-b0c60715bc3e"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->795871300,ExpressionUUID->"450f56b4-dae6-44bb-8d7b-c870e4977a07"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->199739161,ExpressionUUID->"958186ca-32f2-486a-83ac-5886c8f72aa6"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->40625308,ExpressionUUID->"7a844128-e591-4fa9-a6df-8998d4270ba6"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->357121918,ExpressionUUID->"fdcddd1b-4f9a-49b0-a18e-5cad8b234290"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->35949532,ExpressionUUID->"221221ba-93e5-40c7-a846-39fb3939ebc0"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->929432370,ExpressionUUID->"35d4e128-14ef-433e-83ec-119f78926fe3"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"bdee46af-6b62-4dcc-a36a-bf573d70b9d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["CSS Tools Package", "Title",
 CellChangeTimes->{{3.7616666740015116`*^9, 3.7616666759233794`*^9}},
 CellID->509267359,ExpressionUUID->"66be0c7f-129c-4236-8284-4c50587b284a"],

Cell["\<\
Cascading Style Sheets (CSS) is a stylesheet language used for describing the \
presentation of a document written in markup language like HTML and XML. \
Mathematica also uses stylesheets to describe the styling of notebooks. This \
package provides tools for importing and processing CSS to be used within \
Mathematica's stylesheet system.\
\>", "Text",
 CellChangeTimes->{
  3.761654718522955*^9, {3.7616718601371336`*^9, 3.7616718785756655`*^9}, {
   3.7616719326663513`*^9, 3.761672139013793*^9}, {3.7616751653593745`*^9, 
   3.761675186916433*^9}, {3.7618262488850574`*^9, 3.7618262501048307`*^9}, {
   3.7618265632066393`*^9, 3.761826575069724*^9}},
 CellID->1534169418,ExpressionUUID->"58cf0cf3-5168-465c-a524-35cb5b1da76e"],

Cell[CellGroupData[{

Cell["This loads the package :", "MathCaption",
 CellChangeTimes->{{3.761654741549126*^9, 3.7616547533303194`*^9}},
 CellID->310445284,ExpressionUUID->"6c5f91a0-83cf-46d8-a6f0-c7f574fac3cc"],

Cell[BoxData[
 RowBox[{"<<", "CSSTools`"}]], "Input",
 CellChangeTimes->{{3.761654754908375*^9, 3.7616547575021763`*^9}},
 CellLabel->"In[10]:=",
 CellID->575452366,ExpressionUUID->"6b966142-09bc-409c-8088-88712128147f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction and Comparisons between CSS and Wolfram Desktop", "Section",
 CellChangeTimes->{{3.761826496384553*^9, 3.7618265156324673`*^9}},
 CellID->185646103,ExpressionUUID->"27fce8ca-96a5-4e8f-8893-f65ca438ca15"],

Cell["\<\
There are differences between the two specifications (more than Wolfram \
Desktop uses the spelling \"stylesheet\" instead of \"style sheet\"). Even \
so, there is a lot in common once translation is done between the two \
notations. \
\>", "Text",
 CellChangeTimes->{
  3.7618265660635796`*^9, {3.761826602073657*^9, 3.761826602620202*^9}, {
   3.761827761121853*^9, 3.7618277676259923`*^9}, {3.761827937874115*^9, 
   3.761827965951742*^9}},
 CellID->111578108,ExpressionUUID->"fd1a4aea-e844-4e03-a5fb-e3818110f564"],

Cell[TextData[{
 "It is beyond the scope of this tutorial to provide explanations for every \
difference between the CSS and Wolfram Desktop (WD) stylesheet \
specifications. Please refer to the WD ",
 ButtonBox["Stylesheets guide page",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Stylesheets"],
 " and tutorial ",
 ButtonBox["\"Working with Stylesheets\[CloseCurlyDoubleQuote]",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/WorkingWithStylesheets"],
 " for more details on the WD system, or the ",
 ButtonBox["W3C learning resource",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.w3.org/Style/CSS/learning"], None}],
 " for details with CSS."
}], "Text",
 CellChangeTimes->{{3.761828000335053*^9, 3.7618281290993567`*^9}, {
  3.7618286584328856`*^9, 3.761828661502113*^9}, {3.761828725095251*^9, 
  3.7618287253032255`*^9}, {3.761828814368394*^9, 3.761828815066497*^9}, {
  3.761828862111229*^9, 3.761828866811775*^9}, {3.7618289031494503`*^9, 
  3.7618289773594913`*^9}, {3.7618302763165884`*^9, 3.7618303033164606`*^9}},
 CellID->72334175,ExpressionUUID->"a75fc352-5150-4177-b01c-2148207806cc"],

Cell[CellGroupData[{

Cell["Basic Syntax", "Subsection",
 CellChangeTimes->{{3.7618289894639463`*^9, 3.7618289912197704`*^9}},
 CellID->492661331,ExpressionUUID->"10f8fcb6-a74f-4040-8260-1718748265f8"],

Cell[BoxData[GridBox[{
   {Cell["CSS", "TableHeader",ExpressionUUID->
     "e0033a9a-2732-46b0-beed-cf3c2910f1b4"], Cell[
    "WD", "TableHeader",ExpressionUUID->
     "a2bd2c64-23f2-4d79-85e8-47c8d77af0ac"]},
   {
    RowBox[{"selector", " ", 
     RowBox[{"(", 
      RowBox[{"e", ".", "g", ".", " ", "h1"}], ")"}]}], Cell[
    "named style (e.g. \"Section\")", "TableText",ExpressionUUID->
     "92d81a17-a5f0-4180-8ae7-7f32d340c930"]},
   {
    RowBox[{"declaration", " ", 
     RowBox[{"(", 
      RowBox[{"property", ":", "value"}], ")"}]}], Cell[
    "option (name \[Rule] value)", "TableText",ExpressionUUID->
     "82ec2d00-7cac-438e-b318-0cd8436d0cc0"]},
   {
    RowBox[{"rule", " ", 
     RowBox[{"(", 
      RowBox[{"h1", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           StyleBox["p", "TI"], 
           StyleBox["1", "TR"]], ":", 
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["1", "TR"]]}], ";", 
         RowBox[{
          SubscriptBox[
           StyleBox["p", "TI"], 
           StyleBox["2", "TR"]], ":", 
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["2", "TR"]]}], ";", 
         StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], ")"}]}], Cell[TextData[{
     "style definition Cell[StyleData[\"Section\"], ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula",ExpressionUUID->
      "a7e68fdc-828d-4424-aa9c-b507571b43a2"],
     "\[Rule]",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["v", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula",ExpressionUUID->
      "dea906ae-2494-416f-b8a5-8bc540a06cf3"],
     ", ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula",ExpressionUUID->
      "876b056f-6e9e-445c-a61b-4c163f7afe40"],
     "\[Rule]",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["v", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula",ExpressionUUID->
      "3a1a67ed-1a96-4313-b4ec-27727947d51d"],
     ", ",
     Cell[BoxData[
      StyleBox["\[Ellipsis]", "TR"]], "InlineFormula",ExpressionUUID->
      "6121c4a0-d398-42eb-9e4b-419cea6d249d"],
     "]"
    }], "TableText",ExpressionUUID->"747c9269-7e76-40ab-81f4-11c5e802d449"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.76182666491722*^9, 3.761826736155784*^9}, {
   3.7618268449687357`*^9, 3.7618268963125896`*^9}, {3.761826953972291*^9, 
   3.7618270908924484`*^9}, {3.761827200939848*^9, 3.76182721049039*^9}, 
   3.761827546868442*^9, {3.7618276062174454`*^9, 3.7618276088075805`*^9}, {
   3.7618290267227745`*^9, 3.7618290432408886`*^9}, {3.7618291475586905`*^9, 
   3.7618292597392197`*^9}, {3.7618293353165417`*^9, 
   3.7618293580891957`*^9}, {3.7618330890488615`*^9, 3.7618330910483336`*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->505092195,ExpressionUUID->"67b6e504-933b-4bc0-a0f4-74ea91e53cd8"],

Cell["Comparison of stylesheet notation.", "Caption",
 CellChangeTimes->{{3.761827221611499*^9, 3.7618272269594674`*^9}},
 CellID->933228592,ExpressionUUID->"faed14ab-59f9-4260-a0ed-166fba67dd1b"],

Cell[TextData[{
 "CSS styles are called declarations. They consist of a property name and a \
value separated by a colon. A group of declarations is a declaration block \
where multiple declarations are delimited by semicolons. A selector indicates \
the target element to be styled by the corresponding declarations.\nWD styles \
are given as options using ",
 ButtonBox["Rule",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Rule"],
 " syntax. They consist of an option name and a value separated by \
\"\[Rule]\" where multiple options are delimited by commas. Within a WD \
stylesheet, option sequences are grouped into ",
 ButtonBox["StyleData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StyleData"],
 " cells."
}], "Text",
 CellChangeTimes->{{3.7618272448790255`*^9, 3.761827528849799*^9}, {
  3.7618294235113583`*^9, 3.761829515808278*^9}, {3.7618295506666565`*^9, 
  3.7618295603706856`*^9}, {3.7618295934172087`*^9, 3.761829625468398*^9}, {
  3.761837428324377*^9, 3.7618374524543824`*^9}},
 CellID->771639886,ExpressionUUID->"7d78e86e-edc3-497e-91d2-3b72ed1df102"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS Inheritance", "Subsection",
 CellChangeTimes->{{3.7618296982222424`*^9, 3.7618296994355316`*^9}, {
  3.7618297542203474`*^9, 3.7618297547176867`*^9}},
 CellID->27852929,ExpressionUUID->"c7682611-d8ca-4032-b5b3-d1c04d56dffd"],

Cell["\<\
Multiple selectors can target the same element. In that case the declarations \
merge via the following cascading order, with later origins overriding \
earlier ones. \
\>", "Text",
 CellChangeTimes->{{3.761829773743368*^9, 3.7618297783771667`*^9}, {
  3.7618312512442603`*^9, 3.7618312629423046`*^9}},
 CellID->222985747,ExpressionUUID->"88ff5561-8eea-4f7f-a8a1-eed43706ddfc"],

Cell[BoxData[GridBox[{
   {Cell["Origin", "TableHeader",ExpressionUUID->
     "217ad8df-02ca-4090-ab6c-fe43f83380c0"], Cell[
    "Example", "TableHeader",ExpressionUUID->
     "9099666f-1aa8-455b-a9dd-0a0a513c82e5"]},
   {
    RowBox[{"1.", " ", "user", " ", "agent", " ", "declarations"}], Cell[
    "web browser's default styles", "TableText",ExpressionUUID->
     "f4730cf6-8163-4719-903b-789313f2994c"]},
   {
    RowBox[{"2.", " ", "user", " ", "normal", " ", "declarations"}], Cell[
    "web browser's user preferences", "TableText",ExpressionUUID->
     "2189d076-c8b1-49af-8226-5a00fd1d631d"]},
   {
    RowBox[{"3.", " ", "author", " ", "normal", " ", "declarations"}], Cell[
    "HTML document's embedded styles", "TableText",ExpressionUUID->
     "17d00a74-bc44-4c5c-ac69-0c707a8b4e02"]},
   {
    RowBox[{"4.", " ", "author", " ", "important", " ", "declarations"}], 
    Cell["HTML document's embedded important styles", "TableText",
     ExpressionUUID->"a7bb1909-d69a-4c1b-80f4-7946ef747703"]},
   {
    RowBox[{"5.", " ", "user", " ", "important", " ", "declarations"}], Cell[
    "web browser's user preference overrides", "TableText",ExpressionUUID->
     "f99bb5e2-6484-44e6-925e-ba860080d166"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.761829819104581*^9, 3.7618299580377645`*^9}, {
  3.761832111843774*^9, 3.7618321253401413`*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->200218437,ExpressionUUID->"97a1efd9-6db0-4b17-af87-267ca9f0709c"],

Cell["Summary of CSS cascade order.", "Caption",
 CellChangeTimes->{{3.761829964619091*^9, 3.76182996894998*^9}},
 CellID->88591569,ExpressionUUID->"b73fe078-6f09-4c7c-9644-bcd9f8c757bb"],

Cell["\<\
The user agent is the application used to view the document content. For web \
content a web browser is used. For notebook content Wolfram Desktop is used. \
\>", "Text",
 CellChangeTimes->{{3.761830864922555*^9, 3.7618309261406355`*^9}},
 CellID->51822448,ExpressionUUID->"1029939c-6f27-4ae2-9929-887cc3ff1e7a"],

Cell[TextData[{
 "The rules are sorted by origin (1-5) and specificity of selector with \
higher specificity overriding lower. See the ",
 ButtonBox["Selector",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/Selector"],
 " documentation to learn more about specificity. If two declarations have \
the same weight (important/normal), origin and specificity, the latter \
specified wins."
}], "Text",
 CellChangeTimes->{{3.761830071088028*^9, 3.761830122274662*^9}, {
  3.7618307040506415`*^9, 3.761830744806033*^9}},
 CellID->271229263,ExpressionUUID->"e75cd706-2aa6-4a12-b5e3-fd7f0d4a1ba8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WD Inheritance", "Subsection",
 CellChangeTimes->{{3.761830960001148*^9, 3.7618309626894817`*^9}},
 CellID->305221324,ExpressionUUID->"4d71f6ac-ab32-405b-81ab-cabc314db410"],

Cell[TextData[{
 "Named styles can appear in multiple stylesheets or used directly in a \
notebook, cell, or box (via the ",
 ButtonBox["Style",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Style"],
 " wrapper). In that case the options merge via the following cascading \
order, with later origins overriding earlier ones."
}], "Text",
 CellChangeTimes->{{3.7618309773345675`*^9, 3.761830989438495*^9}, {
  3.761831269908634*^9, 3.7618312705743437`*^9}},
 CellID->555909034,ExpressionUUID->"f8bec49d-defc-43d8-8210-438837c82b0f"],

Cell[BoxData[GridBox[{
   {Cell["Origin", "TableHeader",ExpressionUUID->
     "d387cca7-720b-4006-9ffd-442d739fa17b"], Cell[
    "Example", "TableHeader",ExpressionUUID->
     "22123cd2-063a-4af0-b79b-5448d8f14cb8"]},
   {
    RowBox[{"1.", " ", "$FrontEnd"}], Cell[
    "Options[$FrontEnd]", "TableText",ExpressionUUID->
     "4876a9f4-9d9c-4326-b5b9-07329a1fe932"]},
   {
    RowBox[{"2.", " ", "$FrontEndSession"}], Cell[
    "XXXX", "TableText",ExpressionUUID->
     "06652104-4cab-478c-bb46-3a02bbfc14eb"]},
   {
    RowBox[{"3.", " ", 
     RowBox[{"Core", ".", "nb"}]}], Cell[
    "XXXX", "TableText",ExpressionUUID->
     "118b623c-c3d5-4a37-9d93-396bbad22eeb"]},
   {
    RowBox[{"4.", " ", 
     RowBox[{"Default", ".", "nb"}]}], Cell[
    "XXXX", "TableText",ExpressionUUID->
     "cb7bbb40-3f84-4767-8e4d-9905e712b5e8"]},
   {
    RowBox[{"5.", " ", "Private", " ", "stylesheet", " ", 
     RowBox[{"(", 
      RowBox[{"if", " ", "present"}], ")"}]}], Cell[
    "XXXX", "TableText",ExpressionUUID->
     "177210e5-fe80-404d-8463-7912ed9e7bbf"]},
   {
    RowBox[{
    "6.", " ", "stylesheet", " ", "\"\<Notebook\>\"", " ", "local", " ", 
     "style"}], Cell[TextData[{
     "Cell[StyleData[\"Notebook\", ",
     Cell[BoxData[
      StyleBox["\[Ellipsis]", "TR"]], "InlineFormula",ExpressionUUID->
      "ee1730cf-aa2b-4b46-b8b9-fda0506f9ae3"],
     "]]"
    }], "TableText",ExpressionUUID->"f462fdad-0a13-403d-b7f5-7d2590296e92"]},
   {
    RowBox[{"7.", " ", "stylesheet", " ", "Style", " ", "environment"}], Cell[
    "\"Working\" or \"Printout\" modes", "TableText",ExpressionUUID->
     "12c736b4-7837-4971-83aa-b5f4bc327a3e"]},
   {
    RowBox[{
     RowBox[{"8.", " ", "Notebook"}], "-", 
     RowBox[{"level", " ", "option"}]}], Cell[
    "embedded option like WindowSize", "TableText",ExpressionUUID->
     "a69aa672-2962-4e2e-bf11-fbd941f8ab88"]},
   {
    RowBox[{
     RowBox[{"9.", " ", "Cell"}], "-", 
     RowBox[{"level", " ", "options"}]}], Cell[
    "embedded option like CellFrame", "TableText",ExpressionUUID->
     "57c1945e-a9cd-47d8-b2f2-d890b6ee24ad"]},
   {
    RowBox[{
     RowBox[{"10.", " ", "Box"}], "-", 
     RowBox[{"level", " ", "options"}]}], Cell[
    "embedded option like ImageSize", "TableText",ExpressionUUID->
     "a8cad331-5f07-477d-96c7-0755ea282095"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.7618310382682486`*^9, 3.7618312156173525`*^9}, {
  3.7618320087359943`*^9, 3.7618320133658037`*^9}, {3.7618323380873713`*^9, 
  3.761832387958178*^9}, {3.761833172494628*^9, 3.7618331977657814`*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->792685257,ExpressionUUID->"87b2bf10-6ed4-424b-85ba-b29d97d2f3bb"],

Cell["Summary of WD cascade order.", "Caption",
 CellChangeTimes->{{3.761831228773687*^9, 3.761831233016053*^9}},
 CellID->264816302,ExpressionUUID->"3ef0af3d-b25e-43c1-b943-11032c1ecd35"],

Cell[TextData[{
 "More details on WD inheritance can be found in the tutorial ",
 ButtonBox["Styles and the Inheritance of Option Settings",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/StylesAndTheInheritanceOfOptionSettings"],
 ". "
}], "Text",
 CellChangeTimes->{{3.761832224866727*^9, 3.7618322456198764`*^9}, {
  3.7618322890883703`*^9, 3.761832314968711*^9}, {3.761832405457088*^9, 
  3.7618324054697247`*^9}, {3.7618325031331515`*^9, 3.761832520904149*^9}, {
  3.761832581026348*^9, 3.7618326003073187`*^9}, {3.7618326340068502`*^9, 
  3.761832644644534*^9}},
 CellID->103579448,ExpressionUUID->"5c74b4fe-8f36-40d6-9d9f-e4b5ce712b93"],

Cell["\<\
WD stylesheets are typically found in the following locations:\
\>", "Text",
 CellChangeTimes->{{3.761832224866727*^9, 3.7618322456198764`*^9}, {
  3.7618322890883703`*^9, 3.761832314968711*^9}, {3.761832405457088*^9, 
  3.7618324054697247`*^9}, {3.7618325031331515`*^9, 3.761832520904149*^9}, {
  3.761832581026348*^9, 3.7618326003073187`*^9}, {3.7618326340068502`*^9, 
  3.761832634154974*^9}},
 CellID->695697506,ExpressionUUID->"7a8903c0-bfba-4da6-8b1b-6a60c7a777f8"],

Cell["\<\
\t$InstallationDirectory/SystemFiles/FrontEnd/StyleSheets \[LineSeparator]\t\
$BaseDirectory/SystemFiles/FrontEnd/StyleSheets \[LineSeparator]\t\
$UserBaseDirectory/SystemFiles/FrontEnd/StyleSheets \
\>", "Text",
 CellChangeTimes->{{3.761832224866727*^9, 3.7618322456198764`*^9}, {
   3.7618322890883703`*^9, 3.761832314968711*^9}, 3.761832406815522*^9},
 CellID->553560813,ExpressionUUID->"63898dc5-9c01-4330-b769-186998a8426d"],

Cell[TextData[{
 "Moreover, any named styles within stylesheets found in ",
 Cell[BoxData[
  ButtonBox["$InstallationDirectory",
   BaseStyle->"Link",
   ButtonFunction:>SystemOpen[
     FileNameJoin[{$InstallationDirectory, "SystemFiles", "FrontEnd", 
       "StyleSheets"}]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "InlineFormula",ExpressionUUID->
  "5b8b32f9-d3b4-4e05-a612-3a3b1ade5580"],
 " can be overridden by named styles within stylesheet located in ",
 Cell[BoxData[
  ButtonBox["$BaseDirectory",
   BaseStyle->"Link",
   ButtonFunction:>SystemOpen[
     FileNameJoin[{$BaseDirectory, "SystemFiles", "FrontEnd", "StyleSheets"}]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "InlineFormula",ExpressionUUID->
  "d2b75d40-dd4c-4287-a237-d6f2959f631c"],
 " or ",
 Cell[BoxData[
  ButtonBox["$UserBaseDirectory",
   BaseStyle->"Link",
   ButtonFunction:>SystemOpen[
     FileNameJoin[{$UserBaseDirectory, "SystemFiles", "FrontEnd", 
       "StyleSheets"}]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "InlineFormula",ExpressionUUID->
  "e778d0ec-78af-4108-be19-eea43a1c960f"],
 " but only if the stylesheets have the same filename. These act like \
intermediary cascade steps between (1) and (2), and (3) and (4) where \
$BaseDirectory is checked before $UserBaseDirectory."
}], "Text",
 CellChangeTimes->{
  3.761831390379923*^9, 3.7618314499514093`*^9, {3.761831585107036*^9, 
   3.761831586597062*^9}, {3.7618316346790276`*^9, 3.7618317259053693`*^9}, 
   3.761831824795724*^9, {3.76183192784336*^9, 3.7618319451434307`*^9}, 
   3.7618319786814327`*^9, {3.761832048773266*^9, 3.7618320501857023`*^9}, {
   3.7618321902773337`*^9, 3.761832208724634*^9}},
 CellID->115198241,ExpressionUUID->"ac99ad5a-c92a-4eba-ad13-3ebade191425"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS vs WD Inheritance Origins", "Subsection",
 CellChangeTimes->{{3.761832430468773*^9, 3.761832435764142*^9}},
 CellID->12152049,ExpressionUUID->"9305eb8c-022d-4f49-8197-332309c7b25c"],

Cell["\<\
This comparison is one interpretation between CSS and WD inheritance. Numbers \
in parentheses refer to the numbers in the tables above.\
\>", "Text",
 CellChangeTimes->{{3.7618324503687143`*^9, 3.7618324728569064`*^9}, {
  3.761832665004422*^9, 3.7618326711585493`*^9}, {3.761832712181576*^9, 
  3.761832733433381*^9}},
 CellID->320649723,ExpressionUUID->"3158fcd9-6a76-4f64-b40a-88932ce43d01"],

Cell[BoxData[GridBox[{
   {Cell["CSS", "TableHeader",ExpressionUUID->
     "708504e6-e476-4c0b-9765-509e4849d091"], Cell[
    "WD", "TableHeader",ExpressionUUID->
     "eef6e5a8-7522-4724-97e5-b9f64c83da8c"]},
   {
    RowBox[{
     RowBox[{"(", "1", ")"}], " ", "user", " ", "agent", " ", 
     "declarations"}], Cell[
    "(1-4) $FrontEnd/$FrontEndSession/Core.nb/Default.nb", "TableText",
     ExpressionUUID->"4acf17ee-f572-4393-a0f9-8d5416dcd58f"]},
   {
    RowBox[{
     RowBox[{"(", "2", ")"}], " ", "user", " ", "declarations"}], Cell[
    "$Base and $UserBase intermediary definitions", "TableText",
     ExpressionUUID->"2aee1e0e-8058-480b-98a9-7f419bf4fade"]},
   {
    RowBox[{
     RowBox[{"(", "3", ")"}], " ", "author", " ", "declarations"}], Cell[
    "(4) Private Stylesheet", "TableText",ExpressionUUID->
     "8e26732e-9be9-4350-a533-18ae3c05e341"]},
   {
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", "-", "5"}], ")"}], " ", "important", " ", "styles"}], Cell[
    "(7-9) Notebook/Cell/Box", "TableText",ExpressionUUID->
     "6189b1a7-256c-4332-98da-908ad6a5a833"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.761832680246313*^9, 3.761832709816661*^9}, {
  3.76183274235902*^9, 3.7618328797119484`*^9}, {3.76183324746795*^9, 
  3.7618332542362022`*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->392524317,ExpressionUUID->"34026ad2-a853-4646-be55-f0d0aa6ff1ee"],

Cell["Other interpretations can be made.", "Caption",
 CellChangeTimes->{{3.761833332885377*^9, 3.7618333379278097`*^9}},
 CellID->46612784,ExpressionUUID->"0eb282d9-f0bd-483f-82dd-7dff77f410be"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing CSS", "Section",
 CellChangeTimes->{{3.761654765267708*^9, 3.7616548046112556`*^9}},
 CellID->121087292,ExpressionUUID->"db63729e-1e5d-42ea-8be7-6f76ebc8f9ff"],

Cell[CellGroupData[{

Cell["This tutorial uses prepared examples found here:", "MathCaption",
 CellChangeTimes->{{3.7616708997723217`*^9, 3.7616709164242153`*^9}},
 CellID->836781195,ExpressionUUID->"045b02fb-135d-4e3c-b1f6-fd7b454d3fdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7616571310361433`*^9, 3.761657135745577*^9}, {
   3.7616572106657743`*^9, 3.761657214024938*^9}, {3.7616573046943483`*^9, 
   3.7616573076699123`*^9}, {3.7616574036349497`*^9, 
   3.7616574419198647`*^9}, {3.761657482946158*^9, 3.7616575198724394`*^9}, {
   3.7616576946445994`*^9, 3.7616576953815355`*^9}, {3.761657728329914*^9, 
   3.7616577451476483`*^9}, 3.761670718901634*^9},
 CellLabel->"In[132]:=",
 CellID->31754730,ExpressionUUID->"41c5b849-7e33-4381-966e-68d0206cc4f9"]
}, Open  ]],

Cell["\<\
Loading the package provides the \"CSS\" as a valid file type for Import.\
\>", "Text",
 CellChangeTimes->{{3.7616548179550095`*^9, 3.7616548514704733`*^9}},
 CellID->102370062,ExpressionUUID->"45443317-b154-4f73-b949-7a4ea538aecd"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"Import", "[", 
     RowBox[{
     "\[LeftGuillemet]filepath\[RightGuillemet]", ",", " ", "\"\<CSS\>\""}], 
     "]"}], Cell[
    "import CSS as a dataset with interpreted options", "TableText",
     ExpressionUUID->"d7758440-e576-46b7-8064-85e07bd44a48"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.761654899845172*^9, 3.7616549921416683`*^9}, {
  3.7617783135136757`*^9, 3.761778353668174*^9}},
 CellID->81978558,ExpressionUUID->"ece5c163-0f68-453a-b4ea-b52d8f33fc3a"],

Cell["Importing CSS.", "Caption",
 CellChangeTimes->{{3.761654911220153*^9, 3.761654914095144*^9}},
 CellID->123757612,ExpressionUUID->"b896e7ae-72bd-4854-96c3-c6d0d72fed10"],

Cell[CellGroupData[{

Cell["Import from a string.", "MathCaption",
 CellChangeTimes->{{3.7616722597248163`*^9, 3.7616722773843994`*^9}},
 CellID->226527354,ExpressionUUID->"67cd4ea0-81ae-4f94-b55c-0b16f9d59100"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red;}\>\"", ",", " ", "\"\<CSS\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.761671620354*^9, 3.761671645765486*^9}},
 CellLabel->"In[137]:=",
 CellID->681723581,ExpressionUUID->"8df01d96-31de-4992-938a-289df7a5e291"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[248787974], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[248787974]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1627207920][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1627207920]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {419., {43., 49.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7616716463472977`*^9},
 CellLabel->"Out[137]=",
 CellID->579775105,ExpressionUUID->"2731460f-be5e-45d5-8895-5031dfba61b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import from an external file.", "MathCaption",
 CellChangeTimes->{{3.761672235782218*^9, 3.76167225362871*^9}},
 CellID->154777042,ExpressionUUID->"31bf620d-cb23-4208-988a-68d7918f3679"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle2.css\>\""}], "}"}], 
    "]"}], ",", "\"\<CSS\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.76167117206133*^9, 3.761671184617924*^9}},
 CellLabel->"In[136]:=",
 CellID->58583108,ExpressionUUID->"5f14ce15-8798-4d79-b62a-ae304f6338ba"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1297949910], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1297949910]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".tooltip", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-style", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["italic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSlant", "\[Rule]", "Italic"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {548., {43., 49.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7616711858679037`*^9},
 CellLabel->"Out[136]=",
 CellID->13894359,ExpressionUUID->"f3e0d621-afc8-4015-8aeb-743292342f43"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "CSS rules can include conditions either from \"@media\" or \"@page\" \
keywords. \"@page\" indicates paged media that directly translates to the WD \
\"Printout\" ",
 ButtonBox["ScreenStyleEnvironment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ScreenStyleEnvironment"],
 ". \"@media\" indicates a target media type such as a screen. No \
interpretation is done to media queries."
}], "Text",
 CellChangeTimes->{{3.7618442919165*^9, 3.761844369004503*^9}, {
  3.761844427644206*^9, 3.7618444565777397`*^9}, {3.7618444925656385`*^9, 
  3.7618444930500712`*^9}, {3.761844574409136*^9, 3.761844589123949*^9}, {
  3.7618450286289797`*^9, 3.761845030439797*^9}},
 CellID->745579111,ExpressionUUID->"4d91b273-40b2-4aad-a6f3-a924acf7ed9a"],

Cell[CellGroupData[{

Cell["Example of page filtering.", "MathCaption",
 CellChangeTimes->{{3.761844735565598*^9, 3.761844753952055*^9}},
 CellID->27523641,ExpressionUUID->"13419783-7208-4371-8033-cd7c6654c72f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<@page {font-family:monospace}}\>\"", ",", " ", "\"\<CSS\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.761844604179177*^9, 3.7618446320071115`*^9}, {
  3.7618446860188293`*^9, 3.761844710905572*^9}, {3.7618447584594088`*^9, 
  3.7618447756903934`*^9}, {3.7618449791368904`*^9, 3.7618449803713284`*^9}},
 CellLabel->"In[80]:=",
 CellID->313868854,ExpressionUUID->"277727ea-f36c-4328-9fbe-beb89c01b352"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                   "Value" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1913901389], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1913901389]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["@page", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"StyleData", "[", 
                    RowBox[{"All", ",", "\"Printout\""}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-family", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["monospace", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontFamily", "\[Rule]", "\"Source Code Pro\""}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1012882173][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1012882173]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {951., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761844714154805*^9, 3.761844776847556*^9, 
  3.7618449815054026`*^9},
 CellLabel->"Out[80]=",
 CellID->211352011,ExpressionUUID->"c96039e3-4acf-4ccb-ab81-670e9bb23f15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example of media filtering.", "MathCaption",
 CellChangeTimes->{{3.761844735565598*^9, 3.7618447461882544`*^9}},
 CellID->610584558,ExpressionUUID->"82712f09-cef4-4018-8e83-ab0b98b1117b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{
  "\"\<@media screen {h1 {color:red} h3 {color:green}}\>\"", ",", " ", 
   "\"\<CSS\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.761844604179177*^9, 3.7618446320071115`*^9}, {
  3.7618446860188293`*^9, 3.761844710905572*^9}},
 CellLabel->"In[69]:=",
 CellID->568946600,ExpressionUUID->"1696c732-bcbe-49a5-963b-87f7fc29a85e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 2, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[596204674], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[596204674]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[" screen ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[" screen ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["green", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {526., {68.5, 75.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761844714154805*^9},
 CellLabel->"Out[69]=",
 CellID->636766901,ExpressionUUID->"22391901-814b-4907-ad20-5a586d410de2"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "CSS files can be nested. They can contain \"@import\" statements at the \
start of the file indicating that other CSS files should be imported first. \
Often the \"@import\" file locations are given relative to the current CSS \
file. In these cases it is best to have the ",
 ButtonBox["$Path",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/$Path"],
 " defined with these locations included, otherwise the nested CSS files \
won't be found."
}], "Text",
 CellChangeTimes->{{3.7616709507622333`*^9, 3.761671089357455*^9}, {
  3.7616723116987944`*^9, 3.76167231756699*^9}},
 CellID->410138926,ExpressionUUID->"8cf2765a-7072-49ac-bdb5-ef15e4d75fcb"],

Cell[CellGroupData[{

Cell["The file \"mystyle1.css\" imports from \"mystyle2.css\".", "MathCaption",
 CellChangeTimes->{{3.7616708248496685`*^9, 3.761670853994857*^9}, {
  3.7616723339679437`*^9, 3.761672349400183*^9}},
 CellID->397163078,ExpressionUUID->"a69c84c7-1e08-4147-bba4-7501a7e2f554"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$Path", "=", "cssExamplesDirectory"}], "}"}], ",", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle1.css\>\""}], "}"}], 
      "]"}], ",", "\"\<CSS\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616577060408716`*^9, 3.7616577224552555`*^9}, {
  3.7616667603604097`*^9, 3.761666770561006*^9}, {3.7616723537088304`*^9, 
  3.7616723553323526`*^9}},
 CellLabel->"In[170]:=",
 CellID->971740772,ExpressionUUID->"994deaf4-5f3b-4218-b57f-f2bb4201fac2"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"@import\"\>",
   "EchoLabel"], " ", "\<\"mystyle2.css\"\>"}]], "Echo",
 CellChangeTimes->{3.761674439307315*^9},
 CellID->189075612,ExpressionUUID->"8d5c2138-3df5-4c40-8417-25f8fa0ca044"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 2, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[46265907], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[46265907]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".tooltip", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-style", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["italic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSlant", "\[Rule]", "Italic"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".tooltip", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {548., {56., 62.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.761666754233695*^9, 3.7616667712484503`*^9}, 
   3.761666809925599*^9, 3.7616723572997293`*^9, 3.7616744394802637`*^9},
 CellLabel->"Out[170]=",
 CellID->270778028,ExpressionUUID->"e356fca4-8431-4ac3-9c58-b1cee0c9ba62"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"\"\<RawData\>\"", Cell[
    "import without interpreting the values", "TableText",ExpressionUUID->
     "ac2ba2e1-8894-43f7-a0e1-be3e1472cf4c"]},
   {"\"\<Interpreted\>\"", Cell[
    "(default) import and interpret values", "TableText",ExpressionUUID->
     "76f77381-308b-48c0-bc67-d3d731e4fed9"]},
   {"\"\<Stylesheet\>\"", Cell[
    "import directly to Mathematica stylesheet format", "TableText",
     ExpressionUUID->"ebe4e40e-6e1c-4ffb-a54b-f65d5d029bb9"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.7616727236657743`*^9, 3.761672737683405*^9}, {
  3.761672793970793*^9, 3.761672816511683*^9}, {3.761674132418581*^9, 
  3.761674143355081*^9}},
 CellID->669987316,ExpressionUUID->"35794b86-2060-40fc-896e-47af7fc56f03"],

Cell["Supported import types.", "Caption",
 CellChangeTimes->{{3.7616740513664894`*^9, 3.7616740628718014`*^9}},
 CellID->40274191,ExpressionUUID->"a35358a6-c9c9-413f-a237-7d02a2dbe810"],

Cell["\<\
Ignoring style interpretation can improve the speed of importing of large CSS \
files. Use \"RawData\" if the interpreted values are not needed. \
\>", "Text",
 CellChangeTimes->{{3.7616744900220523`*^9, 3.7616746125357714`*^9}, {
  3.761674653012766*^9, 3.7616746947163825`*^9}, {3.7617783692268844`*^9, 
  3.7617784126723986`*^9}},
 CellID->217179338,ExpressionUUID->"9e60f475-5491-4a28-9358-3294397059be"],

Cell[CellGroupData[{

Cell["Import without interpretation.", "MathCaption",
 CellChangeTimes->{{3.7616750395667562`*^9, 3.7616750632461586`*^9}},
 CellID->266594283,ExpressionUUID->"c8b74c4e-6cf8-42f0-8176-8ab50d7a12b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red}\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CSS\>\"", ",", "\"\<RawData\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761672534956728*^9, 3.761672552688184*^9}, {
  3.761672761499953*^9, 3.7616727629335003`*^9}, {3.761672830298361*^9, 
  3.7616728322567244`*^9}, {3.76167506560738*^9, 3.7616750668070154`*^9}},
 CellLabel->"In[171]:=",
 CellID->103365394,ExpressionUUID->"76f318ec-44d3-4dd1-b8d9-9a6fe63c96b9"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Struct[{"Important", "Property", "Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String]}], 1]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`]]]], 
                1, {All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2001279678], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Struct[{"Important", "Property", "Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String]}], 1]}], 1], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2001279678]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft}, {SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {310., {43., 49.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761672679996417*^9, 3.761672763507332*^9, 
  3.7616728341531267`*^9, 3.761672980387092*^9, 3.7616740198715563`*^9, 
  3.76167506830752*^9},
 CellLabel->"Out[171]=",
 CellID->535232954,ExpressionUUID->"964d57b8-41a4-4bec-a052-0ff5d2eb5521"]
}, Open  ]]
}, Open  ]],

Cell["\<\
A stylesheet has more meaning when applied to a document due to the CSS \
inheritance and style cascade.  However, the \"Stylesheet\" import element \
creates a Mathematica stylesheet directly and uses the selectors to label the \
Wolfram styles.\
\>", "Text",
 CellChangeTimes->{{3.7616744900220523`*^9, 3.7616746125357714`*^9}, {
   3.761674653012766*^9, 3.76167487209449*^9}, 3.7616750294150124`*^9, {
   3.7617784896859226`*^9, 3.76177854408043*^9}},
 CellID->260369650,ExpressionUUID->"bf7706d2-9d3d-433b-8b83-3d360f5447c8"],

Cell[CellGroupData[{

Cell["Import directly to a Mathematica stylesheet.", "MathCaption",
 CellChangeTimes->{{3.7616751328138075`*^9, 3.7616751399025517`*^9}},
 CellID->24798626,ExpressionUUID->"8eb17ec5-6227-4012-b603-3f5cef113eb6"],

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red}\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CSS\>\"", ",", "\"\<Stylesheet\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7616750792770147`*^9, 3.7616751127412543`*^9}, {
  3.7618376297842717`*^9, 3.761837630356642*^9}},
 CellLabel->"In[22]:=",
 CellID->169988763,ExpressionUUID->"f0120d2a-b987-4f4a-8b10-b08fe03a1f60"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3XuwZHdhH/gL+JGquCq2ATspewtjYGuT2lSCFVGacWWxWQdnK+GPJN7N
olLKMkLX3k0t7yoMOCUWvCALiRkwBgNmkBiH4Eh2pBG+jl27tiRHkTFCDOIh
mAFpBqSIh2bmzohBM6PH3V/36Xvv6Xse/Tuv7tP3fL71MR71PX1efbr7fO89
/evnvuLV/3L16SsrK6//G+F//uWvvPHnX/e6X3nTv/rh8B//66te/3/86quu
fOX/8qo3XPmrV77uklc8I9z47aetrPxv37eyMvr3++/4JQAAAAAAAHalDRER
ERERkV0dDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhE
RERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhE
RERERIYTDUhERERERIYTDUhERERERIaTJg3oaz+y0qkutldERERERIaceTSg
Z3/f/T/5Qw/81A8H4R/hPzUgERERERFZSObQgELrOf4zz/vGP/4HQfjHqARp
QCIiIiIisoi03IB+9Gn3//gPPPDcHwnCP8J/Bsf+7t95+F//s2+/6oog/CP8
Z3L7zik1IBERERER6ThtNqBQap759GPPe+aDP3dREP5x/7Oe8bVnPv0bP/v3
T17ztu8euikI/wj/+bVnPSP8aDTlz29O+cynZ0tQF9srIiIiIiJDTusN6Osv
/Olv/9tfeeTXX/3wy1/20Esv+caLX/itV7787NotFx74ahD+Ef4z3PjQS/c8
fOnLHnnTq8PE4S4akIiIiIgsRVYaZNHr3mEOH/7cL/zCS0+dWo+/S5g43CXc
sbu1yk3rV8E9+JJ/dOaGDz32qTvP/uknz3zihvX3XXvm9w9cOHLfk999NAj/
CP85uvETN5z9s0+GycLE4S6ughMRERGRpYgGlJvQZb7/B//GRS96UWQJCpOF
icNdwh27XrcdaX0khIf+6c+e/ZNDT3znW49/4/j5+77w2F1/ee6zn37y1Mnk
LuEf4T8fu+uO8KMwQZgsTBzuYiQEEREREVmK1Osyu74BbTWamBJUaeLW03oD
evCfXPLoH33iwv1Hz3/x3nNfOHz+K196/KGvP/W9s8ldwj+SZnTu84fDBGGy
MHG4y65oQGuro+N6da21GR7dv7fdGS5pCnfs0bXVvXuTlxN7KZvWD0gREREZ
RQMqSmSvWWz92WjegJ759Pt/7Psf+Im/eex5zzz+937i6y/86W/+8i+dXbsl
dJzv3fHnZ//8zx67+6/Of+Fz57/8xQtH7gvC7efv/ey5v/6v3/uLP/veX/55
+M8wcbhLuGO4e5hJmFWYYZhtfgNKOsHe/Ufz12jGj2slnGRHzrNHDShVDUbZ
2+4umbGjkx/mr3etR6hgxyY3h41bXV3d28/z/MmuqHL8tHgE7aYGFP80bD2j
BzFiwZGTjZ6c+9PPznD8ri1gq0REpEk0oJLMbDcLrz8bjRvQqP485299/R8+
96Ff3PvNf/MvvvOa1fUP7Dt3+O7zX/r8o//x4PoH9p/+6AdPf/R313/nulP7
rz61752n3nft6Y+8P9xy+oPvffSmj4/+GHT47nCXcMdw9zCTMKvRF6eGEjT/
BpScmey8c96pV9GUvWhAW2fdK6NqMGoH4XSr7dPgZFtz9/Tm8vN+WFaOZi1s
x526aLutJ/VYzFrR7UlrPFZzOiDnkvin4ZzWZfbDFznZOOnevrrdhJbtURIR
GXg0oPKUdJw+1J+N5g3ox3/w2POf/eBLLv7Oa391/X3XPvoff/+xO29//KFv
nP/Kl0LNOfmOf3fy2t88efVbH3nza77z+l/7zut+7ZE3vebkb7311LvfEf73
zMc+fOEr94WJw13CHcPdw0we/J8vPvaCZ9//t39w/g0o/s4FU/aiAW1Wk65/
rVxYgUpP+uvtorx7LUUBSu2MWVudmrL6ETSvA3Ie6csDu9Vqygts5GTbCdNP
PzePTjrRkj1OIiLDjgY0M7lNpyf1Z6N5A/rbP3jsBT/28L/6xTM3fOjcZ+++
8MBXn3jk209973sX7v/qmd//yMlr/u9T77nm1P7fOvnOq068/c0n3vamk1df
tf6+69bfv+/Udf/PmX//0QsPfC1MHO4S7hjuHmYSZnXsv/8xDSi1nCozHK/C
fM4ei7Y2WYW9uWte8pejqovqy4lyeSZruTrzDxjJXkum04AW/sBuXpAYHpLQ
WArXJ3KyWenFJouISJVoQDHZ0Xf6U382WrgK7gceeO6PPPTPXzy6+O3uvwpd
ZuPJJzaeeio0mtMHPhBaz6l3v3P9g+89c/AjZ/7DDY9+/PpQi8YXxb07dKLT
138oNKAwcbhLuGO4e5hJmFWYYZitBlS9Ac135IT8zZ10sP1tXri29A1o/1rM
cbu6tlbzAdSAWk7Yc3tXJ39HLfmtQuRks9KLTRYRkSrRgCKTbj39qT8b7YyE
8APH/8f/7r/90i+efNfbzt17z1PnHguN5sKR+07te+d3XvdrJ97+ljM3fPjc
3Z96/PgDjx+7/9xn/vrMJz528l1vf+SNrzr1nmsuHPlymDjcJdwx3D3MJMxq
VH9aGwlh+yRw6nKVrfOW1N12ZHMuU6eR8VOm12r6QpmCDz7vmGo0UcVGM+eh
43Ifi63zwJydkXuH7MfCsxfwTc8r7zGYzHR7Dxxdm+zMrTXYuaDMcrZPYbfu
PJ7s6NYMpo6fqNPV7U0uayNbP8ufqGzNIw/I6YO/6KP3Mw/U5ruohW3ZMcPp
QT/2Ti925oMekchq06ABzfEvtyIiNZN9fY7Pote9k9TbtF28Q0qyVYL6U382
WhoN+/6f/KHjP/O8b/2fv/y9O2978tTJJ7758GOfuvPU/qu/88b/65HfeP3p
j7z/wtEvP3X+/FPnz1346ldOf+z3TrztTY+8+bXr733Xub/+r0986+Fwl3DH
cPcwkzCrstGw6zag/ckPJp8+njwlp06Ot26fDB+wda403YCip9xegc3RwNLL
3rkF22OGpSarelHUePlTp/8rnY40lfNgpEpY9rQus3+yYzZs/efUNu9oQDmP
weQh2PpbyubVSZv32hqdYfrz51OLmazw+O8wyXSpA2XyQfyyx3DGLio+dLf3
VGFtLFzzmAMyOfinVz7vD0azD9SGu6iFbSl4cqUXu7XQmAc9Il02oKObpVP/
EZGeZ6VBFr3unaTepu3iHVKSgTSgx79+7Ht3/H+P3vTxMx/78LgEverktb95
7p7Rl6KOvg71nk+ffPc7HnnTa07t/60wwXf/8BOP/eVfjO7SbQNa2TEe9OTc
aMcAb9GXEkVPGbmcrY9CZyercMY2Of3frk+djzSV2ZL0X6EyP9y5e3K3Ovdz
4dFXwU1u3JsZlvhoOLdey5s071BJ3Zb6s0TOzbP3anopBUdNep/lHmuz17z8
gMyfuMmBWncXNd+WvHXe8bRZ2/ozT9TiZqf9BjT1x65af5cSEZEFRwOKzFCu
gvvcPReOfmU0DvbvXHf6wAfW3//uR/7dG05e/dazf3IodJ9zn/10+MfJd171
yG+8fv19153+yPvX37/v0Rv//YWvfiXcscur4KI+k99+AyodLGDnVV05F/hU
Gzq64Hy3y5Gmdmzg9GV4Oy7Ky/3P3NWa2Z1yJ0rNNGpjM9cM5g/TsDl4ce6C
Zi5nei3ztmPqtrgP7mSvdixvQJn5Re3gvNvb30UVtyXiyVVxcbPTQQNK/tiV
jFO/klPjRESk79GAYjKUkRA+/VdPfOubF45++fT1Hzzx9jef/M23nLz6qlPv
fsf6e68JhShMsP67+9d/592n9l196pq3jQbKfvtbTrz9Ladv+FAoTeGO4e4d
jIRQeJ6UPWFpvQEVnxNN/aR4smrna4VVp+YIbPHL3Fzkji3J+QTVjh8WrFPu
tBX+BlQ8cvHa/v3JiWfOH8cKPoTTaJCBHfcu+KPZ1g2Fcy1f88ormfdAzT5Q
W9pF7WxLdAGasbjZ6fpzQJvXrLoQTkRkiaIBzcyARsO+59MXvnrk3OHPPHrj
x9c/+J7Tv/ue0x9+X7g9/O/Jd71tNBp2qEXvetvpD7139I2oH/rtMMH6+HtR
w11Gd7zn0x2Mhr3ABpT7we5UMp/eL9iczEl63lw2yopOxNli6Zxn3i91DVfR
zt/xw/JyF3HiXa0BpT8ZNbpKbu/mxYI7d27BRWql166VZOe9cxtR6Wl9zJo3
bECRB2rzXdTitsTs/6jFzU73IyFU/WuviIgsPMmby3zutYwZ1jei/va1j/7B
wbP/738+d/enzn/p8xeOfvnc4bvPrt185uDvrX9g/6n3/Nap/Vevf2DfmY9/
9OyffvLc5z5z4ciXz3/pC2HicJdwx3D32d+IOuM8I3tetPgGtPmR7kx2fHo/
ZnOO7i+aS+mMIhpQ6ZxL77e1K3Iemh2f8S/4xFDBCtduQAVXfa1Mf01sfr3s
uAHltMLSP0PFrXk7DWjWgdp0F7W6LbP3f+TiZmcODajeB5RERGRx0YBKMrPj
9KEENb4K7vsfeM7f+vo/fO5Dv7j3m//mX3znNaujy+EO3/3k6fWnLlwYDX1w
+O7vfvI/nf7I+5MGFP5x9j9/8vwXPjeZ4PR6mCDcJdwx3D3MJMzqgZ/64TDb
ggZUeqqQ88N+XgUXuUUVP+pQuLxGJ2czsrX6eSeXWz8sOLUvfRzLr3iq0IDy
b82vH503oJ07rPRojVzz7q6CK79f+dLLPwfWcFtmVobYxc2OBiQiIploQEWJ
bDcLL0FtjITw/Q/8xN889rxnHv97P/H1F/70N3/5l86u3fLEtx5+6txjT104
Py5Bnzn9e79z4m1vPvn2t5w+8IHz9342qT9hgjBZmDjcJdwx3D3MJMxqVH+K
RkIo/VBL3mnEIhtQ5GlN4RZVHsOgYGNrfWY8OpNTzf1l5SPnhx2OhBB12ptd
/pwa0OZteUOdR33YJWfPNWxA0effTXZRy9sy68Kx2MXNztyuglOARESWJxpQ
bir1msWWoFZGw0578J9c8ugffeKJb/63Jx8989TZs6EBnf/SFx696T+s/+57
Tn/ot7/7n/7g/H1fCDeOfvTomTBZmDjcJXdW+Uvd/NTC9OUtW2Oe7TiNqNyA
Ys6fo6fc6jA7Tw7XVlNf3Lh1vU7e9lQ6X9tase05He1wHITUQpOPmWeXUvLD
giHEcnpfK38DmvoL1NYnRBbQgNIfutoxg9mn+blrXuHQLdjUuAO1hb8Btbgt
RcfP/vENsYubnWYNaOcnv8Lq7djJR9fynv8iItLrrDTIote9w/zCL7y0UqPZ
KkHhjl2v24603oAe+qc/e/ZPDj158sQTJ77z+NePnbvn04/91X8599m7z3/+
8PkvfO7c5z7z2Kf+S7gx/ChMECYLE4e7VGhA05/c3rs3NcbTzm/S3KjUgLa7
1fgj05tnfsWn31WmXNn5vYx55Wtrqs1PMFT/1MLWnJJVq3XKVzVbJ/TFozDk
/zC7c/KnbelzQFN7N/t3qfk1oPzOm7ehcWte5YAs2tSoA7WNzwG1uC35x8/U
CCOzFzczjRrQ9u9rju7YuOkv7Mq+comISJ+z0iCLXvcOc/jw50KXqfQHnTBx
uEu4Y3drlZuWG9CPPu3Bl/yjMzd86LFP3Xn2zz555hM3rL/v2jMf+/D5z93z
xLe++cS3v3X+3s+G/xzd+Ikbzv7pJ8NkYeJwl3DH+AY0yvi71LeL0Og0J/eT
+1VOAse3bs1ztezL6KtMGbeqm18OvznJaIo6n9vOn1O3yf9tfMwPN46OfjO/
d8a+adqANjamxgVLzqoXNBJCamHZe+du6Ow1n9w39oAs3NSZB2rTXdT+tmSP
n7Wj239cjVxceVr9G9Bkhad+hZNeZREREZlH2mxAP/q0+5/59K+/8Ke//W9/
5ZE3vfrhS1/20Ev3fOPFL/zWFf/7d2/9owtHvxKEf4T/DDc+9NJLHn75yx75
9VeHicNdwh2zJaiL7RURERERkSGn9QZ07HnPfPDnLnrw5y8K/7j/Wc/42rOe
8Y2f/fsnr3nbdw/dFIR/hP8cjZ/wrGdMpvy58ZQakIiIiIiIdJ/Wr4K7/8d/
4IHn/kgQ/jEqNT/6tGN/9+88/K//2bdfdUUQ/hH+M7l955SVroITERERERGp
ntZHQsi6/yd/6PjPPO8b//gfBOEf4T8j79jF9oqIiIiIyJAzhwb0tWd/X2g9
D/zUD4++6jTUn2d/nwYkIiIiIiILyTwaUF1dbK+IiIiIiAw5TRqQiIiIiIjI
ckUDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4aRuA1oLVldW
gmz27DsabBzdF+xZ2bNndMNGsHmvPavbtywqZeu/urYRzLpvaitytnSeSdZn
dXW04htlK75rE3E0yoyMj+M9K8GO3Tc+qDei92D2OT73Z/3k+biyJ3MoVNyW
5one9gW/hsSnyStnvWXN/f1iaR6LbIoenT0rdbalP+/X807Y7LXV3OO5dJ+s
rY7fitdG9+zkKNodj0jMVtTb0t2xf2R+0YA0oOWPBtQ8GlAX0YCaL0sDio8G
1E40oC6jAUlf0qwBLe/x2WRNunv+1ks/G9D890AfjqvmWWRfyHnHH/9039rG
vtgDa6ENqPSsY211dWSuz5HddGQm2U3P66E8OuE5MX5aNP9tRpN7LdXeTneZ
dFKvltnfrSX7ucvfuS3VPiyMBiR9iQakAXWT3XSmNM9oQA2iAXWe3fS8Hsqj
owFVjgbUYTQg6Us0IA2om+ymM6V5Zp7bsn3lW3vXLy2qAXWxLc2zm47MJLvp
eT2cR2ee79e7ogElTWfPuM+kOmPScVb37Qv2rK7t2X6hSV5/JnfobOuWah8W
RgOSvkQD0oC6yW46U5pnNKB60YDmk930vB7Oo6MBVYwG1GE0IOlLumxA0edC
OZ9cXl3p9nw++pmSWbc94aUvvAAWbtdakPNZ1Ozf01velnQDSq3P6KV6al2m
/0a/fd5Y+InmGY/O9rJWV0fyPiE9nz1Q59HM+wR3douS7V1b21rK2r4gPZ9k
DpOrTQr39nju48/Y5u2ZZLlzPHIme2N1T6XnWvTxMNcGVHlbih7lyQ8KHqOd
980eCdOPeK0pp/ZS+TM04vnbcsofzdIemlxZlLoWq8J+nnEs5d9e97kW/z6V
3dvxr71dpK39Uzq3wleA5BUyu1dH704zXtlmvKrM/zjPNpr0Lcm7fPY9t+Bd
OHv0xhwbUeceRXtv5/5ZyxnbofTxnep37aZBA2ry7jPjFViGGA1IA9KANCAN
SAOKiwakAWlAGlCTaEDSl3QxGvbmsyzm/avgOB+/V3Z5fBatf/bZNLkp9VK9
J/VRyIrb1eG2ZF97x1uXfpdJzkDS21j0ec+pOZc/OtvLijuj6yLxR+POR7N4
zPaiLRovJf2Z4slezbyiZvd24Zov6MgpuNKjOPHHw4IaUMFVK1vveJnnbPZR
jtnqgiOh9FjKO2bK37u3z/oK13DG87eLRLxyFqxV3jlYds613i/a/Y1c6SMe
/+ox47W3k+RvUdxICG29X1d9jCLmuYDjPFmF9BE7Xs89+1a3+/ue8QqO1zln
DUtfN2YcG1XPPSKOzOwaJns4SeoVZl7jOeS/X0+n/CwrtRUz3n1iXqtliNGA
NCANSAPSgKpstQakAY2jAaW2TgPSgCL3a8n7tQYk88yCr4Ir+u7CzZPXRV43
VXh+2OSdurttKf/7e8Gal47tGffoNDknaXcPRDyaBVdJ5bzTNX8HL33Frvw6
30WqXjlW83iYYwMq3JaKa9XgMap7LBU9N0sfnfLnbyeJf+XPvCKlzh43J6y6
n+fzXKv2WDR79Wg3Ef10etWr7Z8u3hFi5rmA4zy1f5J1yDSIdFPIaw0Njt74
c4/4IzMzz0mDS64Nm9x+9OjOa/862a11zh47ePeZ9TsZ2f3RgDQgDUgD0oCm
J9eAiqIBaUAaULLiGlDN3aoBSU/SjwZU8bPYLUQD2rlW6euFpl4zZzw6GlCT
86ijmc/bznO/HS373HrO5PWOh3me+xUtJXqtGj1G2f3ZcQNKJef520liH80Z
54c19/N8nmvL3oAillJv/3TxjtDT4zy1buNdElrC2mh4gMyVZqvj0bFzWkPP
GlB2JIfJbySS1jPajLWj+9aqXRddL00aUFvvPhXf+2SXRgPSgDY3VwPSgMon
14A0IA1IA9KAUj/VgCpHA5K+ZNGjYSe3xHweud3Er//yjoRQ5114+lwl5tFZ
kgZU8Gjmva521oAyowFvLj37Ser57LdkNbevhMl5Lxiv4b61jX3bZ3dVj4f5
bdHmczN7zU/0WlV4jDL7odGxlL1l+z06/rUx72qcdlPxHHvP6p7JcOPTj0jN
50LBecvkGE69Jjd6rpW9T7X96tFuopdSc/908Y5Q5xyg++N8spyt4236HT/J
9po3es2JPt6Kzz1ijsztORSNfrA6Tvd7tcnZY713n5jXahliNCANKB0NSAOa
igakAU1FA9KANKAkGlC9aEDSlyy6AY1T9Bm3zkdCyB+PceqZkvms6KxvRN1I
3TX1fXOL+kbUmHPy6Z2+85V8xqNTdiTMdw/EX/uR3pai97UOGlD2e/1GP1xd
HZ8mLuLISaXoUc6OoFv5eFhkpyt8XheuVcxjtH3f7LcAT7fIJg0oPeXOV6rJ
UmKev23v3NhXzvSezDmGq+3nnJY6tdHJd2629VyLf59q/urRbuKX0mD/R7xf
F72CFb6ylc9zAcd5ak+VjiU+2aKcI7xJA5rMOuLcY7KKEUdmesrMKNBzHR26
3tljej3rvPvMeq2WIUYDykYD0oA0oK3DXQPSgNI7VwPSgDSgrWhA1aMBSV9S
twGJiAwzc+90IiJSOV6rpSwakIhIlXhXFRHpf7xWS1k0IBGRKvGuKiLS/3it
lrJoQCIiVeJdVUSk//FaLWXRgEREqsS7qohI/+O1WsqiAYmIVIl3VRGR/sdr
tZRFAxIRERERkeFEAxIRERERkeEk3YDOiIiIiIiI7OpoQCIiIiIiMpykG9C6
iIiIiIjIro4GJCIiIiIiw0m6AV1z4CAAAMAupgEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDsQQN
6OZ7gxMbG0GVrAcnjt0bHLr5YNDa+tx2PJha1LE7gsXvqGVz4OY7giOn1oO8
x7ezR7BdfTgeqj5HTq0HRw7fERwID8Sc99h4bY+c2ghyHvFT9waHbjt+aM57
tYvHsQ/HRv/FHA8HDh5a+Hq2tKXTz9NweByP2rr+H0sDegaFFbjjyMbGkRqP
Y3duvuOazffT7PNoYa/20GMaUGU9fU1ePhpQazSgfj6OfTg2+k8D0oCWbKs1
INgNlqABZV8DK6fNV6cDh9eD9NxPHL41WPyOipS8Th4bWdTrYXYfxqTyfp7L
lvbieGj0HBm9P95188G75tAxY5raqXuDQ4fXD813r9Z8HEuPsV4cG30WfTzs
kjO37PM0eusOHdsIFnwsdXG0L+MzKHvcLvYoHR9XUb8B60V/hL7QgKrq6Wty
PA2o423RgIofEQ1oqV4ruqYBaUDL+AzSgGBX6H8Dqne27Lk/Zfwuc9ex9WDB
7yON++yR2w4G/dnS7JnJjDXsQBvPkXlcxZGznuNn5eaZQ3iYbj1w88EDvb3i
MdGfZ9OS2yXHQ+PtnXXH0X6469TGXdNXCc7pdaaLoz16nn14dc3Rn2vzCrrY
5LrxnJ8eD3bJNaXQmAY0CP05Z9OAOqABzVV/nk1LbpccD423d9YdNaBFvrrm
0IBgV+h/A6r+Gjh6v8jea1ddTVFB9jObi3wfKXpccsY6mHyuM/P56MLHcf5b
mj0zmeMVZaV7tXirx8+OzDVmSebfFpetO/Tr2bTslv94iNekxWSPuvm8znRx
tMfPsy+vrln9uTavpw0RloQGtNv165xNA5rPXtWAutGvZ9OyW/7jIZ4GVHWe
fXl1zdKAYHfodwNq8Bo447OKmdfh1E8P3HY8OHFq48SpqZ8eunmkaCzTCq9F
OZ//zd+uA7fdG+SNbzl+1T0VVvJ43t7If7fNS8FyU+NU5yz32B0n6owtUOsc
YMb4sRW39LZ7gwqj0ZY/UhXHtu1mr9Y/O8q5Jqf0twT11j/+Cr3JWUTMXs1O
M7kKJel3x4Pso1bl+djgGOvi2Bg/02eMCd/uPkk9Zyf3Tb8eZtbtrttuDWKO
2MrHQ7t7qd4rfwtXDTVoMXN9RnRxtPfgGRT96ppzDEzmsP29DL3oHU1GVgfG
NKDsTzUgDSjqkdKAItZfAyrcivh9qwG1tZc0oBmPvgakAcFQ9LsB1f/esRmf
OS14vyh8d07uWzqWafynXGOmrPrZ9qlX4Arfj7lzf1ZYbq3PVOZcBTf12eeK
Km/pHYeqHFEzrtKJHtu2w73a5H0w+r5117/WmU/MXs1Mk5yf5H2rZsFS0htY
vsR6z6boY+PQsfVDxyo80wuvt2l3nySvvTPuG71uE/V/M9PaXqr3yl/jpanF
52nM5+7bevS7ONo7fga19eoad4wl39Kb7keLuTYv7/dXo62bfsST70K99cju
vLIUmtKA0j/VgDSg8rXVgKqsvwZUuhWTY0wDmr1WGtCMtdKAYqIBASm9bkAV
v3fswM23BkWvY1MdIft+cSq8rOW++m2/vs34/GPUK3bEtRA540WP3xcmV3cU
jPPQoG0VTjk1RsH47OXYxl0NP7lc+G6YvFbfEdRrQ3FbGn1dZcQZS80m2+5e
bfAdizG/YWht/aPHj435lHHhOU923TLn2zFzK9r/TZ5NcVuRfqaPpxlfBxt1
xWyr+yRmjILkeqHJT8evn8lZd9Sx1+B4aLKX6r3yV30tavd5Ov9nRBdHe/N5
dvjqWu89Nz3lXK89i/9Nwuz9DEOmAU1eFTUgDWjGempADdZfA9KAWjoeNCAN
qHAaDagoGhBk9LkBVb0SrDCZ95riOSefl8//VO+szz9GXLMX8b5/4PDxA6PP
HY/PKMbv6TmfsqxwjU3MeLPRn9Kt2EkLFY10nV7P1CdPY+YZP7JuzOdYY97T
qx8P7e/V+HOPPOVHbJvrH7+eMY9O/Fj3bTyOXRxj1T4XX28r6u6TeYxCHHc8
tL+X6r3yd7G98Wek839GtH20L/QZVHVMpPLrQjPjeC/iWzYK1iTd2pJ32AWM
oA7LRAOajgaU2g8aUOncNKD49deANKDqx60GtJhnRNtH+0KfQRrQjO2C4epz
Ayr+u3N0Cj75mDfn8teHmLOC2dNML7fBK1LUNSTRr+0VrtCoPzZFkfJRTJPM
Gsu06ZlS5SYbczzMZa82Gpe1/Nyg1fWPW8+YZ1m1b2mctdz4s/34Y6zdYyPm
+d71PtlOeuzrJmd9UcdDy3spf7ndnxlWu/Zs0c+IDo72BT+DSl+dKsyn/uOY
vMcduq2+AzeHmVR+xIf0jcNQhwa0GQ0ovd80IA1IA6p3jGlAs2lAGpAGpAHB
YvW1AdX6rN9kpMryb+ir9zoWe45a+P5S+I11BUsc/xX70OF7gyPHjo+tB0Wf
281Z/+jxV5s1zVY/B3rzrddsjmWRHS2h8DGqOtJs9tPQqTnXvT5n9jl/23u1
6dVK5VfmtLf+Tc6RIr75sXBf1Tt7LJhbheXWOTZmvP6Un9u3vE+K5pmf6t/k
G7sOLe+lRk2kibl/F2onj379o30+z6Aq2Z5blauI84+fmO8Urn4mk07mMYr/
RvVG10jD7qcBxb0yaEBF0YDyl6gBaUBFU2pAGpAGpAHFRQOCrvS1AbV/tVXx
nCPej6I/q150Vjl9e+kZYMVvIWx+bVujd5PuPgcaf31C1atlitpo/Ht0xPHQ
/V5t8BwpOL9Nv5u3t/4NzpEivgu1+DcJtfpU82Os1rFRfh5VeRz+JvtkalvK
fiMRtTcarEPLe6lJE2mkwfO01nehtvDot3q0z+cZVCGpuVU5xmr9xqnCt8HO
XtvieeY/jhoQlNOANCANSANKogFpQNPbogE1pwHN4xlUIRpQh0c7LJOeNqC2
Rl3OqvfNdPHvMgXzn3rljPqmzuS+68Hke0LH3/d64MAdB+qePzQfy7Semq/D
Da7iq3xNY/I9eofXD5WNkFDteOh6r9Z9jhQdaU3P0ltYz6ix4qOPpZhnevTz
usIx1vKxMfvam5b3SanicUsaXNkV/ZuZJnup+bbX1OrztN64/VX3QLtH+6Kf
QWUqzKfqtdbJozP+rt7N69jryLuev6vfIcDQaEAakAakAWlARUusfIxpQC0d
DxqQBlQ0Tw1IA4LmetqAKvxlv5p630xX4dV7xl+9G3wGvGjP5LyLVfvMZtd/
K8/7FsLS7x8s+r7UxltaeK9x04w/S4k5Hjq/AqHCc2S0vZP34oJrLBudWbW0
njF7Nf49PeaZHve8rnaMtXxsZPdezZHGZ++TA7cdDzZHXNkYqfCp8OgGFH08
tLuXmnwnaTP5YxefOHxHkHcNWNG3RTc9y43bA+0f7Qt+BpWKf2fP2XsL+C7U
ov2ZPTa6+xwB7B4akAakAWlAGlDxNmpAEc8gDaiQBqQBtUsDgnb0swF1d/ZY
/YqpqufY+e93k1T4jOrojOLIbbce2ewIyRlsTrdq8l2o5dOnG8r4fTnZD7PG
G6+4T6LT7Jv7Zh8Js5ZV9Xjodq82+ixwKsXHfzvrH/dcjtmr1c66Z50ZNn4c
o77JsWCeRePZTu3b2aNVtLxPcnpEMs32q9Dma9GoK01NFH02WOG1vbW9lL/t
8/xUePNna96R2e4zorOjfZ7zrPrqmnPM71y3nKM9yZwadNXn0UgyekneTxez
ttBPGpAGpAHFLavq8aABxT+XNSANKDOxBlS6RRqQBpReHQ0IqupnA+rmE3z1
rpiqc46d935X716zk/fKFtE4CkZVrTBu56njQYW/qled/yQ7m2ALWzqWd21e
sl3l53IVj4dO9mrBaAYVMt6rh289MvM9sfH6t3feFX9dR8yZYfzjGH+MVTs2
Co/AgsQ905t+G2b23GlWqo0pXfW1vY29VO+Vv131v+mg+Hna/qPfzdHe1TOo
jVfX+q+li+4U0UfUQpsa9JkGpAFNaECT7dKA2lx/DUgDKn+V04DK960GpAE1
OqI0ICjQvwbU4DO2M9T6bGCtsUzrfuo2/+/Xm2Nij94HK8x5vOZ549aOUjzm
Z/I53Px7pa8lqPsJ0PE2Hj4enDi1fiJvKZNxCY7dERy4+eCBuPF1K29p4TU/
pedF9ca2bXmv1rmqMNnbmyOrR+zVFtY/+rkcs1cr7PmIZ3rVxzHmGKv3WlE4
vvT2vj1088FDuY9Xu/skvVaTcTNGa5V3hjl6HE8cuzcoXLeC53691/ZGe6lH
nwpPxiQZXVXVwqtfZ49+J0d7Z8+gNl5dx0fmsfW7ct95x79/6+vI0qXnDIW/
OQRGNCANaPpeGpAG1Nb6a0Aa0M7nvgakAbU2z8mcNSANCOroXwOCeejT6KYA
AMyPBsQwaUAAAMOkATE0k6tQsqPstnClJQAAfacBMTQaEADAkGlADEH5SOOL
HtcUAID50YAYAg0IAICEBsRuVzDS6YzvWgUAYHfSgNjtNCAAALZpQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAfbYxzsJX
A3YNDQgAoM80IGiXBgQA0GcaELRLAwIA6DMNCNrVzwb0hyK9zMKfGgAMkAYE
7dKAROKz8KcGAAOkAUG7+tyAjotE5zfG+fY4XcxfAwJgURbVgFZ+/T6Ys/kc
2xqQ7I5oQADsVhoQwzGfY1sDkt0RDQiA3WqxDeiehx4LHjr9OHRKA9KApGo0
IAB2Kw2IIdCANCCpGg0IlsWNf3gr7ALzfNYstgEt/MSYgdCANCCpGg0IlsXC
T1yhFfN81mhADIEGpAFJ1WhAsCySs8cNkaWNBgRd0IA0IKkaDQiWhQYkyx4N
CLqgAWlAUjUaECwLDUiWPRoQdEED0oCkajQgWBYakCx7NCDoggakAUnVaECw
LDQgWfZoQNAFDUgDkqrRgGBZaECy7NGAoAsaUPUGdHtw1UUrwVQuuiq4ffzj
48evDy5duejS8U1X3d7+SfIg05e9qgHleUNwycrKJSs5ueS1B4NFr2E/Jfvt
BcHLrj4YLHp9dhsNSJY9GhB0QQPSgJYnfdmrGlAeDajJftOAuqIBybJHA4Iu
aEAVGtDtV42rz0pw6fXHg+xPr7r++FWj2/tyrt6/NNkzfdmrGlCeds/kl6sX
NFnb5drS5aMBybJHA3ro9K3BZSuvDA6efvzgos+cp9dqT/DWzz4e5N2ScdMr
g+nfEYb/bGW7Ipbei3n2hQakAc03GtDsaEDL1gs0oP7SgGTZowFpQHXXp4tt
3D00oLgGdPvWlW853ScnfTlX7180oNnRgJatF2hA/aUBybJHA+qyATU5w6/Y
gD57XXDRyisv2rEV49vfetPjQdvrs9j90/clakAa0HyjAc2OBrRsvUAD6i8N
SJY9GpAGtLjuoAG1Y4kb0OT6t0vHBej47AKUPle//qoguXZuc8iE2y/acfqe
ur4unaJr7WZNeXvuWA1T0+TM59KV4q0LGxPsmN1KfhUsWvr1I+PFTP/gqqCw
XV5/6XhHJqNMXH97bgOquC3NU9SA/ofolM+/5QZ09WXBc1ZWnjO946dHJ9g+
D7/kxSMrKy8JXnHg4CtiFxRzJp+a5uUvCdLr85yXXxsUjqjw4jcExVuUXtvY
bXnFi1eCwqVMCSt27cuevxJM78M3jOSs7WVBMn3OKBCvfUmw8vzLgjceeMMb
c/fbjG2sulfjtzo1t9deFqTXIdmWN778BUH5Uiqs/9TeOPjGtl/hNSBZ9mhA
u6QBJde/vei64M7Tj985j/VZpj4y/yVqQBrQ1s81oMhoQHk0oPR8NCANSKSd
aEAa0OK6gwbUjqVvQBeN3D4Z77o8SQMan+2nR8lOzuenzs+3p8xrKBddtH22
Hz1lspTChlJwLdn4XjntLH4OqfnUW3r2Xknz2tze7H2bb0udlF8F16T7JGmv
AW23ianz8MnZ6Ques33WvT1lztlsxWVNJ9tNxtOkz7qTc+CCFjPdpwpuH88h
26GqbEtpg0vWsLAfla1V9l5JB9l8RLL3jdnGgj0/Y6/GrHlqbulWMplbpu/E
P3ZF668BiZRGA8prQKnz5He+Mki/61z0zvuCzfuGf9z31hetBOlcdtOtI+Ef
O96yLr81SO578PKVoOin1UdCSH46WuL0Gu786fQSrwuS9b/spscvu2l6nlOt
6tY7c5c+ufou/Vvi9NgLRfsnWVZqi266Lpj6fX52K2Ysq3yaWw/m74H0PteA
2qQBbd6sAcVGAypf1nQ0IA2odP01IJHSaEAakAakAXWh86vgpjpC5vbSOU+d
/1eecnR0xV9xN0lRc5l0t3SS2WcaUPnSZ+yZSy/d0Q0vuurSku+ZrbctjRMz
EkK97pOktQY0aToveU7xNWDF5+FVVbwKbkavKZiy4Iq+SSbn/9Hbkjqr38wL
VnLvlVpucQcp2q6XXLKjHTz/sku2z/Yz943axnp7NWarK86thfXvlgYkyx4N
qLgBjc+W02fIk7GmU2fdyS2FZ9Hx11zF9J2Yue1sHNO9pmAOBVtxcNzRctpK
+fqM5zbpL1H7Z7yf09fvZfdzzLKaTKMBdUADimoNGlAqGlAeDUgD0oBE2o8G
pAFpQBpQF+Y7GvZcGlB6va+66PbNIQli5pO36dnpk70xuSiw5EKznKWXXkGX
TJ/0pvS/6+297hI/GnbV7pNEA5rVgPK3qMKa5MwnGevgBSOleyA9DkDM3kum
T3pT+t+Faxu1jbX2atRWt9WA4te/WxqQLHs0oBlXwU2dJ2duT11zVXztWenY
BVPZs9K0AaWk1q24xZTugRddd9n2uApl256TpPXU3D9Nl1U4jQY0RxrQrE3X
gHZGA8qjAWlAGpBI+9GANCANSAPqQlwDGid1JVjRONVXXX/8qrLz/KLP8heN
b5A+t4+fcmem28T2fKLGCpgaj3p8NVrOKA1lyVt6wSgKkxEnLg0uHf+/+L3X
3bgH2SzPN6KWj4SQPkddkgYUNcpBxJpkP32fMzpEmekuU7rEZM7Pf0lwyfNf
cMnOhlU2FkHcSA7RezVqqxs3oKrrbyQEkdJoQI0aUGo+d75zT5Ccxc1oHDnf
XppcvbZnpK0GlF6riPP/ZMqkp6T/PauVZL6DtXxNYvZPvWVFrY8GND8aUNRW
a0CpaEDFy9KANCANSKTNaEAakAakAXWhQgNKUvTp+3RHqNCAiuY5e5yBwilz
Ri3IfENo0VbkjB5w+85vOB2tfm5DiV361PerFoyAnbcm8XuvaFvayfI0oLGc
T6ZnP+/fVgPKjoY9yqymkH/71Hd3zvhG1PQ0MduS+YbT54eT8NyGMpYzesDO
UaYL1zb90/hxDGZsY8Qccm6P2ermDaji+mtAIqXRgNpqQNkeMWPkgfRn/ydn
73suqn0V3E3XBdO3b4+KEDUOQLIOL3plcNmL9lz2opnbXj7+dlkPmrU+9ZYV
P015A2pnVAoNSAOanlADmh0NKI8GpAFpQCLtRwPSgDQgDagLlRuQdJyiUR36
kyVrQPTA9LgTzI8GJMseDahRA8oZzWDnd3QeTH/z6eRqtMz3hL4oFKIdvaPq
WXdqZOl0Csa4nvHTnPGry6/oy/yWOJnDjP1TsWmWLyt6mvI9oAG1RQPqWzQg
DWj30YAWRQOSZY8GpAFpQBpQFzSgHmUyEkIyzHZyPWEfowFRwWQkhJEurvKi
nAYkyx4NiGwDmv4eVerQgDSgHkUDGkcD2lU0oIXSgGTZowGRpgG1RQPSgBad
21MjLRSM/9CzaEDMkh5zIDvuBPOjAcmyRwNiYjISwsidk29BpT4NSANadG7X
gHZEA1p+GlBfaECy7NGAmNCAWqUBaUBSNRoQLIvk7BGW3TyfNRpQn6THZNiz
0v33hA6HBqQBSdVoQLAsFn7iCq2Y57NGA+oTDagrGpAGJFWjAQGwW2lADIEG
pAFJ1WhAAOxWGhBDoAFpQFI1GhAAu5UGxBBoQBqQVI0GBMBupQExBBqQBiRV
owEBsFtpQAyBBqQBSdVoQADsVhoQQ6AB/aFIL7PwpwYAA7TYBgTzNJ9jWwMS
ic/CnxoADJAGxHDM59juZwMCACCxqAYEu5UGBADQZxoQtEsDAgDoMw0I2qUB
AQD0mQYE7dKAAAD6TAOCdmlAAAB9pgFBuzQgAABgODQgAABgODQgAABgODQg
AABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABg
ODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQg
AABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABg
ODQgAABgODQgAABgONIN6G4REREREZFdHQ1IRERERESGEw1IRERERESGEw1I
RERERESGk3QDuq00t49TPk15VhaUJussIiIiIiLzycY46x1HAxIRERERkT6k
Pw3oL8f5/Be+GJw++1hw7skNAACAFmlAAADAcCy2AWk9AADAPGlAAADAcMy/
AWk9AADAomhAAADAcMy/AS18k3f4n178c8GixtAWEREREZGilJ/Jf/wP7guu
ue5TO3z04OcDDUgDEhERERFZrmhAAAAA5ZIeVPRTDQgAANhNNCAAAGC3yl4L
966xoumrNqDLx9GAAACAPtCAAACAIWvrKrjLM9GAAACAvtGAAACA4WjegLLd
p2oP0oAAAID50IBmOLI/uGTPyBef3PjiIldmLbhiZTW45cmNW6rc95Yr9wbX
HtkIqtxrJVhZ2Rtce2QtqL70/HW+Zd/+YHN/1t+ueqa3q9o+qbnEqe3t6lFO
++K+vcEl+44G5/54NZj8Ozmer1wLmjyChfPv/uEDAGioSQMq6jtVe5AGFEcD
aocGpAEBAEOmAc0w0AbUXSsZz3nP/isWsz/n3baqb2+bDeiKP94Iajag8b1W
Jgn/yGlAOfOf9wMKAFBZWw2o6k81oOo0oEXuw3ltrwYEANAtDWiG6Aa0eW1V
KleurUyfZybnjVPT7Nm/sjnnWXOIPTeens/o3PWKK/deMd2AsstKn8Fm53DL
k2u37Fj6ZM/sHQl3z9ui7DpPzXmydQVXypXvjailz94zOWuVWdbkiq/xsrJd
YGKqL4yStIPs9ia3TLpDelsmrSR2b8xoHOP1STeUyb8ny1oNrggrmb/fwmyP
XrtvLZj8e89qMLXVRfNfcMMFAJiteQMqbzcaUHoaDUgD0oAAABZLA5ohpgEl
Z7+ZvjN1rlswn8nZ9fiMdPrapOTMc+/IpLlENKCcNUnutfeKrU/9F6zt1HVN
OcvK3JKzRTHrnD1DzkxTc39ml55VZ1mT3pqZZnr6ndcZfvHI0SBnezPXoc3Y
81GPV8XjeWX1ku1HpHy/FTQgAICl1dY3ojaJBqQBaUAaEADAfGhAM0Q0oMJz
0fQnxCM+LZ5zjdzUiM2zG1DRmqTPz/OWkr22KroBZT5TP90F6jSgqP0ZtfSs
OsuaGvm5/DhJXY83tSentjfdKTLXFhas4azHq+LxXGG/aUAAwG6jAc2gAWlA
GpAGBADsIhrQDB1fBZf+BP302WxbV8Fl5hM1dvEiG1CF/dm4AcVfBVeha0w9
1mtfzBsZYNK8rlwNpuecv4atjTWtAQEAg6cBzaABaUAakAYEAOwiGtAMmaub
ppI6c645GnYyuvKR/bfsXMro+rdkFOvi0QnyTa/JaD7JSM7lo2EnqTwSQr0G
lIzDPBmBedwR6o2G3bwBRSwrpgFl5zC9J9Pbm+59qREqqq7h1FIqHs8dNiCj
YQMAfacBzaABaUAakAYEAOwiGhAsQPQ37QIA0C4NCBZAAwIAWBANCOZp80rI
9DjnAADMT0wD+kxn0YAYGg0IAGCxNCAAAGA4NCAAAGA4NCAAAGA4NCAAAGA4
NCAAAGA4NCAAAGA4NCAAAGA4NCAAAGA4NKAKjuwPnlpZDR5/cuPxWdM/fuVK
8NS+o8HiVx4AANCAKtGAAABgyWlAcUKFOfrEnpVgY2V1Y1YDOr9vb7CxEibW
gAAAoEc0oDgaEAAA7AYaUBVrwRMrq0/EXQWX9CANCAAA+kMDqkIDAgCA5aYB
VZFqQH88klzntrFnf3A+VJ7p6TUgAADoGw2oCg0IAACWmwZURdKAVoKNK9eC
zVv2jhzZCNLTa0AAANA3GlAVGhAAACw3DaiK7EgIySjZe0c0IAAA6D0NqAoN
CAAAlpsGVIUGBAAAy00DqkIDAgCA5aYBVaEBAQDActOAqtCAAABguWlA8R6/
ciWYfAvqeDTspONkvxd16vYxPQgAAPpAA4qnAQEAwLLTgAAAgOHQgAAAgOHQ
gAAAgOHQgAAAgOHQgAAAgOHQgAAAgOHQgAAAgOGIaUDrHUcDAgAA5kMDAgAA
dp+P/8F9QdJ30t7zvruDontpQAAAwDLSgAAAAMppQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHCUN6DLxylvNzHTaEAAAEAfaEAAAMBwxDSgoo5T/lMN
CAAA6BsNCAAAGI74BpRuOkW3a0AAAECfaUAAAMBwxIyGne078d1HAwIAAPpD
AwIAAIYj/htR63UfDQgAAOgPDQgAABiO+AaU7kHx02tAAABAf2hAAADAcFRt
QPWiAQEAAH2gAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOh
AQEAAMOhAQEAAMMx/wbU9bJERERERHZT7htn0Wsh1aIBiYiIiIjUiwa0jNGA
RERERETqRQNaxmhAIiIiIiL1ogEtYzQgEREREZF60YCWMRqQiIiIiEi9aEDL
GA1IRERERKReNKBljAYkIiIiIlIvGtAyRgMSEREREamXyg3oxsuDlZWRG8N/
5f90Oxe/456g6jT3vOPiID1NWNjlN+6YzUqQvX0I0YBEREREROpFA1rGaEAi
IiIiIvUS14DuGZeSlVEpuTy0jvH/7WxAN45LSfr25JaLLx9VnPVxxYme5uJ3
XD4uRfes591yzztGq3P5jRcPsPyMowGJiIiIiNSLBrSM0YBEREREROql+kgI
2RaT3Dy+tu3yG1emW0lyPdvkOreYaWY0oHvuGZefd1ycdw1eq0muvutyCfWj
AYmIiIiI1IsGVBQNSERERERk96WtBjTdYtKTb7eemGnSc8uOhJDc3vXoByuZ
dLiwgvxFKtmfakAiIiIiIvWiAWWjAYmIiIiI7Nb0swEVLnfq6rj2k+0+i+pB
GpCIiIiISBfRgNLRgEREREREdneWpQGF8nPj5ZMRs2O+L7VqyrvPYq+Iy0YD
EhERERGpFw0oiQYkIiIiIjKE9G807Eymvv804vtSlzDZa95cBSciIiIi0kU0
oD5EAxIRERERmU9aa0BJT1m5/OLt25MpLw6Sq9eippnK+D5T33+qAY2iAYmI
iIiI1IsG1IdoQCIiIiIi80lrDWjyw/F1buVjFMRMM07R1XFdjISwXNGARERE
RETqRQNaxmhAIiIiIiL1Ur0BSdPEXPPmKjgRERERkS6iAc0/GpCIiIiIyKKi
Ac0/GpCIiIiIyKKiAc0/GpCIiIiIyKKiAS1jNCARERERkXrRgJYxGpCIiIiI
iAwnGpCIiIiIiAwn6QYEAAAAAADAbvL/Awp+BO4=
    "], {{0, 490}, {1110, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1110, 490},
  PlotRange->{{0, 1110}, {0, 490}}]], "Input",
 CellID->48114742,ExpressionUUID->"57de451c-f536-4b8f-9aa5-8117447916b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with Imported CSS Data", "Section",
 CellChangeTimes->{{3.7617787463450165`*^9, 3.761778757594176*^9}},
 CellID->19141817,ExpressionUUID->"8a07fb13-3076-46b1-8c34-f6a244b68bab"],

Cell[CellGroupData[{

Cell["Cells and Boxes", "Subsection",
 CellChangeTimes->{{3.761840012689201*^9, 3.7618400198602057`*^9}},
 CellID->354439910,ExpressionUUID->"1601299a-2a57-43f6-9322-ea2f0b33539e"],

Cell["\<\
Considering layout, all elements of e.g. an HTML document are boxes. These \
boxes can be nested. Layout of WD notebooks are similar; they begin with a \
sequence of cells and each cell can then nest further cells or box objects.\
\>", "Text",
 CellChangeTimes->{{3.761840042649934*^9, 3.7618402983750877`*^9}, {
  3.7618403719647207`*^9, 3.7618403766542735`*^9}, {3.76184043267908*^9, 
  3.7618405848115835`*^9}},
 CellID->364035884,ExpressionUUID->"512bc3ab-3479-4271-8906-8f6f10b7d19d"],

Cell[CellGroupData[{

Cell["\<\
Because WD distinguishes cells and boxes, some CSS options must be further \
interpreted depending on an interface expression.\
\>", "MathCaption",
 CellChangeTimes->{
  3.7618407566114216`*^9, {3.7618428795269375`*^9, 3.7618429165770683`*^9}},
 CellID->207531235,ExpressionUUID->"8caa5204-c48d-4ea3-bd67-7372e8fc852b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {border-left-color:red}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.761840762917673*^9, 3.7618407813654947`*^9}, {3.7618408220102997`*^9, 
  3.761840822241704*^9}, {3.7618416513542795`*^9, 3.7618416575684643`*^9}, {
  3.7618422036737757`*^9, 3.7618422043124485`*^9}},
 CellLabel->"In[50]:=",
 CellID->802518388,ExpressionUUID->"6c1b5207-b0da-4ab8-a873-f549964554a0"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 1]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1700729606], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1700729606]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["border-left-color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{FrameStyle -> Left[
                    RGBColor[1, 0, 0]], CellFrameStyle -> Left[
                    RGBColor[1, 0, 0]]}, ShowStringCharacters -> False], 
                    Style[
                    Style[{FrameStyle -> Left[
                    RGBColor[1, 0, 0]], CellFrameStyle -> Left[
                    RGBColor[1, 0, 0]]}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {841., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7618399900693088`*^9, {3.7618407659329505`*^9, 3.7618407825845313`*^9}, 
   3.7618408228749676`*^9, 3.7618416592194242`*^9, 3.7618419567069435`*^9, 
   3.761842204941821*^9},
 CellLabel->"Out[50]=",
 CellID->347181638,ExpressionUUID->"f6f4f777-e905-4dfc-897f-4fa660644390"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " to process the ambiguous translations from CSS by providing an interface \
expression."
}], "MathCaption",
 CellChangeTimes->{{3.7618423237561607`*^9, 3.761842325317551*^9}, {
  3.76184236147654*^9, 3.7618424591977396`*^9}, {3.7618428084902287`*^9, 
  3.76184281313809*^9}, {3.761842929688862*^9, 3.761842934781473*^9}},
 CellID->691295671,ExpressionUUID->"318353a9-f8c8-49d8-8ab1-7dabec5b51a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761840838069374*^9, 3.761840870585059*^9}, 
   3.7618409443812675`*^9},
 CellLabel->"In[51]:=",
 CellID->38944675,ExpressionUUID->"549464cb-5345-47a7-a794-7b5399f57741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameStyle", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "Automatic"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761840871085683*^9, 3.761840945489041*^9, 
  3.7618422309248343`*^9},
 CellLabel->"Out[51]=",
 CellID->451021556,ExpressionUUID->"030f9839-bf6b-4a82-8f03-027b8b27c66e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Frame", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618409789131007`*^9, 3.761840980557632*^9}, {
  3.761841492723339*^9, 3.761841515308422*^9}, {3.7618422428425007`*^9, 
  3.7618422435129128`*^9}},
 CellLabel->"In[53]:=",
 CellID->546461476,ExpressionUUID->"6e6fc958-a6fa-4dff-a946-1541c48935ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FrameBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
             False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "Automatic"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76184098203621*^9, 3.761841031496909*^9, {3.7618414938331327`*^9, 
   3.7618415155970583`*^9}, {3.7618422360021863`*^9, 3.7618422442248497`*^9}},
 CellLabel->"Out[53]=",
 CellID->92485203,ExpressionUUID->"0f8ac011-7c66-4b48-a8a7-42a260900e31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The result is an empty list if the provided interface expression doesn't have \
a corresponding option for the interpretation.\
\>", "MathCaption",
 CellChangeTimes->{{3.7618424725502844`*^9, 3.7618425086443453`*^9}, {
  3.7618428261900997`*^9, 3.76184283050698*^9}, {3.761842960538604*^9, 
  3.761842962788793*^9}},
 CellID->149408332,ExpressionUUID->"dde652cb-f1cc-49f4-9256-2759450d7b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Pane", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618425127769103`*^9, 3.761842514886595*^9}},
 CellLabel->"In[54]:=",
 CellID->23523617,ExpressionUUID->"e21264dd-29e5-4a29-9766-950b406f6f1b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7618425157393894`*^9},
 CellLabel->"Out[54]=",
 CellID->130095501,ExpressionUUID->"1a0d52de-c5e4-47b4-9446-b6a9e03fb29d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Border Edges", "Subsection",
 CellChangeTimes->{{3.761839107520204*^9, 3.761839117598854*^9}, {
  3.7618434780824456`*^9, 3.761843479872734*^9}},
 CellID->258973364,ExpressionUUID->"4723685c-7d24-4e8c-93d4-028e703288e2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Options like ",
 ButtonBox["FrameMargins",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FrameMargins"],
 " and ",
 ButtonBox["ImageMargins",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageMargins"],
 " allow the left, right, top, and bottom sides to be individually specified."
}], "MathCaption",
 CellChangeTimes->{
  3.761839316174226*^9, {3.761839424133739*^9, 3.7618394495703063`*^9}, {
   3.7618396180308514`*^9, 3.7618396601709795`*^9}},
 CellID->19164079,ExpressionUUID->"10a76afc-3582-412c-acbc-4f0532c50b1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"\"\<ABC\>\"", ",", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618393227339582`*^9, 3.7618393650069823`*^9}},
 CellLabel->"In[26]:=",
 CellID->82274386,ExpressionUUID->"14e8a796-7c97-4732-a704-bfe90a7c190d"],

Cell[BoxData[
 FrameBox["\<\"ABC\"\>",
  FrameMargins->{{0, 5}, {10, 15}},
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.76183935424492*^9, 3.761839365701894*^9}},
 CellLabel->"Out[26]=",
 CellID->538522182,ExpressionUUID->"2c2957d5-5f37-4106-8e9e-1bf86b474959"]
}, Open  ]]
}, Open  ]],

Cell["\<\
CSS allows the same specification. It further provides properties to control \
each side independently e.g. \"padding-left\". Such properties are \
interpreted with wrappers that require additional interpretation when making \
a WD style option.\
\>", "Text",
 CellChangeTimes->{{3.7618391427801085`*^9, 3.7618392930053997`*^9}, {
  3.7618393803312407`*^9, 3.7618393807520895`*^9}, {3.76183968842894*^9, 
  3.7618397578454685`*^9}, {3.761839806290877*^9, 3.761839848572938*^9}, {
  3.761839919736834*^9, 3.7618399375220575`*^9}},
 CellID->54711701,ExpressionUUID->"9f746a53-cebf-452f-b263-451465cff723"],

Cell[CellGroupData[{

Cell["An example of ambiguous border translation from CSS.", "MathCaption",
 CellChangeTimes->{{3.761843072181903*^9, 3.7618430826345816`*^9}, {
  3.7618435224615917`*^9, 3.7618435238434916`*^9}},
 CellID->69472301,ExpressionUUID->"04b666f8-6d39-4a45-8ded-18d2adac8e58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {padding:5px;padding-left:0}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}},
 CellLabel->"In[55]:=",
 CellID->205641708,ExpressionUUID->"dace133e-817a-41b8-bb20-e1ccf85589ec"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 2]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[115.20000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2115721799], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 2]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2115721799]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["padding", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{FrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}, CellFrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}}, ShowStringCharacters -> False], 
                    Style[
                    Style[{FrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}, CellFrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["padding-left", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{FrameMargins -> Left[0], CellFrameMargins -> 
                    Left[0]}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{FrameMargins -> Left[0], CellFrameMargins -> 
                    Left[0]}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"]]}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1962534900][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1962534900]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1449., {67.5, 74.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7618399900693088`*^9, 3.761842584796765*^9},
 CellLabel->"Out[55]=",
 CellID->532459386,ExpressionUUID->"0b0ecf9a-b2b9-4151-9640-950b9e6c5f9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " to process the ambiguous translations from CSS  by providing an interface \
expression."
}], "MathCaption",
 CellChangeTimes->{{3.7618423237561607`*^9, 3.761842325317551*^9}, {
  3.76184236147654*^9, 3.7618424591977396`*^9}, {3.761842999536763*^9, 
  3.7618430003306103`*^9}},
 CellID->74318702,ExpressionUUID->"e1c5c5e0-3eb9-4d12-8777-6012a629288e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761840838069374*^9, 3.761840870585059*^9}, 
   3.7618409443812675`*^9},
 CellLabel->"In[56]:=",
 CellID->433620215,ExpressionUUID->"0133e313-d1ee-4aee-ac28-4a950d968e0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameMargins", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3.75`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.75`", ",", "3.75`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.761840871085683*^9, 3.761840945489041*^9, 
  3.7618422309248343`*^9, 3.7618426723998013`*^9},
 CellLabel->"Out[56]=",
 CellID->161149575,ExpressionUUID->"46d2e406-b91a-461e-9924-b142ad6913ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Pane", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618409789131007`*^9, 3.761840980557632*^9}, {
  3.761841492723339*^9, 3.761841515308422*^9}, {3.7618422428425007`*^9, 
  3.7618422435129128`*^9}, {3.7618427111069574`*^9, 3.7618427116393175`*^9}},
 CellLabel->"In[58]:=",
 CellID->98308474,ExpressionUUID->"4245efc2-da22-4446-9424-210b528bfee9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"FrameMargins", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3.75`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.75`", ",", "3.75`"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76184098203621*^9, 3.761841031496909*^9, {3.7618414938331327`*^9, 
   3.7618415155970583`*^9}, {3.7618422360021863`*^9, 3.7618422442248497`*^9}, 
   3.761842674351761*^9, 3.761842711876877*^9},
 CellLabel->"Out[58]=",
 CellID->54566311,ExpressionUUID->"7d20ef57-ed0c-433f-939c-499bcdac4080"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Width and Height", "Subsection",
 CellChangeTimes->{{3.7618391273498716`*^9, 3.7618391340076113`*^9}, {
  3.761843042936117*^9, 3.761843047175833*^9}, {3.7618434846024203`*^9, 
  3.761843486320811*^9}},
 CellID->370300816,ExpressionUUID->"48f75e18-3d09-44c8-a061-82cc445374be"],

Cell[CellGroupData[{

Cell[TextData[{
 "Options like ",
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 " allow the width and height to be individually specified. Minimum and \
maximum ranges are also allowed."
}], "MathCaption",
 CellChangeTimes->{
  3.761839316174226*^9, {3.761839424133739*^9, 3.7618394495703063`*^9}, {
   3.7618396180308514`*^9, 3.7618396601709795`*^9}, {3.7618431179262257`*^9, 
   3.7618431541843505`*^9}, {3.7618432191839457`*^9, 3.7618432196220975`*^9}},
 CellID->348727091,ExpressionUUID->"5f2461b7-e97a-4391-82e4-5ce0211dbe21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"\"\<ABC\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618393227339582`*^9, 3.7618393650069823`*^9}, {
  3.761843159197966*^9, 3.76184320731249*^9}},
 CellLabel->"In[64]:=",
 CellID->633565613,ExpressionUUID->"34aca79b-a006-4f1c-8a09-b6f6e34f9f7e"],

Cell[BoxData[
 FrameBox["\<\"ABC\"\>",
  ImageSize->{{15, 50}, {15, 50}},
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.76183935424492*^9, 3.761839365701894*^9}, {
  3.761843162802855*^9, 3.761843207868765*^9}},
 CellLabel->"Out[64]=",
 CellID->41238662,ExpressionUUID->"45038eb5-8c49-4d8a-97aa-68d76a2bba0d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
CSS allows the same specification. It further provides properties to control \
the max/min widths and heights e.g. \"max-width\". Such properties are \
interpreted with wrappers that require additional interpretation when making \
a WD style option.\
\>", "Text",
 CellChangeTimes->{{3.7618391427801085`*^9, 3.7618392930053997`*^9}, {
  3.7618393803312407`*^9, 3.7618393807520895`*^9}, {3.76183968842894*^9, 
  3.7618397578454685`*^9}, {3.761839806290877*^9, 3.761839848572938*^9}, {
  3.761839919736834*^9, 3.7618399375220575`*^9}, {3.761843231433223*^9, 
  3.761843232171547*^9}, {3.7618433547840967`*^9, 3.7618433760740557`*^9}},
 CellID->75578758,ExpressionUUID->"ab5dfa72-87b8-477e-a6af-2e57edd08b2c"],

Cell[CellGroupData[{

Cell["An example of ambiguous width/height translation from CSS.", \
"MathCaption",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}},
 CellID->542365653,ExpressionUUID->"49333bce-adfd-441b-9dfd-1757e1e9c1be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {width:10px;min-width:5px}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}},
 CellLabel->"In[66]:=",
 CellID->411302082,ExpressionUUID->"dc69e77a-626a-410d-9a68-aa180c905928"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 2]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[332683394], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 2]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[332683394]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["width", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"WidthMin", "[", "8", "]"}], ",", 
                    RowBox[{"WidthMax", "[", "8", "]"}]}], "}"}]}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["min-width", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"WidthMin", "[", "4", "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 684398768]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[684398768][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {775., {68.5, 75.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7618399900693088`*^9, 3.761842584796765*^9, 
  3.761843402930993*^9, 3.7618434438917437`*^9},
 CellLabel->"Out[66]=",
 CellID->162579113,ExpressionUUID->"d8ff91be-4d2f-401e-a784-a09b57792189"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " to process the ambiguous translations from CSS  by providing an interface \
expression."
}], "MathCaption",
 CellChangeTimes->{{3.7618423237561607`*^9, 3.761842325317551*^9}, {
  3.76184236147654*^9, 3.7618424591977396`*^9}, {3.761842999536763*^9, 
  3.7618430003306103`*^9}},
 CellID->405165279,ExpressionUUID->"a68d77db-eabc-4507-8035-f3d0d441e47a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Pane", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618409789131007`*^9, 3.761840980557632*^9}, {
  3.761841492723339*^9, 3.761841515308422*^9}, {3.7618422428425007`*^9, 
  3.7618422435129128`*^9}, {3.7618427111069574`*^9, 3.7618427116393175`*^9}},
 CellLabel->"In[68]:=",
 CellID->184746180,ExpressionUUID->"8af05fff-71a0-4d45-a338-49c70bba151b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], ",", "Automatic"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76184098203621*^9, 3.761841031496909*^9, {3.7618414938331327`*^9, 
   3.7618415155970583`*^9}, {3.7618422360021863`*^9, 3.7618422442248497`*^9}, 
   3.761842674351761*^9, 3.761842711876877*^9, 3.76184345350679*^9},
 CellLabel->"Out[68]=",
 CellID->284330788,ExpressionUUID->"95b0fdcd-1578-4abc-a0fd-f5983d556dcc"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Functions ",
 ButtonBox["WidthMin",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/WidthMin"],
 ", ",
 ButtonBox["WidthMax",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/WidthMax"],
 ", ",
 ButtonBox["HeightMin",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/HeightMin"],
 ", and ",
 ButtonBox["HeightMax",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/HeightMax"],
 " are inert wrappers that assist in disambiguating the CSS translation."
}], "Text",
 CellChangeTimes->{{3.761843591860756*^9, 3.7618436506755075`*^9}},
 CellID->539727440,ExpressionUUID->"9275df75-74aa-4e1c-a3a2-cd4725ccc850"]
}, Open  ]],

Cell["Merging Multiple CSS Rules", "Subsection",
 CellChangeTimes->{{3.761843717842208*^9, 3.7618437406080384`*^9}},
 CellID->316215944,ExpressionUUID->"68a61e06-6c12-4227-b501-526c258ae0cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "TutorialMoreAboutSection",
 CellID->23220180,ExpressionUUID->"e781eb13-9253-46f5-a89a-71d58b15b174"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "TutorialMoreAbout",
 CellChangeTimes->{{3.761845070888578*^9, 3.761845077593646*^9}},
 CellID->1567025153,ExpressionUUID->"5bbbc34f-38be-4751-9253-e6cb4e7a204d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tutorials", "RelatedTutorialsSection",
 CellID->415694126,ExpressionUUID->"d415174c-bc80-40cb-9d4e-b7dc847beac6"],

Cell["XXXX", "RelatedTutorials",
 CellID->806871991,ExpressionUUID->"29d4ac88-d001-45d4-b972-b0b02c76419c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Wolfram Education Group Courses", "TutorialRelatedLinksSection",
 CellID->415694148,ExpressionUUID->"d00bfb2d-480d-4a80-8d32-cb1979e4a798"],

Cell["XXXX", "TutorialRelatedLinks",
 CellID->415694149,ExpressionUUID->"db2f6442-c93b-4656-8443-7d42dbcedff1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1062, 903},
WindowMargins->{{Automatic, 159}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TutorialPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 28, "History",ExpressionUUID->"556fa402-2c77-4a24-a370-5cb7a61adceb",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 35, "CategorizationSection",ExpressionUUID->"ddd71c5d-9749-40ff-8f70-c36e360a20a5",
 CellID->1122911449],
Cell[1309, 41, 136, 2, 87, "Categorization",ExpressionUUID->"6954bea3-1515-43f7-8e5c-72573c1793f7",
 CellID->686433507],
Cell[1448, 45, 136, 2, 87, "Categorization",ExpressionUUID->"43deaff8-d954-4d2f-803a-06c22082f272",
 CellID->605800465],
Cell[1587, 49, 133, 2, 87, "Categorization",ExpressionUUID->"76c1083d-999f-426b-8e36-8a95d6b6a8f8",
 CellID->468444828],
Cell[1723, 53, 129, 1, 87, "Categorization",ExpressionUUID->"31ea085a-f8b2-4985-857f-1aaa445de6f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[1889, 59, 111, 1, 22, "KeywordsSection",ExpressionUUID->"9b787d58-885f-4ebd-a7fe-2f4e86f445e1",
 CellID->1427428552],
Cell[2003, 62, 100, 1, 87, "Keywords",ExpressionUUID->"d6a64ed8-1d45-4ce5-ac30-f1b2b416b04a",
 CellID->1251852827]
}, Closed]],
Cell[CellGroupData[{
Cell[2140, 68, 108, 1, 22, "DetailsSection",ExpressionUUID->"7c7b6e67-c5dd-4052-b113-99197990e551",
 CellID->307771771],
Cell[2251, 71, 118, 2, 87, "Details",ExpressionUUID->"31be05ff-9b8a-4f38-ab1b-f7766c4b0ad4",
 CellID->218895918],
Cell[2372, 75, 124, 2, 87, "Details",ExpressionUUID->"56e30e92-6375-477a-9fb9-b0c60715bc3e",
 CellID->350963985],
Cell[2499, 79, 121, 2, 87, "Details",ExpressionUUID->"450f56b4-dae6-44bb-8d7b-c870e4977a07",
 CellID->795871300],
Cell[2623, 83, 126, 2, 87, "Details",ExpressionUUID->"958186ca-32f2-486a-83ac-5886c8f72aa6",
 CellID->199739161],
Cell[2752, 87, 115, 2, 87, "Details",ExpressionUUID->"7a844128-e591-4fa9-a6df-8998d4270ba6",
 CellID->40625308],
Cell[2870, 91, 116, 2, 87, "Details",ExpressionUUID->"fdcddd1b-4f9a-49b0-a18e-5cad8b234290",
 CellID->357121918],
Cell[2989, 95, 117, 2, 87, "Details",ExpressionUUID->"221221ba-93e5-40c7-a846-39fb3939ebc0",
 CellID->35949532],
Cell[3109, 99, 133, 2, 87, "Details",ExpressionUUID->"35d4e128-14ef-433e-83ec-119f78926fe3",
 CellID->929432370],
Cell[3245, 103, 122, 2, 87, "Details",ExpressionUUID->"bdee46af-6b62-4dcc-a36a-bf573d70b9d2",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[3404, 110, 179, 2, 113, "Title",ExpressionUUID->"66be0c7f-129c-4236-8284-4c50587b284a",
 CellID->509267359],
Cell[3586, 114, 743, 12, 86, "Text",ExpressionUUID->"58cf0cf3-5168-465c-a524-35cb5b1da76e",
 CellID->1534169418],
Cell[CellGroupData[{
Cell[4354, 130, 190, 2, 44, "MathCaption",ExpressionUUID->"6c5f91a0-83cf-46d8-a6f0-c7f574fac3cc",
 CellID->310445284],
Cell[4547, 134, 220, 4, 32, "Input",ExpressionUUID->"6b966142-09bc-409c-8088-88712128147f",
 CellID->575452366]
}, Open  ]],
Cell[CellGroupData[{
Cell[4804, 143, 222, 2, 53, "Section",ExpressionUUID->"27fce8ca-96a5-4e8f-8893-f65ca438ca15",
 CellID->185646103],
Cell[5029, 147, 528, 10, 66, "Text",ExpressionUUID->"fd1a4aea-e844-4e03-a5fb-e3818110f564",
 CellID->111578108],
Cell[5560, 159, 1127, 23, 86, "Text",ExpressionUUID->"a75fc352-5150-4177-b01c-2148207806cc",
 CellID->72334175],
Cell[CellGroupData[{
Cell[6712, 186, 179, 2, 46, "Subsection",ExpressionUUID->"10f8fcb6-a74f-4040-8260-1718748265f8",
 CellID->492661331],
Cell[6894, 190, 3105, 80, 123, "DefinitionBox",ExpressionUUID->"67b6e504-933b-4bc0-a0f4-74ea91e53cd8",
 CellID->505092195],
Cell[10002, 272, 196, 2, 35, "Caption",ExpressionUUID->"faed14ab-59f9-4260-a0ed-166fba67dd1b",
 CellID->933228592],
Cell[10201, 276, 1079, 21, 137, "Text",ExpressionUUID->"7d78e86e-edc3-497e-91d2-3b72ed1df102",
 CellID->771639886]
}, Open  ]],
Cell[CellGroupData[{
Cell[11317, 302, 234, 3, 46, "Subsection",ExpressionUUID->"c7682611-d8ca-4032-b5b3-d1c04d56dffd",
 CellID->27852929],
Cell[11554, 307, 387, 7, 47, "Text",ExpressionUUID->"88ff5561-8eea-4f7f-a8a1-eed43706ddfc",
 CellID->222985747],
Cell[11944, 316, 1612, 32, 167, "DefinitionBox",ExpressionUUID->"97a1efd9-6db0-4b17-af87-267ca9f0709c",
 CellID->200218437],
Cell[13559, 350, 187, 2, 35, "Caption",ExpressionUUID->"b73fe078-6f09-4c7c-9644-bcd9f8c757bb",
 CellID->88591569],
Cell[13749, 354, 322, 5, 47, "Text",ExpressionUUID->"1029939c-6f27-4ae2-9929-887cc3ff1e7a",
 CellID->51822448],
Cell[14074, 361, 599, 12, 66, "Text",ExpressionUUID->"e75cd706-2aa6-4a12-b5e3-fd7f0d4a1ba8",
 CellID->271229263]
}, Open  ]],
Cell[CellGroupData[{
Cell[14710, 378, 179, 2, 46, "Subsection",ExpressionUUID->"4d71f6ac-ab32-405b-81ab-cabc314db410",
 CellID->305221324],
Cell[14892, 382, 532, 11, 66, "Text",ExpressionUUID->"f8bec49d-defc-43d8-8210-438837c82b0f",
 CellID->555909034],
Cell[15427, 395, 2809, 69, 288, "DefinitionBox",ExpressionUUID->"87b2bf10-6ed4-424b-85ba-b29d97d2f3bb",
 CellID->792685257],
Cell[18239, 466, 188, 2, 35, "Caption",ExpressionUUID->"3ef0af3d-b25e-43c1-b943-11032c1ecd35",
 CellID->264816302],
Cell[18430, 470, 648, 12, 47, "Text",ExpressionUUID->"5c74b4fe-8f36-40d6-9d9f-e4b5ce712b93",
 CellID->103579448],
Cell[19081, 484, 481, 8, 27, "Text",ExpressionUUID->"7a8903c0-bfba-4da6-8b1b-6a60c7a777f8",
 CellID->695697506],
Cell[19565, 494, 439, 7, 66, "Text",ExpressionUUID->"63898dc5-9c01-4330-b769-186998a8426d",
 CellID->553560813],
Cell[20007, 503, 1766, 40, 88, "Text",ExpressionUUID->"ac99ad5a-c92a-4eba-ad13-3ebade191425",
 CellID->115198241]
}, Open  ]],
Cell[CellGroupData[{
Cell[21810, 548, 191, 2, 46, "Subsection",ExpressionUUID->"9305eb8c-022d-4f49-8197-332309c7b25c",
 CellID->12152049],
Cell[22004, 552, 405, 7, 47, "Text",ExpressionUUID->"3158fcd9-6a76-4f64-b40a-88932ce43d01",
 CellID->320649723],
Cell[22412, 561, 1537, 35, 143, "DefinitionBox",ExpressionUUID->"34026ad2-a853-4646-be55-f0d0aa6ff1ee",
 CellID->392524317],
Cell[23952, 598, 195, 2, 35, "Caption",ExpressionUUID->"0eb282d9-f0bd-483f-82dd-7dff77f410be",
 CellID->46612784]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24196, 606, 175, 2, 53, "Section",ExpressionUUID->"db63729e-1e5d-42ea-8be7-6f76ebc8f9ff",
 CellID->121087292],
Cell[CellGroupData[{
Cell[24396, 612, 216, 2, 49, "MathCaption",ExpressionUUID->"045b02fb-135d-4e3c-b1f6-fd7b454d3fdd",
 CellID->836781195],
Cell[24615, 616, 850, 17, 56, "Input",ExpressionUUID->"41c5b849-7e33-4381-966e-68d0206cc4f9",
 CellID->31754730]
}, Open  ]],
Cell[25480, 636, 242, 4, 27, "Text",ExpressionUUID->"45443317-b154-4f73-b949-7a4ea538aecd",
 CellID->102370062],
Cell[25725, 642, 513, 11, 49, "DefinitionBox",ExpressionUUID->"ece5c163-0f68-453a-b4ea-b52d8f33fc3a",
 CellID->81978558],
Cell[26241, 655, 174, 2, 35, "Caption",ExpressionUUID->"b896e7ae-72bd-4854-96c3-c6d0d72fed10",
 CellID->123757612],
Cell[CellGroupData[{
Cell[26440, 661, 189, 2, 44, "MathCaption",ExpressionUUID->"67cd4ea0-81ae-4f94-b55c-0b16f9d59100",
 CellID->226527354],
Cell[CellGroupData[{
Cell[26654, 667, 291, 6, 32, "Input",ExpressionUUID->"8df01d96-31de-4992-938a-289df7a5e291",
 CellID->681723581],
Cell[26948, 675, 25974, 504, 129, "Output",ExpressionUUID->"2731460f-be5e-45d5-8895-5031dfba61b2",
 CellID->579775105]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52971, 1185, 192, 2, 49, "MathCaption",ExpressionUUID->"31bf620d-cb23-4208-988a-68d7918f3679",
 CellID->154777042],
Cell[CellGroupData[{
Cell[53188, 1191, 390, 9, 32, "Input",ExpressionUUID->"5f14ce15-8798-4d79-b62a-ae304f6338ba",
 CellID->58583108],
Cell[53581, 1202, 23770, 463, 129, "Output",ExpressionUUID->"f3e0d621-afc8-4015-8aeb-743292342f43",
 CellID->13894359]
}, Open  ]]
}, Open  ]],
Cell[77378, 1669, 755, 14, 66, "Text",ExpressionUUID->"4d91b273-40b2-4aad-a6f3-a924acf7ed9a",
 CellID->745579111],
Cell[CellGroupData[{
Cell[78158, 1687, 189, 2, 44, "MathCaption",ExpressionUUID->"13419783-7208-4371-8033-cd7c6654c72f",
 CellID->27523641],
Cell[CellGroupData[{
Cell[78372, 1693, 464, 8, 32, "Input",ExpressionUUID->"277727ea-f36c-4328-9fbe-beb89c01b352",
 CellID->313868854],
Cell[78839, 1703, 23945, 465, 129, "Output",ExpressionUUID->"c96039e3-4acf-4ccb-ab81-670e9bb23f15",
 CellID->211352011]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102833, 2174, 193, 2, 49, "MathCaption",ExpressionUUID->"82712f09-cef4-4018-8e83-ab0b98b1117b",
 CellID->610584558],
Cell[CellGroupData[{
Cell[103051, 2180, 382, 8, 32, "Input",ExpressionUUID->"1696c732-bcbe-49a5-963b-87f7fc29a85e",
 CellID->568946600],
Cell[103436, 2190, 30565, 595, 159, "Output",ExpressionUUID->"22391901-814b-4907-ad20-5a586d410de2",
 CellID->636766901]
}, Open  ]]
}, Open  ]],
Cell[134028, 2789, 666, 13, 86, "Text",ExpressionUUID->"8cf2765a-7072-49ac-bdb5-ef15e4d75fcb",
 CellID->410138926],
Cell[CellGroupData[{
Cell[134719, 2806, 273, 3, 44, "MathCaption",ExpressionUUID->"a69c84c7-1e08-4147-bba4-7501a7e2f554",
 CellID->397163078],
Cell[CellGroupData[{
Cell[135017, 2813, 638, 15, 56, "Input",ExpressionUUID->"994deaf4-5f3b-4218-b57f-f2bb4201fac2",
 CellID->971740772],
Cell[135658, 2830, 225, 5, 30, "Echo",ExpressionUUID->"8d5c2138-3df5-4c40-8417-25f8fa0ca044",
 CellID->189075612],
Cell[135886, 2837, 28680, 560, 159, "Output",ExpressionUUID->"e356fca4-8431-4ac3-9c58-b1cee0c9ba62",
 CellID->270778028]
}, Open  ]]
}, Open  ]],
Cell[164593, 3401, 755, 14, 102, "DefinitionBox",ExpressionUUID->"35794b86-2060-40fc-896e-47af7fc56f03",
 CellID->669987316],
Cell[165351, 3417, 186, 2, 35, "Caption",ExpressionUUID->"a35358a6-c9c9-413f-a237-7d02a2dbe810",
 CellID->40274191],
Cell[165540, 3421, 418, 7, 47, "Text",ExpressionUUID->"9e60f475-5491-4a28-9358-3294397059be",
 CellID->217179338],
Cell[CellGroupData[{
Cell[165983, 3432, 198, 2, 44, "MathCaption",ExpressionUUID->"c8b74c4e-6cf8-42f0-8176-8ab50d7a12b7",
 CellID->266594283],
Cell[CellGroupData[{
Cell[166206, 3438, 497, 9, 32, "Input",ExpressionUUID->"76f318ec-44d3-4dd1-b8d9-9a6fe63c96b9",
 CellID->103365394],
Cell[166706, 3449, 21447, 413, 129, "Output",ExpressionUUID->"964d57b8-41a4-4bec-a052-0ff5d2eb5521",
 CellID->535232954]
}, Open  ]]
}, Open  ]],
Cell[188180, 3866, 539, 9, 66, "Text",ExpressionUUID->"bf7706d2-9d3d-433b-8b83-3d360f5447c8",
 CellID->260369650],
Cell[CellGroupData[{
Cell[188744, 3879, 211, 2, 44, "MathCaption",ExpressionUUID->"8eb17ec5-6227-4012-b603-3f5cef113eb6",
 CellID->24798626],
Cell[188958, 3883, 408, 9, 32, "Input",ExpressionUUID->"f0120d2a-b987-4f4a-8b10-b08fe03a1f60",
 CellID->169988763],
Cell[189369, 3894, 22565, 374, 296, "Input",ExpressionUUID->"57de451c-f536-4b8f-9aa5-8117447916b3",
 CellID->48114742]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211983, 4274, 191, 2, 53, "Section",ExpressionUUID->"8a07fb13-3076-46b1-8c34-f6a244b68bab",
 CellID->19141817],
Cell[CellGroupData[{
Cell[212199, 4280, 180, 2, 46, "Subsection",ExpressionUUID->"1601299a-2a57-43f6-9322-ea2f0b33539e",
 CellID->354439910],
Cell[212382, 4284, 499, 8, 66, "Text",ExpressionUUID->"512bc3ab-3479-4271-8906-8f6f10b7d19d",
 CellID->364035884],
Cell[CellGroupData[{
Cell[212906, 4296, 329, 6, 63, "MathCaption",ExpressionUUID->"8caa5204-c48d-4ea3-bd67-7372e8fc852b",
 CellID->207531235],
Cell[CellGroupData[{
Cell[213260, 4306, 530, 10, 32, "Input",ExpressionUUID->"6c1b5207-b0da-4ab8-a873-f549964554a0",
 CellID->802518388],
Cell[213793, 4318, 24863, 484, 129, "Output",ExpressionUUID->"f6f4f777-e905-4dfc-897f-4fa660644390",
 CellID->347181638]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[238705, 4808, 548, 11, 68, "MathCaption",ExpressionUUID->"318353a9-f8c8-49d8-8ab1-7dabec5b51a8",
 CellID->691295671],
Cell[CellGroupData[{
Cell[239278, 4823, 446, 11, 32, "Input",ExpressionUUID->"549464cb-5345-47a7-a794-7b5399f57741",
 CellID->38944675],
Cell[239727, 4836, 2232, 57, 31, "Output",ExpressionUUID->"030f9839-bf6b-4a82-8f03-027b8b27c66e",
 CellID->451021556]
}, Open  ]],
Cell[CellGroupData[{
Cell[241996, 4898, 524, 12, 32, "Input",ExpressionUUID->"6e6fc958-a6fa-4dff-a946-1541c48935ae",
 CellID->546461476],
Cell[242523, 4912, 2489, 61, 31, "Output",ExpressionUUID->"0f8ac011-7c66-4b48-a8a7-42a260900e31",
 CellID->92485203]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[245061, 4979, 401, 7, 68, "MathCaption",ExpressionUUID->"dde652cb-f1cc-49f4-9256-2759450d7b3f",
 CellID->149408332],
Cell[CellGroupData[{
Cell[245487, 4990, 420, 10, 32, "Input",ExpressionUUID->"e21264dd-29e5-4a29-9766-950b406f6f1b",
 CellID->23523617],
Cell[245910, 5002, 188, 4, 31, "Output",ExpressionUUID->"1a0d52de-c5e4-47b4-9446-b6a9e03fb29d",
 CellID->130095501]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246159, 5013, 226, 3, 46, "Subsection",ExpressionUUID->"4723685c-7d24-4e8c-93d4-028e703288e2",
 CellID->258973364],
Cell[CellGroupData[{
Cell[246410, 5020, 542, 14, 68, "MathCaption",ExpressionUUID->"10a76afc-3582-412c-acbc-4f0532c50b1e",
 CellID->19164079],
Cell[CellGroupData[{
Cell[246977, 5038, 464, 12, 32, "Input",ExpressionUUID->"14e8a796-7c97-4732-a704-bfe90a7c190d",
 CellID->82274386],
Cell[247444, 5052, 273, 6, 67, "Output",ExpressionUUID->"2c2957d5-5f37-4106-8e9e-1bf86b474959",
 CellID->538522182]
}, Open  ]]
}, Open  ]],
Cell[247744, 5062, 613, 10, 66, "Text",ExpressionUUID->"9f746a53-cebf-452f-b263-451465cff723",
 CellID->54711701],
Cell[CellGroupData[{
Cell[248382, 5076, 270, 3, 44, "MathCaption",ExpressionUUID->"04b666f8-6d39-4a45-8ded-18d2adac8e58",
 CellID->69472301],
Cell[CellGroupData[{
Cell[248677, 5083, 381, 8, 32, "Input",ExpressionUUID->"dace133e-817a-41b8-bb20-e1ccf85589ec",
 CellID->205641708],
Cell[249061, 5093, 27668, 545, 157, "Output",ExpressionUUID->"0b0ecf9a-b2b9-4151-9640-950b9e6c5f9b",
 CellID->532459386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[276778, 5644, 503, 11, 68, "MathCaption",ExpressionUUID->"e1c5c5e0-3eb9-4d12-8777-6012a629288e",
 CellID->74318702],
Cell[CellGroupData[{
Cell[277306, 5659, 447, 11, 32, "Input",ExpressionUUID->"0133e313-d1ee-4aee-ac28-4a950d968e0a",
 CellID->433620215],
Cell[277756, 5672, 475, 12, 31, "Output",ExpressionUUID->"46d2e406-b91a-461e-9924-b142ad6913ee",
 CellID->161149575]
}, Open  ]],
Cell[CellGroupData[{
Cell[278268, 5689, 572, 12, 32, "Input",ExpressionUUID->"4245efc2-da22-4446-9424-210b528bfee9",
 CellID->98308474],
Cell[278843, 5703, 656, 17, 31, "Output",ExpressionUUID->"7d20ef57-ed0c-433f-939c-499bcdac4080",
 CellID->54566311]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279560, 5727, 283, 4, 46, "Subsection",ExpressionUUID->"48f75e18-3d09-44c8-a061-82cc445374be",
 CellID->370300816],
Cell[CellGroupData[{
Cell[279868, 5735, 570, 12, 68, "MathCaption",ExpressionUUID->"5f2461b7-e97a-4391-82e4-5ce0211dbe21",
 CellID->348727091],
Cell[CellGroupData[{
Cell[280463, 5751, 512, 13, 32, "Input",ExpressionUUID->"34aca79b-a006-4f1c-8a09-b6f6e34f9f7e",
 CellID->633565613],
Cell[280978, 5766, 320, 7, 45, "Output",ExpressionUUID->"45038eb5-8c49-4d8a-97aa-68d76a2bba0d",
 CellID->41238662]
}, Open  ]]
}, Open  ]],
Cell[281325, 5777, 716, 11, 66, "Text",ExpressionUUID->"ab5dfa72-87b8-477e-a6af-2e57edd08b2c",
 CellID->75578758],
Cell[CellGroupData[{
Cell[282066, 5792, 226, 3, 44, "MathCaption",ExpressionUUID->"49333bce-adfd-441b-9dfd-1757e1e9c1be",
 CellID->542365653],
Cell[CellGroupData[{
Cell[282317, 5799, 428, 9, 32, "Input",ExpressionUUID->"dc69e77a-626a-410d-9a68-aa180c905928",
 CellID->411302082],
Cell[282748, 5810, 25864, 507, 159, "Output",ExpressionUUID->"d8ff91be-4d2f-401e-a784-a09b57792189",
 CellID->162579113]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308661, 6323, 504, 11, 68, "MathCaption",ExpressionUUID->"a68d77db-eabc-4507-8035-f3d0d441e47a",
 CellID->405165279],
Cell[CellGroupData[{
Cell[309190, 6338, 573, 12, 32, "Input",ExpressionUUID->"8af05fff-71a0-4d45-a338-49c70bba151b",
 CellID->184746180],
Cell[309766, 6352, 614, 15, 31, "Output",ExpressionUUID->"95b0fdcd-1578-4abc-a0fd-f5983d556dcc",
 CellID->284330788]
}, Open  ]]
}, Open  ]],
Cell[310407, 6371, 652, 20, 47, "Text",ExpressionUUID->"9275df75-74aa-4e1c-a3a2-cd4725ccc850",
 CellID->539727440]
}, Open  ]],
Cell[311074, 6394, 191, 2, 46, "Subsection",ExpressionUUID->"68a61e06-6c12-4227-b501-526c258ae0cb",
 CellID->316215944]
}, Open  ]],
Cell[CellGroupData[{
Cell[311302, 6401, 120, 1, 88, "TutorialMoreAboutSection",ExpressionUUID->"e781eb13-9253-46f5-a89a-71d58b15b174",
 CellID->23220180],
Cell[311425, 6404, 267, 4, 26, "TutorialMoreAbout",ExpressionUUID->"5bbbc34f-38be-4751-9253-e6cb4e7a204d",
 CellID->1567025153]
}, Open  ]],
Cell[CellGroupData[{
Cell[311729, 6413, 127, 1, 88, "RelatedTutorialsSection",ExpressionUUID->"d415174c-bc80-40cb-9d4e-b7dc847beac6",
 CellID->415694126],
Cell[311859, 6416, 107, 1, 26, "RelatedTutorials",ExpressionUUID->"29d4ac88-d001-45d4-b972-b0b02c76419c",
 CellID->806871991]
}, Open  ]],
Cell[CellGroupData[{
Cell[312003, 6422, 153, 1, 88, "TutorialRelatedLinksSection",ExpressionUUID->"d00bfb2d-480d-4a80-8d32-cb1979e4a798",
 CellID->415694148],
Cell[312159, 6425, 111, 1, 26, "TutorialRelatedLinks",ExpressionUUID->"db2f6442-c93b-4656-8443-7d42dbcedff1",
 CellID->415694149]
}, Open  ]]
}, Open  ]]
}
]
*)


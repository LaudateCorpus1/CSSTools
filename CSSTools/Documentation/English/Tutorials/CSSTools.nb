(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    674828,      13575]
NotebookOptionsPosition[    648571,      13007]
NotebookOutlinePosition[    648991,      13023]
CellTagsIndexPosition[    648948,      13020]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"486157d1-eb89-4ba2-9925-26bbcfdab4bf"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"d7a697a3-197b-4843-bc9e-8358df558c4b"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"0198be3b-f65c-40ae-a084-378c9ca9ec32"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"ee456c63-f64e-4996-9777-ce9419444c95"]
}], "History",
 CellID->1247902091,ExpressionUUID->"556fa402-2c77-4a24-a370-5cb7a61adceb"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"ddd71c5d-9749-40ff-8f70-c36e360a20a5"],

Cell["Tutorial", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"6954bea3-1515-43f7-8e5c-72573c1793f7"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"43deaff8-d954-4d2f-803a-06c22082f272"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"76c1083d-999f-426b-8e36-8a95d6b6a8f8"],

Cell["CSSTools/tutorial/CSSWorkflow", "Categorization",
 CellLabel->"URI",ExpressionUUID->"31ea085a-f8b2-4985-857f-1aaa445de6f0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1427428552,ExpressionUUID->"9b787d58-885f-4ebd-a7fe-2f4e86f445e1"],

Cell["XXXX", "Keywords",
 CellID->1251852827,ExpressionUUID->"d6a64ed8-1d45-4ce5-ac30-f1b2b416b04a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"7c7b6e67-c5dd-4052-b113-99197990e551"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->218895918,ExpressionUUID->"31be05ff-9b8a-4f38-ab1b-f7766c4b0ad4"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"56e30e92-6375-477a-9fb9-b0c60715bc3e"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->795871300,ExpressionUUID->"450f56b4-dae6-44bb-8d7b-c870e4977a07"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->199739161,ExpressionUUID->"958186ca-32f2-486a-83ac-5886c8f72aa6"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->40625308,ExpressionUUID->"7a844128-e591-4fa9-a6df-8998d4270ba6"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->357121918,ExpressionUUID->"fdcddd1b-4f9a-49b0-a18e-5cad8b234290"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->35949532,ExpressionUUID->"221221ba-93e5-40c7-a846-39fb3939ebc0"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->929432370,ExpressionUUID->"35d4e128-14ef-433e-83ec-119f78926fe3"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"bdee46af-6b62-4dcc-a36a-bf573d70b9d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["CSS Tools Package", "Title",
 CellChangeTimes->{{3.7616666740015116`*^9, 3.7616666759233794`*^9}},
 CellID->509267359,ExpressionUUID->"66be0c7f-129c-4236-8284-4c50587b284a"],

Cell["\<\
Cascading Style Sheets (CSS) is a stylesheet language used for describing the \
presentation of a document written in markup language like HTML and XML. \
Mathematica also uses stylesheets to describe the styling of notebooks. This \
package provides tools for importing and processing CSS to be used within \
Mathematica's stylesheet system.\
\>", "Text",
 CellChangeTimes->{
  3.761654718522955*^9, {3.7616718601371336`*^9, 3.7616718785756655`*^9}, {
   3.7616719326663513`*^9, 3.761672139013793*^9}, {3.7616751653593745`*^9, 
   3.761675186916433*^9}, {3.7618262488850574`*^9, 3.7618262501048307`*^9}, {
   3.7618265632066393`*^9, 3.761826575069724*^9}},
 CellID->1534169418,ExpressionUUID->"58cf0cf3-5168-465c-a524-35cb5b1da76e"],

Cell[CellGroupData[{

Cell["This loads the package :", "MathCaption",
 CellChangeTimes->{{3.761654741549126*^9, 3.7616547533303194`*^9}},
 CellID->310445284,ExpressionUUID->"6c5f91a0-83cf-46d8-a6f0-c7f574fac3cc"],

Cell[BoxData[
 RowBox[{"<<", "CSSTools`"}]], "Input",
 CellChangeTimes->{{3.761654754908375*^9, 3.7616547575021763`*^9}},
 CellLabel->"In[10]:=",
 CellID->575452366,ExpressionUUID->"6b966142-09bc-409c-8088-88712128147f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction and Comparisons between CSS and Wolfram Desktop", "Section",
 CellChangeTimes->{{3.761826496384553*^9, 3.7618265156324673`*^9}},
 CellID->185646103,ExpressionUUID->"27fce8ca-96a5-4e8f-8893-f65ca438ca15"],

Cell["\<\
There are differences between the two specifications (more than Wolfram \
Desktop uses the spelling \"stylesheet\" instead of \"style sheet\"). Even \
so, there is a lot in common once translation is done between the two \
notations. \
\>", "Text",
 CellChangeTimes->{
  3.7618265660635796`*^9, {3.761826602073657*^9, 3.761826602620202*^9}, {
   3.761827761121853*^9, 3.7618277676259923`*^9}, {3.761827937874115*^9, 
   3.761827965951742*^9}},
 CellID->111578108,ExpressionUUID->"fd1a4aea-e844-4e03-a5fb-e3818110f564"],

Cell[TextData[{
 "It is beyond the scope of this tutorial to provide explanations for every \
difference between the CSS and Wolfram Desktop (WD) stylesheet \
specifications. Please refer to the WD ",
 ButtonBox["Stylesheets guide page",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Stylesheets"],
 " and tutorial ",
 ButtonBox["\"Working with Stylesheets\[CloseCurlyDoubleQuote]",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/WorkingWithStylesheets"],
 " for more details on the WD system, or the ",
 ButtonBox["W3C learning resource",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.w3.org/Style/CSS/learning"], None}],
 " for details with CSS."
}], "Text",
 CellChangeTimes->{{3.761828000335053*^9, 3.7618281290993567`*^9}, {
  3.7618286584328856`*^9, 3.761828661502113*^9}, {3.761828725095251*^9, 
  3.7618287253032255`*^9}, {3.761828814368394*^9, 3.761828815066497*^9}, {
  3.761828862111229*^9, 3.761828866811775*^9}, {3.7618289031494503`*^9, 
  3.7618289773594913`*^9}, {3.7618302763165884`*^9, 3.7618303033164606`*^9}},
 CellID->72334175,ExpressionUUID->"a75fc352-5150-4177-b01c-2148207806cc"],

Cell[CellGroupData[{

Cell["Basic Syntax", "Subsection",
 CellChangeTimes->{{3.7618289894639463`*^9, 3.7618289912197704`*^9}},
 CellID->492661331,ExpressionUUID->"10f8fcb6-a74f-4040-8260-1718748265f8"],

Cell[BoxData[GridBox[{
   {Cell["CSS", "TableHeader",ExpressionUUID->
     "e0033a9a-2732-46b0-beed-cf3c2910f1b4"], Cell[
    "WD", "TableHeader",ExpressionUUID->
     "a2bd2c64-23f2-4d79-85e8-47c8d77af0ac"]},
   {
    RowBox[{"selector", " ", 
     RowBox[{"(", 
      RowBox[{"e", ".", "g", ".", " ", "h1"}], ")"}]}], Cell[
    "named style (e.g. \"Section\")", "TableText",ExpressionUUID->
     "92d81a17-a5f0-4180-8ae7-7f32d340c930"]},
   {
    RowBox[{"declaration", " ", 
     RowBox[{"(", 
      RowBox[{"property", ":", "value"}], ")"}]}], Cell[
    "option (name \[Rule] value)", "TableText",ExpressionUUID->
     "82ec2d00-7cac-438e-b318-0cd8436d0cc0"]},
   {
    RowBox[{"rule", " ", 
     RowBox[{"(", 
      RowBox[{"h1", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox[
           StyleBox["p", "TI"], 
           StyleBox["1", "TR"]], ":", 
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["1", "TR"]]}], ";", 
         RowBox[{
          SubscriptBox[
           StyleBox["p", "TI"], 
           StyleBox["2", "TR"]], ":", 
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["2", "TR"]]}], ";", 
         StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], ")"}]}], Cell[TextData[{
     "style definition Cell[StyleData[\"Section\"], ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula",ExpressionUUID->
      "a7e68fdc-828d-4424-aa9c-b507571b43a2"],
     "\[Rule]",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["v", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula",ExpressionUUID->
      "dea906ae-2494-416f-b8a5-8bc540a06cf3"],
     ", ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula",ExpressionUUID->
      "876b056f-6e9e-445c-a61b-4c163f7afe40"],
     "\[Rule]",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["v", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula",ExpressionUUID->
      "3a1a67ed-1a96-4313-b4ec-27727947d51d"],
     ", ",
     Cell[BoxData[
      StyleBox["\[Ellipsis]", "TR"]], "InlineFormula",ExpressionUUID->
      "6121c4a0-d398-42eb-9e4b-419cea6d249d"],
     "]"
    }], "TableText",ExpressionUUID->"747c9269-7e76-40ab-81f4-11c5e802d449"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.76182666491722*^9, 3.761826736155784*^9}, {
   3.7618268449687357`*^9, 3.7618268963125896`*^9}, {3.761826953972291*^9, 
   3.7618270908924484`*^9}, {3.761827200939848*^9, 3.76182721049039*^9}, 
   3.761827546868442*^9, {3.7618276062174454`*^9, 3.7618276088075805`*^9}, {
   3.7618290267227745`*^9, 3.7618290432408886`*^9}, {3.7618291475586905`*^9, 
   3.7618292597392197`*^9}, {3.7618293353165417`*^9, 
   3.7618293580891957`*^9}, {3.7618330890488615`*^9, 3.7618330910483336`*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->505092195,ExpressionUUID->"67b6e504-933b-4bc0-a0f4-74ea91e53cd8"],

Cell["Comparison of stylesheet notation.", "Caption",
 CellChangeTimes->{{3.761827221611499*^9, 3.7618272269594674`*^9}},
 CellID->933228592,ExpressionUUID->"faed14ab-59f9-4260-a0ed-166fba67dd1b"],

Cell[TextData[{
 "CSS styles are called declarations. They consist of a property name and a \
value separated by a colon. A group of declarations is a declaration block \
where multiple declarations are delimited by semicolons. A selector indicates \
the target element to be styled by the corresponding declarations.\nWD styles \
are given as options using ",
 ButtonBox["Rule",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Rule"],
 " syntax. They consist of an option name and a value separated by \
\"\[Rule]\" where multiple options are delimited by commas. Within a WD \
stylesheet, option sequences are grouped into ",
 ButtonBox["StyleData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StyleData"],
 " cells."
}], "Text",
 CellChangeTimes->{{3.7618272448790255`*^9, 3.761827528849799*^9}, {
  3.7618294235113583`*^9, 3.761829515808278*^9}, {3.7618295506666565`*^9, 
  3.7618295603706856`*^9}, {3.7618295934172087`*^9, 3.761829625468398*^9}, {
  3.761837428324377*^9, 3.7618374524543824`*^9}},
 CellID->771639886,ExpressionUUID->"7d78e86e-edc3-497e-91d2-3b72ed1df102"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS Inheritance", "Subsection",
 CellChangeTimes->{{3.7618296982222424`*^9, 3.7618296994355316`*^9}, {
  3.7618297542203474`*^9, 3.7618297547176867`*^9}},
 CellID->27852929,ExpressionUUID->"c7682611-d8ca-4032-b5b3-d1c04d56dffd"],

Cell["\<\
Multiple selectors can target the same element. In that case the declarations \
merge via the following cascading order, with later origins overriding \
earlier ones. \
\>", "Text",
 CellChangeTimes->{{3.761829773743368*^9, 3.7618297783771667`*^9}, {
  3.7618312512442603`*^9, 3.7618312629423046`*^9}},
 CellID->222985747,ExpressionUUID->"88ff5561-8eea-4f7f-a8a1-eed43706ddfc"],

Cell[BoxData[GridBox[{
   {Cell["Origin", "TableHeader",ExpressionUUID->
     "217ad8df-02ca-4090-ab6c-fe43f83380c0"], Cell[
    "Example", "TableHeader",ExpressionUUID->
     "9099666f-1aa8-455b-a9dd-0a0a513c82e5"]},
   {
    RowBox[{"1.", " ", "user", " ", "agent", " ", "declarations"}], Cell[
    "web browser's default styles", "TableText",ExpressionUUID->
     "f4730cf6-8163-4719-903b-789313f2994c"]},
   {
    RowBox[{"2.", " ", "user", " ", "normal", " ", "declarations"}], Cell[
    "web browser's user preferences", "TableText",ExpressionUUID->
     "2189d076-c8b1-49af-8226-5a00fd1d631d"]},
   {
    RowBox[{"3.", " ", "author", " ", "normal", " ", "declarations"}], Cell[
    "HTML document's embedded styles", "TableText",ExpressionUUID->
     "17d00a74-bc44-4c5c-ac69-0c707a8b4e02"]},
   {
    RowBox[{"4.", " ", "author", " ", "important", " ", "declarations"}], 
    Cell["HTML document's embedded important styles", "TableText",
     ExpressionUUID->"a7bb1909-d69a-4c1b-80f4-7946ef747703"]},
   {
    RowBox[{"5.", " ", "user", " ", "important", " ", "declarations"}], Cell[
    "web browser's user preference overrides", "TableText",ExpressionUUID->
     "f99bb5e2-6484-44e6-925e-ba860080d166"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.761829819104581*^9, 3.7618299580377645`*^9}, {
  3.761832111843774*^9, 3.7618321253401413`*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->200218437,ExpressionUUID->"97a1efd9-6db0-4b17-af87-267ca9f0709c"],

Cell["Summary of CSS cascade order.", "Caption",
 CellChangeTimes->{{3.761829964619091*^9, 3.76182996894998*^9}},
 CellID->88591569,ExpressionUUID->"b73fe078-6f09-4c7c-9644-bcd9f8c757bb"],

Cell["\<\
The user agent is the application used to view the document content. For web \
content a web browser is used. For notebook content Wolfram Desktop is used. \
\>", "Text",
 CellChangeTimes->{{3.761830864922555*^9, 3.7618309261406355`*^9}},
 CellID->51822448,ExpressionUUID->"1029939c-6f27-4ae2-9929-887cc3ff1e7a"],

Cell[TextData[{
 "The rules are sorted by origin (1-5) and specificity of selector with \
higher specificity overriding lower. See the ",
 ButtonBox["Selector",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/Selector"],
 " documentation to learn more about specificity. If two declarations have \
the same weight (important/normal), origin and specificity, the latter \
specified wins."
}], "Text",
 CellChangeTimes->{{3.761830071088028*^9, 3.761830122274662*^9}, {
  3.7618307040506415`*^9, 3.761830744806033*^9}},
 CellID->271229263,ExpressionUUID->"e75cd706-2aa6-4a12-b5e3-fd7f0d4a1ba8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WD Inheritance", "Subsection",
 CellChangeTimes->{{3.761830960001148*^9, 3.7618309626894817`*^9}},
 CellID->305221324,ExpressionUUID->"4d71f6ac-ab32-405b-81ab-cabc314db410"],

Cell[TextData[{
 "Named styles can appear in multiple stylesheets or used directly in a \
notebook, cell, or box (via the ",
 ButtonBox["Style",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Style"],
 " wrapper). In that case the options merge via the following cascading \
order, with later origins overriding earlier ones."
}], "Text",
 CellChangeTimes->{{3.7618309773345675`*^9, 3.761830989438495*^9}, {
  3.761831269908634*^9, 3.7618312705743437`*^9}},
 CellID->555909034,ExpressionUUID->"f8bec49d-defc-43d8-8210-438837c82b0f"],

Cell[BoxData[GridBox[{
   {Cell["Origin", "TableHeader",ExpressionUUID->
     "d387cca7-720b-4006-9ffd-442d739fa17b"], Cell[
    "Example", "TableHeader",ExpressionUUID->
     "22123cd2-063a-4af0-b79b-5448d8f14cb8"]},
   {
    RowBox[{"1.", " ", 
     ButtonBox["$FrontEnd",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEnd"]}], Cell[TextData[{
     "see results for Options[",
     ButtonBox["$FrontEnd",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEnd"],
     "]"
    }], "TableText",ExpressionUUID->"4876a9f4-9d9c-4326-b5b9-07329a1fe932"]},
   {
    RowBox[{"2.", " ", 
     ButtonBox["$FrontEndSession",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEndSession"]}], Cell[TextData[Cell[
    BoxData[Cell[TextData[{
      "see results for Options[",
      ButtonBox["$FrontEndSession",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/$FrontEndSession"],
      "]"
     }], "TableText",ExpressionUUID->"0da43b78-60f4-4e9e-a8f8-b84bd3d3be3f"]],
     CellChangeTimes->{{3.7618310382682486`*^9, 3.7618312156173525`*^9}, {
      3.7618320087359943`*^9, 3.7618320133658037`*^9}, {
      3.7618323380873713`*^9, 3.761832387958178*^9}, {3.761833172494628*^9, 
      3.7618331977657814`*^9}, {3.7619996808337975`*^9, 3.761999684810514*^9}},
     GridBoxOptions->{BaseStyle->"TableText",
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
     ExpressionUUID->"692aa476-b7bc-4cdd-8c55-aeccab063c18"]], "TableText",
     ExpressionUUID->"06652104-4cab-478c-bb46-3a02bbfc14eb"]},
   {
    RowBox[{"3.", " ", 
     RowBox[{"Core", ".", "nb"}]}], Cell[TextData[{
     "found within ",
     ButtonBox["$InstallationDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$InstallationDirectory"]
    }], "TableText",ExpressionUUID->"118b623c-c3d5-4a37-9d93-396bbad22eeb"]},
   {
    RowBox[{"4.", " ", 
     RowBox[{"Default", ".", "nb"}]}], Cell[TextData[{
     "found within ",
     ButtonBox["$InstallationDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$InstallationDirectory"]
    }], "TableText",ExpressionUUID->"cb7bbb40-3f84-4767-8e4d-9905e712b5e8"]},
   {
    RowBox[{"5.", " ", "Private", " ", "stylesheet", " ", 
     RowBox[{"(", 
      RowBox[{"if", " ", "present"}], ")"}]}], Cell[
    "XXXX", "TableText",ExpressionUUID->
     "177210e5-fe80-404d-8463-7912ed9e7bbf"]},
   {
    RowBox[{
    "6.", " ", "stylesheet", " ", "\"\<Notebook\>\"", " ", "local", " ", 
     "style"}], Cell[TextData[{
     "Cell[StyleData[\"Notebook\", ",
     Cell[BoxData[
      StyleBox["\[Ellipsis]", "TR"]], "InlineFormula",ExpressionUUID->
      "ee1730cf-aa2b-4b46-b8b9-fda0506f9ae3"],
     "]]"
    }], "TableText",ExpressionUUID->"f462fdad-0a13-403d-b7f5-7d2590296e92"]},
   {
    RowBox[{"7.", " ", "stylesheet", " ", "Style", " ", "environment"}], Cell[
    "\"Working\" or \"Printout\" modes", "TableText",ExpressionUUID->
     "12c736b4-7837-4971-83aa-b5f4bc327a3e"]},
   {
    RowBox[{
     RowBox[{"8.", " ", 
      ButtonBox["Notebook",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Notebook"]}], "-", 
     RowBox[{"level", " ", "option"}]}], Cell[TextData[{
     "embedded option like ",
     ButtonBox["WindowSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/WindowSize"]
    }], "TableText",ExpressionUUID->"a69aa672-2962-4e2e-bf11-fbd941f8ab88"]},
   {
    RowBox[{
     RowBox[{"9.", " ", 
      ButtonBox["Cell",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Cell"]}], "-", 
     RowBox[{"level", " ", "options"}]}], Cell[TextData[{
     "embedded option like ",
     ButtonBox["CellFrame",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CellFrame"]
    }], "TableText",ExpressionUUID->"57c1945e-a9cd-47d8-b2f2-d890b6ee24ad"]},
   {
    RowBox[{
     RowBox[{"10.", " ", "Box"}], "-", 
     RowBox[{"level", " ", "options"}]}], Cell[TextData[{
     "embedded option like ",
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"]
    }], "TableText",ExpressionUUID->"a8cad331-5f07-477d-96c7-0755ea282095"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.7618310382682486`*^9, 3.7618312156173525`*^9}, {
  3.7618320087359943`*^9, 3.7618320133658037`*^9}, {3.7618323380873713`*^9, 
  3.761832387958178*^9}, {3.761833172494628*^9, 3.7618331977657814`*^9}, {
  3.7619996808337975`*^9, 3.7619997043423204`*^9}, {3.762011875107215*^9, 
  3.762011921101345*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->792685257,ExpressionUUID->"87b2bf10-6ed4-424b-85ba-b29d97d2f3bb"],

Cell["Summary of WD cascade order.", "Caption",
 CellChangeTimes->{{3.761831228773687*^9, 3.761831233016053*^9}},
 CellID->264816302,ExpressionUUID->"3ef0af3d-b25e-43c1-b943-11032c1ecd35"],

Cell[TextData[{
 "More details on WD inheritance can be found in the tutorial ",
 ButtonBox["Styles and the Inheritance of Option Settings",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/StylesAndTheInheritanceOfOptionSettings"],
 ". "
}], "Text",
 CellChangeTimes->{{3.761832224866727*^9, 3.7618322456198764`*^9}, {
  3.7618322890883703`*^9, 3.761832314968711*^9}, {3.761832405457088*^9, 
  3.7618324054697247`*^9}, {3.7618325031331515`*^9, 3.761832520904149*^9}, {
  3.761832581026348*^9, 3.7618326003073187`*^9}, {3.7618326340068502`*^9, 
  3.761832644644534*^9}},
 CellID->103579448,ExpressionUUID->"5c74b4fe-8f36-40d6-9d9f-e4b5ce712b93"],

Cell["\<\
WD stylesheets are typically found in the following locations:\
\>", "Text",
 CellChangeTimes->{{3.761832224866727*^9, 3.7618322456198764`*^9}, {
  3.7618322890883703`*^9, 3.761832314968711*^9}, {3.761832405457088*^9, 
  3.7618324054697247`*^9}, {3.7618325031331515`*^9, 3.761832520904149*^9}, {
  3.761832581026348*^9, 3.7618326003073187`*^9}, {3.7618326340068502`*^9, 
  3.761832634154974*^9}},
 CellID->695697506,ExpressionUUID->"7a8903c0-bfba-4da6-8b1b-6a60c7a777f8"],

Cell["\<\
\t$InstallationDirectory/SystemFiles/FrontEnd/StyleSheets \[LineSeparator]\t\
$BaseDirectory/SystemFiles/FrontEnd/StyleSheets \[LineSeparator]\t\
$UserBaseDirectory/SystemFiles/FrontEnd/StyleSheets \
\>", "Text",
 CellChangeTimes->{{3.761832224866727*^9, 3.7618322456198764`*^9}, {
   3.7618322890883703`*^9, 3.761832314968711*^9}, 3.761832406815522*^9},
 CellID->553560813,ExpressionUUID->"63898dc5-9c01-4330-b769-186998a8426d"],

Cell[TextData[{
 "Moreover, any named styles within stylesheets found in ",
 Cell[BoxData[
  ButtonBox["$InstallationDirectory",
   BaseStyle->"Link",
   ButtonFunction:>SystemOpen[
     FileNameJoin[{$InstallationDirectory, "SystemFiles", "FrontEnd", 
       "StyleSheets"}]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "InlineFormula",ExpressionUUID->
  "5b8b32f9-d3b4-4e05-a612-3a3b1ade5580"],
 " can be overridden by named styles within stylesheet located in ",
 Cell[BoxData[
  ButtonBox["$BaseDirectory",
   BaseStyle->"Link",
   ButtonFunction:>SystemOpen[
     FileNameJoin[{$BaseDirectory, "SystemFiles", "FrontEnd", "StyleSheets"}]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "InlineFormula",ExpressionUUID->
  "d2b75d40-dd4c-4287-a237-d6f2959f631c"],
 " or ",
 Cell[BoxData[
  ButtonBox["$UserBaseDirectory",
   BaseStyle->"Link",
   ButtonFunction:>SystemOpen[
     FileNameJoin[{$UserBaseDirectory, "SystemFiles", "FrontEnd", 
       "StyleSheets"}]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "InlineFormula",ExpressionUUID->
  "e778d0ec-78af-4108-be19-eea43a1c960f"],
 " but only if the stylesheets have the same filename. These act like \
intermediary cascade steps between (1) and (2), and (3) and (4) where \
$BaseDirectory is checked before $UserBaseDirectory."
}], "Text",
 CellChangeTimes->{
  3.761831390379923*^9, 3.7618314499514093`*^9, {3.761831585107036*^9, 
   3.761831586597062*^9}, {3.7618316346790276`*^9, 3.7618317259053693`*^9}, 
   3.761831824795724*^9, {3.76183192784336*^9, 3.7618319451434307`*^9}, 
   3.7618319786814327`*^9, {3.761832048773266*^9, 3.7618320501857023`*^9}, {
   3.7618321902773337`*^9, 3.761832208724634*^9}},
 CellID->115198241,ExpressionUUID->"ac99ad5a-c92a-4eba-ad13-3ebade191425"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS vs WD Inheritance Origins", "Subsection",
 CellChangeTimes->{{3.761832430468773*^9, 3.761832435764142*^9}},
 CellID->12152049,ExpressionUUID->"9305eb8c-022d-4f49-8197-332309c7b25c"],

Cell["\<\
This comparison is one interpretation between CSS and WD inheritance. Numbers \
in parentheses refer to the numbers in the tables above for CSS and WD, \
respectively.\
\>", "Text",
 CellChangeTimes->{{3.7618324503687143`*^9, 3.7618324728569064`*^9}, {
  3.761832665004422*^9, 3.7618326711585493`*^9}, {3.761832712181576*^9, 
  3.761832733433381*^9}, {3.7619997830383515`*^9, 3.7619997866392097`*^9}},
 CellID->320649723,ExpressionUUID->"3158fcd9-6a76-4f64-b40a-88932ce43d01"],

Cell[BoxData[GridBox[{
   {Cell["CSS", "TableHeader",ExpressionUUID->
     "708504e6-e476-4c0b-9765-509e4849d091"], Cell[
    "WD", "TableHeader",ExpressionUUID->
     "eef6e5a8-7522-4724-97e5-b9f64c83da8c"]},
   {
    RowBox[{
     RowBox[{"(", "1", ")"}], " ", "user", " ", "agent", " ", 
     "declarations"}], Cell[TextData[{
     "(1-4) ",
     ButtonBox["$FrontEnd",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEnd"],
     "/",
     ButtonBox["$FrontEndSession",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEndSession"],
     "/Core.nb/Default.nb"
    }], "TableText",ExpressionUUID->"4acf17ee-f572-4393-a0f9-8d5416dcd58f"]},
   {
    RowBox[{
     RowBox[{"(", "2", ")"}], " ", "user", " ", "declarations"}], Cell[
    TextData[{
     ButtonBox["$BaseDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$BaseDirectory"],
     " and ",
     ButtonBox["$UserBaseDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$UserBaseDirectory"],
     " intermediary definitions"
    }], "TableText",ExpressionUUID->"2aee1e0e-8058-480b-98a9-7f419bf4fade"]},
   {
    RowBox[{
     RowBox[{"(", "3", ")"}], " ", "author", " ", "declarations"}], Cell[
    TextData[{
     "(5-10) Private Stylesheet, Notebook/Cell/Box options, ",
     ButtonBox["Style",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Style"]
    }], "TableText",ExpressionUUID->"8e26732e-9be9-4350-a533-18ae3c05e341"]},
   {
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", "-", "5"}], ")"}], " ", "important", " ", "styles"}], Cell[
    "Not available", "TableText",ExpressionUUID->
     "6189b1a7-256c-4332-98da-908ad6a5a833"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.761832680246313*^9, 3.761832709816661*^9}, {
  3.76183274235902*^9, 3.7618328797119484`*^9}, {3.76183324746795*^9, 
  3.7618332542362022`*^9}, {3.7619997441057005`*^9, 3.761999766958448*^9}, {
  3.7619998219870086`*^9, 3.7619998278821373`*^9}, {3.7619999675977564`*^9, 
  3.761999973272938*^9}, {3.76200001162176*^9, 3.7620000124485006`*^9}, {
  3.7620118115350375`*^9, 3.762011837248951*^9}},
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->392524317,ExpressionUUID->"34026ad2-a853-4646-be55-f0d0aa6ff1ee"],

Cell["Other interpretations can be made.", "Caption",
 CellChangeTimes->{{3.761833332885377*^9, 3.7618333379278097`*^9}},
 CellID->46612784,ExpressionUUID->"0eb282d9-f0bd-483f-82dd-7dff77f410be"],

Cell[TextData[{
 "The WD ",
 ButtonBox["Style",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Style"],
 " function is similar to a CSS inline style and is another instance of an \
author style declaration. WD does not have a feature like the CSS \
\"!important\" label."
}], "Text",
 CellChangeTimes->{{3.7619998384287567`*^9, 3.7619999315112305`*^9}, {
  3.7619999615646677`*^9, 3.762000000295375*^9}, {3.762000182407555*^9, 
  3.762000198077552*^9}},
 CellID->32504473,ExpressionUUID->"b433d696-d2f1-4cb8-b303-e79385146ddf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing CSS", "Section",
 CellChangeTimes->{{3.761654765267708*^9, 3.7616548046112556`*^9}},
 CellID->121087292,ExpressionUUID->"db63729e-1e5d-42ea-8be7-6f76ebc8f9ff"],

Cell[CellGroupData[{

Cell["This tutorial uses prepared examples found here:", "MathCaption",
 CellChangeTimes->{{3.7616708997723217`*^9, 3.7616709164242153`*^9}},
 CellID->836781195,ExpressionUUID->"045b02fb-135d-4e3c-b1f6-fd7b454d3fdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7616571310361433`*^9, 3.761657135745577*^9}, {
   3.7616572106657743`*^9, 3.761657214024938*^9}, {3.7616573046943483`*^9, 
   3.7616573076699123`*^9}, {3.7616574036349497`*^9, 
   3.7616574419198647`*^9}, {3.761657482946158*^9, 3.7616575198724394`*^9}, {
   3.7616576946445994`*^9, 3.7616576953815355`*^9}, {3.761657728329914*^9, 
   3.7616577451476483`*^9}, 3.761670718901634*^9},
 CellLabel->"In[13]:=",
 CellID->31754730,ExpressionUUID->"41c5b849-7e33-4381-966e-68d0206cc4f9"]
}, Open  ]],

Cell["\<\
Loading the package provides the \"CSS\" as a valid file type for Import.\
\>", "Text",
 CellChangeTimes->{{3.7616548179550095`*^9, 3.7616548514704733`*^9}},
 CellID->102370062,ExpressionUUID->"45443317-b154-4f73-b949-7a4ea538aecd"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"Import", "[", 
     RowBox[{
     "\[LeftGuillemet]filepath\[RightGuillemet]", ",", " ", "\"\<CSS\>\""}], 
     "]"}], Cell[
    "import CSS as a dataset with interpreted options", "TableText",
     ExpressionUUID->"d7758440-e576-46b7-8064-85e07bd44a48"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.761654899845172*^9, 3.7616549921416683`*^9}, {
  3.7617783135136757`*^9, 3.761778353668174*^9}},
 CellID->81978558,ExpressionUUID->"ece5c163-0f68-453a-b4ea-b52d8f33fc3a"],

Cell["Importing CSS.", "Caption",
 CellChangeTimes->{{3.761654911220153*^9, 3.761654914095144*^9}},
 CellID->123757612,ExpressionUUID->"b896e7ae-72bd-4854-96c3-c6d0d72fed10"],

Cell[CellGroupData[{

Cell["Import from a string.", "MathCaption",
 CellChangeTimes->{{3.7616722597248163`*^9, 3.7616722773843994`*^9}},
 CellID->226527354,ExpressionUUID->"67cd4ea0-81ae-4f94-b55c-0b16f9d59100"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red;}\>\"", ",", " ", "\"\<CSS\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.761671620354*^9, 3.761671645765486*^9}},
 CellLabel->"In[137]:=",
 CellID->681723581,ExpressionUUID->"8df01d96-31de-4992-938a-289df7a5e291"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[248787974], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[248787974]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627207920][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1627207920][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1627207920]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627207920][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {510., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7616716463472977`*^9},
 CellLabel->"Out[137]=",
 CellID->579775105,ExpressionUUID->"2731460f-be5e-45d5-8895-5031dfba61b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import from an external file.", "MathCaption",
 CellChangeTimes->{{3.761672235782218*^9, 3.76167225362871*^9}},
 CellID->154777042,ExpressionUUID->"31bf620d-cb23-4208-988a-68d7918f3679"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle2.css\>\""}], "}"}], 
    "]"}], ",", "\"\<CSS\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.76167117206133*^9, 3.761671184617924*^9}},
 CellLabel->"In[136]:=",
 CellID->58583108,ExpressionUUID->"5f14ce15-8798-4d79-b62a-ae304f6338ba"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1297949910], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1297949910]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".tooltip", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-style", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["italic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSlant", "\[Rule]", "Italic"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 60168545]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[60168545][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {622., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7616711858679037`*^9},
 CellLabel->"Out[136]=",
 CellID->13894359,ExpressionUUID->"f3e0d621-afc8-4015-8aeb-743292342f43"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "CSS rules can include conditions either from \"@media\" or \"@page\" \
keywords. \"@page\" indicates paged media that directly translates to the WD \
\"Printout\" ",
 ButtonBox["ScreenStyleEnvironment",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ScreenStyleEnvironment"],
 ". \"@media\" indicates a target media type such as a screen. No \
interpretation is done to media queries."
}], "Text",
 CellChangeTimes->{{3.7618442919165*^9, 3.761844369004503*^9}, {
  3.761844427644206*^9, 3.7618444565777397`*^9}, {3.7618444925656385`*^9, 
  3.7618444930500712`*^9}, {3.761844574409136*^9, 3.761844589123949*^9}, {
  3.7618450286289797`*^9, 3.761845030439797*^9}},
 CellID->745579111,ExpressionUUID->"4d91b273-40b2-4aad-a6f3-a924acf7ed9a"],

Cell[CellGroupData[{

Cell["Example of page filtering.", "MathCaption",
 CellChangeTimes->{{3.761844735565598*^9, 3.761844753952055*^9}},
 CellID->27523641,ExpressionUUID->"13419783-7208-4371-8033-cd7c6654c72f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<@page {font-family:monospace}}\>\"", ",", " ", "\"\<CSS\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.761844604179177*^9, 3.7618446320071115`*^9}, {
  3.7618446860188293`*^9, 3.761844710905572*^9}, {3.7618447584594088`*^9, 
  3.7618447756903934`*^9}, {3.7618449791368904`*^9, 3.7618449803713284`*^9}},
 CellLabel->"In[80]:=",
 CellID->313868854,ExpressionUUID->"277727ea-f36c-4328-9fbe-beb89c01b352"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                   "Value" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1913901389], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1913901389]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1012882173][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["@page", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"StyleData", "[", 
                    RowBox[{"All", ",", "\"Printout\""}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-family", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["monospace", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontFamily", "\[Rule]", "\"Source Code Pro\""}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1012882173][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1012882173]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1012882173][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {951., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761844714154805*^9, 3.761844776847556*^9, 
  3.7618449815054026`*^9},
 CellLabel->"Out[80]=",
 CellID->211352011,ExpressionUUID->"c96039e3-4acf-4ccb-ab81-670e9bb23f15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example of media filtering.", "MathCaption",
 CellChangeTimes->{{3.761844735565598*^9, 3.7618447461882544`*^9}},
 CellID->610584558,ExpressionUUID->"82712f09-cef4-4018-8e83-ab0b98b1117b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{
  "\"\<@media screen {h1 {color:red} h3 {color:green}}\>\"", ",", " ", 
   "\"\<CSS\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.761844604179177*^9, 3.7618446320071115`*^9}, {
  3.7618446860188293`*^9, 3.761844710905572*^9}},
 CellLabel->"In[69]:=",
 CellID->568946600,ExpressionUUID->"1696c732-bcbe-49a5-963b-87f7fc29a85e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 2, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[596204674], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[596204674]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[" screen ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[" screen ", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["green", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 483120968]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[483120968][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {526., {68.5, 75.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761844714154805*^9},
 CellLabel->"Out[69]=",
 CellID->636766901,ExpressionUUID->"22391901-814b-4907-ad20-5a586d410de2"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "CSS files can be nested. They can contain \"@import\" statements at the \
start of the file indicating that other CSS files should be imported first. \
Often the \"@import\" file locations are given relative to the current CSS \
file. In these cases it is best to have the ",
 ButtonBox["$Path",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/$Path"],
 " defined with these locations included, otherwise the nested CSS files \
won't be found."
}], "Text",
 CellChangeTimes->{{3.7616709507622333`*^9, 3.761671089357455*^9}, {
  3.7616723116987944`*^9, 3.76167231756699*^9}},
 CellID->410138926,ExpressionUUID->"8cf2765a-7072-49ac-bdb5-ef15e4d75fcb"],

Cell[CellGroupData[{

Cell["The file \"mystyle1.css\" imports from \"mystyle2.css\".", "MathCaption",
 CellChangeTimes->{{3.7616708248496685`*^9, 3.761670853994857*^9}, {
  3.7616723339679437`*^9, 3.761672349400183*^9}},
 CellID->397163078,ExpressionUUID->"a69c84c7-1e08-4147-bba4-7501a7e2f554"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$Path", "=", "cssExamplesDirectory"}], "}"}], ",", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle1.css\>\""}], "}"}], 
      "]"}], ",", "\"\<CSS\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616577060408716`*^9, 3.7616577224552555`*^9}, {
  3.7616667603604097`*^9, 3.761666770561006*^9}, {3.7616723537088304`*^9, 
  3.7616723553323526`*^9}},
 CellLabel->"In[170]:=",
 CellID->971740772,ExpressionUUID->"994deaf4-5f3b-4218-b57f-f2bb4201fac2"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"@import\"\>",
   "EchoLabel"], " ", "\<\"mystyle2.css\"\>"}]], "Echo",
 CellChangeTimes->{3.761674439307315*^9},
 CellID->189075612,ExpressionUUID->"8d5c2138-3df5-4c40-8417-25f8fa0ca044"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 2, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[46265907], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 2], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[46265907]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".tooltip", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-style", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["italic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSlant", "\[Rule]", "Italic"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".tooltip", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 978143668]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[978143668][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {622., {68.5, 75.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.761666754233695*^9, 3.7616667712484503`*^9}, 
   3.761666809925599*^9, 3.7616723572997293`*^9, 3.7616744394802637`*^9},
 CellLabel->"Out[170]=",
 CellID->270778028,ExpressionUUID->"e356fca4-8431-4ac3-9c58-b1cee0c9ba62"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"\"\<RawData\>\"", Cell[
    "import without interpreting the values", "TableText",ExpressionUUID->
     "ac2ba2e1-8894-43f7-a0e1-be3e1472cf4c"]},
   {"\"\<Interpreted\>\"", Cell[
    "(default) import and interpret values", "TableText",ExpressionUUID->
     "76f77381-308b-48c0-bc67-d3d731e4fed9"]},
   {"\"\<Stylesheet\>\"", Cell[
    "import directly to Mathematica stylesheet format", "TableText",
     ExpressionUUID->"ebe4e40e-6e1c-4ffb-a54b-f65d5d029bb9"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.7616727236657743`*^9, 3.761672737683405*^9}, {
  3.761672793970793*^9, 3.761672816511683*^9}, {3.761674132418581*^9, 
  3.761674143355081*^9}},
 CellID->669987316,ExpressionUUID->"35794b86-2060-40fc-896e-47af7fc56f03"],

Cell["Supported import types.", "Caption",
 CellChangeTimes->{{3.7616740513664894`*^9, 3.7616740628718014`*^9}},
 CellID->40274191,ExpressionUUID->"a35358a6-c9c9-413f-a237-7d02a2dbe810"],

Cell["\<\
Ignoring style interpretation can improve the speed of importing of large CSS \
files. Use \"RawData\" if the interpreted values are not needed. \
\>", "Text",
 CellChangeTimes->{{3.7616744900220523`*^9, 3.7616746125357714`*^9}, {
  3.761674653012766*^9, 3.7616746947163825`*^9}, {3.7617783692268844`*^9, 
  3.7617784126723986`*^9}},
 CellID->217179338,ExpressionUUID->"9e60f475-5491-4a28-9358-3294397059be"],

Cell[CellGroupData[{

Cell["Import without interpretation.", "MathCaption",
 CellChangeTimes->{{3.7616750395667562`*^9, 3.7616750632461586`*^9}},
 CellID->266594283,ExpressionUUID->"c8b74c4e-6cf8-42f0-8176-8ab50d7a12b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red}\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CSS\>\"", ",", "\"\<RawData\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761672534956728*^9, 3.761672552688184*^9}, {
  3.761672761499953*^9, 3.7616727629335003`*^9}, {3.761672830298361*^9, 
  3.7616728322567244`*^9}, {3.76167506560738*^9, 3.7616750668070154`*^9}},
 CellLabel->"In[171]:=",
 CellID->103365394,ExpressionUUID->"76f318ec-44d3-4dd1-b8d9-9a6fe63c96b9"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Struct[{"Important", "Property", "Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String]}], 1]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`]]]], 
                1, {All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2001279678], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Struct[{"Important", "Property", "Value"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String]}], 1]}], 1], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2001279678]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft}, {SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 833094412]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[833094412][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {372., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761672679996417*^9, 3.761672763507332*^9, 
  3.7616728341531267`*^9, 3.761672980387092*^9, 3.7616740198715563`*^9, 
  3.76167506830752*^9},
 CellLabel->"Out[171]=",
 CellID->535232954,ExpressionUUID->"964d57b8-41a4-4bec-a052-0ff5d2eb5521"]
}, Open  ]]
}, Open  ]],

Cell["\<\
A stylesheet has more meaning when applied to a document due to the CSS \
inheritance and style cascade.  However, the \"Stylesheet\" import element \
creates a Mathematica stylesheet directly and uses the selectors to label the \
Wolfram styles.\
\>", "Text",
 CellChangeTimes->{{3.7616744900220523`*^9, 3.7616746125357714`*^9}, {
   3.761674653012766*^9, 3.76167487209449*^9}, 3.7616750294150124`*^9, {
   3.7617784896859226`*^9, 3.76177854408043*^9}},
 CellID->260369650,ExpressionUUID->"bf7706d2-9d3d-433b-8b83-3d360f5447c8"],

Cell[CellGroupData[{

Cell["Import directly to a Mathematica stylesheet.", "MathCaption",
 CellChangeTimes->{{3.7616751328138075`*^9, 3.7616751399025517`*^9}},
 CellID->24798626,ExpressionUUID->"8eb17ec5-6227-4012-b603-3f5cef113eb6"],

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red}\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CSS\>\"", ",", "\"\<Stylesheet\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7616750792770147`*^9, 3.7616751127412543`*^9}, {
  3.7618376297842717`*^9, 3.761837630356642*^9}},
 CellLabel->"In[103]:=",
 CellID->169988763,ExpressionUUID->"f0120d2a-b987-4f4a-8b10-b08fe03a1f60"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3XuwZHdhH/gL+JGquCq2ATspewtjYGuT2lSCFVGacWWxWQdnK+GPJN7N
olLKMkLX3k0t7yoMOCUWvCALiRkwBgNmkBiH4Eh2pBG+jl27tiRHkTFCDOIh
mAFpBqSIh2bmzohBM6PH3V/36Xvv6Xse/Tuv7tP3fL71MR71PX1efbr7fO89
/evnvuLV/3L16SsrK6//G+F//uWvvPHnX/e6X3nTv/rh8B//66te/3/86quu
fOX/8qo3XPmrV77uklc8I9z47aetrPxv37eyMvr3++/4JQAAAAAAAHalDRER
ERERkV0dDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhE
RERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhE
RERERIYTDUhERERERIYTDUhERERERIaTJg3oaz+y0qkutldERERERIaceTSg
Z3/f/T/5Qw/81A8H4R/hPzUgERERERFZSObQgELrOf4zz/vGP/4HQfjHqARp
QCIiIiIisoi03IB+9Gn3//gPPPDcHwnCP8J/Bsf+7t95+F//s2+/6oog/CP8
Z3L7zik1IBERERER6ThtNqBQap759GPPe+aDP3dREP5x/7Oe8bVnPv0bP/v3
T17ztu8euikI/wj/+bVnPSP8aDTlz29O+cynZ0tQF9srIiIiIiJDTusN6Osv
/Olv/9tfeeTXX/3wy1/20Esv+caLX/itV7787NotFx74ahD+Ef4z3PjQS/c8
fOnLHnnTq8PE4S4akIiIiIgsRVYaZNHr3mEOH/7cL/zCS0+dWo+/S5g43CXc
sbu1yk3rV8E9+JJ/dOaGDz32qTvP/uknz3zihvX3XXvm9w9cOHLfk999NAj/
CP85uvETN5z9s0+GycLE4S6ughMRERGRpYgGlJvQZb7/B//GRS96UWQJCpOF
icNdwh27XrcdaX0khIf+6c+e/ZNDT3znW49/4/j5+77w2F1/ee6zn37y1Mnk
LuEf4T8fu+uO8KMwQZgsTBzuYiQEEREREVmK1Osyu74BbTWamBJUaeLW03oD
evCfXPLoH33iwv1Hz3/x3nNfOHz+K196/KGvP/W9s8ldwj+SZnTu84fDBGGy
MHG4y65oQGuro+N6da21GR7dv7fdGS5pCnfs0bXVvXuTlxN7KZvWD0gREREZ
RQMqSmSvWWz92WjegJ759Pt/7Psf+Im/eex5zzz+937i6y/86W/+8i+dXbsl
dJzv3fHnZ//8zx67+6/Of+Fz57/8xQtH7gvC7efv/ey5v/6v3/uLP/veX/55
+M8wcbhLuGO4e5hJmFWYYZhtfgNKOsHe/Ufz12jGj2slnGRHzrNHDShVDUbZ
2+4umbGjkx/mr3etR6hgxyY3h41bXV3d28/z/MmuqHL8tHgE7aYGFP80bD2j
BzFiwZGTjZ6c+9PPznD8ri1gq0REpEk0oJLMbDcLrz8bjRvQqP485299/R8+
96Ff3PvNf/MvvvOa1fUP7Dt3+O7zX/r8o//x4PoH9p/+6AdPf/R313/nulP7
rz61752n3nft6Y+8P9xy+oPvffSmj4/+GHT47nCXcMdw9zCTMKvRF6eGEjT/
BpScmey8c96pV9GUvWhAW2fdK6NqMGoH4XSr7dPgZFtz9/Tm8vN+WFaOZi1s
x526aLutJ/VYzFrR7UlrPFZzOiDnkvin4ZzWZfbDFznZOOnevrrdhJbtURIR
GXg0oPKUdJw+1J+N5g3ox3/w2POf/eBLLv7Oa391/X3XPvoff/+xO29//KFv
nP/Kl0LNOfmOf3fy2t88efVbH3nza77z+l/7zut+7ZE3vebkb7311LvfEf73
zMc+fOEr94WJw13CHcPdw0we/J8vPvaCZ9//t39w/g0o/s4FU/aiAW1Wk65/
rVxYgUpP+uvtorx7LUUBSu2MWVudmrL6ETSvA3Ie6csDu9Vqygts5GTbCdNP
PzePTjrRkj1OIiLDjgY0M7lNpyf1Z6N5A/rbP3jsBT/28L/6xTM3fOjcZ+++
8MBXn3jk209973sX7v/qmd//yMlr/u9T77nm1P7fOvnOq068/c0n3vamk1df
tf6+69bfv+/Udf/PmX//0QsPfC1MHO4S7hjuHmYSZnXsv/8xDSi1nCozHK/C
fM4ei7Y2WYW9uWte8pejqovqy4lyeSZruTrzDxjJXkum04AW/sBuXpAYHpLQ
WArXJ3KyWenFJouISJVoQDHZ0Xf6U382WrgK7gceeO6PPPTPXzy6+O3uvwpd
ZuPJJzaeeio0mtMHPhBaz6l3v3P9g+89c/AjZ/7DDY9+/PpQi8YXxb07dKLT
138oNKAwcbhLuGO4e5hJmFWYYZitBlS9Ac135IT8zZ10sP1tXri29A1o/1rM
cbu6tlbzAdSAWk7Yc3tXJ39HLfmtQuRks9KLTRYRkSrRgCKTbj39qT8b7YyE
8APH/8f/7r/90i+efNfbzt17z1PnHguN5sKR+07te+d3XvdrJ97+ljM3fPjc
3Z96/PgDjx+7/9xn/vrMJz528l1vf+SNrzr1nmsuHPlymDjcJdwx3D3MJMxq
VH9aGwlh+yRw6nKVrfOW1N12ZHMuU6eR8VOm12r6QpmCDz7vmGo0UcVGM+eh
43Ifi63zwJydkXuH7MfCsxfwTc8r7zGYzHR7Dxxdm+zMrTXYuaDMcrZPYbfu
PJ7s6NYMpo6fqNPV7U0uayNbP8ufqGzNIw/I6YO/6KP3Mw/U5ruohW3ZMcPp
QT/2Ti925oMekchq06ABzfEvtyIiNZN9fY7Pote9k9TbtF28Q0qyVYL6U382
WhoN+/6f/KHjP/O8b/2fv/y9O2978tTJJ7758GOfuvPU/qu/88b/65HfeP3p
j7z/wtEvP3X+/FPnz1346ldOf+z3TrztTY+8+bXr733Xub/+r0986+Fwl3DH
cPcwkzCrstGw6zag/ckPJp8+njwlp06Ot26fDB+wda403YCip9xegc3RwNLL
3rkF22OGpSarelHUePlTp/8rnY40lfNgpEpY9rQus3+yYzZs/efUNu9oQDmP
weQh2PpbyubVSZv32hqdYfrz51OLmazw+O8wyXSpA2XyQfyyx3DGLio+dLf3
VGFtLFzzmAMyOfinVz7vD0azD9SGu6iFbSl4cqUXu7XQmAc9Il02oKObpVP/
EZGeZ6VBFr3unaTepu3iHVKSgTSgx79+7Ht3/H+P3vTxMx/78LgEverktb95
7p7Rl6KOvg71nk+ffPc7HnnTa07t/60wwXf/8BOP/eVfjO7SbQNa2TEe9OTc
aMcAb9GXEkVPGbmcrY9CZyercMY2Of3frk+djzSV2ZL0X6EyP9y5e3K3Ovdz
4dFXwU1u3JsZlvhoOLdey5s071BJ3Zb6s0TOzbP3anopBUdNep/lHmuz17z8
gMyfuMmBWncXNd+WvHXe8bRZ2/ozT9TiZqf9BjT1x65af5cSEZEFRwOKzFCu
gvvcPReOfmU0DvbvXHf6wAfW3//uR/7dG05e/dazf3IodJ9zn/10+MfJd171
yG+8fv19153+yPvX37/v0Rv//YWvfiXcscur4KI+k99+AyodLGDnVV05F/hU
Gzq64Hy3y5Gmdmzg9GV4Oy7Ky/3P3NWa2Z1yJ0rNNGpjM9cM5g/TsDl4ce6C
Zi5nei3ztmPqtrgP7mSvdixvQJn5Re3gvNvb30UVtyXiyVVxcbPTQQNK/tiV
jFO/klPjRESk79GAYjKUkRA+/VdPfOubF45++fT1Hzzx9jef/M23nLz6qlPv
fsf6e68JhShMsP67+9d/592n9l196pq3jQbKfvtbTrz9Ladv+FAoTeGO4e4d
jIRQeJ6UPWFpvQEVnxNN/aR4smrna4VVp+YIbPHL3Fzkji3J+QTVjh8WrFPu
tBX+BlQ8cvHa/v3JiWfOH8cKPoTTaJCBHfcu+KPZ1g2Fcy1f88ormfdAzT5Q
W9pF7WxLdAGasbjZ6fpzQJvXrLoQTkRkiaIBzcyARsO+59MXvnrk3OHPPHrj
x9c/+J7Tv/ue0x9+X7g9/O/Jd71tNBp2qEXvetvpD7139I2oH/rtMMH6+HtR
w11Gd7zn0x2Mhr3ABpT7we5UMp/eL9iczEl63lw2yopOxNli6Zxn3i91DVfR
zt/xw/JyF3HiXa0BpT8ZNbpKbu/mxYI7d27BRWql166VZOe9cxtR6Wl9zJo3
bECRB2rzXdTitsTs/6jFzU73IyFU/WuviIgsPMmby3zutYwZ1jei/va1j/7B
wbP/738+d/enzn/p8xeOfvnc4bvPrt185uDvrX9g/6n3/Nap/Vevf2DfmY9/
9OyffvLc5z5z4ciXz3/pC2HicJdwx3D32d+IOuM8I3tetPgGtPmR7kx2fHo/
ZnOO7i+aS+mMIhpQ6ZxL77e1K3Iemh2f8S/4xFDBCtduQAVXfa1Mf01sfr3s
uAHltMLSP0PFrXk7DWjWgdp0F7W6LbP3f+TiZmcODajeB5RERGRx0YBKMrPj
9KEENb4K7vsfeM7f+vo/fO5Dv7j3m//mX3znNaujy+EO3/3k6fWnLlwYDX1w
+O7vfvI/nf7I+5MGFP5x9j9/8vwXPjeZ4PR6mCDcJdwx3D3MJMzqgZ/64TDb
ggZUeqqQ88N+XgUXuUUVP+pQuLxGJ2czsrX6eSeXWz8sOLUvfRzLr3iq0IDy
b82vH503oJ07rPRojVzz7q6CK79f+dLLPwfWcFtmVobYxc2OBiQiIploQEWJ
bDcLL0FtjITw/Q/8xN889rxnHv97P/H1F/70N3/5l86u3fLEtx5+6txjT104
Py5Bnzn9e79z4m1vPvn2t5w+8IHz9342qT9hgjBZmDjcJdwx3D3MJMxqVH+K
RkIo/VBL3mnEIhtQ5GlN4RZVHsOgYGNrfWY8OpNTzf1l5SPnhx2OhBB12ptd
/pwa0OZteUOdR33YJWfPNWxA0effTXZRy9sy68Kx2MXNztyuglOARESWJxpQ
bir1msWWoFZGw0578J9c8ugffeKJb/63Jx8989TZs6EBnf/SFx696T+s/+57
Tn/ot7/7n/7g/H1fCDeOfvTomTBZmDjcJXdW+Uvd/NTC9OUtW2Oe7TiNqNyA
Ys6fo6fc6jA7Tw7XVlNf3Lh1vU7e9lQ6X9tase05He1wHITUQpOPmWeXUvLD
giHEcnpfK38DmvoL1NYnRBbQgNIfutoxg9mn+blrXuHQLdjUuAO1hb8Btbgt
RcfP/vENsYubnWYNaOcnv8Lq7djJR9fynv8iItLrrDTIote9w/zCL7y0UqPZ
KkHhjl2v24603oAe+qc/e/ZPDj158sQTJ77z+NePnbvn04/91X8599m7z3/+
8PkvfO7c5z7z2Kf+S7gx/ChMECYLE4e7VGhA05/c3rs3NcbTzm/S3KjUgLa7
1fgj05tnfsWn31WmXNn5vYx55Wtrqs1PMFT/1MLWnJJVq3XKVzVbJ/TFozDk
/zC7c/KnbelzQFN7N/t3qfk1oPzOm7ehcWte5YAs2tSoA7WNzwG1uC35x8/U
CCOzFzczjRrQ9u9rju7YuOkv7Mq+comISJ+z0iCLXvcOc/jw50KXqfQHnTBx
uEu4Y3drlZuWG9CPPu3Bl/yjMzd86LFP3Xn2zz555hM3rL/v2jMf+/D5z93z
xLe++cS3v3X+3s+G/xzd+Ikbzv7pJ8NkYeJwl3DH+AY0yvi71LeL0Og0J/eT
+1VOAse3bs1ztezL6KtMGbeqm18OvznJaIo6n9vOn1O3yf9tfMwPN46OfjO/
d8a+adqANjamxgVLzqoXNBJCamHZe+du6Ow1n9w39oAs3NSZB2rTXdT+tmSP
n7Wj239cjVxceVr9G9Bkhad+hZNeZREREZlH2mxAP/q0+5/59K+/8Ke//W9/
5ZE3vfrhS1/20Ev3fOPFL/zWFf/7d2/9owtHvxKEf4T/DDc+9NJLHn75yx75
9VeHicNdwh2zJaiL7RURERERkSGn9QZ07HnPfPDnLnrw5y8K/7j/Wc/42rOe
8Y2f/fsnr3nbdw/dFIR/hP8cjZ/wrGdMpvy58ZQakIiIiIiIdJ/Wr4K7/8d/
4IHn/kgQ/jEqNT/6tGN/9+88/K//2bdfdUUQ/hH+M7l955SVroITERERERGp
ntZHQsi6/yd/6PjPPO8b//gfBOEf4T8j79jF9oqIiIiIyJAzhwb0tWd/X2g9
D/zUD4++6jTUn2d/nwYkIiIiIiILyTwaUF1dbK+IiIiIiAw5TRqQiIiIiIjI
ckUDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4aRuA1oLVldW
gmz27DsabBzdF+xZ2bNndMNGsHmvPavbtywqZeu/urYRzLpvaitytnSeSdZn
dXW04htlK75rE3E0yoyMj+M9K8GO3Tc+qDei92D2OT73Z/3k+biyJ3MoVNyW
5one9gW/hsSnyStnvWXN/f1iaR6LbIoenT0rdbalP+/X807Y7LXV3OO5dJ+s
rY7fitdG9+zkKNodj0jMVtTb0t2xf2R+0YA0oOWPBtQ8GlAX0YCaL0sDio8G
1E40oC6jAUlf0qwBLe/x2WRNunv+1ks/G9D890AfjqvmWWRfyHnHH/9039rG
vtgDa6ENqPSsY211dWSuz5HddGQm2U3P66E8OuE5MX5aNP9tRpN7LdXeTneZ
dFKvltnfrSX7ucvfuS3VPiyMBiR9iQakAXWT3XSmNM9oQA2iAXWe3fS8Hsqj
owFVjgbUYTQg6Us0IA2om+ymM6V5Zp7bsn3lW3vXLy2qAXWxLc2zm47MJLvp
eT2cR2ee79e7ogElTWfPuM+kOmPScVb37Qv2rK7t2X6hSV5/JnfobOuWah8W
RgOSvkQD0oC6yW46U5pnNKB60YDmk930vB7Oo6MBVYwG1GE0IOlLumxA0edC
OZ9cXl3p9nw++pmSWbc94aUvvAAWbtdakPNZ1Ozf01velnQDSq3P6KV6al2m
/0a/fd5Y+InmGY/O9rJWV0fyPiE9nz1Q59HM+wR3douS7V1b21rK2r4gPZ9k
DpOrTQr39nju48/Y5u2ZZLlzPHIme2N1T6XnWvTxMNcGVHlbih7lyQ8KHqOd
980eCdOPeK0pp/ZS+TM04vnbcsofzdIemlxZlLoWq8J+nnEs5d9e97kW/z6V
3dvxr71dpK39Uzq3wleA5BUyu1dH704zXtlmvKrM/zjPNpr0Lcm7fPY9t+Bd
OHv0xhwbUeceRXtv5/5ZyxnbofTxnep37aZBA2ry7jPjFViGGA1IA9KANCAN
SAOKiwakAWlAGlCTaEDSl3QxGvbmsyzm/avgOB+/V3Z5fBatf/bZNLkp9VK9
J/VRyIrb1eG2ZF97x1uXfpdJzkDS21j0ec+pOZc/OtvLijuj6yLxR+POR7N4
zPaiLRovJf2Z4slezbyiZvd24Zov6MgpuNKjOPHHw4IaUMFVK1vveJnnbPZR
jtnqgiOh9FjKO2bK37u3z/oK13DG87eLRLxyFqxV3jlYds613i/a/Y1c6SMe
/+ox47W3k+RvUdxICG29X1d9jCLmuYDjPFmF9BE7Xs89+1a3+/ue8QqO1zln
DUtfN2YcG1XPPSKOzOwaJns4SeoVZl7jOeS/X0+n/CwrtRUz3n1iXqtliNGA
NCANSAPSgKpstQakAY2jAaW2TgPSgCL3a8n7tQYk88yCr4Ir+u7CzZPXRV43
VXh+2OSdurttKf/7e8Gal47tGffoNDknaXcPRDyaBVdJ5bzTNX8HL33Frvw6
30WqXjlW83iYYwMq3JaKa9XgMap7LBU9N0sfnfLnbyeJf+XPvCKlzh43J6y6
n+fzXKv2WDR79Wg3Ef10etWr7Z8u3hFi5rmA4zy1f5J1yDSIdFPIaw0Njt74
c4/4IzMzz0mDS64Nm9x+9OjOa/862a11zh47ePeZ9TsZ2f3RgDQgDUgD0oCm
J9eAiqIBaUAaULLiGlDN3aoBSU/SjwZU8bPYLUQD2rlW6euFpl4zZzw6GlCT
86ijmc/bznO/HS373HrO5PWOh3me+xUtJXqtGj1G2f3ZcQNKJef520liH80Z
54c19/N8nmvL3oAillJv/3TxjtDT4zy1buNdElrC2mh4gMyVZqvj0bFzWkPP
GlB2JIfJbySS1jPajLWj+9aqXRddL00aUFvvPhXf+2SXRgPSgDY3VwPSgMon
14A0IA1IA9KAUj/VgCpHA5K+ZNGjYSe3xHweud3Er//yjoRQ5114+lwl5tFZ
kgZU8Gjmva521oAyowFvLj37Ser57LdkNbevhMl5Lxiv4b61jX3bZ3dVj4f5
bdHmczN7zU/0WlV4jDL7odGxlL1l+z06/rUx72qcdlPxHHvP6p7JcOPTj0jN
50LBecvkGE69Jjd6rpW9T7X96tFuopdSc/908Y5Q5xyg++N8spyt4236HT/J
9po3es2JPt6Kzz1ijsztORSNfrA6Tvd7tcnZY713n5jXahliNCANKB0NSAOa
igakAU1FA9KANKAkGlC9aEDSlyy6AY1T9Bm3zkdCyB+PceqZkvms6KxvRN1I
3TX1fXOL+kbUmHPy6Z2+85V8xqNTdiTMdw/EX/uR3pai97UOGlD2e/1GP1xd
HZ8mLuLISaXoUc6OoFv5eFhkpyt8XheuVcxjtH3f7LcAT7fIJg0oPeXOV6rJ
UmKev23v3NhXzvSezDmGq+3nnJY6tdHJd2629VyLf59q/urRbuKX0mD/R7xf
F72CFb6ylc9zAcd5ak+VjiU+2aKcI7xJA5rMOuLcY7KKEUdmesrMKNBzHR26
3tljej3rvPvMeq2WIUYDykYD0oA0oK3DXQPSgNI7VwPSgDSgrWhA1aMBSV9S
twGJiAwzc+90IiJSOV6rpSwakIhIlXhXFRHpf7xWS1k0IBGRKvGuKiLS/3it
lrJoQCIiVeJdVUSk//FaLWXRgEREqsS7qohI/+O1WsqiAYmIVIl3VRGR/sdr
tZRFAxIRERERkeFEAxIRERERkeEk3YDOiIiIiIiI7OpoQCIiIiIiMpykG9C6
iIiIiIjIro4GJCIiIiIiw0m6AV1z4CAAAMAupgEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDsQQN
6OZ7gxMbG0GVrAcnjt0bHLr5YNDa+tx2PJha1LE7gsXvqGVz4OY7giOn1oO8
x7ezR7BdfTgeqj5HTq0HRw7fERwID8Sc99h4bY+c2ghyHvFT9waHbjt+aM57
tYvHsQ/HRv/FHA8HDh5a+Hq2tKXTz9NweByP2rr+H0sDegaFFbjjyMbGkRqP
Y3duvuOazffT7PNoYa/20GMaUGU9fU1ePhpQazSgfj6OfTg2+k8D0oCWbKs1
INgNlqABZV8DK6fNV6cDh9eD9NxPHL41WPyOipS8Th4bWdTrYXYfxqTyfp7L
lvbieGj0HBm9P95188G75tAxY5raqXuDQ4fXD813r9Z8HEuPsV4cG30WfTzs
kjO37PM0eusOHdsIFnwsdXG0L+MzKHvcLvYoHR9XUb8B60V/hL7QgKrq6Wty
PA2o423RgIofEQ1oqV4ruqYBaUDL+AzSgGBX6H8Dqne27Lk/Zfwuc9ex9WDB
7yON++yR2w4G/dnS7JnJjDXsQBvPkXlcxZGznuNn5eaZQ3iYbj1w88EDvb3i
MdGfZ9OS2yXHQ+PtnXXH0X6469TGXdNXCc7pdaaLoz16nn14dc3Rn2vzCrrY
5LrxnJ8eD3bJNaXQmAY0CP05Z9OAOqABzVV/nk1LbpccD423d9YdNaBFvrrm
0IBgV+h/A6r+Gjh6v8jea1ddTVFB9jObi3wfKXpccsY6mHyuM/P56MLHcf5b
mj0zmeMVZaV7tXirx8+OzDVmSebfFpetO/Tr2bTslv94iNekxWSPuvm8znRx
tMfPsy+vrln9uTavpw0RloQGtNv165xNA5rPXtWAutGvZ9OyW/7jIZ4GVHWe
fXl1zdKAYHfodwNq8Bo447OKmdfh1E8P3HY8OHFq48SpqZ8eunmkaCzTCq9F
OZ//zd+uA7fdG+SNbzl+1T0VVvJ43t7If7fNS8FyU+NU5yz32B0n6owtUOsc
YMb4sRW39LZ7gwqj0ZY/UhXHtu1mr9Y/O8q5Jqf0twT11j/+Cr3JWUTMXs1O
M7kKJel3x4Pso1bl+djgGOvi2Bg/02eMCd/uPkk9Zyf3Tb8eZtbtrttuDWKO
2MrHQ7t7qd4rfwtXDTVoMXN9RnRxtPfgGRT96ppzDEzmsP29DL3oHU1GVgfG
NKDsTzUgDSjqkdKAItZfAyrcivh9qwG1tZc0oBmPvgakAcFQ9LsB1f/esRmf
OS14vyh8d07uWzqWafynXGOmrPrZ9qlX4Arfj7lzf1ZYbq3PVOZcBTf12eeK
Km/pHYeqHFEzrtKJHtu2w73a5H0w+r5117/WmU/MXs1Mk5yf5H2rZsFS0htY
vsR6z6boY+PQsfVDxyo80wuvt2l3nySvvTPuG71uE/V/M9PaXqr3yl/jpanF
52nM5+7bevS7ONo7fga19eoad4wl39Kb7keLuTYv7/dXo62bfsST70K99cju
vLIUmtKA0j/VgDSg8rXVgKqsvwZUuhWTY0wDmr1WGtCMtdKAYqIBASm9bkAV
v3fswM23BkWvY1MdIft+cSq8rOW++m2/vs34/GPUK3bEtRA540WP3xcmV3cU
jPPQoG0VTjk1RsH47OXYxl0NP7lc+G6YvFbfEdRrQ3FbGn1dZcQZS80m2+5e
bfAdizG/YWht/aPHj435lHHhOU923TLn2zFzK9r/TZ5NcVuRfqaPpxlfBxt1
xWyr+yRmjILkeqHJT8evn8lZd9Sx1+B4aLKX6r3yV30tavd5Ov9nRBdHe/N5
dvjqWu89Nz3lXK89i/9Nwuz9DEOmAU1eFTUgDWjGempADdZfA9KAWjoeNCAN
qHAaDagoGhBk9LkBVb0SrDCZ95riOSefl8//VO+szz9GXLMX8b5/4PDxA6PP
HY/PKMbv6TmfsqxwjU3MeLPRn9Kt2EkLFY10nV7P1CdPY+YZP7JuzOdYY97T
qx8P7e/V+HOPPOVHbJvrH7+eMY9O/Fj3bTyOXRxj1T4XX28r6u6TeYxCHHc8
tL+X6r3yd7G98Wek839GtH20L/QZVHVMpPLrQjPjeC/iWzYK1iTd2pJ32AWM
oA7LRAOajgaU2g8aUOncNKD49deANKDqx60GtJhnRNtH+0KfQRrQjO2C4epz
Ayr+u3N0Cj75mDfn8teHmLOC2dNML7fBK1LUNSTRr+0VrtCoPzZFkfJRTJPM
Gsu06ZlS5SYbczzMZa82Gpe1/Nyg1fWPW8+YZ1m1b2mctdz4s/34Y6zdYyPm
+d71PtlOeuzrJmd9UcdDy3spf7ndnxlWu/Zs0c+IDo72BT+DSl+dKsyn/uOY
vMcduq2+AzeHmVR+xIf0jcNQhwa0GQ0ovd80IA1IA6p3jGlAs2lAGpAGpAHB
YvW1AdX6rN9kpMryb+ir9zoWe45a+P5S+I11BUsc/xX70OF7gyPHjo+tB0Wf
281Z/+jxV5s1zVY/B3rzrddsjmWRHS2h8DGqOtJs9tPQqTnXvT5n9jl/23u1
6dVK5VfmtLf+Tc6RIr75sXBf1Tt7LJhbheXWOTZmvP6Un9u3vE+K5pmf6t/k
G7sOLe+lRk2kibl/F2onj379o30+z6Aq2Z5blauI84+fmO8Urn4mk07mMYr/
RvVG10jD7qcBxb0yaEBF0YDyl6gBaUBFU2pAGpAGpAHFRQOCrvS1AbV/tVXx
nCPej6I/q150Vjl9e+kZYMVvIWx+bVujd5PuPgcaf31C1atlitpo/Ht0xPHQ
/V5t8BwpOL9Nv5u3t/4NzpEivgu1+DcJtfpU82Os1rFRfh5VeRz+JvtkalvK
fiMRtTcarEPLe6lJE2mkwfO01nehtvDot3q0z+cZVCGpuVU5xmr9xqnCt8HO
XtvieeY/jhoQlNOANCANSANKogFpQNPbogE1pwHN4xlUIRpQh0c7LJOeNqC2
Rl3OqvfNdPHvMgXzn3rljPqmzuS+68Hke0LH3/d64MAdB+qePzQfy7Semq/D
Da7iq3xNY/I9eofXD5WNkFDteOh6r9Z9jhQdaU3P0ltYz6ix4qOPpZhnevTz
usIx1vKxMfvam5b3SanicUsaXNkV/ZuZJnup+bbX1OrztN64/VX3QLtH+6Kf
QWUqzKfqtdbJozP+rt7N69jryLuev6vfIcDQaEAakAakAWlARUusfIxpQC0d
DxqQBlQ0Tw1IA4LmetqAKvxlv5p630xX4dV7xl+9G3wGvGjP5LyLVfvMZtd/
K8/7FsLS7x8s+r7UxltaeK9x04w/S4k5Hjq/AqHCc2S0vZP34oJrLBudWbW0
njF7Nf49PeaZHve8rnaMtXxsZPdezZHGZ++TA7cdDzZHXNkYqfCp8OgGFH08
tLuXmnwnaTP5YxefOHxHkHcNWNG3RTc9y43bA+0f7Qt+BpWKf2fP2XsL+C7U
ov2ZPTa6+xwB7B4akAakAWlAGlDxNmpAEc8gDaiQBqQBtUsDgnb0swF1d/ZY
/YqpqufY+e93k1T4jOrojOLIbbce2ewIyRlsTrdq8l2o5dOnG8r4fTnZD7PG
G6+4T6LT7Jv7Zh8Js5ZV9Xjodq82+ixwKsXHfzvrH/dcjtmr1c66Z50ZNn4c
o77JsWCeRePZTu3b2aNVtLxPcnpEMs32q9Dma9GoK01NFH02WOG1vbW9lL/t
8/xUePNna96R2e4zorOjfZ7zrPrqmnPM71y3nKM9yZwadNXn0UgyekneTxez
ttBPGpAGpAHFLavq8aABxT+XNSANKDOxBlS6RRqQBpReHQ0IqupnA+rmE3z1
rpiqc46d935X716zk/fKFtE4CkZVrTBu56njQYW/qled/yQ7m2ALWzqWd21e
sl3l53IVj4dO9mrBaAYVMt6rh289MvM9sfH6t3feFX9dR8yZYfzjGH+MVTs2
Co/AgsQ905t+G2b23GlWqo0pXfW1vY29VO+Vv131v+mg+Hna/qPfzdHe1TOo
jVfX+q+li+4U0UfUQpsa9JkGpAFNaECT7dKA2lx/DUgDKn+V04DK960GpAE1
OqI0ICjQvwbU4DO2M9T6bGCtsUzrfuo2/+/Xm2Nij94HK8x5vOZ549aOUjzm
Z/I53Px7pa8lqPsJ0PE2Hj4enDi1fiJvKZNxCY7dERy4+eCBuPF1K29p4TU/
pedF9ca2bXmv1rmqMNnbmyOrR+zVFtY/+rkcs1cr7PmIZ3rVxzHmGKv3WlE4
vvT2vj1088FDuY9Xu/skvVaTcTNGa5V3hjl6HE8cuzcoXLeC53691/ZGe6lH
nwpPxiQZXVXVwqtfZ49+J0d7Z8+gNl5dx0fmsfW7ct95x79/6+vI0qXnDIW/
OQRGNCANaPpeGpAG1Nb6a0Aa0M7nvgakAbU2z8mcNSANCOroXwOCeejT6KYA
AMyPBsQwaUAAAMOkATE0k6tQsqPstnClJQAAfacBMTQaEADAkGlADEH5SOOL
HtcUAID50YAYAg0IAICEBsRuVzDS6YzvWgUAYHfSgNjtNCAAALZpQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAfbYxzsJX
A3YNDQgAoM80IGiXBgQA0GcaELRLAwIA6DMNCNrVzwb0hyK9zMKfGgAMkAYE
7dKAROKz8KcGAAOkAUG7+tyAjotE5zfG+fY4XcxfAwJgURbVgFZ+/T6Ys/kc
2xqQ7I5oQADsVhoQwzGfY1sDkt0RDQiA3WqxDeiehx4LHjr9OHRKA9KApGo0
IAB2Kw2IIdCANCCpGg0IlsWNf3gr7ALzfNYstgEt/MSYgdCANCCpGg0IlsXC
T1yhFfN81mhADIEGpAFJ1WhAsCySs8cNkaWNBgRd0IA0IKkaDQiWhQYkyx4N
CLqgAWlAUjUaECwLDUiWPRoQdEED0oCkajQgWBYakCx7NCDoggakAUnVaECw
LDQgWfZoQNAFDUgDkqrRgGBZaECy7NGAoAsaUPUGdHtw1UUrwVQuuiq4ffzj
48evDy5duejS8U1X3d7+SfIg05e9qgHleUNwycrKJSs5ueS1B4NFr2E/Jfvt
BcHLrj4YLHp9dhsNSJY9GhB0QQPSgJYnfdmrGlAeDajJftOAuqIBybJHA4Iu
aEAVGtDtV42rz0pw6fXHg+xPr7r++FWj2/tyrt6/NNkzfdmrGlCeds/kl6sX
NFnb5drS5aMBybJHA3ro9K3BZSuvDA6efvzgos+cp9dqT/DWzz4e5N2ScdMr
g+nfEYb/bGW7Ipbei3n2hQakAc03GtDsaEDL1gs0oP7SgGTZowFpQHXXp4tt
3D00oLgGdPvWlW853ScnfTlX7180oNnRgJatF2hA/aUBybJHA+qyATU5w6/Y
gD57XXDRyisv2rEV49vfetPjQdvrs9j90/clakAa0HyjAc2OBrRsvUAD6i8N
SJY9GpAGtLjuoAG1Y4kb0OT6t0vHBej47AKUPle//qoguXZuc8iE2y/acfqe
ur4unaJr7WZNeXvuWA1T0+TM59KV4q0LGxPsmN1KfhUsWvr1I+PFTP/gqqCw
XV5/6XhHJqNMXH97bgOquC3NU9SA/ofolM+/5QZ09WXBc1ZWnjO946dHJ9g+
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
owEBsFtpQAyBBqQBSdVoQADsVhoQQ6AB/aFIL7PwpwYAA7TYBgTzNJ9jWwMS
ic/CnxoADJAGxHDM59juZwMCACCxqAYEu5UGBADQZxoQtEsDAgDoMw0I2qUB
AQD0mQYE7dKAAAD6TAOCdmlAAAB9pgFBuzQgAABgODQgAABgODQgAABgODQg
AABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABg
ODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQg
AABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABg
ODQgAABgODQgAABgONIN6G4REREREZFdHQ1IRERERESGEw1IRERERESGEw1I
RERERESGk3QDuq00t49TPk15VhaUJussIiIiIiLzycY46x1HAxIRERERkT6k
Pw3oL8f5/Be+GJw++1hw7skNAACAFmlAAADAcCy2AWk9AADAPGlAAADAcMy/
AWk9AADAomhAAADAcMy/AS18k3f4n178c8GixtAWEREREZGilJ/Jf/wP7guu
ue5TO3z04OcDDUgDEhERERFZrmhAAAAA5ZIeVPRTDQgAANhNNCAAAGC3yl4L
966xoumrNqDLx9GAAACAPtCAAACAIWvrKrjLM9GAAACAvtGAAACA4WjegLLd
p2oP0oAAAID50IBmOLI/uGTPyBef3PjiIldmLbhiZTW45cmNW6rc95Yr9wbX
HtkIqtxrJVhZ2Rtce2QtqL70/HW+Zd/+YHN/1t+ueqa3q9o+qbnEqe3t6lFO
++K+vcEl+44G5/54NZj8Ozmer1wLmjyChfPv/uEDAGioSQMq6jtVe5AGFEcD
aocGpAEBAEOmAc0w0AbUXSsZz3nP/isWsz/n3baqb2+bDeiKP94Iajag8b1W
Jgn/yGlAOfOf9wMKAFBZWw2o6k81oOo0oEXuw3ltrwYEANAtDWiG6Aa0eW1V
KleurUyfZybnjVPT7Nm/sjnnWXOIPTeens/o3PWKK/deMd2AsstKn8Fm53DL
k2u37Fj6ZM/sHQl3z9ui7DpPzXmydQVXypXvjailz94zOWuVWdbkiq/xsrJd
YGKqL4yStIPs9ia3TLpDelsmrSR2b8xoHOP1STeUyb8ny1oNrggrmb/fwmyP
XrtvLZj8e89qMLXVRfNfcMMFAJiteQMqbzcaUHoaDUgD0oAAABZLA5ohpgEl
Z7+ZvjN1rlswn8nZ9fiMdPrapOTMc+/IpLlENKCcNUnutfeKrU/9F6zt1HVN
OcvK3JKzRTHrnD1DzkxTc39ml55VZ1mT3pqZZnr6ndcZfvHI0SBnezPXoc3Y
81GPV8XjeWX1ku1HpHy/FTQgAICl1dY3ojaJBqQBaUAaEADAfGhAM0Q0oMJz
0fQnxCM+LZ5zjdzUiM2zG1DRmqTPz/OWkr22KroBZT5TP90F6jSgqP0ZtfSs
OsuaGvm5/DhJXY83tSentjfdKTLXFhas4azHq+LxXGG/aUAAwG6jAc2gAWlA
GpAGBADsIhrQDB1fBZf+BP302WxbV8Fl5hM1dvEiG1CF/dm4AcVfBVeha0w9
1mtfzBsZYNK8rlwNpuecv4atjTWtAQEAg6cBzaABaUAakAYEAOwiGtAMmaub
ppI6c645GnYyuvKR/bfsXMro+rdkFOvi0QnyTa/JaD7JSM7lo2EnqTwSQr0G
lIzDPBmBedwR6o2G3bwBRSwrpgFl5zC9J9Pbm+59qREqqq7h1FIqHs8dNiCj
YQMAfacBzaABaUAakAYEAOwiGhAsQPQ37QIA0C4NCBZAAwIAWBANCOZp80rI
9DjnAADMT0wD+kxn0YAYGg0IAGCxNCAAAGA4NCAAAGA4NCAAAGA4NCAAAGA4
NCAAAGA4NCAAAGA4NCAAAGA4NCAAAGA4NKAKjuwPnlpZDR5/cuPxWdM/fuVK
8NS+o8HiVx4AANCAKtGAAABgyWlAcUKFOfrEnpVgY2V1Y1YDOr9vb7CxEibW
gAAAoEc0oDgaEAAA7AYaUBVrwRMrq0/EXQWX9CANCAAA+kMDqkIDAgCA5aYB
VZFqQH88klzntrFnf3A+VJ7p6TUgAADoGw2oCg0IAACWmwZURdKAVoKNK9eC
zVv2jhzZCNLTa0AAANA3GlAVGhAAACw3DaiK7EgIySjZe0c0IAAA6D0NqAoN
CAAAlpsGVIUGBAAAy00DqkIDAgCA5aYBVaEBAQDActOAqtCAAABguWlA8R6/
ciWYfAvqeDTspONkvxd16vYxPQgAAPpAA4qnAQEAwLLTgAAAgOHQgAAAgOHQ
gAAAgOHQgAAAgOHQgAAAgOHQgAAAgOHQgAAAgOGIaUDrHUcDAgAA5kMDAgAA
dp+P/8F9QdJ30t7zvruDontpQAAAwDLSgAAAAMppQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHCUN6DLxylvNzHTaEAAAEAfaEAAAMBwxDSgoo5T/lMN
CAAA6BsNCAAAGI74BpRuOkW3a0AAAECfaUAAAMBwxIyGne078d1HAwIAAPpD
AwIAAIYj/htR63UfDQgAAOgPDQgAABiO+AaU7kHx02tAAABAf2hAAADAcFRt
QPWiAQEAAH2gAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOh
AQEAAMOhAQEAAMMx/wbU9bJERERERHZT7htn0Wsh1aIBiYiIiIjUiwa0jNGA
RERERETqRQNaxmhAIiIiIiL1ogEtYzQgEREREZF60YCWMRqQiIiIiEi9aEDL
GA1IRERERKReNKBljAYkIiIiIlIvGtAyRgMSEREREamXyg3oxsuDlZWRG8N/
5f90Oxe/456g6jT3vOPiID1NWNjlN+6YzUqQvX0I0YBEREREROpFA1rGaEAi
IiIiIvUS14DuGZeSlVEpuTy0jvH/7WxAN45LSfr25JaLLx9VnPVxxYme5uJ3
XD4uRfes591yzztGq3P5jRcPsPyMowGJiIiIiNSLBrSM0YBEREREROql+kgI
2RaT3Dy+tu3yG1emW0lyPdvkOreYaWY0oHvuGZefd1ycdw1eq0muvutyCfWj
AYmIiIiI1IsGVBQNSERERERk96WtBjTdYtKTb7eemGnSc8uOhJDc3vXoByuZ
dLiwgvxFKtmfakAiIiIiIvWiAWWjAYmIiIiI7Nb0swEVLnfq6rj2k+0+i+pB
GpCIiIiISBfRgNLRgEREREREdneWpQGF8nPj5ZMRs2O+L7VqyrvPYq+Iy0YD
EhERERGpFw0oiQYkIiIiIjKE9G807Eymvv804vtSlzDZa95cBSciIiIi0kU0
oD5EAxIRERERmU9aa0BJT1m5/OLt25MpLw6Sq9eippnK+D5T33+qAY2iAYmI
iIiI1IsG1IdoQCIiIiIi80lrDWjyw/F1buVjFMRMM07R1XFdjISwXNGARERE
RETqRQNaxmhAIiIiIiL1Ur0BSdPEXPPmKjgRERERkS6iAc0/GpCIiIiIyKKi
Ac0/GpCIiIiIyKKiAc0/GpCIiIiIyKKiAS1jNCARERERkXrRgJYxGpCIiIiI
iAwnGpCIiIiIiAwn6QYEAAAAAADAbvL/Awp+BO4=
    "], {{0, 490}, {1110, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1110, 490},
  PlotRange->{{0, 1110}, {0, 490}}]], "Input",
 CellID->48114742,ExpressionUUID->"57de451c-f536-4b8f-9aa5-8117447916b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with Imported CSS Data", "Section",
 CellChangeTimes->{{3.7617787463450165`*^9, 3.761778757594176*^9}},
 CellID->19141817,ExpressionUUID->"8a07fb13-3076-46b1-8c34-f6a244b68bab"],

Cell["\<\
Importing CSS values as WD options does not resolve any ambiguity in the \
interpretations. Ambiguity can arise due to the different box types and \
border specifications between CSS and WD.\
\>", "Text",
 CellChangeTimes->{{3.7620003297857614`*^9, 3.7620003406812706`*^9}, {
  3.762000509599663*^9, 3.7620005505916233`*^9}, {3.7620010054541407`*^9, 
  3.762001085743566*^9}},
 CellID->241743700,ExpressionUUID->"d07cfb29-6867-4ce6-9469-bb79383195c8"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ResolveCSSInterpretations",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"], "[", 
     RowBox[{
      StyleBox["type", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["opt", "TI"], 
         StyleBox["1", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}], Cell[
    "merge list of interpreted CSS options", "TableText",ExpressionUUID->
     "363ec5b6-0e16-4266-9335-bf5e3ffebba2"]}
  }]], "DefinitionBox",
 CellChangeTimes->{
  3.761999667101122*^9, {3.7620005948215685`*^9, 3.762000733164659*^9}, {
   3.762000768225515*^9, 3.7620009283546195`*^9}, {3.762000959642674*^9, 
   3.762000978398694*^9}, {3.7620011012846546`*^9, 3.7620011257118587`*^9}, 
   3.762001444225633*^9},
 CellID->303849375,ExpressionUUID->"6ea24203-8e35-436d-baba-6f131f5cf525"],

Cell["Functions to resolve CSS interpretation ambiguity.", "Caption",
 CellChangeTimes->{{3.762000743529364*^9, 3.762000758445607*^9}},
 CellID->21498457,ExpressionUUID->"3d3b78f9-424a-4822-bcc6-b546c4b97bdd"],

Cell[CellGroupData[{

Cell["Cells and Boxes", "Subsection",
 CellChangeTimes->{{3.761840012689201*^9, 3.7618400198602057`*^9}},
 CellID->354439910,ExpressionUUID->"1601299a-2a57-43f6-9322-ea2f0b33539e"],

Cell["\<\
Considering layout, all elements of e.g. an HTML document are boxes. These \
boxes can be nested. Layout of WD notebooks are similar; they begin with a \
sequence of cells and each cell can then nest further cells or box objects.\
\>", "Text",
 CellChangeTimes->{{3.761840042649934*^9, 3.7618402983750877`*^9}, {
  3.7618403719647207`*^9, 3.7618403766542735`*^9}, {3.76184043267908*^9, 
  3.7618405848115835`*^9}},
 CellID->364035884,ExpressionUUID->"512bc3ab-3479-4271-8906-8f6f10b7d19d"],

Cell[CellGroupData[{

Cell["\<\
Because WD distinguishes cells and boxes, some CSS options must be further \
interpreted depending on an interface expression.\
\>", "MathCaption",
 CellChangeTimes->{
  3.7618407566114216`*^9, {3.7618428795269375`*^9, 3.7618429165770683`*^9}},
 CellID->207531235,ExpressionUUID->"8caa5204-c48d-4ea3-bd67-7372e8fc852b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {border-left-color:red}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.761840762917673*^9, 3.7618407813654947`*^9}, {3.7618408220102997`*^9, 
  3.761840822241704*^9}, {3.7618416513542795`*^9, 3.7618416575684643`*^9}, {
  3.7618422036737757`*^9, 3.7618422043124485`*^9}},
 CellLabel->"In[50]:=",
 CellID->802518388,ExpressionUUID->"6c1b5207-b0da-4ab8-a873-f549964554a0"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 1]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1700729606], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1700729606]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["border-left-color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{FrameStyle -> Left[
                    RGBColor[1, 0, 0]], CellFrameStyle -> Left[
                    RGBColor[1, 0, 0]]}, ShowStringCharacters -> False], 
                    Style[
                    Style[{FrameStyle -> Left[
                    RGBColor[1, 0, 0]], CellFrameStyle -> Left[
                    RGBColor[1, 0, 0]]}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][{
                    1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 332761719]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[332761719][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {841., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7618399900693088`*^9, {3.7618407659329505`*^9, 3.7618407825845313`*^9}, 
   3.7618408228749676`*^9, 3.7618416592194242`*^9, 3.7618419567069435`*^9, 
   3.761842204941821*^9},
 CellLabel->"Out[50]=",
 CellID->347181638,ExpressionUUID->"f6f4f777-e905-4dfc-897f-4fa660644390"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " to process the ambiguous translations from CSS by providing an interface \
expression."
}], "MathCaption",
 CellChangeTimes->{{3.7618423237561607`*^9, 3.761842325317551*^9}, {
  3.76184236147654*^9, 3.7618424591977396`*^9}, {3.7618428084902287`*^9, 
  3.76184281313809*^9}, {3.761842929688862*^9, 3.761842934781473*^9}},
 CellID->691295671,ExpressionUUID->"318353a9-f8c8-49d8-8ab1-7dabec5b51a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761840838069374*^9, 3.761840870585059*^9}, 
   3.7618409443812675`*^9},
 CellLabel->"In[51]:=",
 CellID->38944675,ExpressionUUID->"549464cb-5345-47a7-a794-7b5399f57741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameStyle", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "Automatic"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761840871085683*^9, 3.761840945489041*^9, 
  3.7618422309248343`*^9},
 CellLabel->"Out[51]=",
 CellID->451021556,ExpressionUUID->"030f9839-bf6b-4a82-8f03-027b8b27c66e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Frame", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618409789131007`*^9, 3.761840980557632*^9}, {
  3.761841492723339*^9, 3.761841515308422*^9}, {3.7618422428425007`*^9, 
  3.7618422435129128`*^9}},
 CellLabel->"In[53]:=",
 CellID->546461476,ExpressionUUID->"6e6fc958-a6fa-4dff-a946-1541c48935ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FrameBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
             False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "Automatic"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76184098203621*^9, 3.761841031496909*^9, {3.7618414938331327`*^9, 
   3.7618415155970583`*^9}, {3.7618422360021863`*^9, 3.7618422442248497`*^9}},
 CellLabel->"Out[53]=",
 CellID->92485203,ExpressionUUID->"0f8ac011-7c66-4b48-a8a7-42a260900e31"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The result is an empty list if the provided interface expression doesn't have \
a corresponding option for the interpretation.\
\>", "MathCaption",
 CellChangeTimes->{{3.7618424725502844`*^9, 3.7618425086443453`*^9}, {
  3.7618428261900997`*^9, 3.76184283050698*^9}, {3.761842960538604*^9, 
  3.761842962788793*^9}},
 CellID->149408332,ExpressionUUID->"dde652cb-f1cc-49f4-9256-2759450d7b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Pane", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618425127769103`*^9, 3.761842514886595*^9}},
 CellLabel->"In[54]:=",
 CellID->23523617,ExpressionUUID->"e21264dd-29e5-4a29-9766-950b406f6f1b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7618425157393894`*^9},
 CellLabel->"Out[54]=",
 CellID->130095501,ExpressionUUID->"1a0d52de-c5e4-47b4-9446-b6a9e03fb29d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Border Edges", "Subsection",
 CellChangeTimes->{{3.761839107520204*^9, 3.761839117598854*^9}, {
  3.7618434780824456`*^9, 3.761843479872734*^9}},
 CellID->258973364,ExpressionUUID->"4723685c-7d24-4e8c-93d4-028e703288e2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Options like ",
 ButtonBox["FrameMargins",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FrameMargins"],
 " and ",
 ButtonBox["ImageMargins",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageMargins"],
 " allow the left, right, top, and bottom sides to be individually specified."
}], "MathCaption",
 CellChangeTimes->{
  3.761839316174226*^9, {3.761839424133739*^9, 3.7618394495703063`*^9}, {
   3.7618396180308514`*^9, 3.7618396601709795`*^9}},
 CellID->19164079,ExpressionUUID->"10a76afc-3582-412c-acbc-4f0532c50b1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"\"\<ABC\>\"", ",", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618393227339582`*^9, 3.7618393650069823`*^9}},
 CellLabel->"In[26]:=",
 CellID->82274386,ExpressionUUID->"14e8a796-7c97-4732-a704-bfe90a7c190d"],

Cell[BoxData[
 FrameBox["\<\"ABC\"\>",
  FrameMargins->{{0, 5}, {10, 15}},
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.76183935424492*^9, 3.761839365701894*^9}},
 CellLabel->"Out[26]=",
 CellID->538522182,ExpressionUUID->"2c2957d5-5f37-4106-8e9e-1bf86b474959"]
}, Open  ]]
}, Open  ]],

Cell["\<\
CSS allows the same specification. It further provides properties to control \
each side independently e.g. \"padding-left\". Such properties are \
interpreted with wrappers that require additional interpretation when making \
a WD style option.\
\>", "Text",
 CellChangeTimes->{{3.7618391427801085`*^9, 3.7618392930053997`*^9}, {
  3.7618393803312407`*^9, 3.7618393807520895`*^9}, {3.76183968842894*^9, 
  3.7618397578454685`*^9}, {3.761839806290877*^9, 3.761839848572938*^9}, {
  3.761839919736834*^9, 3.7618399375220575`*^9}},
 CellID->54711701,ExpressionUUID->"9f746a53-cebf-452f-b263-451465cff723"],

Cell[CellGroupData[{

Cell["An example of ambiguous border translation from CSS.", "MathCaption",
 CellChangeTimes->{{3.761843072181903*^9, 3.7618430826345816`*^9}, {
  3.7618435224615917`*^9, 3.7618435238434916`*^9}},
 CellID->69472301,ExpressionUUID->"04b666f8-6d39-4a45-8ded-18d2adac8e58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {padding:5px;padding-left:0}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}},
 CellLabel->"In[55]:=",
 CellID->205641708,ExpressionUUID->"dace133e-817a-41b8-bb20-e1ccf85589ec"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 2]}], 1], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[115.20000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2115721799], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[TypeSystem`AnyType, 2]}], 2]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2115721799]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["padding", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{FrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}, CellFrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}}, ShowStringCharacters -> False], 
                    Style[
                    Style[{FrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}, CellFrameMargins -> {
                    Left[3.75], 
                    Right[3.75], 
                    Bottom[3.75], 
                    Top[3.75]}}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["padding-left", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{FrameMargins -> Left[0], CellFrameMargins -> 
                    Left[0]}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{FrameMargins -> Left[0], CellFrameMargins -> 
                    Left[0]}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1962534900][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"]]}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1962534900][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1962534900]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1962534900][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1449., {67.5, 74.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7618399900693088`*^9, 3.761842584796765*^9},
 CellLabel->"Out[55]=",
 CellID->532459386,ExpressionUUID->"0b0ecf9a-b2b9-4151-9640-950b9e6c5f9b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " to process the ambiguous translations from CSS  by providing an interface \
expression."
}], "MathCaption",
 CellChangeTimes->{{3.7618423237561607`*^9, 3.761842325317551*^9}, {
  3.76184236147654*^9, 3.7618424591977396`*^9}, {3.761842999536763*^9, 
  3.7618430003306103`*^9}},
 CellID->74318702,ExpressionUUID->"e1c5c5e0-3eb9-4d12-8777-6012a629288e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761840838069374*^9, 3.761840870585059*^9}, 
   3.7618409443812675`*^9},
 CellLabel->"In[56]:=",
 CellID->433620215,ExpressionUUID->"0133e313-d1ee-4aee-ac28-4a950d968e0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameMargins", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3.75`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.75`", ",", "3.75`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.761840871085683*^9, 3.761840945489041*^9, 
  3.7618422309248343`*^9, 3.7618426723998013`*^9},
 CellLabel->"Out[56]=",
 CellID->161149575,ExpressionUUID->"46d2e406-b91a-461e-9924-b142ad6913ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Pane", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618409789131007`*^9, 3.761840980557632*^9}, {
  3.761841492723339*^9, 3.761841515308422*^9}, {3.7618422428425007`*^9, 
  3.7618422435129128`*^9}, {3.7618427111069574`*^9, 3.7618427116393175`*^9}},
 CellLabel->"In[58]:=",
 CellID->98308474,ExpressionUUID->"4245efc2-da22-4446-9424-210b528bfee9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"FrameMargins", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3.75`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.75`", ",", "3.75`"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76184098203621*^9, 3.761841031496909*^9, {3.7618414938331327`*^9, 
   3.7618415155970583`*^9}, {3.7618422360021863`*^9, 3.7618422442248497`*^9}, 
   3.761842674351761*^9, 3.761842711876877*^9},
 CellLabel->"Out[58]=",
 CellID->54566311,ExpressionUUID->"7d20ef57-ed0c-433f-939c-499bcdac4080"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Width and Height", "Subsection",
 CellChangeTimes->{{3.7618391273498716`*^9, 3.7618391340076113`*^9}, {
  3.761843042936117*^9, 3.761843047175833*^9}, {3.7618434846024203`*^9, 
  3.761843486320811*^9}},
 CellID->370300816,ExpressionUUID->"48f75e18-3d09-44c8-a061-82cc445374be"],

Cell[CellGroupData[{

Cell[TextData[{
 "Options like ",
 ButtonBox["ImageSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ImageSize"],
 " allow the width and height to be individually specified. Minimum and \
maximum ranges are also allowed."
}], "MathCaption",
 CellChangeTimes->{
  3.761839316174226*^9, {3.761839424133739*^9, 3.7618394495703063`*^9}, {
   3.7618396180308514`*^9, 3.7618396601709795`*^9}, {3.7618431179262257`*^9, 
   3.7618431541843505`*^9}, {3.7618432191839457`*^9, 3.7618432196220975`*^9}},
 CellID->348727091,ExpressionUUID->"5f2461b7-e97a-4391-82e4-5ce0211dbe21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"\"\<ABC\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618393227339582`*^9, 3.7618393650069823`*^9}, {
  3.761843159197966*^9, 3.76184320731249*^9}},
 CellLabel->"In[64]:=",
 CellID->633565613,ExpressionUUID->"34aca79b-a006-4f1c-8a09-b6f6e34f9f7e"],

Cell[BoxData[
 FrameBox["\<\"ABC\"\>",
  ImageSize->{{15, 50}, {15, 50}},
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.76183935424492*^9, 3.761839365701894*^9}, {
  3.761843162802855*^9, 3.761843207868765*^9}},
 CellLabel->"Out[64]=",
 CellID->41238662,ExpressionUUID->"45038eb5-8c49-4d8a-97aa-68d76a2bba0d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
CSS allows the same specification. It further provides properties to control \
the max/min widths and heights e.g. \"max-width\". Such properties are \
interpreted with wrappers that require additional interpretation when making \
a WD style option.\
\>", "Text",
 CellChangeTimes->{{3.7618391427801085`*^9, 3.7618392930053997`*^9}, {
  3.7618393803312407`*^9, 3.7618393807520895`*^9}, {3.76183968842894*^9, 
  3.7618397578454685`*^9}, {3.761839806290877*^9, 3.761839848572938*^9}, {
  3.761839919736834*^9, 3.7618399375220575`*^9}, {3.761843231433223*^9, 
  3.761843232171547*^9}, {3.7618433547840967`*^9, 3.7618433760740557`*^9}},
 CellID->75578758,ExpressionUUID->"ab5dfa72-87b8-477e-a6af-2e57edd08b2c"],

Cell[CellGroupData[{

Cell["An example of ambiguous width/height translation from CSS.", \
"MathCaption",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}},
 CellID->542365653,ExpressionUUID->"49333bce-adfd-441b-9dfd-1757e1e9c1be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {width:10px;min-width:5px}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}},
 CellLabel->"In[12]:=",
 CellID->411302082,ExpressionUUID->"dc69e77a-626a-410d-9a68-aa180c905928"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 2]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1091982754], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 2]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1091982754]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2001914491][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["width", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"WidthMin", "[", "8", "]"}], ",", 
                    RowBox[{"WidthMax", "[", "8", "]"}]}], "}"}]}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["min-width", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["5px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"WidthMin", "[", "4", "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2001914491][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2001914491]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2001914491][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {775., {68.5, 75.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7618399900693088`*^9, 3.761842584796765*^9, 
  3.761843402930993*^9, 3.7618434438917437`*^9, 3.7620015496141367`*^9},
 CellLabel->"Out[12]=",
 CellID->502989499,ExpressionUUID->"d1bb273c-284b-4532-b42e-88b288b0a6ec"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " to process the ambiguous translations from CSS  by providing an interface \
expression."
}], "MathCaption",
 CellChangeTimes->{{3.7618423237561607`*^9, 3.761842325317551*^9}, {
  3.76184236147654*^9, 3.7618424591977396`*^9}, {3.761842999536763*^9, 
  3.7618430003306103`*^9}},
 CellID->405165279,ExpressionUUID->"a68d77db-eabc-4507-8035-f3d0d441e47a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Pane", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618409789131007`*^9, 3.761840980557632*^9}, {
  3.761841492723339*^9, 3.761841515308422*^9}, {3.7618422428425007`*^9, 
  3.7618422435129128`*^9}, {3.7618427111069574`*^9, 3.7618427116393175`*^9}},
 CellLabel->"In[68]:=",
 CellID->184746180,ExpressionUUID->"8af05fff-71a0-4d45-a338-49c70bba151b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], ",", "Automatic"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.76184098203621*^9, 3.761841031496909*^9, {3.7618414938331327`*^9, 
   3.7618415155970583`*^9}, {3.7618422360021863`*^9, 3.7618422442248497`*^9}, 
   3.761842674351761*^9, 3.761842711876877*^9, 3.76184345350679*^9},
 CellLabel->"Out[68]=",
 CellID->284330788,ExpressionUUID->"95b0fdcd-1578-4abc-a0fd-f5983d556dcc"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Functions ",
 ButtonBox["WidthMin",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/WidthMin"],
 ", ",
 ButtonBox["WidthMax",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/WidthMax"],
 ", ",
 ButtonBox["HeightMin",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/HeightMin"],
 ", and ",
 ButtonBox["HeightMax",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/HeightMax"],
 " are inert wrappers that assist in disambiguating the CSS translation."
}], "Text",
 CellChangeTimes->{{3.761843591860756*^9, 3.7618436506755075`*^9}},
 CellID->539727440,ExpressionUUID->"9275df75-74aa-4e1c-a3a2-cd4725ccc850"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Merging Multiple CSS Rules", "Subsection",
 CellChangeTimes->{{3.761843717842208*^9, 3.7618437406080384`*^9}},
 CellID->316215944,ExpressionUUID->"68a61e06-6c12-4227-b501-526c258ae0cb"],

Cell[TextData[{
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " processes options without regard to origin, specificity, or importance. \
Though imported CSS data implies a common origin, rule importance and \
selector specificity remain.  ",
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " mimics the effect of multiple selectors targeting the same element and \
takes selector specificity and importance into account."
}], "Text",
 CellChangeTimes->{{3.7619994818369064`*^9, 3.761999486165533*^9}, {
  3.761999517908464*^9, 3.761999583654604*^9}, {3.7620011766756926`*^9, 
  3.762001181480138*^9}, {3.762001332571143*^9, 3.762001393668722*^9}, {
  3.7620020713592467`*^9, 3.762002144325029*^9}, {3.762002187037466*^9, 
  3.7620022764470215`*^9}},
 CellID->347570650,ExpressionUUID->"c7eb56ce-b70c-4e20-9e47-59001223421d"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ResolveCSSCascade",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"], "[", 
     RowBox[{
      StyleBox["type", "TI"], ",", 
      StyleBox["data", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["sel", "TI"], 
         StyleBox["1", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TI"]}], "}"}]}], "]"}], Cell[
    "follow CSS cascade across multiple selectors in CSS data", "TableText",
     ExpressionUUID->"8cefe7ec-4d13-4391-8743-0cd2e0e365d4"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.7620014055779066`*^9, 3.7620014175851088`*^9}, 
   3.7620014760585155`*^9},
 CellID->454154062,ExpressionUUID->"72cae841-559f-4d42-a501-5dc826e1bf14"],

Cell["Merge across multiple selectors.", "Caption",
 CellChangeTimes->{{3.762001492091439*^9, 3.7620015020642543`*^9}},
 CellID->353572708,ExpressionUUID->"64e4c296-7fa0-40d5-9d29-e198e7cf28d6"],

Cell[CellGroupData[{

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "MathCaption",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->104691956,ExpressionUUID->"638e1d5d-e836-4a3c-b5c9-fe1c83599a66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}},
 CellLabel->"In[15]:=",
 CellID->9491473,ExpressionUUID->"351bfa7c-0c63-484b-b2b2-bb4fced9d56c"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[496554505], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[496554505]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".h", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".header", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 148058765]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[148058765][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {549., {84.5, 91.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7620016048215895`*^9, 3.7620018296021442`*^9},
 CellLabel->"Out[15]=",
 CellID->144192731,ExpressionUUID->"92882064-5658-4f0a-9a9d-c60e118fe846"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Using ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " with all interpretations would favor the last entry even though it has \
less specificity and is not important."
}], "MathCaption",
 CellChangeTimes->{{3.7620016871234503`*^9, 3.762001741307228*^9}, {
  3.762001852939741*^9, 3.7620018596596055`*^9}},
 CellID->551044751,ExpressionUUID->"042675eb-2f5a-4fe8-ace6-d260aa8b9344"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"ds", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7620017521737423`*^9, 3.7620017556886377`*^9}},
 CellLabel->"In[16]:=",
 CellID->304063679,ExpressionUUID->"c0b3547e-d61e-40f9-9d50-10f5a7c3b7aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "7.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.762001756244467*^9, 3.762001870036293*^9},
 CellLabel->"Out[16]=",
 CellID->383736224,ExpressionUUID->"40b4ea05-e2fd-427d-affd-652f5f4bbcb0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " takes into account the specificity of each selector."
}], "MathCaption",
 CellChangeTimes->{{3.7620017684885597`*^9, 3.762001784532466*^9}, {
  3.76200187749292*^9, 3.7620018967718124`*^9}, {3.7620019530738726`*^9, 
  3.762001954240514*^9}},
 CellID->339362087,ExpressionUUID->"fabc06d1-28cb-4632-b0c4-4a6a728cc652"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "ds", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}},
 CellLabel->"In[19]:=",
 CellID->202779533,ExpressionUUID->"1fe1a32c-695a-4edb-8b42-cd692a53e683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7620019400520115`*^9, 3.762001972191798*^9},
 CellLabel->"Out[19]=",
 CellID->178891418,ExpressionUUID->"a14ec947-c1f9-4f70-b05d-8903bae551f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " also takes into account the importance of each declaration."
}], "MathCaption",
 CellChangeTimes->{{3.7620017684885597`*^9, 3.762001784532466*^9}, {
  3.76200187749292*^9, 3.7620018967718124`*^9}, {3.7620019578363633`*^9, 
  3.7620019624489*^9}},
 CellID->509811264,ExpressionUUID->"f90dbe08-5bff-4859-8deb-53f1556ccaca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "ds", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.7620019388874135`*^9}},
 CellLabel->"In[18]:=",
 CellID->481809636,ExpressionUUID->"3c7cd42e-725f-40fc-9628-e530909ca049"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7620019400520115`*^9, 3.762001965651867*^9}},
 CellLabel->"Out[18]=",
 CellID->17807351,ExpressionUUID->"942922d8-dc4b-4f1f-aca3-98ee37ddffe5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS within SymbolicXML", "Section",
 CellChangeTimes->{{3.762002932516274*^9, 3.762002938964217*^9}, {
  3.76200299733066*^9, 3.762002997394638*^9}},
 CellID->69801460,ExpressionUUID->"c20c98ca-41f9-40ec-ba06-325557b7b58b"],

Cell[CellGroupData[{

Cell["Extraction", "Subsection",
 CellChangeTimes->{{3.762010903062488*^9, 3.7620109055781126`*^9}},
 CellID->42316102,ExpressionUUID->"89a0bf36-da60-41b0-827a-5c640a3a3643"],

Cell[TextData[{
 "CSS rules can be found in external stylesheets, internal stylesheets, or \
inline within a document. If a ",
 ButtonBox["symbolic XML",
  BaseStyle->"Link",
  ButtonData->"paclet:XML/tutorial/RepresentingXML"],
 " document contains CSS, then it can be extracted into interpreted CSS data."
}], "Text",
 CellChangeTimes->{{3.7620029483202686`*^9, 3.7620030161796684`*^9}, {
  3.7620032428975353`*^9, 3.76200332609205*^9}},
 CellID->153517948,ExpressionUUID->"763ef351-25d1-47aa-b77e-d4e36d567d62"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ExtractCSSFromXML",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXMLObject"], "[", 
     StyleBox["xmlObj", "TI"], "]"}], Cell[
    "extract and interpret all detected CSS", "TableText",ExpressionUUID->
     "ee62121f-c1cd-41d1-956c-e305b487506d"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.7620033387420444`*^9, 3.7620033789092484`*^9}, {
   3.7620094807740993`*^9, 3.762009480974239*^9}, {3.7620113483932753`*^9, 
   3.762011348643281*^9}, 3.7620162987407227`*^9},
 CellID->521402141,ExpressionUUID->"6fafbabc-1b59-47a2-b604-fac259a5a89a"],

Cell["Import CSS directly from symbolic XML.", "Caption",
 CellChangeTimes->{{3.762003391131372*^9, 3.762003397067482*^9}},
 CellID->24859362,ExpressionUUID->"28de61f6-4a96-4ebc-8262-942e19d429bc"],

Cell[TextData[{
 "Often external CSS file locations are given relative to the current XML \
file. In these cases it is best to have the ",
 ButtonBox["$Path",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/$Path"],
 " defined with these locations included, otherwise the nested CSS files \
won't be found. Optionally the root directory can be specified."
}], "Text",
 CellChangeTimes->{{3.7620038678735523`*^9, 3.762003925597164*^9}},
 CellID->210165798,ExpressionUUID->"249c6be0-b5a8-4f7b-adc1-9e000db926da"],

Cell[BoxData[GridBox[{
   {"\"\<RootDirectory\>\"", 
    RowBox[{
     ButtonBox["Directory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Directory"], "[", "]"}], Cell[
    "directory from where relative locations are resolved", "TableText",
     ExpressionUUID->"9bf1bc4b-0a08-45cc-ad11-8303081bd034"]}
  }]], "DefinitionBox3Col",
 CellChangeTimes->{{3.7620039778005424`*^9, 3.7620040117607346`*^9}},
 CellID->535547963,ExpressionUUID->"64557a62-00eb-4150-9da6-2b0e9c2533d6"],

Cell["Options for ExtractCSSFromXML.", "Caption",
 CellChangeTimes->{{3.762004014236946*^9, 3.7620040196712027`*^9}, 
   3.762016307609889*^9},
 CellID->118552512,ExpressionUUID->"d3b1b30b-4f0a-4494-97fb-a2ba878565a8"],

Cell[CellGroupData[{

Cell["An example XML document that contains CSS references.", "MathCaption",
 CellChangeTimes->{{3.762003435307294*^9, 3.7620034558597603`*^9}},
 CellID->285158367,ExpressionUUID->"ae9dcbec-9fdf-4806-a669-920720774e8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XMLObject\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"doc", ",", "6"}], "]"}]}], "Input",
 CellChangeTimes->{{3.762003477069992*^9, 3.7620035604514513`*^9}, {
  3.7620036366111965`*^9, 3.7620036374209423`*^9}, {3.76200516986896*^9, 
  3.7620051728350153`*^9}},
 CellLabel->"In[14]:=",
 CellID->82993485,ExpressionUUID->"76342e4e-52b2-432a-9c92-8eb1d05b7c34"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"XMLObject", "[", "\<\"Declaration\"\>", "]"}], "[", 
      RowBox[{
       RowBox[{"\<\"Version\"\>", "\[Rule]", "\<\"1.0\"\>"}], ",", 
       RowBox[{"\<\"Standalone\"\>", "\[Rule]", "\<\"yes\"\>"}]}], "]"}], 
     "}"}], ",", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\<\"html\"\>", ",", 
      RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"XMLElement", "[", 
         RowBox[{"\<\"head\"\>", ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"title\"\>", ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "\<\"Example\"\>", "}"}]}], "]"}], ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"style\"\>", ",", 
              RowBox[{"{", 
               RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"text/css\"\>"}], "}"}],
               ",", 
              RowBox[{
              "{", "\<\" /* internal CSS */\\n\\t\\tli {color: green;}     \
\\n\\t\"\>", "}"}]}], "]"}], ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"link\"\>", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\<\"rel\"\>", "\[Rule]", "\<\"styleSheet\"\>"}], ",", 
                RowBox[{"\<\"href\"\>", "\[Rule]", "\<\"test.css\"\>"}]}], 
               "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "]"}]}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}],
  Short[#, 6]& ]], "Output",
 CellChangeTimes->{{3.7620035469327574`*^9, 3.7620035606123877`*^9}, 
   3.762003639865163*^9, {3.762005170146864*^9, 3.762005173046917*^9}, 
   3.7620104460715666`*^9, 3.7620164029347982`*^9, 3.762018657751807*^9},
 CellLabel->"Out[15]//Short=",
 CellID->466973986,ExpressionUUID->"b810b353-c40c-492e-ab9d-249d2b681306"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract the CSS references.", "MathCaption",
 CellChangeTimes->{{3.762003583124219*^9, 3.762003589958075*^9}},
 CellID->91103281,ExpressionUUID->"a6b62f58-ff5e-48a1-acd1-4e39116d0e5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ExtractCSSFromXML", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7620035952123833`*^9, 3.762003605191224*^9}, {
   3.7620040314074783`*^9, 3.7620040330409555`*^9}, {3.7620050768915453`*^9, 
   3.762005081488089*^9}, 3.76201629730317*^9},
 CellLabel->"In[16]:=",
 CellID->482145865,ExpressionUUID->"fffea070-1e2d-4bfe-87fb-8e8cd38ce036"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 12, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Selector", "Specificity", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Atom[Integer], 4], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
             TypeSystem`AnyLength], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 12], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Specificity"} -> 
           1, {All, "Targets"} -> 1, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, 
              "Specificity" -> TypeSystem`PackageScope`UnknownShape, 
              "Targets" -> TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape], 2, {All, "Targets"}], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1802332189], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Selector", "Specificity", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Atom[Integer], 4], 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
             TypeSystem`AnyLength], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 12], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1802332189]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Specificity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Specificity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Specificity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Specificity"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["li", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    1, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 20, 3, 1}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 20, 3, 1}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    1, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["green", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 20, 3, 2}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 20, 3, 2}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    1, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    1, 
                    Key["Targets"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove}, {
               Pane[
                Annotation["body", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    2, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    2, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["background", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "url(\"html-background-png-7.png\") repeat darkblue", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5]}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["#dfe366", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.5934640522875817, 
                    0.26666666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["223", "255"], ",", 
                    FractionBox["227", "255"], ",", 
                    FractionBox["2", "5"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    3, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    3, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["32px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "24.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-weight", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["bold", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontWeight", "\[Rule]", "Bold"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["ul", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[4, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    4, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[4, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 20}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 20}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    4, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[4, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[4, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    4, 
                    Key["Block"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[4, 
                   Key["Block"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {
               Pane[
                Annotation["p", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    5, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 8}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 8}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    5, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-family", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Times New Roman", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 12}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 12}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    5, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    5, 
                    Key["Targets"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Targets"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    5, 
                    Key["Block"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[5, 
                   Key["Block"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               Pane[
                Annotation["h3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    6, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 6}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 6}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    6, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["counter-increment", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["question", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"CounterIncrements", "\[Rule]", 
                    RowBox[{"{", "\"question\"", "}"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 10}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 10}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    6, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["height", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["50px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"HeightMin", "[", "38", "]"}], ",", 
                    RowBox[{"HeightMax", "[", "38", "]"}]}], "}"}]}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    6, 
                    Key["Targets"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Targets"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["13 total \:203a ", ""], 
                    Style[
                    Superscript["13 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    6, 
                    Key["Block"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[6, 
                   Key["Block"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               Pane[
                Annotation["h3:before", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    7, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 6}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 6}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    7, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["content", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["counter(question) \" \"", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{CellDingbat -> Cell[
                    TextData[{
                    CounterBox["question"], "."}]], CellLabel -> "\" \""}, 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[{CellDingbat -> Cell[
                    TextData[{
                    CounterBox["question"], "."}]], CellLabel -> "\" \""}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    7, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 10}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 10}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    7, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    7, 
                    Key["Targets"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[7, 
                   Key["Targets"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Targets"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove}, {
               Pane[
                Annotation["h2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{19.200000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    8, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 4}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 4}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    8, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["12px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "9.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-family", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["arial", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    8, 
                    Key["Block"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[8, 
                   Key["Block"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               Pane[
                Annotation["a", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{9.600000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    9, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 8, 3, 2}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 8, 3, 2}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    9, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["width", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"WidthMin", "[", "15", "]"}], ",", 
                    RowBox[{"WidthMax", "[", "15", "]"}]}], "}"}]}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[9, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{1, 0, 0, 0}, ShowStringCharacters -> False], 
                    Style[
                    Style[{1, 0, 0, 0}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    10, 
                    Key["Specificity"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Specificity"]]], "Mouse"]], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 4}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 4}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][{
                    10, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
                  GeneralUtilities`Slice[10, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    12 (-10), {1, 12 - -10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 10, {
                    1, 12 - -10 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    12, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 10, {
                    1, 12 - 10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    12 10, {1, 12 - 10 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    12 (-10), {1, 12 - -10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 10, {
                    1, 12 - -10 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    12, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 10, {
                    1, 12 - 10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    12 10, {1, 12 - 10 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079}, 
                    100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 787646079]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[787646079][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1694., {389., 396.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7620036070186224`*^9, 3.762003644139807*^9, 3.7620044856048317`*^9, 
   3.762004727068948*^9, 3.7620050846010942`*^9, 3.762010448563137*^9, {
   3.7620164065174475`*^9, 3.762016432187086*^9}, 3.7620166005441256`*^9, 
   3.762018664563016*^9},
 CellLabel->"Out[16]=",
 CellID->150737207,ExpressionUUID->"535b0e52-bb87-4ce3-908b-267b4942a498"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The CSS data extracted from symbolic XML has two additional columns: \
\"Specificity\" and \"Targets\". \"Targets\" are the positions of the ",
 ButtonBox["XMLElement",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/XMLElement"],
 " instances in the symbolic XML that the selectors target. It is often the \
case that selectors target multiple elements. "
}], "Text",
 CellChangeTimes->{{3.762005141399008*^9, 3.762005162641262*^9}, 
   3.7620052046388645`*^9, {3.76200523947278*^9, 3.7620053118476954`*^9}},
 CellID->102410,ExpressionUUID->"d72fd3b1-6132-48fb-a33d-56165054de8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inheritance", "Subsection",
 CellChangeTimes->{{3.7620109122128963`*^9, 3.762010913524852*^9}},
 CellID->16111444,ExpressionUUID->"75018579-d4c7-4118-a8b8-72456943fcff"],

Cell["\<\
An XML document consists of nested elements. A subset of CSS styles like \
\"font-family\" and \"color\" are automatically inherited by child elements. \
Thus, even if a selector targets an element with a set of style rules, the \
element could also be styled due to inheritance from styles of its ancestors.\
\>", "Text",
 CellChangeTimes->{{3.762010924876912*^9, 3.7620110892288876`*^9}, {
  3.7620111466779656`*^9, 3.762011148291095*^9}},
 CellID->289490881,ExpressionUUID->"a747082f-8748-4d02-bab3-e4ca82f5348e"],

Cell["\<\
WD style inheritance is similar except all options are effectively inherited, \
rather than just a subset of them.\
\>", "Text",
 CellChangeTimes->{{3.762010924876912*^9, 3.762011165663863*^9}, {
  3.762011197713199*^9, 3.762011197713199*^9}},
 CellID->43750844,ExpressionUUID->"86f3b622-00a9-49dc-92f8-d702b6bc9b0f"],

Cell["\<\
With CSS data that targets XML, style inheritance becomes another aspect of \
the CSS cascade to consider for proper style transfer to WD.\
\>", "Text",
 CellChangeTimes->{{3.762010924876912*^9, 3.762011165663863*^9}, {
  3.7620111985163956`*^9, 3.762011276939787*^9}},
 CellID->709333429,ExpressionUUID->"673e1595-c3eb-491c-be17-ccf50ca1ed6c"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ResolveCSSInheritance",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/ResolveCSSInheritance"], "[", 
     RowBox[{
      StyleBox["pos", "TI"], ",", 
      StyleBox["data", "TI"]}], "]"}], Cell["\<\
calculate style at position pos taking inheritance into account\
\>", "TableText",ExpressionUUID->"7720c6ea-3c26-4c4e-999f-c6be370cf0df"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.762011316990796*^9, 3.7620114393151026`*^9}},
 CellID->36083,ExpressionUUID->"aeaad669-6bdc-457b-bfad-78ce99c2d502"],

Cell["Function to resolve CSS inheritance.", "Caption",
 CellChangeTimes->{{3.762011447627579*^9, 3.7620114514141283`*^9}, {
  3.7620117654747467`*^9, 3.762011771152791*^9}},
 CellID->796978057,ExpressionUUID->"27883294-fd7b-45c0-900a-e36a3310eb7d"],

Cell[CellGroupData[{

Cell["\<\
The third rule of the example CSS data has two style declarations. \
\>", "MathCaption",
 CellChangeTimes->{{3.7620148077040453`*^9, 3.7620148717585545`*^9}, {
  3.7620153654459496`*^9, 3.7620153713276777`*^9}},
 CellID->4454069,ExpressionUUID->"3915d0f6-f16c-4a03-9cf8-28e0a78da366"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"3", ",", "\"\<Block\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.76201456824076*^9, 3.762014649517503*^9}, {
  3.7620146840478525`*^9, 3.7620146957354827`*^9}},
 CellLabel->"In[17]:=",
 CellID->863367331,ExpressionUUID->"e75b80ba-316f-4d26-93a2-1c80954879f8"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Important", "Property", "Value", "Interpretation"}, {
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Important"} -> 1, {All, "Property"} -> 
           1, {All, "Value"} -> 1, {All, "Interpretation"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Important" -> TypeSystem`PackageScope`AtomShape[36], "Property" -> 
              TypeSystem`PackageScope`AtomShape[105.60000000000002`], "Value" -> 
              TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
              "Interpretation" -> TypeSystem`PackageScope`UnknownShape]]], 
           2, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1323779585], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Important", "Property", "Value", "Interpretation"}, {
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], TypeSystem`AnyType}], 2], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1323779585]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897349211][{All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[All, "Important"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897349211][{All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[All, "Property"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897349211][{All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[All, "Value"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1897349211][{All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[All, "Interpretation"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["32px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "24.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-weight", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["bold", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontWeight", "\[Rule]", "Bold"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
                  GeneralUtilities`Slice[2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1897349211][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1897349211]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1897349211][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {432., {53.5, 60.5}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7620145756701393`*^9, 3.762014649767456*^9}, {
   3.7620146855959406`*^9, 3.762014696126062*^9}, 3.7620166540168552`*^9, 
   3.7620186711474686`*^9},
 CellLabel->"Out[17]=",
 CellID->364845999,ExpressionUUID->"8358765d-caa6-4eb9-9712-88d2c969486d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The third rule's target element has a parent element that may also contribute \
to the computed styles. In this case FontColor is inheritable.\
\>", "MathCaption",
 CellChangeTimes->{{3.762015358556986*^9, 3.762015401768866*^9}, {
  3.7620157211081696`*^9, 3.762015738029183*^9}, {3.762015783526797*^9, 
  3.7620157986830206`*^9}},
 CellID->162844997,ExpressionUUID->"3c338866-9a29-4807-aa11-a80669d2f11f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parentPosition", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{
     RowBox[{"ds", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "\"\<Targets\>\""}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", 
       RowBox[{";;", 
        RowBox[{"-", "3"}]}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Extract", "[", 
   RowBox[{"ds", ",", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"ds", ",", "parentPosition"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{";;", 
        RowBox[{"-", "3"}]}]}], "]"}], "]"}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{
   "1", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}], 
   "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7620149218365855`*^9, 3.762014976059309*^9}, {
   3.7620150104532895`*^9, 3.7620150335033445`*^9}, {3.7620154041330137`*^9, 
   3.7620155757728896`*^9}, 3.762015609214817*^9, 3.762015696994156*^9, {
   3.7620157467447553`*^9, 3.7620157746053286`*^9}},
 CellLabel->"In[18]:=",
 CellID->33969896,ExpressionUUID->"d14a3b3d-45aa-44b0-8ecd-f9985e58522f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"BackgroundAppearanceOptions", "\[Rule]", "\<\"Repeat\"\>"}], 
     ",", 
     RowBox[{"BackgroundAppearance", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2GdzVVUUgOGA44wf/Qn6yYq9ID30XgKht4SEiCVoggL23nvXX2su59zN
7LXOjj/AZ+adDDADJPeeu/daz4Oz16eurp2YmFi+b+XL1MzNyaWlmdvH71/5
zfTi8rWFxfm5fYs35hfml9bP3rPyhw+sfLl178TE6NdrHtow0MMbU5uqHilt
Hu7RLXVbY4+Vtg33+GTd9ti6rh3NnthZtyv2ZNfu4Z7ak9pb9XRp33DP7E8d
qHq2dHC45w7VHY49Xzoy3AtHU8eqXixNDbf+eN2J2Eul6eE2nKw7FdvYdXq4
TWdSZ2Obu86lzo/akrtQtbV0se5S37bc5arJ0kzdbN/20JXYjtJc3XzfztDV
2K7SQt3LfbtD12J7ul7pWnu3V/v2hl6r2ld6PbU4an/uetWB0hupN0cdzC1V
HSot193oO5x7q+pI6e26m31HQ7dix7pup97pmwq9Gzv+XqP3+06EPqia/rDd
R30nQx9Xnfqk0ad9p3OfVZ35vN0Xo87mvqw691Wjr/vOh76JXfi20Xd9F0Pf
xy790OjHvsuhn2IzPzf6ZdRs7teqK7+1+33UXO6Pqvk/G/3VdzX0d2zhn/8o
/5Xwb5b/q/XNhO85/1DdD7vKqxFet/zCdi946+3Ib1x4Z8s73nok8sMTnq7y
1LUey/wAhye8PPmtj0b4BOWPWPfRW+WzGT7F+WNeToDWERFOknDOlPNnlTMq
nGbhrCtnYOuQzMdpOG/LOTxwRN85uvORHs78chfEO2J8d4Q7JV865T6K99T4
/gr3Wr74ugtx4KIc36Hhbs2Xb3cpD1zW43s83O/h9i9TwXhOWHO3O4NEHjDC
BFImkzixjCeZPOSEKahMR3FqGk9TedAKk1iZ0OLkNp7owqSXR8EyJcbpcTxV
hmkzj6PdmDowvt4Za/O4m0fi1vDcjdZ55A4zeWt0L7N9HvvDXtBaH8p+EfaO
vJi0Vpiy4+T1J+xHrTWq7Flh/8oLWmuVK7te2AHzkthaJ7tlMy+hYUtdZZ/t
Ft68CIdNubVQl407L+NhW28t9WXrDxqQuWBQFTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwhv+rM/wL3KL6dw==
         "], {{0, 800}, {1400, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
         Association[
          "XMP" -> Association[
            "DublinCoreSchema" -> Association["Format" -> "image/png"], 
             "BasicSchema" -> 
             Association[
              "CreateDate" -> 
               DateObject[{2011, 9, 23, 20, 14, 5.}, "Instant", 
                 "Gregorian", -5.], "CreatorTool" -> 
               "Adobe Fireworks CS5 11.0.0.484 Windows", "ModifyDate" -> 
               DateObject[{2011, 9, 23, 20, 14, 24.}, "Instant", 
                 "Gregorian", -5.]]], "Comments" -> 
           Association[
            "Creation Time" -> 
             DateObject[{2019, 3, 19, 16, 11, 0.5630895`7.503152418233203}, 
               "Instant", "Gregorian", -5.], "Software" -> 
             "Adobe Fireworks CS5"]]],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{1400, 800},
       PlotRange->{{0, 1400}, {0, 800}}]}], ",", 
     RowBox[{"Background", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0., 0.5450980392156862], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.3633986928104575],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0.`", ",", "0.`", ",", "0.5450980392156862`"}], "]"}], 
          NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0., 0.5450980392156862]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0., 0.5450980392156862],
       Editable->False,
       Selectable->False]}]}], "}"}], ",", 
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[223, 255], 
           Rational[227, 255], 
           Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["227", "255"], ",", 
            FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[223, 255], 
      Rational[227, 255], 
      Rational[2, 5]],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7620149297007046`*^9, 3.7620149665121984`*^9}, {
   3.7620150206192303`*^9, 3.762015034711525*^9}, {3.762015411767454*^9, 
   3.762015578106134*^9}, 3.762015609667961*^9, 3.762015662538742*^9, {
   3.76201574943277*^9, 3.7620157750573907`*^9}, 3.7620166562043877`*^9, 
   3.7620186728980455`*^9},
 CellLabel->"Out[19]=",
 CellID->263764860,ExpressionUUID->"90b3be0b-86b0-49de-8a6b-13720c638a02"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 ButtonBox["ResolveCSSInheritance",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInheritance"],
 " to also include inherited styles at the target element."
}], "MathCaption",
 CellChangeTimes->{{3.762014900273418*^9, 3.7620149157264585`*^9}, {
  3.7620158075282793`*^9, 3.762015822511097*^9}, {3.7620158777424736`*^9, 
  3.7620159007849736`*^9}},
 CellID->102229160,ExpressionUUID->"7e86e011-1380-419a-9793-44eb9b5000b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInheritance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}], ",", "ds"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.762015895810996*^9, 3.7620159249205256`*^9}},
 CellLabel->"In[20]:=",
 CellID->19077661,ExpressionUUID->"1c4ed851-4a99-46f6-a910-fc1e4d39163c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[223, 255], 
           Rational[227, 255], 
           Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["227", "255"], ",", 
            FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[223, 255], 
      Rational[227, 255], 
      Rational[2, 5]],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "24.`"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellChangeTimes->{3.762015925576846*^9, 3.7620166659699*^9, 
  3.7620186752974663`*^9},
 CellLabel->"Out[20]=",
 CellID->183093850,ExpressionUUID->"669e9606-d45c-45ec-815a-37cd41a42262"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making a Custom Stylesheet from CSS Data", "Section",
 CellChangeTimes->{{3.762009629899856*^9, 3.7620096391629467`*^9}},
 CellID->78394971,ExpressionUUID->"38bebe8d-4785-40af-933b-257d3e857511"],

Cell[TextData[{
 "With ",
 ButtonBox["ResolveCSSInheritance",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInheritance"],
 " and ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 ", the computed style of XML elements can be calculated and stored as a WD ",
 ButtonBox["StyleData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StyleData"],
 " expression."
}], "Text",
 CellChangeTimes->{{3.76201685854233*^9, 3.7620168962283564`*^9}, {
  3.7620173503088646`*^9, 3.762017373121933*^9}},
 CellID->211922561,ExpressionUUID->"4ee8f495-e326-40b9-80f1-7c8a2cd4b193"],

Cell[CellGroupData[{

Cell[TextData[{
 "A helper function to create ",
 ButtonBox["StyleData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StyleData"],
 " cells of a particular type from the CSS example data."
}], "MathCaption",
 CellChangeTimes->{{3.7620169012837715`*^9, 3.7620169560072165`*^9}, {
  3.762017379225069*^9, 3.762017379530976*^9}},
 CellID->594551925,ExpressionUUID->"c8a0c8a8-29e3-49ed-8a4b-5b34b16ca900"],

Cell[BoxData[
 RowBox[{
  RowBox[{"styleDataCell", "[", 
   RowBox[{"name_", ",", "type_", ",", "pos_"}], "]"}], ":=", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"StyleData", "[", "name", "]"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"ResolveCSSInterpretations", "[", 
      RowBox[{"type", ",", 
       RowBox[{"ResolveCSSInheritance", "[", 
        RowBox[{"pos", ",", "ds"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.76201056863466*^9, 3.7620105794622717`*^9}, {
  3.76201066327857*^9, 3.76201067225149*^9}, {3.7620169644604893`*^9, 
  3.7620170108336935`*^9}},
 CellLabel->"In[21]:=",
 CellID->156314717,ExpressionUUID->"d6dc3b7d-1570-403c-8679-156cddbd0cc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A style data cell at the Notebook level:", "MathCaption",
 CellChangeTimes->{{3.7620169850499697`*^9, 3.762016996285552*^9}, {
  3.76201703074975*^9, 3.762017036888563*^9}},
 CellID->62013518,ExpressionUUID->"095658f7-8993-4f6d-adf6-fb325271dc3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"body", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<Notebook\>\"", ",", "Notebook", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762017020074896*^9, 3.7620170438401966`*^9}},
 CellLabel->"In[22]:=",
 CellID->400050939,ExpressionUUID->"4f79950d-3cc6-4ff0-92b9-aeff62f864c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A sequence of style data cells at the Cell level.", "MathCaption",
 CellChangeTimes->{{3.762017057854624*^9, 3.762017066167235*^9}},
 CellID->343002500,ExpressionUUID->"6daada7c-ccc8-49de-b204-140509ac0462"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h3", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<question\>\"", ",", "Cell", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "6"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<h1\>\"", ",", "Cell", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"li", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<li\>\"", ",", "Cell", ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "3", ",", "2", ",", "3", ",", "20", ",", "3", ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<p\>\"", ",", "Cell", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "8"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<h2\>\"", ",", "Cell", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.7620170788341565`*^9, 3.7620171388429317`*^9}},
 CellLabel->"In[23]:=",
 CellID->42427840,ExpressionUUID->"acedad05-b568-42a6-84d5-18846f8637f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A special case: the source XML contains an element \"h3\" with an inline \
style, but is otherwise identical to other \"h3\" elements. Since we already \
created a StyleData[\"question\"] cell with these properties, we exclude the \
duplicates.\
\>", "MathCaption",
 CellChangeTimes->{{3.7620171582950897`*^9, 3.7620171801641865`*^9}, {
  3.762017398766122*^9, 3.762017402207057*^9}, {3.7620175422183895`*^9, 
  3.7620176247315717`*^9}, {3.7620176653011894`*^9, 3.762017736020607*^9}},
 CellID->96674661,ExpressionUUID->"5842295b-9e8f-4f5b-b946-28773e5e3d10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h3special", "=", " ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"StyleData", "[", 
      RowBox[{"\"\<questionSpecial\>\"", ",", " ", 
       RowBox[{"StyleDefinitions", "\[Rule]", 
        RowBox[{"StyleData", "[", "\"\<question\>\"", "]"}]}]}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Complement", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ResolveCSSInterpretations", "[", 
         RowBox[{"Cell", ",", 
          RowBox[{"ResolveCSSInheritance", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "14"}], "}"}], 
            ",", "ds"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ResolveCSSInterpretations", "[", 
         RowBox[{"Cell", ",", 
          RowBox[{"ResolveCSSInheritance", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "6"}], "}"}], 
            ",", "ds"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76201764050077*^9, 3.762017656933755*^9}, {
  3.762017740097374*^9, 3.76201777176271*^9}},
 CellLabel->"In[28]:=",
 CellID->351504644,ExpressionUUID->"f3ee26c2-98be-41fb-8fbe-bb82146c4c0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create the custom stylesheet to use later.", "MathCaption",
 CellChangeTimes->{{3.762017821373559*^9, 3.76201782736473*^9}},
 CellID->777100582,ExpressionUUID->"cbcd88f9-48b7-434c-83fc-3782de3de931"],

Cell[BoxData[
 RowBox[{
  RowBox[{"customStylesheet", "=", 
   RowBox[{"NotebookPut", "@", 
    RowBox[{"Notebook", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cell", "[", 
         RowBox[{"StyleData", "[", 
          RowBox[{"StyleDefinitions", "\[Rule]", "\"\<Default.nb\>\""}], 
          "]"}], "]"}], ",", "body", ",", "h1", ",", "h2", ",", "h3", ",", 
        "h3special", ",", "p", ",", "li"}], "}"}], ",", 
      RowBox[{
      "StyleDefinitions", "\[Rule]", 
       "\"\<PrivateStylesheetFormatting.nb\>\""}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7601382969666023`*^9, 3.760138323953228*^9}, {
  3.76013843281765*^9, 3.760138464824204*^9}, {3.760311576594787*^9, 
  3.7603115784552045`*^9}, {3.760311974251385*^9, 3.7603119745072765`*^9}, {
  3.762017202726596*^9, 3.7620172132820415`*^9}},
 CellLabel->"In[29]:=",
 CellID->22162130,ExpressionUUID->"863f0f60-0722-484d-bc78-a3c007980d31"],

Cell[BoxData[
 RowBox[{"NotebookSave", "[", 
  RowBox[{"customStylesheet", ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<CustomStylesheet.nb\>\""}], 
     "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762018697545988*^9, 3.7620187181423097`*^9}},
 CellLabel->"In[30]:=",
 CellID->772499,ExpressionUUID->"ce3b944f-1159-4ddd-8941-5fedc6821560"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using a Custom Stylesheet on a Notebook", "Section",
 CellChangeTimes->{{3.7620168371584554`*^9, 3.762016844395198*^9}},
 CellID->534745247,ExpressionUUID->"97d1cac3-18ff-46aa-a701-22b76521fa5e"],

Cell["\<\
Style transfer is not the same as content transfer. Any extracted CSS styles \
can be placed in StyleData cells within a WD stylesheet, but cell content \
needs to be created by the user that takes advantage of these new named \
styles.\
\>", "Text",
 CellChangeTimes->{{3.762015998413477*^9, 3.762016058333331*^9}, {
  3.762016103049348*^9, 3.762016137721884*^9}, {3.762016680872822*^9, 
  3.7620167521525474`*^9}, {3.762016788758349*^9, 3.762016805678434*^9}},
 CellID->194845850,ExpressionUUID->"11b1eebd-be77-4d11-a5a4-9f2e6a778f07"],

Cell["\<\
A prepared example notebook exists in the CSS examples directory. It uses the \
styles extracted from the XML document earlier in this tutorial.\
\>", "Text",
 CellChangeTimes->{{3.7620178388512363`*^9, 3.76201789916982*^9}},
 CellID->770920200,ExpressionUUID->"0907bab5-2b59-4a20-90ac-3e811a6b7210"],

Cell[CellGroupData[{

Cell["XXXX", "MathCaption",
 CellID->608959116,ExpressionUUID->"9229b8d9-e8e0-4d69-82ec-012d529a501f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nb", "=", 
   RowBox[{"NotebookOpen", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"cssExamplesDirectory", ",", "\"\<BareNotebook.nb\>\""}], "}"}],
      "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7620187570021343`*^9, 3.76201877356995*^9}},
 CellLabel->"In[31]:=",
 CellID->412792471,ExpressionUUID->"ded31762-7984-4202-aeb7-6d599767c4c0"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"nb", ",", 
   RowBox[{"StyleDefinitions", "->", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"cssExamplesDirectory", ",", "\"\<CustomStylesheet.nb\>\""}], 
      "}"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7620187812573137`*^9, 3.7620187968374557`*^9}},
 CellLabel->"In[32]:=",
 CellID->683559455,ExpressionUUID->"ea4c2308-36e9-4ed1-9d6d-6eb43b20f994"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
bm2pQ8dlzLkGl7ij41OfeLYfvbaTTlwFt7139huSbEcpvpyZHF6arVvOQjX9
dFLspUt+11k284dqHgl/L4NLdBNOxLmLFDu9lRf2TmgdgaxbP5fUG8noe5J6
L10FsqwP4CZ8hzvFF61S9p497hercyAzb0Ft9Vl/IjfthnBzPutbcDopaZDm
T757Dlv/pbKvpdoHfZXh/hBkd1ZDkGW4qdsMZHC/SO/qdAZk6e8l/cPo7nbb
gizb33X3g0zDFe3W76H/tdnfSLchyO6sliHI3O5mlsso03tVMjcRd3/sMfel
+UYy248CGdvOnnrTveI4evsArFVfb3nFsjqApKepbUztiA6wVdrEMsKnYnqF
rMsB62d7cVIQxu06ZAmypHvRT9l2RnJHber70N7BoPXHu76ZrL+dttM0z0G+
6X7M9qtk9VN+aq6/KePr4fj2Znc6yY7nRvLftX6o9fYvm/0aZ33NFbB4R//l
un0JnVfD5e7hcjG1P23N8+3s7zrFXdE8cvsXGFtnW/pzZOzzcP5Otc+urT5z
+U8cXzH9x5B8X5ntxdq4fT92ueY8HVjU7YaZ3WmqvercVGen70g7e6Lfd2w/
tk57/NxXcr0OnQCZ/fftPGXXM5Jvm1dJ69ruEg63WfZy3PHlNG9/5lZT/i7S
/IPQPHHXr4fjV5LR6aRwLabzu052Ro4lO+ECkauqXco9u/yd4Lwaye4ejoup
3RKefNJgZ4YH62wdXj3XbzW2zrbOKjJ9Bj/jv8Ac2ze+TKlvDhntxXa7sx+/
8y867XQ671FxO03zr3vzj4T0+tbPqHMgc/3MUl2HziuyJJtKeUYpr5L+aZqn
Y/t8M2iuX351+3MK4/RAluoc3c+io69H+qfj9itNdjzp/xCcS2Z/zeXZynPm
9wPtrpDy8rrePVwvplwSPsg23u8S72U6V8/1W42ts60rQNZ1E/c3H2Ryt+Lr
5nI6OQkyawvqkmV3bEk+v1TXIbu7qL6K26Y6OCP1doYgUyt31rVoHZn1JU11
zFl8at0NMscqKY4n/R9CV15zcSBt+uQYTJUl/8T1wfRBplyXAmH1bVlwrAOQ
pfPz6cK54zu9dXqOrM3NO5Rmc91+t7oWk94KrL/R7KfTDSDTTlP7LmcCMjXW
+Qci2uqNG46IWkxxHbLZkRka6bYp9zOSb3dwlVxWdh5Ahged5M4Pc3qOCRaX
T0G7R6nz6OBTM35TaX89OnE6qY4n/R9C0jtANnAQADQ23sE3x+26JXctauEj
mlOxvj7TaZEbbpc0navn+q3G1tnWpcEeWbgW7c5lNeYI9tDe7Eywh5MItkO3
n47dFZDVAbj+MWycd2Ygs+aa6C+wMxfHccrGX4sd+0YyaNqn7aCX6xnBuyrM
xmV2PultzTzqrL6a7l9OG5CTHLN1cmLP9el9aq6/qQ6/EumfjnOVlMfv+F3r
XzDjy2ZbMvtrLjemHanGoRvJP3H7NU8S7KFtV99NlnNVKW6PHfx8HN9qbJ1t
mNkDW662bImJDVvuNvxWd0tDkGHL1YY/eWy3X8Nvdbc0BBm2XG34k8d2+zX8
VndLQ5Bhw4YNG7a8bhxk/4INGzZs2LDlZ+Mg+wM2bNiwYcOWn42DrEfvEhfr
M8BhA5XFYrH7B47t8XcDmQ3itmbPYTpO/xUjjwzmdv+gihg2bNiwYcPWUbtx
48ZNA9mp187+oGL6fxr8Y2aV3LYePkEPg/7LXz7woypq/2nI+B/8OECX7/HI
ELv1VfYjd+tXatpQuz3KbVhSe2y4aWV2+wG3Ee7Wv9xhIw0rVDbK3byjHTbG
sCJlY93t8XGmVdjNp+zH7lZc6bDxhv1QWZW7PTHBtIl2e1LZJHcrmWxatd0G
cJvibgP9Dqux2yBuUx02DWyw06YbNkRZrWkBYT9yWtCwUmV1ps0QNtRmM+02
TNks02YLG26zeruVKZtj2lxhI2w2z27l3Bq4fcuyRmEjbdZk2Chl8x3WDDba
aQsMG6NsocMWgY112mLDxilbYtpSYRVOW2bYj5UtN22FsEqbrbTbeG6rHLZa
WJXN1thtwtoktk7YRJuFDJu0Prm1CJtssw2GVW9MYpuETXHaZsP8W5JbGKzG
aVtvJshOnzn743nLh0xvpDZ4WuPh6DluFGSqP6R2PrcfN6w4feYNBBmCDEGG
IEOQIchyB2Svnj237Kn9DRt2MtvlqhDnbdjVsBFs2fZnXj17HkGGIEOQIcgQ
ZAiynALZkegbB06+zu3qJ9e5UX6p/oGTZ7kdfeUcggxBhiBDkCHIEGTcth49
dV62fcejtxBksQ/j7/7yVz/7mNon3L7+b/+Dgoz+S/v0LWV0SQQZggxBhiBD
kCHInIqMsuxWgaz1xKnf/p//13//3e+p/f0//hP/91/+9L8oyOi/tnG6ZOtL
pxBkCDIEGYIMQYYg4yDTRVk6IAsGg10OsmVbdn3zzTfJnrP+93//d/0lXZIu
jyBDkCHIEGQIMgRZFoosKFvXguzhsknv/uy9NPOH0CUfLq9GkCHIEGQIMgQZ
gixTkAXNlhHIvLsCX39T77TYruEUZH/xyOB9rcfb2ztOf0mX2df64l/0+1FO
gcz/ah2cztWp/v43G2TEW+nfNz12dYZ1Sa/OiOyb5J00lhSND71W49Uo5l1a
G7sqLz4sNtn7eIV3X21osgEy7zJzsaervXTw6dpQdUUKkJHiSf6nAzF1GGem
eYszABl5otq/Pxj7cLo3JciIvzbm9kVy+Wo9U9NNIPM+O8t9jwcCnGL+Nxzj
XQoy78HZ7gdwcFZ2ICPDZ0ecG/xlvbes3n/O7fKeEywjM+doH8ccfxog88ya
q3+CscMNOsg8sxsiv5wjD2BuqD6HQFZzIfn37eO5sYuNoU2LuxBknsYF+oWK
bEGQdQHIdH4lY1lqRUb6DPNHtY8+OtorFRkF2V899qNDL56K/+f//E//9E9/
/vOfnQij4/TdQydO/9UPht5akJFFUyOLLJCRqsnW3Xvv6JsJMu+S6WLXV6eH
llRyRUaKKv2vSa5dtUDGB2MAL9BiZPLk0Bm+2AwdZH42GGPwotgi1dXWYslB
RikW+tD5Aw/4XVlmgowizLs8KE6kI5AJnNXoOKvza1rMWzMt8mH3gowaGVxr
0OqNgNdUZGRIIPRR/dcfzfB2jyIjpTPNA5jp7ZwioywL/VLjyxuWIiMz6nXM
hWYYioyMmBs6Vx87NCd9RUZZpjaog8wzex77WOeEZjfVnOcsm1eUMyCjKswz
bpGOs8gmUGSehsU1F+dKojWGGrpMkeksSwdkni3zI1sQZB2DLNnLNF2Lui6L
NA/UvYs8P9XomQteeuXMlbfePvXaWZvR8QHVs1WiqlsFMvJYJf0N6iC7VYrM
/1qdpJXf63AtUvGlg4yol6Zr0btvhg4yudhUr+la9D49IzXI2AJuf6me8acG
GSBMJ2CaICvxa9w0QEaNlNTQd7sVZD0GTyOrZ1pf5tUurkXvgVmRNd3oWtR1
WWRtF7gWSciUY5prUX8rErK7FqlqC83MwLXoKZ/nCjIBLwEy0GWxI425o8i4
R9GzqcEGMq7Ciloly76ZG2q4BSDzVC2BWxOCrCOQOT2NXQ4yPdei3SyE3TKQ
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
    "], {{0, 520}, {579, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{579, 520},
  PlotRange->{{0, 579}, {0, 520}}]], "Input",
 CellID->769261615,ExpressionUUID->"0d9b76c4-7e7e-466f-92fe-111ecdae2051"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "TutorialMoreAboutSection",
 CellID->23220180,ExpressionUUID->"e781eb13-9253-46f5-a89a-71d58b15b174"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "TutorialMoreAbout",
 CellChangeTimes->{{3.761845070888578*^9, 3.761845077593646*^9}},
 CellID->1567025153,ExpressionUUID->"5bbbc34f-38be-4751-9253-e6cb4e7a204d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tutorials", "RelatedTutorialsSection",
 CellID->415694126,ExpressionUUID->"d415174c-bc80-40cb-9d4e-b7dc847beac6"],

Cell["XXXX", "RelatedTutorials",
 CellID->806871991,ExpressionUUID->"29d4ac88-d001-45d4-b972-b0b02c76419c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Wolfram Education Group Courses", "TutorialRelatedLinksSection",
 CellID->415694148,ExpressionUUID->"d00bfb2d-480d-4a80-8d32-cb1979e4a798"],

Cell["XXXX", "TutorialRelatedLinks",
 CellID->415694149,ExpressionUUID->"db2f6442-c93b-4656-8443-7d42dbcedff1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -1925}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TutorialPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 22, "History",ExpressionUUID->"556fa402-2c77-4a24-a370-5cb7a61adceb",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 28, "CategorizationSection",ExpressionUUID->"ddd71c5d-9749-40ff-8f70-c36e360a20a5",
 CellID->1122911449],
Cell[1309, 41, 136, 2, 262, "Categorization",ExpressionUUID->"6954bea3-1515-43f7-8e5c-72573c1793f7",
 CellID->686433507],
Cell[1448, 45, 136, 2, 262, "Categorization",ExpressionUUID->"43deaff8-d954-4d2f-803a-06c22082f272",
 CellID->605800465],
Cell[1587, 49, 133, 2, 262, "Categorization",ExpressionUUID->"76c1083d-999f-426b-8e36-8a95d6b6a8f8",
 CellID->468444828],
Cell[1723, 53, 129, 1, 262, "Categorization",ExpressionUUID->"31ea085a-f8b2-4985-857f-1aaa445de6f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[1889, 59, 111, 1, 17, "KeywordsSection",ExpressionUUID->"9b787d58-885f-4ebd-a7fe-2f4e86f445e1",
 CellID->1427428552],
Cell[2003, 62, 100, 1, 262, "Keywords",ExpressionUUID->"d6a64ed8-1d45-4ce5-ac30-f1b2b416b04a",
 CellID->1251852827]
}, Closed]],
Cell[CellGroupData[{
Cell[2140, 68, 108, 1, 17, "DetailsSection",ExpressionUUID->"7c7b6e67-c5dd-4052-b113-99197990e551",
 CellID->307771771],
Cell[2251, 71, 118, 2, 262, "Details",ExpressionUUID->"31be05ff-9b8a-4f38-ab1b-f7766c4b0ad4",
 CellID->218895918],
Cell[2372, 75, 124, 2, 262, "Details",ExpressionUUID->"56e30e92-6375-477a-9fb9-b0c60715bc3e",
 CellID->350963985],
Cell[2499, 79, 121, 2, 262, "Details",ExpressionUUID->"450f56b4-dae6-44bb-8d7b-c870e4977a07",
 CellID->795871300],
Cell[2623, 83, 126, 2, 262, "Details",ExpressionUUID->"958186ca-32f2-486a-83ac-5886c8f72aa6",
 CellID->199739161],
Cell[2752, 87, 115, 2, 262, "Details",ExpressionUUID->"7a844128-e591-4fa9-a6df-8998d4270ba6",
 CellID->40625308],
Cell[2870, 91, 116, 2, 262, "Details",ExpressionUUID->"fdcddd1b-4f9a-49b0-a18e-5cad8b234290",
 CellID->357121918],
Cell[2989, 95, 117, 2, 262, "Details",ExpressionUUID->"221221ba-93e5-40c7-a846-39fb3939ebc0",
 CellID->35949532],
Cell[3109, 99, 133, 2, 262, "Details",ExpressionUUID->"35d4e128-14ef-433e-83ec-119f78926fe3",
 CellID->929432370],
Cell[3245, 103, 122, 2, 262, "Details",ExpressionUUID->"bdee46af-6b62-4dcc-a36a-bf573d70b9d2",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[3404, 110, 179, 2, 90, "Title",ExpressionUUID->"66be0c7f-129c-4236-8284-4c50587b284a",
 CellID->509267359],
Cell[3586, 114, 743, 12, 68, "Text",ExpressionUUID->"58cf0cf3-5168-465c-a524-35cb5b1da76e",
 CellID->1534169418],
Cell[CellGroupData[{
Cell[4354, 130, 190, 2, 35, "MathCaption",ExpressionUUID->"6c5f91a0-83cf-46d8-a6f0-c7f574fac3cc",
 CellID->310445284],
Cell[4547, 134, 220, 4, 25, "Input",ExpressionUUID->"6b966142-09bc-409c-8088-88712128147f",
 CellID->575452366]
}, Open  ]],
Cell[CellGroupData[{
Cell[4804, 143, 222, 2, 42, "Section",ExpressionUUID->"27fce8ca-96a5-4e8f-8893-f65ca438ca15",
 CellID->185646103],
Cell[5029, 147, 528, 10, 52, "Text",ExpressionUUID->"fd1a4aea-e844-4e03-a5fb-e3818110f564",
 CellID->111578108],
Cell[5560, 159, 1127, 23, 68, "Text",ExpressionUUID->"a75fc352-5150-4177-b01c-2148207806cc",
 CellID->72334175],
Cell[CellGroupData[{
Cell[6712, 186, 179, 2, 36, "Subsection",ExpressionUUID->"10f8fcb6-a74f-4040-8260-1718748265f8",
 CellID->492661331],
Cell[6894, 190, 3105, 80, 98, "DefinitionBox",ExpressionUUID->"67b6e504-933b-4bc0-a0f4-74ea91e53cd8",
 CellID->505092195],
Cell[10002, 272, 196, 2, 28, "Caption",ExpressionUUID->"faed14ab-59f9-4260-a0ed-166fba67dd1b",
 CellID->933228592],
Cell[10201, 276, 1079, 21, 109, "Text",ExpressionUUID->"7d78e86e-edc3-497e-91d2-3b72ed1df102",
 CellID->771639886]
}, Open  ]],
Cell[CellGroupData[{
Cell[11317, 302, 234, 3, 36, "Subsection",ExpressionUUID->"c7682611-d8ca-4032-b5b3-d1c04d56dffd",
 CellID->27852929],
Cell[11554, 307, 387, 7, 37, "Text",ExpressionUUID->"88ff5561-8eea-4f7f-a8a1-eed43706ddfc",
 CellID->222985747],
Cell[11944, 316, 1612, 32, 133, "DefinitionBox",ExpressionUUID->"97a1efd9-6db0-4b17-af87-267ca9f0709c",
 CellID->200218437],
Cell[13559, 350, 187, 2, 28, "Caption",ExpressionUUID->"b73fe078-6f09-4c7c-9644-bcd9f8c757bb",
 CellID->88591569],
Cell[13749, 354, 322, 5, 37, "Text",ExpressionUUID->"1029939c-6f27-4ae2-9929-887cc3ff1e7a",
 CellID->51822448],
Cell[14074, 361, 599, 12, 52, "Text",ExpressionUUID->"e75cd706-2aa6-4a12-b5e3-fd7f0d4a1ba8",
 CellID->271229263]
}, Open  ]],
Cell[CellGroupData[{
Cell[14710, 378, 179, 2, 36, "Subsection",ExpressionUUID->"4d71f6ac-ab32-405b-81ab-cabc314db410",
 CellID->305221324],
Cell[14892, 382, 532, 11, 52, "Text",ExpressionUUID->"f8bec49d-defc-43d8-8210-438837c82b0f",
 CellID->555909034],
Cell[15427, 395, 4776, 117, 233, "DefinitionBox",ExpressionUUID->"87b2bf10-6ed4-424b-85ba-b29d97d2f3bb",
 CellID->792685257],
Cell[20206, 514, 188, 2, 28, "Caption",ExpressionUUID->"3ef0af3d-b25e-43c1-b943-11032c1ecd35",
 CellID->264816302],
Cell[20397, 518, 648, 12, 37, "Text",ExpressionUUID->"5c74b4fe-8f36-40d6-9d9f-e4b5ce712b93",
 CellID->103579448],
Cell[21048, 532, 481, 8, 21, "Text",ExpressionUUID->"7a8903c0-bfba-4da6-8b1b-6a60c7a777f8",
 CellID->695697506],
Cell[21532, 542, 439, 7, 52, "Text",ExpressionUUID->"63898dc5-9c01-4330-b769-186998a8426d",
 CellID->553560813],
Cell[21974, 551, 1766, 40, 70, "Text",ExpressionUUID->"ac99ad5a-c92a-4eba-ad13-3ebade191425",
 CellID->115198241]
}, Open  ]],
Cell[CellGroupData[{
Cell[23777, 596, 191, 2, 36, "Subsection",ExpressionUUID->"9305eb8c-022d-4f49-8197-332309c7b25c",
 CellID->12152049],
Cell[23971, 600, 486, 8, 37, "Text",ExpressionUUID->"3158fcd9-6a76-4f64-b40a-88932ce43d01",
 CellID->320649723],
Cell[24460, 610, 2357, 58, 114, "DefinitionBox",ExpressionUUID->"34026ad2-a853-4646-be55-f0d0aa6ff1ee",
 CellID->392524317],
Cell[26820, 670, 195, 2, 28, "Caption",ExpressionUUID->"0eb282d9-f0bd-483f-82dd-7dff77f410be",
 CellID->46612784],
Cell[27018, 674, 527, 12, 37, "Text",ExpressionUUID->"b433d696-d2f1-4cb8-b303-e79385146ddf",
 CellID->32504473]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27594, 692, 175, 2, 42, "Section",ExpressionUUID->"db63729e-1e5d-42ea-8be7-6f76ebc8f9ff",
 CellID->121087292],
Cell[CellGroupData[{
Cell[27794, 698, 216, 2, 39, "MathCaption",ExpressionUUID->"045b02fb-135d-4e3c-b1f6-fd7b454d3fdd",
 CellID->836781195],
Cell[28013, 702, 849, 17, 44, "Input",ExpressionUUID->"41c5b849-7e33-4381-966e-68d0206cc4f9",
 CellID->31754730]
}, Open  ]],
Cell[28877, 722, 242, 4, 21, "Text",ExpressionUUID->"45443317-b154-4f73-b949-7a4ea538aecd",
 CellID->102370062],
Cell[29122, 728, 513, 11, 39, "DefinitionBox",ExpressionUUID->"ece5c163-0f68-453a-b4ea-b52d8f33fc3a",
 CellID->81978558],
Cell[29638, 741, 174, 2, 28, "Caption",ExpressionUUID->"b896e7ae-72bd-4854-96c3-c6d0d72fed10",
 CellID->123757612],
Cell[CellGroupData[{
Cell[29837, 747, 189, 2, 35, "MathCaption",ExpressionUUID->"67cd4ea0-81ae-4f94-b55c-0b16f9d59100",
 CellID->226527354],
Cell[CellGroupData[{
Cell[30051, 753, 291, 6, 25, "Input",ExpressionUUID->"8df01d96-31de-4992-938a-289df7a5e291",
 CellID->681723581],
Cell[30345, 761, 25976, 504, 103, "Output",ExpressionUUID->"2731460f-be5e-45d5-8895-5031dfba61b2",
 CellID->579775105]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56370, 1271, 192, 2, 39, "MathCaption",ExpressionUUID->"31bf620d-cb23-4208-988a-68d7918f3679",
 CellID->154777042],
Cell[CellGroupData[{
Cell[56587, 1277, 390, 9, 25, "Input",ExpressionUUID->"5f14ce15-8798-4d79-b62a-ae304f6338ba",
 CellID->58583108],
Cell[56980, 1288, 23772, 463, 103, "Output",ExpressionUUID->"f3e0d621-afc8-4015-8aeb-743292342f43",
 CellID->13894359]
}, Open  ]]
}, Open  ]],
Cell[80779, 1755, 755, 14, 52, "Text",ExpressionUUID->"4d91b273-40b2-4aad-a6f3-a924acf7ed9a",
 CellID->745579111],
Cell[CellGroupData[{
Cell[81559, 1773, 189, 2, 35, "MathCaption",ExpressionUUID->"13419783-7208-4371-8033-cd7c6654c72f",
 CellID->27523641],
Cell[CellGroupData[{
Cell[81773, 1779, 464, 8, 25, "Input",ExpressionUUID->"277727ea-f36c-4328-9fbe-beb89c01b352",
 CellID->313868854],
Cell[82240, 1789, 23945, 465, 103, "Output",ExpressionUUID->"c96039e3-4acf-4ccb-ab81-670e9bb23f15",
 CellID->211352011]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106234, 2260, 193, 2, 39, "MathCaption",ExpressionUUID->"82712f09-cef4-4018-8e83-ab0b98b1117b",
 CellID->610584558],
Cell[CellGroupData[{
Cell[106452, 2266, 382, 8, 25, "Input",ExpressionUUID->"1696c732-bcbe-49a5-963b-87f7fc29a85e",
 CellID->568946600],
Cell[106837, 2276, 30611, 597, 127, "Output",ExpressionUUID->"22391901-814b-4907-ad20-5a586d410de2",
 CellID->636766901]
}, Open  ]]
}, Open  ]],
Cell[137475, 2877, 666, 13, 68, "Text",ExpressionUUID->"8cf2765a-7072-49ac-bdb5-ef15e4d75fcb",
 CellID->410138926],
Cell[CellGroupData[{
Cell[138166, 2894, 273, 3, 35, "MathCaption",ExpressionUUID->"a69c84c7-1e08-4147-bba4-7501a7e2f554",
 CellID->397163078],
Cell[CellGroupData[{
Cell[138464, 2901, 638, 15, 44, "Input",ExpressionUUID->"994deaf4-5f3b-4218-b57f-f2bb4201fac2",
 CellID->971740772],
Cell[139105, 2918, 225, 5, 24, "Echo",ExpressionUUID->"8d5c2138-3df5-4c40-8417-25f8fa0ca044",
 CellID->189075612],
Cell[139333, 2925, 28682, 560, 127, "Output",ExpressionUUID->"e356fca4-8431-4ac3-9c58-b1cee0c9ba62",
 CellID->270778028]
}, Open  ]]
}, Open  ]],
Cell[168042, 3489, 755, 14, 81, "DefinitionBox",ExpressionUUID->"35794b86-2060-40fc-896e-47af7fc56f03",
 CellID->669987316],
Cell[168800, 3505, 186, 2, 28, "Caption",ExpressionUUID->"a35358a6-c9c9-413f-a237-7d02a2dbe810",
 CellID->40274191],
Cell[168989, 3509, 418, 7, 37, "Text",ExpressionUUID->"9e60f475-5491-4a28-9358-3294397059be",
 CellID->217179338],
Cell[CellGroupData[{
Cell[169432, 3520, 198, 2, 35, "MathCaption",ExpressionUUID->"c8b74c4e-6cf8-42f0-8176-8ab50d7a12b7",
 CellID->266594283],
Cell[CellGroupData[{
Cell[169655, 3526, 497, 9, 25, "Input",ExpressionUUID->"76f318ec-44d3-4dd1-b8d9-9a6fe63c96b9",
 CellID->103365394],
Cell[170155, 3537, 21449, 413, 103, "Output",ExpressionUUID->"964d57b8-41a4-4bec-a052-0ff5d2eb5521",
 CellID->535232954]
}, Open  ]]
}, Open  ]],
Cell[191631, 3954, 539, 9, 52, "Text",ExpressionUUID->"bf7706d2-9d3d-433b-8b83-3d360f5447c8",
 CellID->260369650],
Cell[CellGroupData[{
Cell[192195, 3967, 211, 2, 35, "MathCaption",ExpressionUUID->"8eb17ec5-6227-4012-b603-3f5cef113eb6",
 CellID->24798626],
Cell[192409, 3971, 409, 9, 25, "Input",ExpressionUUID->"f0120d2a-b987-4f4a-8b10-b08fe03a1f60",
 CellID->169988763],
Cell[192821, 3982, 22565, 374, 236, "Input",ExpressionUUID->"57de451c-f536-4b8f-9aa5-8117447916b3",
 CellID->48114742]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215435, 4362, 191, 2, 42, "Section",ExpressionUUID->"8a07fb13-3076-46b1-8c34-f6a244b68bab",
 CellID->19141817],
Cell[215629, 4366, 461, 8, 37, "Text",ExpressionUUID->"d07cfb29-6867-4ce6-9469-bb79383195c8",
 CellID->241743700],
Cell[216093, 4376, 914, 22, 56, "DefinitionBox",ExpressionUUID->"6ea24203-8e35-436d-baba-6f131f5cf525",
 CellID->303849375],
Cell[217010, 4400, 209, 2, 28, "Caption",ExpressionUUID->"3d3b78f9-424a-4822-bcc6-b546c4b97bdd",
 CellID->21498457],
Cell[CellGroupData[{
Cell[217244, 4406, 180, 2, 36, "Subsection",ExpressionUUID->"1601299a-2a57-43f6-9322-ea2f0b33539e",
 CellID->354439910],
Cell[217427, 4410, 499, 8, 52, "Text",ExpressionUUID->"512bc3ab-3479-4271-8906-8f6f10b7d19d",
 CellID->364035884],
Cell[CellGroupData[{
Cell[217951, 4422, 329, 6, 50, "MathCaption",ExpressionUUID->"8caa5204-c48d-4ea3-bd67-7372e8fc852b",
 CellID->207531235],
Cell[CellGroupData[{
Cell[218305, 4432, 530, 10, 25, "Input",ExpressionUUID->"6c1b5207-b0da-4ab8-a873-f549964554a0",
 CellID->802518388],
Cell[218838, 4444, 24863, 484, 103, "Output",ExpressionUUID->"f6f4f777-e905-4dfc-897f-4fa660644390",
 CellID->347181638]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243750, 4934, 548, 11, 54, "MathCaption",ExpressionUUID->"318353a9-f8c8-49d8-8ab1-7dabec5b51a8",
 CellID->691295671],
Cell[CellGroupData[{
Cell[244323, 4949, 446, 11, 25, "Input",ExpressionUUID->"549464cb-5345-47a7-a794-7b5399f57741",
 CellID->38944675],
Cell[244772, 4962, 2232, 57, 24, "Output",ExpressionUUID->"030f9839-bf6b-4a82-8f03-027b8b27c66e",
 CellID->451021556]
}, Open  ]],
Cell[CellGroupData[{
Cell[247041, 5024, 524, 12, 25, "Input",ExpressionUUID->"6e6fc958-a6fa-4dff-a946-1541c48935ae",
 CellID->546461476],
Cell[247568, 5038, 2509, 62, 24, "Output",ExpressionUUID->"0f8ac011-7c66-4b48-a8a7-42a260900e31",
 CellID->92485203]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250126, 5106, 401, 7, 54, "MathCaption",ExpressionUUID->"dde652cb-f1cc-49f4-9256-2759450d7b3f",
 CellID->149408332],
Cell[CellGroupData[{
Cell[250552, 5117, 420, 10, 25, "Input",ExpressionUUID->"e21264dd-29e5-4a29-9766-950b406f6f1b",
 CellID->23523617],
Cell[250975, 5129, 188, 4, 24, "Output",ExpressionUUID->"1a0d52de-c5e4-47b4-9446-b6a9e03fb29d",
 CellID->130095501]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251224, 5140, 226, 3, 36, "Subsection",ExpressionUUID->"4723685c-7d24-4e8c-93d4-028e703288e2",
 CellID->258973364],
Cell[CellGroupData[{
Cell[251475, 5147, 542, 14, 54, "MathCaption",ExpressionUUID->"10a76afc-3582-412c-acbc-4f0532c50b1e",
 CellID->19164079],
Cell[CellGroupData[{
Cell[252042, 5165, 464, 12, 25, "Input",ExpressionUUID->"14e8a796-7c97-4732-a704-bfe90a7c190d",
 CellID->82274386],
Cell[252509, 5179, 273, 6, 53, "Output",ExpressionUUID->"2c2957d5-5f37-4106-8e9e-1bf86b474959",
 CellID->538522182]
}, Open  ]]
}, Open  ]],
Cell[252809, 5189, 613, 10, 52, "Text",ExpressionUUID->"9f746a53-cebf-452f-b263-451465cff723",
 CellID->54711701],
Cell[CellGroupData[{
Cell[253447, 5203, 270, 3, 35, "MathCaption",ExpressionUUID->"04b666f8-6d39-4a45-8ded-18d2adac8e58",
 CellID->69472301],
Cell[CellGroupData[{
Cell[253742, 5210, 381, 8, 25, "Input",ExpressionUUID->"dace133e-817a-41b8-bb20-e1ccf85589ec",
 CellID->205641708],
Cell[254126, 5220, 27668, 545, 125, "Output",ExpressionUUID->"0b0ecf9a-b2b9-4151-9640-950b9e6c5f9b",
 CellID->532459386]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281843, 5771, 503, 11, 54, "MathCaption",ExpressionUUID->"e1c5c5e0-3eb9-4d12-8777-6012a629288e",
 CellID->74318702],
Cell[CellGroupData[{
Cell[282371, 5786, 447, 11, 25, "Input",ExpressionUUID->"0133e313-d1ee-4aee-ac28-4a950d968e0a",
 CellID->433620215],
Cell[282821, 5799, 475, 12, 24, "Output",ExpressionUUID->"46d2e406-b91a-461e-9924-b142ad6913ee",
 CellID->161149575]
}, Open  ]],
Cell[CellGroupData[{
Cell[283333, 5816, 572, 12, 25, "Input",ExpressionUUID->"4245efc2-da22-4446-9424-210b528bfee9",
 CellID->98308474],
Cell[283908, 5830, 656, 17, 24, "Output",ExpressionUUID->"7d20ef57-ed0c-433f-939c-499bcdac4080",
 CellID->54566311]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[284625, 5854, 283, 4, 36, "Subsection",ExpressionUUID->"48f75e18-3d09-44c8-a061-82cc445374be",
 CellID->370300816],
Cell[CellGroupData[{
Cell[284933, 5862, 570, 12, 54, "MathCaption",ExpressionUUID->"5f2461b7-e97a-4391-82e4-5ce0211dbe21",
 CellID->348727091],
Cell[CellGroupData[{
Cell[285528, 5878, 512, 13, 25, "Input",ExpressionUUID->"34aca79b-a006-4f1c-8a09-b6f6e34f9f7e",
 CellID->633565613],
Cell[286043, 5893, 320, 7, 36, "Output",ExpressionUUID->"45038eb5-8c49-4d8a-97aa-68d76a2bba0d",
 CellID->41238662]
}, Open  ]]
}, Open  ]],
Cell[286390, 5904, 716, 11, 52, "Text",ExpressionUUID->"ab5dfa72-87b8-477e-a6af-2e57edd08b2c",
 CellID->75578758],
Cell[CellGroupData[{
Cell[287131, 5919, 226, 3, 35, "MathCaption",ExpressionUUID->"49333bce-adfd-441b-9dfd-1757e1e9c1be",
 CellID->542365653],
Cell[CellGroupData[{
Cell[287382, 5926, 428, 9, 25, "Input",ExpressionUUID->"dc69e77a-626a-410d-9a68-aa180c905928",
 CellID->411302082],
Cell[287813, 5937, 25918, 507, 127, "Output",ExpressionUUID->"d1bb273c-284b-4532-b42e-88b288b0a6ec",
 CellID->502989499]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313780, 6450, 504, 11, 54, "MathCaption",ExpressionUUID->"a68d77db-eabc-4507-8035-f3d0d441e47a",
 CellID->405165279],
Cell[CellGroupData[{
Cell[314309, 6465, 573, 12, 25, "Input",ExpressionUUID->"8af05fff-71a0-4d45-a338-49c70bba151b",
 CellID->184746180],
Cell[314885, 6479, 614, 15, 24, "Output",ExpressionUUID->"95b0fdcd-1578-4abc-a0fd-f5983d556dcc",
 CellID->284330788]
}, Open  ]]
}, Open  ]],
Cell[315526, 6498, 652, 20, 37, "Text",ExpressionUUID->"9275df75-74aa-4e1c-a3a2-cd4725ccc850",
 CellID->539727440]
}, Open  ]],
Cell[CellGroupData[{
Cell[316215, 6523, 191, 2, 36, "Subsection",ExpressionUUID->"68a61e06-6c12-4227-b501-526c258ae0cb",
 CellID->316215944],
Cell[316409, 6527, 967, 18, 68, "Text",ExpressionUUID->"c7eb56ce-b70c-4e20-9e47-59001223421d",
 CellID->347570650],
Cell[317379, 6547, 780, 20, 56, "DefinitionBox",ExpressionUUID->"72cae841-559f-4d42-a501-5dc826e1bf14",
 CellID->454154062],
Cell[318162, 6569, 194, 2, 28, "Caption",ExpressionUUID->"64e4c296-7fa0-40d5-9d29-e198e7cf28d6",
 CellID->353572708],
Cell[CellGroupData[{
Cell[318381, 6575, 311, 5, 35, "MathCaption",ExpressionUUID->"638e1d5d-e836-4a3c-b5c9-fe1c83599a66",
 CellID->104691956],
Cell[CellGroupData[{
Cell[318717, 6584, 575, 11, 63, "Input",ExpressionUUID->"351bfa7c-0c63-484b-b2b2-bb4fced9d56c",
 CellID->9491473],
Cell[319295, 6597, 29115, 576, 152, "Output",ExpressionUUID->"92882064-5658-4f0a-9a9d-c60e118fe846",
 CellID->144192731]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348459, 7179, 480, 10, 54, "MathCaption",ExpressionUUID->"042675eb-2f5a-4fe8-ace6-d260aa8b9344",
 CellID->551044751],
Cell[CellGroupData[{
Cell[348964, 7193, 423, 10, 25, "Input",ExpressionUUID->"c0b3547e-d61e-40f9-9d50-10f5a7c3b7aa",
 CellID->304063679],
Cell[349390, 7205, 252, 5, 24, "Output",ExpressionUUID->"40b4ea05-e2fd-427d-affd-652f5f4bbcb0",
 CellID->383736224]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349691, 7216, 444, 9, 39, "MathCaption",ExpressionUUID->"fabc06d1-28cb-4632-b0c4-4a6a728cc652",
 CellID->339362087],
Cell[CellGroupData[{
Cell[350160, 7229, 344, 7, 25, "Input",ExpressionUUID->"1fe1a32c-695a-4edb-8b42-cd692a53e683",
 CellID->202779533],
Cell[350507, 7238, 254, 5, 24, "Output",ExpressionUUID->"a14ec947-c1f9-4f70-b05d-8903bae551f1",
 CellID->178891418]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350810, 7249, 449, 9, 39, "MathCaption",ExpressionUUID->"f90dbe08-5bff-4859-8deb-53f1556ccaca",
 CellID->509811264],
Cell[CellGroupData[{
Cell[351284, 7262, 341, 7, 25, "Input",ExpressionUUID->"3c7cd42e-725f-40fc-9628-e530909ca049",
 CellID->481809636],
Cell[351628, 7271, 256, 5, 24, "Output",ExpressionUUID->"942922d8-dc4b-4f1f-aca3-98ee37ddffe5",
 CellID->17807351]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351957, 7284, 229, 3, 42, "Section",ExpressionUUID->"c20c98ca-41f9-40ec-ba06-325557b7b58b",
 CellID->69801460],
Cell[CellGroupData[{
Cell[352211, 7291, 174, 2, 36, "Subsection",ExpressionUUID->"89a0bf36-da60-41b0-827a-5c640a3a3643",
 CellID->42316102],
Cell[352388, 7295, 514, 10, 37, "Text",ExpressionUUID->"763ef351-25d1-47aa-b77e-d4e36d567d62",
 CellID->153517948],
Cell[352905, 7307, 635, 13, 39, "DefinitionBox",ExpressionUUID->"6fafbabc-1b59-47a2-b604-fac259a5a89a",
 CellID->521402141],
Cell[353543, 7322, 197, 2, 28, "Caption",ExpressionUUID->"28de61f6-4a96-4ebc-8262-942e19d429bc",
 CellID->24859362],
Cell[353743, 7326, 509, 10, 52, "Text",ExpressionUUID->"249c6be0-b5a8-4f7b-adc1-9e000db926da",
 CellID->210165798],
Cell[354255, 7338, 487, 10, 54, "DefinitionBox3Col",ExpressionUUID->"64557a62-00eb-4150-9da6-2b0e9c2533d6",
 CellID->535547963],
Cell[354745, 7350, 218, 3, 28, "Caption",ExpressionUUID->"d3b1b30b-4f0a-4494-97fb-a2ba878565a8",
 CellID->118552512],
Cell[CellGroupData[{
Cell[354988, 7357, 219, 2, 35, "MathCaption",ExpressionUUID->"ae9dcbec-9fdf-4806-a669-920720774e8b",
 CellID->285158367],
Cell[CellGroupData[{
Cell[355232, 7363, 642, 16, 44, "Input",ExpressionUUID->"76342e4e-52b2-432a-9c92-8eb1d05b7c34",
 CellID->82993485],
Cell[355877, 7381, 2154, 51, 117, "Output",ExpressionUUID->"b810b353-c40c-492e-ab9d-249d2b681306",
 CellID->466973986]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[358080, 7438, 190, 2, 39, "MathCaption",ExpressionUUID->"a6b62f58-ff5e-48a1-acd1-4e39116d0e5f",
 CellID->91103281],
Cell[CellGroupData[{
Cell[358295, 7444, 488, 10, 25, "Input",ExpressionUUID->"fffea070-1e2d-4bfe-87fb-8e8cd38ce036",
 CellID->482145865],
Cell[358786, 7456, 148675, 2909, 640, "Output",ExpressionUUID->"535b0e52-bb87-4ce3-908b-267b4942a498",
 CellID->150737207]
}, Open  ]]
}, Open  ]],
Cell[507488, 10369, 598, 11, 52, "Text",ExpressionUUID->"d72fd3b1-6132-48fb-a33d-56165054de8d",
 CellID->102410]
}, Open  ]],
Cell[CellGroupData[{
Cell[508123, 10385, 175, 2, 36, "Subsection",ExpressionUUID->"75018579-d4c7-4118-a8b8-72456943fcff",
 CellID->16111444],
Cell[508301, 10389, 526, 8, 52, "Text",ExpressionUUID->"a747082f-8748-4d02-bab3-e4ca82f5348e",
 CellID->289490881],
Cell[508830, 10399, 327, 6, 37, "Text",ExpressionUUID->"86f3b622-00a9-49dc-92f8-d702b6bc9b0f",
 CellID->43750844],
Cell[509160, 10407, 354, 6, 37, "Text",ExpressionUUID->"673e1595-c3eb-491c-be17-ccf50ca1ed6c",
 CellID->709333429],
Cell[509517, 10415, 575, 13, 39, "DefinitionBox",ExpressionUUID->"aeaad669-6bdc-457b-bfad-78ce99c2d502",
 CellID->36083],
Cell[510095, 10430, 249, 3, 28, "Caption",ExpressionUUID->"27883294-fd7b-45c0-900a-e36a3310eb7d",
 CellID->796978057],
Cell[CellGroupData[{
Cell[510369, 10437, 294, 5, 35, "MathCaption",ExpressionUUID->"3915d0f6-f16c-4a03-9cf8-28e0a78da366",
 CellID->4454069],
Cell[CellGroupData[{
Cell[510688, 10446, 307, 6, 25, "Input",ExpressionUUID->"e75b80ba-316f-4d26-93a2-1c80954879f8",
 CellID->863367331],
Cell[510998, 10454, 18959, 364, 103, "Output",ExpressionUUID->"8358765d-caa6-4eb9-9712-88d2c969486d",
 CellID->364845999]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[530006, 10824, 416, 7, 54, "MathCaption",ExpressionUUID->"3c338866-9a29-4807-aa11-a80669d2f11f",
 CellID->162844997],
Cell[CellGroupData[{
Cell[530447, 10835, 1154, 32, 63, "Input",ExpressionUUID->"d14a3b3d-45aa-44b0-8ecd-f9985e58522f",
 CellID->33969896],
Cell[531604, 10869, 35495, 633, 152, "Output",ExpressionUUID->"90b3be0b-86b0-49de-8a6b-13720c638a02",
 CellID->263764860]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[567148, 11508, 467, 10, 39, "MathCaption",ExpressionUUID->"7e86e011-1380-419a-9793-44eb9b5000b8",
 CellID->102229160],
Cell[CellGroupData[{
Cell[567640, 11522, 346, 8, 25, "Input",ExpressionUUID->"1c4ed851-4a99-46f6-a910-fc1e4d39163c",
 CellID->19077661],
Cell[567989, 11532, 2400, 65, 24, "Output",ExpressionUUID->"669e9606-d45c-45ec-815a-37cd41a42262",
 CellID->183093850]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570462, 11605, 201, 2, 40, "Section",ExpressionUUID->"38bebe8d-4785-40af-933b-257d3e857511",
 CellID->78394971],
Cell[570666, 11609, 661, 17, 36, "Text",ExpressionUUID->"4ee8f495-e326-40b9-80f1-7c8a2cd4b193",
 CellID->211922561],
Cell[CellGroupData[{
Cell[571352, 11630, 403, 9, 52, "MathCaption",ExpressionUUID->"c8a0c8a8-29e3-49ed-8a4b-5b34b16ca900",
 CellID->594551925],
Cell[571758, 11641, 700, 16, 62, "Input",ExpressionUUID->"d6dc3b7d-1570-403c-8679-156cddbd0cc2",
 CellID->156314717]
}, Open  ]],
Cell[CellGroupData[{
Cell[572495, 11662, 253, 3, 38, "MathCaption",ExpressionUUID->"095658f7-8993-4f6d-adf6-fb325271dc3e",
 CellID->62013518],
Cell[572751, 11667, 398, 9, 25, "Input",ExpressionUUID->"4f79950d-3cc6-4ff0-92b9-aeff62f864c6",
 CellID->400050939]
}, Open  ]],
Cell[CellGroupData[{
Cell[573186, 11681, 213, 2, 38, "MathCaption",ExpressionUUID->"6daada7c-ccc8-49de-b204-140509ac0462",
 CellID->343002500],
Cell[573402, 11685, 1420, 39, 98, "Input",ExpressionUUID->"acedad05-b568-42a6-84d5-18846f8637f8",
 CellID->42427840]
}, Open  ]],
Cell[CellGroupData[{
Cell[574859, 11729, 569, 9, 66, "MathCaption",ExpressionUUID->"5842295b-9e8f-4f5b-b946-28773e5e3d10",
 CellID->96674661],
Cell[575431, 11740, 1278, 29, 98, "Input",ExpressionUUID->"f3ee26c2-98be-41fb-8fbe-bb82146c4c0c",
 CellID->351504644]
}, Open  ]],
Cell[CellGroupData[{
Cell[576746, 11774, 205, 2, 38, "MathCaption",ExpressionUUID->"cbcd88f9-48b7-434c-83fc-3782de3de931",
 CellID->777100582],
Cell[576954, 11778, 945, 22, 98, "Input",ExpressionUUID->"863f0f60-0722-484d-bc78-a3c007980d31",
 CellID->22162130],
Cell[577902, 11802, 409, 9, 44, "Input",ExpressionUUID->"ce3b944f-1159-4ddd-8941-5fedc6821560",
 CellID->772499]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[578360, 11817, 201, 2, 40, "Section",ExpressionUUID->"97d1cac3-18ff-46aa-a701-22b76521fa5e",
 CellID->534745247],
Cell[578564, 11821, 547, 9, 51, "Text",ExpressionUUID->"11b1eebd-be77-4d11-a5a4-9f2e6a778f07",
 CellID->194845850],
Cell[579114, 11832, 310, 5, 36, "Text",ExpressionUUID->"0907bab5-2b59-4a20-90ac-3e811a6b7210",
 CellID->770920200],
Cell[CellGroupData[{
Cell[579449, 11841, 102, 1, 38, "MathCaption",ExpressionUUID->"9229b8d9-e8e0-4d69-82ec-012d529a501f",
 CellID->608959116],
Cell[579554, 11844, 415, 10, 25, "Input",ExpressionUUID->"ded31762-7984-4202-aeb7-6d599767c4c0",
 CellID->412792471],
Cell[579972, 11856, 442, 10, 44, "Input",ExpressionUUID->"ea4c2308-36e9-4ed1-9d6d-6eb43b20f994",
 CellID->683559455],
Cell[580417, 11868, 67109, 1104, 470, "Input",ExpressionUUID->"0d9b76c4-7e7e-466f-92fe-111ecdae2051",
 CellID->769261615]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[647575, 12978, 120, 1, 70, "TutorialMoreAboutSection",ExpressionUUID->"e781eb13-9253-46f5-a89a-71d58b15b174",
 CellID->23220180],
Cell[647698, 12981, 267, 4, 20, "TutorialMoreAbout",ExpressionUUID->"5bbbc34f-38be-4751-9253-e6cb4e7a204d",
 CellID->1567025153]
}, Open  ]],
Cell[CellGroupData[{
Cell[648002, 12990, 127, 1, 70, "RelatedTutorialsSection",ExpressionUUID->"d415174c-bc80-40cb-9d4e-b7dc847beac6",
 CellID->415694126],
Cell[648132, 12993, 107, 1, 20, "RelatedTutorials",ExpressionUUID->"29d4ac88-d001-45d4-b972-b0b02c76419c",
 CellID->806871991]
}, Open  ]],
Cell[CellGroupData[{
Cell[648276, 12999, 153, 1, 70, "TutorialRelatedLinksSection",ExpressionUUID->"d00bfb2d-480d-4a80-8d32-cb1979e4a798",
 CellID->415694148],
Cell[648432, 13002, 111, 1, 20, "TutorialRelatedLinks",ExpressionUUID->"db2f6442-c93b-4656-8443-7d42dbcedff1",
 CellID->415694149]
}, Open  ]]
}, Open  ]]
}
]
*)


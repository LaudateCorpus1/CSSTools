(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    516282,      10204]
NotebookOptionsPosition[    501040,       9890]
NotebookOutlinePosition[    501775,       9915]
CellTagsIndexPosition[    501694,       9910]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"7748f14a-c417-43f3-bb97-50ed59c49dde"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"70ae1a2d-52aa-4dcd-b2f3-e1749cb11bfc"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"d6cd39bd-a843-4cf4-b98c-660729e416bb"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"d82f0cd4-f3ee-49e7-8318-a398b61dfa46"]
}], "History",
 CellID->1247902091,ExpressionUUID->"e166cf8e-c8d2-44af-b8b9-5d6900922d6d"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"c87f3884-82c1-4520-84fd-fd7291de99d2"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"ede87280-432d-4c84-bf92-80d9254ebb77"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"e9814a2c-096f-4fba-b597-b90d18c80d47"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"1a5cbb3a-16fd-4d24-9daf-9838c82df0f8"],

Cell["CSSTools/ref/ExtractCSSFromXML", "Categorization",
 CellLabel->"URI",ExpressionUUID->"5a367ec0-6794-413e-8226-c83fab553d01"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"7bfdcb63-ce7e-43f0-b0e3-8f9c327f95f9"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"566528c3-8dfd-422c-b409-e75a197a9c07"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"647f62ec-da06-4ebd-a836-7f5ac82878c7"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"59df0e8f-3358-448e-84f8-848d659e84a7"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"00b34a44-676e-4c4f-a20a-dc15cf728dd8"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"984302cf-0017-4b3a-9a9f-43be900e360a"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"75dcf890-5117-47de-9d48-6d5a17906f4a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"a9ff8d50-bfe7-457d-98b7-73fa740cc9fc"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->670882175,ExpressionUUID->"a29eeb95-4394-4f00-b77a-eebae709cd48"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"e67ae70e-b358-4051-bf8a-fe2f9623da2d"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->8391405,ExpressionUUID->"5fb75672-bfcc-491b-9f0a-425e6caba8de"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->3610269,ExpressionUUID->"55e318fb-5e99-4b66-b227-5dee4c892d4c"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->401364205,ExpressionUUID->"ebe0ae29-41db-46e3-ad07-c0653018d661"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->350204745,ExpressionUUID->"2ab47c32-376c-45b5-af1b-385c45c0e6eb"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->732958810,ExpressionUUID->"38875496-e525-45cb-b361-0082b9554512"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->222905350,ExpressionUUID->"5d1c813a-4c1f-4d65-a713-3f2e7880e965"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"4c2c00ee-3d29-42de-a7f7-b54e642599dc"]
}, Closed]],

Cell[CellGroupData[{

Cell["ExtractCSSFromXML", "ObjectName",
 CellChangeTimes->{{3.762035329412236*^9, 3.7620353301163626`*^9}},
 CellID->1224892054,ExpressionUUID->"6065862d-73e1-4ae2-804e-ac72dcb97125"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"9018643a-6913-4583-bd8a-e58c683e1857"],
 Cell[BoxData[
  RowBox[{"ExtractCSSFromXML", "[", 
   StyleBox["XMLObject", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "8f51dbdc-9a7c-4394-a808-eb2365c1808f"],
 " \[LineSeparator]ExtractCSSFromXML imports the CSS declarations within ",
 Cell[BoxData[
  RowBox[{
   StyleBox["XMLObject", "TI"], " "}]], "InlineFormula",ExpressionUUID->
  "4598ceaf-726d-4bb8-8d93-529cbcd292ec"],
 "."
}], "Usage",
 CellChangeTimes->{
  3.7620353000137506`*^9, {3.7620353326853123`*^9, 3.762035464940726*^9}},
 CellID->982511436,ExpressionUUID->"7d4f97a7-c82f-4676-955f-d9dac642849b"],

Cell["\<\
CSS rules can be found in stylesheets external to the XML document, \
stylesheets declared within the XML document, or inline within the XML \
document. Often external CSS file locations are given relative to the current \
XML file.\
\>", "Notes",
 CellChangeTimes->{{3.762035657198256*^9, 3.762035668866039*^9}, {
  3.792867238520176*^9, 3.7928672693435135`*^9}},
 CellID->1067943069,ExpressionUUID->"2a50e6a1-43be-49e7-90d1-509d3ff7c1b6"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "3e55adca-ebf9-4651-abbd-2bb2e5909ceb"], "\"\<RootDirectory\>\"", 
    "Automatic", Cell[
    "directory from where relative locations are resolved", "TableText",
     ExpressionUUID->"7456c60d-0fe1-4a6a-aac8-ff96726e057a"]}
  }]], "3ColumnTableMod",
 CellChangeTimes->{{3.76203577093832*^9, 3.7620357719546194`*^9}},
 CellID->120199297,ExpressionUUID->"b8877d56-49a0-4548-be3a-b13308027c64"],

Cell["\<\
\"RootDirectory\" can be used to set the root directory from where to find \
external stylesheets and other resources embedded in the XML document.\
\>", "Notes",
 CellChangeTimes->{{3.7620360347888713`*^9, 3.7620360859142733`*^9}},
 CellID->333181165,ExpressionUUID->"8fa0225b-32ff-4dc5-922c-66ceb7e4e7bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"3ab31fe9-e378-42a5-b00e-84cf81be8144"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/tutorial/CSSTools"]], "Tutorials",
 CellChangeTimes->{{3.762035472962222*^9, 3.76203548834755*^9}},
 CellID->341631938,ExpressionUUID->"dc8b87ee-c7a1-4dc8-8206-03d0ca38f4a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"c891bb88-6c57-4dbd-a25b-fd81fd099c17"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"ec2130c0-0157-4f11-a0c2-84861dbf494e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"330b5a3e-650f-464b-9ab4-c82be06644cb"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"e8c7f91c-5643-4c81-b33c-db98a4f36e10"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"36cc81e3-566d-4f61-a364-602db2ddc746"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "73f2a71c-fcbd-4574-a3e2-160a77fa9339"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSSelectorQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelectorQ"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "245e2822-bcfb-4977-a219-7da3cb71eddd"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSTargets",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSTargets"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "43ea4bba-22ff-4861-92be-57aefa74f01a"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSTargetQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSTargetQ"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "c997289a-4fd7-47c2-bcd9-beb5117fe003"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSCascade",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSCascade"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "28faa4dc-3163-46b7-9998-8f2712c12c6f"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "a382549e-552f-4f97-afa2-803ded66e98f"]
}], "SeeAlso",
 CellChangeTimes->{{3.792869729003504*^9, 3.7928697908008685`*^9}, {
  3.7928698830282965`*^9, 3.792869890782529*^9}},
 CellID->929782353,ExpressionUUID->"a84c30ee-a95d-4c0c-8d94-612ee61d747d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"b309c0bc-c504-4e7d-800e-1c1891bb1f2e"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "MoreAbout",
 CellChangeTimes->{{3.762035508669301*^9, 3.76203551553617*^9}},
 CellID->1665078683,ExpressionUUID->"da9e3a05-ea54-4a6c-95f0-0d8315de4dab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"a3538c25-cd06-4750-a600-431ebe591261"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[152]:=",
 CellID->140347243,ExpressionUUID->"36cae351-bc3b-482f-b88e-93b6c62ec969"],

Cell[TextData[{
 "Inline styles are interpreted as coming from a selector, but with ",
 Cell[BoxData[
  ButtonBox["None",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/None"]], "InlineFormula",ExpressionUUID->
  "8526e293-1252-4d87-82b6-11aad02cc1f0"],
 " as the ",
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  ExpressionUUID->"2a194780-d870-42f0-9c80-1d9b084cdd98"],
 "'s ",
 StyleBox["\"String\"", "InlineCode"],
 " key. ",
 StyleBox["The following extracts an inline CSS rule from a simple XML \
document:", "ExampleText"]
}], "ExampleText",
 CellChangeTimes->{{3.762728062744729*^9, 3.7627280932083025`*^9}, {
   3.7745348834554768`*^9, 3.7745349612137995`*^9}, {3.7928673055895443`*^9, 
   3.7928673124388156`*^9}, {3.7928674025994797`*^9, 3.7928674431762257`*^9}, 
   3.792867603636532*^9, 3.7929561074777656`*^9, {3.7929561394622307`*^9, 
   3.7929561858241696`*^9}},
 CellID->78378545,ExpressionUUID->"218c8928-3e3c-4501-a9f1-04925fa1d692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<tag style=\\\"font-size:2em\\\">Tag content.</tag>\>\"", ",", 
     "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7627280988083134`*^9, 3.762728177179623*^9}, {
   3.762728218207879*^9, 3.762728222858448*^9}, {3.7627282598654585`*^9, 
   3.762728260347204*^9}, 3.792956115534243*^9},
 CellLabel->"In[153]:=",
 CellID->47295443,ExpressionUUID->"1b67cecd-68df-4cea-ab40-7e8d66618933"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellChangeTimes->{{3.7627282319900227`*^9, 3.7627282391858063`*^9}},
 CellLabel->"In[154]:=",
 CellID->77675145,ExpressionUUID->"9c41c45f-c18d-451f-927e-88f9c3b9c6b5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> None, "Sequence" -> {}, "Specificity" -> {1, 0, 0, 0}]],
         "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2}, 
            "Attributes" -> 
            Association[
             "style" -> Association[
               "Namespace" -> None, "Value" -> "font-size:2em"]], "ID" -> 
            "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "2em", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 2 Inherited], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 16123502636908], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2em", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2", " ", "Inherited"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                244160603, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[244160603][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[244160603][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 244160603; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{564., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7627282415783653`*^9, 3.7627282650885134`*^9}, 
   3.7745348475759764`*^9, 3.774534971496359*^9, 3.7772273392538214`*^9, 
   3.779712682875621*^9, 3.7928673397424593`*^9, 3.792867614137273*^9, 
   3.7929561241382246`*^9},
 CellLabel->"Out[154]=",
 CellID->221057355,ExpressionUUID->"95f16ccb-ae3c-4b34-8c28-9f143f62cb7a"]
}, Open  ]],

Cell[TextData[{
 "Inline styles have the highest specificity of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]], "InlineFormula",
  ExpressionUUID->"e8fb8ee8-6701-4a93-ac80-064c7a06d414"],
 ":"
}], "ExampleText",
 CellChangeTimes->{{3.7929561955192337`*^9, 3.792956199358003*^9}},
 CellID->866509086,ExpressionUUID->"8d814b68-725a-4e98-b9a4-b270e1d0bae1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[
    FrameBox[
     TemplateBox[{
       StyleBox["\"#CSS \"", 
        RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
       StyleBox["None", Selectable -> True, StripOnInput -> False]},
      "RowDefault"],
     Background->RGBColor[0.92, 0.98, 1],
     BaseStyle->{FontFamily -> Dynamic[
         CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
       FontColor -> GrayLevel[0.2]},
     FrameMargins->{{5, 5}, {2, 2}},
     FrameStyle->Directive[
       RGBColor[0, 0.5, 1], 
       AbsoluteThickness[1]],
     ImageMargins->2,
     RoundingRadius->4,
     StripOnInput->False],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSelector[
    Association[
    "String" -> None, "Sequence" -> {}, "Specificity" -> {1, 0, 0, 0}]]], "//",
   "InputForm"}]], "Input",
 CellChangeTimes->{{3.7928673488792987`*^9, 3.792867350289525*^9}},
 CellLabel->"In[155]:=",
 CellID->67312846,ExpressionUUID->"9ec445c9-75e0-4654-8541-5f16511f8435"],

Cell["\<\
CSSSelector[<|\"String\" -> None, \"Sequence\" -> {}, \"Specificity\" -> {1, \
0, 0, 0}|>]\
\>", "Output",
 CellChangeTimes->{3.792867350672742*^9, 3.792867615752411*^9, 
  3.792956164764542*^9},
 CellLabel->"Out[155]//InputForm=",
 CellID->24484718,ExpressionUUID->"1f18c4cf-593a-459a-8686-2bd519d0ce08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "488d476c-360e-462d-8c9b-e08f19a98d6a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->116477601,ExpressionUUID->"d25cdc19-c4dc-48f7-9595-5b69ab94dddb"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->214239584,ExpressionUUID->"eaa65f18-fdf9-4ff6-82b9-069c8038c6fc"],

Cell[TextData[{
 "Embedded stylesheets appear within the XML document's ",
 StyleBox["style", "InlineCode"],
 " tag:"
}], "ExampleText",
 CellChangeTimes->{{3.762728331700509*^9, 3.7627283350285563`*^9}, {
  3.7627283674381456`*^9, 3.76272837674811*^9}, {3.7928676366862326`*^9, 
  3.7928676647191844`*^9}, {3.792956210094242*^9, 3.792956210437461*^9}},
 CellID->302647184,ExpressionUUID->"f96c17f8-5ccb-4060-a187-7d991a46a5b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><style type=\\\"text/css\\\">tag {font-size:2em; \
color:blue}</style><tag>Tag content.</tag><label><tag>Another \
tag.</tag></label></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762728383675127*^9, 3.7627284526369658`*^9}, {
   3.7627285182842627`*^9, 3.7627285208144965`*^9}, {3.762728563580153*^9, 
   3.762728569836383*^9}, {3.7627286003269615`*^9, 3.762728607817879*^9}, {
   3.7627295437587895`*^9, 3.7627295625709257`*^9}, 3.7929562131022243`*^9},
 CellLabel->"In[156]:=",
 CellID->823104529,ExpressionUUID->"6b8e1d1b-4786-4a77-9150-e7c90597c49c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellChangeTimes->{{3.7627284604240875`*^9, 3.76272846794901*^9}},
 CellLabel->"In[157]:=",
 CellID->55848347,ExpressionUUID->"19049680-a08c-42bc-8e60-c3b5760bea5d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 3, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "2em", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 2 Inherited], 
           "Condition" -> None], 
          Association[
          "Property" -> "color", "Value" -> "blue", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[0, 0, 1]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
     Association["ID" -> 204887315296200], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2em", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2", " ", "Inherited"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1182391571, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1182391571][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1182391571][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1182391571; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{575., {67., 73.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7627284693222885`*^9, 3.762728528259674*^9, 
  3.7627285737061377`*^9, 3.762728612553447*^9, 3.762729565387353*^9, 
  3.7745349972055225`*^9, 3.777227343814603*^9, 3.779712683281388*^9, 
  3.7928676759591*^9, 3.792956215962571*^9},
 CellLabel->"Out[157]=",
 CellID->970589436,ExpressionUUID->"e4292f01-afc6-4d06-8a98-6333a16a67d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "76a34a8f-7cc9-4566-a0fa-fd1802a87e06"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->443460876,ExpressionUUID->"3c7703b6-2900-4ab2-90b5-0f072e87c6cf"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->137415897,ExpressionUUID->"5314883b-6515-49dd-916c-47643f8ee14a"],

Cell[TextData[{
 "For external stylesheets, make sure any files are visible to ",
 Cell[BoxData[
  ButtonBox["Import",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Import"]], "InlineFormula",ExpressionUUID->
  "5624fd63-7cae-4b82-b7c0-789cdeae6eef"],
 " by having them somewhere on ",
 Cell[BoxData[
  ButtonBox["$Path",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/$Path"]], "InlineFormula",ExpressionUUID->
  "c98dfe17-3a72-444b-8e49-787e84ba7ae6"],
 "."
}], "ExampleText",
 CellChangeTimes->{{3.7620943720502863`*^9, 3.762094387398682*^9}, {
  3.7620992052666016`*^9, 3.762099220033911*^9}, {3.7627295869995575`*^9, 
  3.762729621789503*^9}, {3.7928677184668827`*^9, 3.7928677402335668`*^9}},
 CellID->100040506,ExpressionUUID->"a376d814-81bc-4108-a8a3-ebb8ef47d882"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.7620941588462067`*^9},
 CellLabel->"In[17]:=",
 CellID->504538696,ExpressionUUID->"65deb636-505c-4104-84a4-b2991002451d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.762094179518711*^9, 3.762094203442301*^9}},
 CellLabel->"In[18]:=",
 CellID->10768370,ExpressionUUID->"f2bebd0b-1c5c-4e83-a1b6-dd065e7e8221"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssData", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$Path", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{"$Path", ",", "cssExamplesDirectory"}], "]"}]}], "}"}], ",", 
     RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cssData", "[", 
  RowBox[{"[", 
   RowBox[{";;", "3"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7620941653620067`*^9, 3.762094167845351*^9}, {
  3.7620942070324583`*^9, 3.7620942263788905`*^9}, {3.762094277144763*^9, 
  3.762094285645074*^9}, {3.762729697805217*^9, 3.762729707256941*^9}},
 CellLabel->"In[19]:=",
 CellID->61891354,ExpressionUUID->"648ef6d6-e3e9-41b1-9937-b982d6c7328e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10177458557876424299435130324244559450272525776702850646272], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], TypeSystem`AnyLength]}], 3], "Meta" -> 
         Association["ID" -> 270707689019000], "RowTarget" -> 20, 
         "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], TypeSystem`AnyLength]}], 3], 
         "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 3, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 3, "DataColumnCount" -> 
         3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Selector"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Selector"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Targets"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Targets"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Block", 
                    Style[
                    "Block", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Block"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{All, "Block"}, "ColumnHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Block", All, "Property"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Block", All, "Property"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Block", All, "Value"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Block", All, "Value"}, "ColumnHeader", 
                    True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Block", All, "Important"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Block", All, "Important"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Block", All, "Interpretation"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Block", All, "Interpretation"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    All, "Block", All, "Condition"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    611414545][{All, "Block", All, "Condition"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"li\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "li ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "li"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    1, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["green", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[0, 
                    Rational[128, 255], 0]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[0, 
                    Rational[128, 255], 0]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{1, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    2, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["background", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "url(\"html-background-png-7.png\") repeat darkblue", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["#dfe366", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    2, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{2, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "h1", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "h1", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    3, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["font-size", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["32px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontSize -> 32], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontSize -> 32], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    3, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["font-weight", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["bold", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontWeight -> Bold], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontWeight -> Bold], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][{
                    3, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   611414545][{3, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    611414545, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
                 FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 611414545]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[611414545][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[611414545][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 611414545; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
      DynamicBox[
       ToBoxes[
        Dataset`DatasetContent[
        1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
         TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm], 
       ImageSizeCache -> {960., {114., 120.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10177458557876424299435130324244559450272525776702850646272,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7620943189423037`*^9, 3.762729717010808*^9, 
  3.7745350264266987`*^9, 3.7772273486967344`*^9, 3.779712683969988*^9, 
  3.7928678160224576`*^9},
 CellLabel->"Out[20]=",
 CellID->848010321,ExpressionUUID->"149600c8-cdb2-44bb-9bd4-476c36e8063e"]
}, Open  ]],

Cell[TextData[{
 "Alternatively you can set the ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "065871de-c982-4d2a-a894-008e15f9e4da"],
 " option:"
}], "ExampleText",
 CellChangeTimes->{{3.7620992924219418`*^9, 3.762099301959674*^9}, 
   3.792867831158043*^9, {3.79295624339745*^9, 3.792956243766161*^9}},
 CellID->154049162,ExpressionUUID->"6d80ccdb-d0cc-4585-ad93-4c8148e606cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtractCSSFromXML", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
   "]"}], "[", 
  RowBox[{"[", 
   RowBox[{";;", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7620993078598876`*^9, 3.7620993105520363`*^9}, {
  3.762729747279852*^9, 3.7627297488107567`*^9}},
 CellLabel->"In[21]:=",
 CellID->409357899,ExpressionUUID->"3a0a0e5e-85bc-41ec-b689-63aba9732277"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10177458557876424299435130324244559450290972520776605211520], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], TypeSystem`AnyLength]}], 3], "Meta" -> 
         Association["ID" -> 57836224927372], "RowTarget" -> 20, 
         "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], TypeSystem`AnyLength]}], 3], 
         "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 3, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 3, "DataColumnCount" -> 
         3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Selector"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Selector"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Targets"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Targets"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Block", 
                    Style[
                    "Block", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Block"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{All, "Block"}, "ColumnHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Block", All, "Property"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Block", All, "Property"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Block", All, "Value"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Block", All, "Value"}, "ColumnHeader", 
                    True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Block", All, "Important"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Block", All, "Important"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Block", All, "Interpretation"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Block", All, "Interpretation"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    All, "Block", All, "Condition"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    881668794][{All, "Block", All, "Condition"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"li\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "li ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "li"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    1, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["green", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[0, 
                    Rational[128, 255], 0]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[0, 
                    Rational[128, 255], 0]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{1, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    2, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["background", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "url(\"html-background-png-7.png\") repeat darkblue", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["#dfe366", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    2, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{2, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "h1", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "h1", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    3, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["font-size", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["32px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontSize -> 32], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontSize -> 32], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    3, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["font-weight", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["bold", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontWeight -> Bold], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontWeight -> Bold], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][{
                    3, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   881668794][{3, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    881668794, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
                 FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 881668794]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[881668794][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[881668794][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 881668794; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
      DynamicBox[
       ToBoxes[
        Dataset`DatasetContent[
        1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
         TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm], 
       ImageSizeCache -> {960., {114., 120.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10177458557876424299435130324244559450290972520776605211520,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.762099312501421*^9, 3.7627297504324727`*^9, 
  3.774535042976447*^9, 3.7772273535336094`*^9, 3.779712684519123*^9, 
  3.7928678363455706`*^9},
 CellLabel->"Out[21]=",
 CellID->374812624,ExpressionUUID->"7175dd5e-c9c1-48c2-97a3-f2a8aa050700"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"00e48d03-6ea4-409b-9e2c-f9c4397f5ad2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "dc346785-8e79-44c9-a69d-5a64dd0018d5"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"f3eb9265-3ae3-4326-89b9-b61d1f89bd2d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "External stylesheets", "ExampleSubsection",ExpressionUUID->
   "0ef8e28e-8738-4e9e-a317-e829740960ab"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.762099361973826*^9, 3.762099365247749*^9}},
 CellID->473870500,ExpressionUUID->"675cedbc-8439-465e-935d-5e7ae0b1ae53"],

Cell[TextData[{
 "External stylesheets are usually present in the XML document's ",
 StyleBox["link", "InlineCode"],
 " tag:"
}], "ExampleText",
 CellChangeTimes->{{3.7620364510494723`*^9, 3.7620364533790426`*^9}, {
  3.7620931886221476`*^9, 3.7620931913872046`*^9}, {3.7620933609335456`*^9, 
  3.7620933905616937`*^9}, {3.792867848758466*^9, 3.7928678497747507`*^9}, {
  3.7929562488695407`*^9, 3.792956249541711*^9}},
 CellID->404756270,ExpressionUUID->"24d39302-8d2d-4f9b-aef1-4b3d6cf1b875"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[158]:=",
 CellID->961184916,ExpressionUUID->"9c9ece7c-172e-4bad-82f5-55b4eec4a092"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7620361931568537`*^9, 3.762036194195279*^9}, {
   3.7620362689910507`*^9, 3.762036320023391*^9}, {3.7620932529802604`*^9, 
   3.76209326846583*^9}, {3.762093456467221*^9, 3.7620934589660463`*^9}, 
   3.7929562526783466`*^9},
 CellLabel->"In[159]:=",
 CellID->530281556,ExpressionUUID->"5bd1fbdf-53ee-41bc-a928-93115eed49ff"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["Import",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Import"]], "InlineFormula",ExpressionUUID->
  "9867c0ff-6a9d-402e-a4b1-c7e34099ab9a"],
 " ignores which tags the CSS selectors target:"
}], "ExampleText",
 CellChangeTimes->{{3.762093962704733*^9, 3.762093980173417*^9}, {
  3.7928679066543007`*^9, 3.7928679309503655`*^9}, {3.792956255661526*^9, 
  3.7929562565739336`*^9}},
 CellID->228266911,ExpressionUUID->"2178f0b1-448e-41f3-a3cf-d27ce9533b56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.762093991641982*^9},
 CellLabel->"In[160]:=",
 CellID->523152714,ExpressionUUID->"c0133962-cc1e-4146-a005-9891933aa4a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<simple.css\>\""}], "}"}], 
    "]"}], ",", "\"\<CSS\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.762093982299698*^9, 3.7620940071594768`*^9}},
 CellLabel->"In[161]:=",
 CellID->73777717,ExpressionUUID->"5ccfb894-bda3-4173-91a7-d45a6f07bf39"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 200798506430451], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 1, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1639976514, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1639976514][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1639976514][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1639976514; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{500., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.762094007659423*^9, 3.7621000402211947`*^9, 
  3.774535069057639*^9, 3.7772273606121006`*^9, 3.7797126852516427`*^9, 
  3.7928678862667265`*^9, 3.7929562587341185`*^9},
 CellLabel->"Out[161]=",
 CellID->642301971,ExpressionUUID->"ae82044e-fab8-4239-a38f-971170848cf1"]
}, Open  ]],

Cell[TextData[{
 "Setting the ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "1fcfc880-0bbb-40cf-95ea-f240a81aa404"],
 " option value with ",
 Cell[BoxData[
  ButtonBox["ExtractCSSFromXML",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"]], "InlineFormula",
  ExpressionUUID->"431aa6e1-84f0-40cf-91da-37cdb352605e"],
 " includes the selector target information:"
}], "ExampleText",
 CellChangeTimes->{{3.7620940146265993`*^9, 3.762094062096522*^9}, {
  3.76210024993557*^9, 3.7621002551029277`*^9}, {3.792867948391782*^9, 
  3.792867953669753*^9}, {3.792956262197155*^9, 3.792956262854128*^9}},
 CellID->11429555,ExpressionUUID->"3afe3e10-7ad7-4e7a-b033-36cac90105b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7620935638729057`*^9, 3.762093570734295*^9}, {
  3.7621000347509346`*^9, 3.7621000480697193`*^9}},
 CellLabel->"In[162]:=",
 CellID->13922790,ExpressionUUID->"b93346dc-e079-492e-a6f5-458a478743da"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 49241995456504], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                749338082, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[749338082][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[749338082][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 749338082; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{566., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7620935714683046`*^9, 3.76210004863953*^9, 
  3.7745350787534466`*^9, 3.7772273623769445`*^9, 3.77971268549159*^9, 
  3.7928679598342047`*^9, 3.7929562643471317`*^9},
 CellLabel->"Out[162]=",
 CellID->263427236,ExpressionUUID->"252ea054-ac30-45ec-a500-b2108219b36a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Internal stylesheets", "ExampleSubsection",ExpressionUUID->
   "9acbdc2e-d8a7-4f91-9a6e-8a9b7e666e7f"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.7620993719966164`*^9, 3.7620993750276537`*^9}},
 CellID->147720695,ExpressionUUID->"aea86ad0-b390-4ea3-bb04-72b299b237d9"],

Cell[TextData[{
 "Internal stylesheets are usually present in the XML document's ",
 StyleBox["style", "InlineCode"],
 " tags. They can be found anywhere but generally are near the start of the \
document. In HTML documents it is recommended that they appear within the ",
 StyleBox["head", "InlineCode"],
 " tag. The following XML contains an internal stylesheet:"
}], "ExampleText",
 CellChangeTimes->{{3.762099383315999*^9, 3.762099430980837*^9}, {
  3.7928679723739634`*^9, 3.79286799624584*^9}, {3.792956299629741*^9, 
  3.792956312397586*^9}},
 CellID->88919951,ExpressionUUID->"c3ae7c10-b640-4218-a2e7-61aa758b119c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[163]:=",
 CellID->52436315,ExpressionUUID->"512c21a6-810a-4f0c-b074-0b2dfb21f934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head><style type=\\\"text/css\\\"> tag {font-size:20px} \
</style></head><body><tag>data</tag></body></html>\>\"", ",", "\"\<XML\>\""}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7620361931568537`*^9, 3.762036194195279*^9}, {
   3.7620362689910507`*^9, 3.762036320023391*^9}, {3.7620932529802604`*^9, 
   3.76209326846583*^9}, {3.762093456467221*^9, 3.7620934589660463`*^9}, {
   3.762099453889577*^9, 3.7620994553730965`*^9}, {3.7620994895012493`*^9, 
   3.762099583053534*^9}, 3.7929562902388864`*^9},
 CellLabel->"In[164]:=",
 CellID->74017799,ExpressionUUID->"ef78b13b-aa6d-4971-bc69-ca7d9acdf74f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->235986887,ExpressionUUID->"73a18601-1719-46df-8cbb-a863b8b81a5e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "20px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 20], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 68560758353942], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> 
                    Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1044021399, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1044021399][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1044021399][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1044021399; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{566., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7620995936541443`*^9, 3.774535143609211*^9, 
  3.7772273664241495`*^9, 3.779712685873931*^9, 3.792868015237545*^9, 
  3.792956293894086*^9},
 CellLabel->"Out[165]=",
 CellID->286286271,ExpressionUUID->"f61d6cc6-483c-4e03-8e84-4251ed9c4dfc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Inline stylesheets", "ExampleSubsection",ExpressionUUID->
   "37d41942-b873-49f6-b424-7870bf4eeeba"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.7621002785414777`*^9, 3.762100299892687*^9}},
 CellID->407283549,ExpressionUUID->"72fbd0f5-6b99-478e-bdf0-ab4a2990ab5d"],

Cell[TextData[{
 "Inline stylesheets are declared in the ",
 StyleBox["style", "InlineCode"],
 " attribute of a document's tag:"
}], "ExampleText",
 CellChangeTimes->{{3.762100287258707*^9, 3.7621003191025553`*^9}, {
  3.792868042046458*^9, 3.7928680430383043`*^9}, {3.7929563208938627`*^9, 
  3.7929563211731973`*^9}},
 CellID->427755359,ExpressionUUID->"7a19fa44-a75d-4a66-87a1-8ee59861159c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[166]:=",
 CellID->250909227,ExpressionUUID->"6715da3b-5036-4b43-8af0-c81d346e82f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head></head><body><tag \
style=\\\"font-size:12px\\\">data</tag></body></html>\>\"", ",", 
     "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7620361931568537`*^9, 3.762036194195279*^9}, {
   3.7620362689910507`*^9, 3.762036320023391*^9}, {3.7620932529802604`*^9, 
   3.76209326846583*^9}, {3.762093456467221*^9, 3.7620934589660463`*^9}, {
   3.762099453889577*^9, 3.7620994553730965`*^9}, {3.7620994895012493`*^9, 
   3.762099583053534*^9}, {3.7621003376736827`*^9, 3.7621003551621046`*^9}, 
   3.7929563254147625`*^9},
 CellLabel->"In[167]:=",
 CellID->16072950,ExpressionUUID->"4273a1bb-12cc-4793-b717-b1ec391de661"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->847413682,ExpressionUUID->"79254419-084b-4270-8558-b0a7e7fe14cf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> None, "Sequence" -> {}, "Specificity" -> {1, 0, 0, 0}]],
         "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2, 3, 1}, 
            "Attributes" -> 
            Association[
             "style" -> Association[
               "Namespace" -> None, "Value" -> "font-size:12px"]], "ID" -> 
            "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "12px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 12], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 71429796507702], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["12px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1087726348, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1087726348][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1087726348][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1087726348; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{545., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7620995936541443`*^9, 3.7621003616580267`*^9, 
  3.774535159620755*^9, 3.777227370690134*^9, 3.7797126862943172`*^9, 
  3.7928680540577984`*^9, 3.7929563263682103`*^9},
 CellLabel->"Out[168]=",
 CellID->462770766,ExpressionUUID->"3a7cd595-7184-46c0-a0b8-6e97fec6c2df"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "d37a3ad7-210e-4fba-90f8-374f677d6083"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"1febc885-d100-478e-aa9d-911850ca71c5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "9d6b7b89-bb21-4bfe-a516-6f8ee1475acb"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"a9e27d1a-8219-4573-ac59-86ab1c63566b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"RootDirectory\"", "ExampleSubsection",ExpressionUUID->
   "46cbed94-8651-4608-a477-4a1ee9166ce1"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.762093596546385*^9, 3.762093596546385*^9}},
 CellID->1757724783,ExpressionUUID->"fef5a0e5-88b2-447a-a883-1f663fe4a942"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "837d01fc-62ec-4614-9af5-e4609b000870"],
 " to set the root path from which files are expected to be found:"
}], "ExampleText",
 CellChangeTimes->{{3.7620936372806864`*^9, 3.762093662857032*^9}, 
   3.7928680635692024`*^9, {3.7929563323414125`*^9, 3.792956332637452*^9}},
 CellID->480789144,ExpressionUUID->"a972a9e6-3f59-4e20-9afd-62b5088400cc"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[169]:=",
 CellID->455582830,ExpressionUUID->"1e5c4236-df99-46a7-890c-26fada674a0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.774535177044924*^9},
 CellLabel->"In[170]:=",
 CellID->139585394,ExpressionUUID->"dee2cc50-5e52-4eb5-a1c0-75921f5f9770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.7620936732499943`*^9},
 CellLabel->"In[171]:=",
 CellID->76168790,ExpressionUUID->"621defdc-a396-4b38-a2cf-bf27aa4f40b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7620936742655487`*^9, 3.762093688281067*^9}},
 CellLabel->"In[172]:=",
 CellID->884765519,ExpressionUUID->"543e85fb-bc54-4387-ac75-b1d1cbba1a15"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 106249096376385], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> 
                    Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1618940952, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1618940952][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1618940952][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1618940952; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{566., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.76209369153086*^9, 3.7745351808627462`*^9, 
  3.777227375971*^9, 3.7797126867790823`*^9, 3.792868069735026*^9, 
  3.7929563373637657`*^9},
 CellLabel->"Out[172]=",
 CellID->256842310,ExpressionUUID->"5775bf7b-d5ab-4372-ab67-e454d5673efe"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "c2b45417-fc4a-47f6-a64f-2d0fe94c6992"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1295379749,ExpressionUUID->"23327299-bceb-4361-a5d5-66624118fd6b"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "225da8b3-83bd-4507-a659-8d51a9582b1f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"6a9811f8-3f15-4c71-a071-1899c59be5bf"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "5ee24707-0cd7-4f15-860b-6ea88a8e8077"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"b0ebfa91-76c5-4587-aee1-024ba1de10a7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "471039fb-3205-46a8-9bbe-2ff1b36c43d2"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"ac2883c1-c1ca-4343-ab41-507da49a6400"],

Cell["\<\
Many XML documents use relative locations to specify where resources, such as \
stylesheets, should be found. If external stylesheets cannot be found then no \
rules are imported from those locations.\
\>", "ExampleText",
 CellChangeTimes->{{3.7620937573748193`*^9, 3.7620938182189665`*^9}, {
  3.792868081279013*^9, 3.792868092885867*^9}},
 CellID->3458080,ExpressionUUID->"004fddce-31e8-4b5e-8a50-45f17e9f284b"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->247745711,ExpressionUUID->"5a8d5f91-130c-44c8-ac2c-ce24db00225b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->80511540,ExpressionUUID->"8fbf891d-dbbc-4637-935e-b56afd422e89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellChangeTimes->{{3.7620938352394753`*^9, 3.762093835380105*^9}},
 CellLabel->"In[175]:=",
 CellID->399569939,ExpressionUUID->"9962f4a7-e71b-4c3b-9fde-83b308f0e380"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"simple.css\\\\\\\"\\\"}]\\) not found \
during \\!\\(\\*RowBox[{\\\"\\\\\\\"CSS extraction\\\\\\\"\\\"}]\\).\"", 2, 
   175, 38, 29909339096118746220, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7745351903932347`*^9, 3.7772273834869127`*^9, 
  3.779712687187745*^9, 3.79286809931277*^9, 3.792956357821067*^9},
 CellLabel->"During evaluation of In[175]:=",
 CellID->31400741,ExpressionUUID->"b66b2cce-66b0-4b3b-87ca-0255d60287b1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {}, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 0, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Vector[TypeSystem`UnknownType, 0], "Meta" -> 
     Association["ID" -> 96636959567958], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 0, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Vector[TypeSystem`UnknownType, 0], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 0, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 0, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Spacer[10], 
                  Style[
                   Spacer[10], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  1472242368][{}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1472242368][{}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1472242368, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1472242368][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1472242368][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1472242368; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{39., {21., 27.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7620938362195687`*^9, 3.7745351904780073`*^9, 
  3.777227383596275*^9, 3.779712687360406*^9, 3.792868099326731*^9, 
  3.7929563578330345`*^9},
 CellLabel->"Out[175]=",
 CellID->151632703,ExpressionUUID->"be3eab9e-ba13-447f-a015-0fac7283b8dc"]
}, Open  ]],

Cell[TextData[{
 "Use the ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "72f9a91d-3d70-4e93-a0af-528afd1e5c7f"],
 " option to provide a directory from which to locate the resources relative \
to this root:"
}], "ExampleText",
 CellChangeTimes->{{3.7620938652212577`*^9, 3.7620939008440332`*^9}, 
   3.792868125655599*^9, {3.792956361661065*^9, 3.79295636231006*^9}},
 CellID->128939588,ExpressionUUID->"be8836e0-84ee-4fa9-b7fd-9fa4560b5867"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.7620939215966315`*^9},
 CellLabel->"In[176]:=",
 CellID->548480066,ExpressionUUID->"f6d7a080-b272-474f-8b7f-f7737a3f3550"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762093911438948*^9, 3.762093916174617*^9}},
 CellLabel->"In[177]:=",
 CellID->774434792,ExpressionUUID->"9bc95a30-a753-4100-82ba-cb63658c7b0a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 16243761721437], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                245438971, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[245438971][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[245438971][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 245438971; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{566., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7620939230949893`*^9, 3.7745352122360926`*^9, 
  3.77722739559717*^9, 3.7797126876266813`*^9, 3.792868142665123*^9, 
  3.7929563651245317`*^9},
 CellLabel->"Out[177]=",
 CellID->25051574,ExpressionUUID->"4609bb43-ce1b-47e7-aa03-847b0ca5547d"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "0ea6adb5-2c0f-4e32-940b-0c30c8b73604"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"cee57e11-a2a0-4127-8730-e0054f3dc49b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "5e8fbd7c-079f-44a7-8ac9-bfb59fd56e55"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"11ae5bf4-b6f4-4e54-a1c7-5c42d83a6399"]
}, Open  ]]
},
WindowSize->{932, 981},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->"Global`",
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (February 29, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"74fe2791-6f4a-4579-aaf4-0d01c7f0fd27"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[229684, 4617, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"00e48d03-6ea4-409b-9e2c-f9c4397f5ad2",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 501498, 9903}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 22, "History",ExpressionUUID->"e166cf8e-c8d2-44af-b8b9-5d6900922d6d",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 27, "CategorizationSection",ExpressionUUID->"c87f3884-82c1-4520-84fd-fd7291de99d2",
 CellID->1122911449],
Cell[1309, 41, 134, 2, 70, "Categorization",ExpressionUUID->"ede87280-432d-4c84-bf92-80d9254ebb77",
 CellID->686433507],
Cell[1446, 45, 136, 2, 70, "Categorization",ExpressionUUID->"e9814a2c-096f-4fba-b597-b90d18c80d47",
 CellID->605800465],
Cell[1585, 49, 133, 2, 70, "Categorization",ExpressionUUID->"1a5cbb3a-16fd-4d24-9daf-9838c82df0f8",
 CellID->468444828],
Cell[1721, 53, 130, 1, 70, "Categorization",ExpressionUUID->"5a367ec0-6794-413e-8226-c83fab553d01"]
}, Closed]],
Cell[CellGroupData[{
Cell[1888, 59, 110, 1, 17, "KeywordsSection",ExpressionUUID->"7bfdcb63-ce7e-43f0-b0e3-8f9c327f95f9",
 CellID->477174294],
Cell[2001, 62, 100, 1, 70, "Keywords",ExpressionUUID->"566528c3-8dfd-422c-b409-e75a197a9c07",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2138, 68, 120, 1, 17, "TemplatesSection",ExpressionUUID->"647f62ec-da06-4ebd-a836-7f5ac82878c7",
 CellID->1872225408],
Cell[2261, 71, 149, 2, 70, "Template",ExpressionUUID->"59df0e8f-3358-448e-84f8-848d659e84a7",
 CellID->1562036412],
Cell[2413, 75, 137, 2, 70, "Template",ExpressionUUID->"00b34a44-676e-4c4f-a20a-dc15cf728dd8",
 CellID->158391909],
Cell[2553, 79, 136, 2, 70, "Template",ExpressionUUID->"984302cf-0017-4b3a-9a9f-43be900e360a",
 CellID->1360575930],
Cell[2692, 83, 137, 2, 70, "Template",ExpressionUUID->"75dcf890-5117-47de-9d48-6d5a17906f4a",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[2866, 90, 108, 1, 17, "DetailsSection",ExpressionUUID->"a9ff8d50-bfe7-457d-98b7-73fa740cc9fc",
 CellID->307771771],
Cell[2977, 93, 118, 2, 70, "Details",ExpressionUUID->"a29eeb95-4394-4f00-b77a-eebae709cd48",
 CellID->670882175],
Cell[3098, 97, 124, 2, 70, "Details",ExpressionUUID->"e67ae70e-b358-4051-bf8a-fe2f9623da2d",
 CellID->350963985],
Cell[3225, 101, 119, 2, 70, "Details",ExpressionUUID->"5fb75672-bfcc-491b-9f0a-425e6caba8de",
 CellID->8391405],
Cell[3347, 105, 124, 2, 70, "Details",ExpressionUUID->"55e318fb-5e99-4b66-b227-5dee4c892d4c",
 CellID->3610269],
Cell[3474, 109, 116, 2, 70, "Details",ExpressionUUID->"ebe0ae29-41db-46e3-ad07-c0653018d661",
 CellID->401364205],
Cell[3593, 113, 116, 2, 70, "Details",ExpressionUUID->"2ab47c32-376c-45b5-af1b-385c45c0e6eb",
 CellID->350204745],
Cell[3712, 117, 118, 2, 70, "Details",ExpressionUUID->"38875496-e525-45cb-b361-0082b9554512",
 CellID->732958810],
Cell[3833, 121, 133, 2, 70, "Details",ExpressionUUID->"5d1c813a-4c1f-4d65-a713-3f2e7880e965",
 CellID->222905350],
Cell[3969, 125, 122, 2, 70, "Details",ExpressionUUID->"4c2c00ee-3d29-42de-a7f7-b54e642599dc",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4128, 132, 183, 2, 62, "ObjectName",ExpressionUUID->"6065862d-73e1-4ae2-804e-ac72dcb97125",
 CellID->1224892054],
Cell[4314, 136, 669, 15, 73, "Usage",ExpressionUUID->"7d4f97a7-c82f-4676-955f-d9dac642849b",
 CellID->982511436],
Cell[4986, 153, 450, 8, 51, "Notes",ExpressionUUID->"2a50e6a1-43be-49e7-90d1-509d3ff7c1b6",
 CellID->1067943069],
Cell[5439, 163, 466, 8, 35, "3ColumnTableMod",ExpressionUUID->"b8877d56-49a0-4548-be3a-b13308027c64",
 CellID->120199297],
Cell[5908, 173, 317, 5, 37, "Notes",ExpressionUUID->"8fa0225b-32ff-4dc5-922c-66ceb7e4e7bc",
 CellID->333181165]
}, Open  ]],
Cell[CellGroupData[{
Cell[6262, 183, 112, 1, 44, "TutorialsSection",ExpressionUUID->"3ab31fe9-e378-42a5-b00e-84cf81be8144",
 CellID->250839057],
Cell[6377, 186, 260, 4, 16, "Tutorials",ExpressionUUID->"dc8b87ee-c7a1-4dc8-8206-03d0ca38f4a7",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[6674, 195, 138, 1, 31, "RelatedDemonstrationsSection",ExpressionUUID->"c891bb88-6c57-4dbd-a25b-fd81fd099c17",
 CellID->1268215905],
Cell[6815, 198, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"ec2130c0-0157-4f11-a0c2-84861dbf494e",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[6965, 204, 120, 1, 31, "RelatedLinksSection",ExpressionUUID->"330b5a3e-650f-464b-9ab4-c82be06644cb",
 CellID->1584193535],
Cell[7088, 207, 104, 1, 16, "RelatedLinks",ExpressionUUID->"e8c7f91c-5643-4c81-b33c-db98a4f36e10",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[7229, 213, 110, 1, 31, "SeeAlsoSection",ExpressionUUID->"36cc81e3-566d-4f61-a364-602db2ddc746",
 CellID->1255426704],
Cell[7342, 216, 1707, 45, 18, "SeeAlso",ExpressionUUID->"a84c30ee-a95d-4c0c-8d94-612ee61d747d",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[9086, 266, 112, 1, 31, "MoreAboutSection",ExpressionUUID->"b309c0bc-c504-4e7d-800e-1c1891bb1f2e",
 CellID->38303248],
Cell[9201, 269, 258, 4, 16, "MoreAbout",ExpressionUUID->"da9e3a05-ea54-4a6c-95f0-0d8315de4dab",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[9496, 278, 411, 11, 68, "PrimaryExamplesSection",ExpressionUUID->"a3538c25-cd06-4750-a600-431ebe591261",
 CellID->880084151],
Cell[9910, 291, 174, 3, 25, "Input",ExpressionUUID->"36cae351-bc3b-482f-b88e-93b6c62ec969",
 CellID->140347243],
Cell[10087, 296, 1041, 24, 37, "ExampleText",ExpressionUUID->"218c8928-3e3c-4501-a9f1-04925fa1d692",
 CellID->78378545],
Cell[11131, 322, 504, 11, 44, "Input",ExpressionUUID->"1b67cecd-68df-4cea-ab40-7e8d66618933",
 CellID->47295443],
Cell[CellGroupData[{
Cell[11660, 337, 241, 4, 25, "Input",ExpressionUUID->"9c41c45f-c18d-451f-927e-88f9c3b9c6b5",
 CellID->77675145],
Cell[11904, 343, 39407, 748, 128, "Output",ExpressionUUID->"95f16ccb-ae3c-4b34-8c28-9f143f62cb7a",
 CellID->221057355]
}, Open  ]],
Cell[51326, 1094, 396, 9, 22, "ExampleText",ExpressionUUID->"8d814b68-725a-4e98-b9a4-b270e1d0bae1",
 CellID->866509086],
Cell[CellGroupData[{
Cell[51747, 1107, 1069, 30, 37, "Input",ExpressionUUID->"9ec445c9-75e0-4654-8541-5f16511f8435",
 CellID->67312846],
Cell[52819, 1139, 315, 7, 24, "Output",ExpressionUUID->"1f18c4cf-593a-459a-8686-2bd519d0ce08",
 CellID->24484718]
}, Open  ]],
Cell[CellGroupData[{
Cell[53171, 1151, 242, 5, 16, "ExampleDelimiter",ExpressionUUID->"d25cdc19-c4dc-48f7-9595-5b69ab94dddb",
 CellID->116477601],
Cell[53416, 1158, 173, 3, 25, "Input",ExpressionUUID->"eaa65f18-fdf9-4ff6-82b9-069c8038c6fc",
 CellID->214239584],
Cell[53592, 1163, 428, 8, 22, "ExampleText",ExpressionUUID->"f96c17f8-5ccb-4060-a187-7d991a46a5b4",
 CellID->302647184],
Cell[54023, 1173, 700, 13, 98, "Input",ExpressionUUID->"6b8e1d1b-4786-4a77-9150-e7c90597c49c",
 CellID->823104529],
Cell[CellGroupData[{
Cell[54748, 1190, 238, 4, 25, "Input",ExpressionUUID->"19049680-a08c-42bc-8e60-c3b5760bea5d",
 CellID->55848347],
Cell[54989, 1196, 45509, 878, 152, "Output",ExpressionUUID->"e4292f01-afc6-4d06-8a98-6333a16a67d2",
 CellID->970589436]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100547, 2080, 242, 5, 16, "ExampleDelimiter",ExpressionUUID->"3c7703b6-2900-4ab2-90b5-0f072e87c6cf",
 CellID->443460876],
Cell[100792, 2087, 173, 3, 25, "Input",ExpressionUUID->"5314883b-6515-49dd-916c-47643f8ee14a",
 CellID->137415897],
Cell[100968, 2092, 778, 18, 37, "ExampleText",ExpressionUUID->"a376d814-81bc-4108-a8a3-ebb8ef47d882",
 CellID->100040506],
Cell[101749, 2112, 490, 12, 62, "Input",ExpressionUUID->"65deb636-505c-4104-84a4-b2991002451d",
 CellID->504538696],
Cell[102242, 2126, 442, 11, 25, "Input",ExpressionUUID->"f2bebd0b-1c5c-4e83-a1b6-dd065e7e8221",
 CellID->10768370],
Cell[CellGroupData[{
Cell[102709, 2141, 751, 18, 62, "Input",ExpressionUUID->"648ef6d6-e3e9-41b1-9937-b982d6c7328e",
 CellID->61891354],
Cell[103463, 2161, 62623, 1210, 246, "Output",ExpressionUUID->"149600c8-cdb2-44bb-9bd4-476c36e8063e",
 CellID->848010321]
}, Open  ]],
Cell[166101, 3374, 413, 9, 22, "ExampleText",ExpressionUUID->"6d80ccdb-d0cc-4585-ad93-4c8148e606cb",
 CellID->154049162],
Cell[CellGroupData[{
Cell[166539, 3387, 461, 11, 44, "Input",ExpressionUUID->"3a0a0e5e-85bc-41ec-b689-63aba9732277",
 CellID->409357899],
Cell[167003, 3400, 62620, 1210, 246, "Output",ExpressionUUID->"7175dd5e-c9c1-48c2-97a3-f2a8aa050700",
 CellID->374812624]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[229684, 4617, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"00e48d03-6ea4-409b-9e2c-f9c4397f5ad2",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[CellGroupData[{
Cell[229864, 4623, 242, 5, 31, "ExampleSection",ExpressionUUID->"f3eb9265-3ae3-4326-89b9-b61d1f89bd2d",
 CellID->1293636265],
Cell[CellGroupData[{
Cell[230131, 4632, 328, 6, 22, "ExampleSubsection",ExpressionUUID->"675cedbc-8439-465e-935d-5e7ae0b1ae53",
 CellID->473870500],
Cell[230462, 4640, 494, 9, 22, "ExampleText",ExpressionUUID->"24d39302-8d2d-4f9b-aef1-4b3d6cf1b875",
 CellID->404756270],
Cell[230959, 4651, 174, 3, 25, "Input",ExpressionUUID->"9c9ece7c-172e-4bad-82f5-55b4eec4a092",
 CellID->961184916],
Cell[231136, 4656, 595, 12, 62, "Input",ExpressionUUID->"5bd1fbdf-53ee-41bc-a928-93115eed49ff",
 CellID->530281556],
Cell[231734, 4670, 501, 11, 22, "ExampleText",ExpressionUUID->"2178f0b1-448e-41f3-a3cf-d27ce9533b56",
 CellID->228266911],
Cell[232238, 4683, 489, 12, 62, "Input",ExpressionUUID->"c0133962-cc1e-4146-a005-9891933aa4a1",
 CellID->523152714],
Cell[CellGroupData[{
Cell[232752, 4699, 391, 9, 25, "Input",ExpressionUUID->"5ccfb894-bda3-4173-91a7-d45a6f07bf39",
 CellID->73777717],
Cell[233146, 4710, 36270, 683, 128, "Output",ExpressionUUID->"ae82044e-fab8-4239-a38f-971170848cf1",
 CellID->642301971]
}, Open  ]],
Cell[269431, 5396, 730, 16, 35, "ExampleText",ExpressionUUID->"3afe3e10-7ad7-4e7a-b033-36cac90105b0",
 CellID->11429555],
Cell[CellGroupData[{
Cell[270186, 5416, 387, 8, 25, "Input",ExpressionUUID->"b93346dc-e079-492e-a6f5-458a478743da",
 CellID->13922790],
Cell[270576, 5426, 40177, 763, 128, "Output",ExpressionUUID->"252ea054-ac30-45ec-a500-b2108219b36a",
 CellID->263427236]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310802, 6195, 332, 6, 22, "ExampleSubsection",ExpressionUUID->"aea86ad0-b390-4ea3-bb04-72b299b237d9",
 CellID->147720695],
Cell[311137, 6203, 623, 11, 63, "ExampleText",ExpressionUUID->"c3ae7c10-b640-4218-a2e7-61aa758b119c",
 CellID->88919951],
Cell[311763, 6216, 173, 3, 25, "Input",ExpressionUUID->"512c21a6-810a-4f0c-b074-0b2dfb21f934",
 CellID->52436315],
Cell[311939, 6221, 722, 14, 80, "Input",ExpressionUUID->"ef78b13b-aa6d-4971-bc69-ca7d9acdf74f",
 CellID->74017799],
Cell[CellGroupData[{
Cell[312686, 6239, 172, 3, 25, "Input",ExpressionUUID->"73a18601-1719-46df-8cbb-a863b8b81a5e",
 CellID->235986887],
Cell[312861, 6244, 40246, 765, 128, "Output",ExpressionUUID->"f61d6cc6-483c-4e03-8e84-4251ed9c4dfc",
 CellID->286286271]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353156, 7015, 328, 6, 22, "ExampleSubsection",ExpressionUUID->"72fbd0f5-6b99-478e-bdf0-ab4a2990ab5d",
 CellID->407283549],
Cell[353487, 7023, 394, 8, 22, "ExampleText",ExpressionUUID->"7a19fa44-a75d-4a66-87a1-8ee59861159c",
 CellID->427755359],
Cell[353884, 7033, 174, 3, 25, "Input",ExpressionUUID->"6715da3b-5036-4b43-8af0-c81d346e82f2",
 CellID->250909227],
Cell[354061, 7038, 747, 15, 80, "Input",ExpressionUUID->"4273a1bb-12cc-4793-b717-b1ec391de661",
 CellID->16072950],
Cell[CellGroupData[{
Cell[354833, 7057, 172, 3, 25, "Input",ExpressionUUID->"79254419-084b-4270-8558-b0a7e7fe14cf",
 CellID->847413682],
Cell[355008, 7062, 39264, 745, 128, "Output",ExpressionUUID->"3a7cd595-7184-46c0-a0b8-6e97fec6c2df",
 CellID->462770766]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[394311, 7812, 265, 5, 31, "ExampleSection",ExpressionUUID->"1febc885-d100-478e-aa9d-911850ca71c5",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[394601, 7821, 244, 5, 19, "ExampleSection",ExpressionUUID->"a9e27d1a-8219-4573-ac59-86ab1c63566b",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[394870, 7830, 326, 6, 22, "ExampleSubsection",ExpressionUUID->"fef5a0e5-88b2-447a-a883-1f663fe4a942",
 CellID->1757724783],
Cell[395199, 7838, 448, 9, 22, "ExampleText",ExpressionUUID->"a972a9e6-3f59-4e20-9afd-62b5088400cc",
 CellID->480789144],
Cell[395650, 7849, 174, 3, 25, "Input",ExpressionUUID->"1e5c4236-df99-46a7-890c-26fada674a0a",
 CellID->455582830],
Cell[395827, 7854, 489, 12, 62, "Input",ExpressionUUID->"dee2cc50-5e52-4eb5-a1c0-75921f5f9770",
 CellID->139585394],
Cell[396319, 7868, 391, 9, 62, "Input",ExpressionUUID->"621defdc-a396-4b38-a2cf-bf27aa4f40b9",
 CellID->76168790],
Cell[CellGroupData[{
Cell[396735, 7881, 335, 7, 25, "Input",ExpressionUUID->"543e85fb-bc54-4387-ac75-b1d1cbba1a15",
 CellID->884765519],
Cell[397073, 7890, 40227, 765, 128, "Output",ExpressionUUID->"5775bf7b-d5ab-4372-ab67-e454d5673efe",
 CellID->256842310]
}, Open  ]]
}, Open  ]],
Cell[437327, 8659, 247, 5, 22, "ExampleSubsection",ExpressionUUID->"23327299-bceb-4361-a5d5-66624118fd6b",
 CellID->1295379749]
}, Open  ]],
Cell[437589, 8667, 248, 5, 31, "ExampleSection",ExpressionUUID->"6a9811f8-3f15-4c71-a071-1899c59be5bf",
 CellID->258228157],
Cell[437840, 8674, 259, 5, 19, "ExampleSection",ExpressionUUID->"b0ebfa91-76c5-4587-aee1-024ba1de10a7",
 CellID->2123667759],
Cell[CellGroupData[{
Cell[438124, 8683, 252, 5, 19, "ExampleSection",ExpressionUUID->"ac2883c1-c1ca-4343-ab41-507da49a6400",
 CellID->1305812373],
Cell[438379, 8690, 423, 7, 46, "ExampleText",ExpressionUUID->"004fddce-31e8-4b5e-8a50-45f17e9f284b",
 CellID->3458080],
Cell[438805, 8699, 174, 3, 25, "Input",ExpressionUUID->"5a8d5f91-130c-44c8-ac2c-ce24db00225b",
 CellID->247745711],
Cell[438982, 8704, 347, 8, 62, "Input",ExpressionUUID->"8fbf891d-dbbc-4637-935e-b56afd422e89",
 CellID->80511540],
Cell[CellGroupData[{
Cell[439354, 8716, 240, 4, 25, "Input",ExpressionUUID->"9962f4a7-e71b-4c3b-9fde-83b308f0e380",
 CellID->399569939],
Cell[439597, 8722, 548, 10, 19, "Message",ExpressionUUID->"b66b2cce-66b0-4b3b-87ca-0255d60287b1",
 CellID->31400741],
Cell[440148, 8734, 18842, 334, 60, "Output",ExpressionUUID->"be3eab9e-ba13-447f-a015-0fac7283b8dc",
 CellID->151632703]
}, Open  ]],
Cell[459005, 9071, 475, 10, 35, "ExampleText",ExpressionUUID->"be8836e0-84ee-4fa9-b7fd-9fa4560b5867",
 CellID->128939588],
Cell[459483, 9083, 491, 12, 62, "Input",ExpressionUUID->"f6d7a080-b272-474f-8b7f-f7737a3f3550",
 CellID->548480066],
Cell[CellGroupData[{
Cell[459999, 9099, 333, 7, 25, "Input",ExpressionUUID->"9bc95a30-a753-4100-82ba-cb63658c7b0a",
 CellID->774434792],
Cell[460335, 9108, 40153, 763, 128, "Output",ExpressionUUID->"4609bb43-ce1b-47e7-aa03-847b0ca5547d",
 CellID->25051574]
}, Open  ]]
}, Open  ]],
Cell[500515, 9875, 257, 5, 31, "ExampleSection",ExpressionUUID->"cee57e11-a2a0-4127-8730-e0054f3dc49b",
 CellID->1653164318],
Cell[500775, 9882, 249, 5, 19, "ExampleSection",ExpressionUUID->"11ae5bf4-b6f4-4e54-a1c7-5c42d83a6399",
 CellID->589267740]
}, Open  ]]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     81386,       1796]
NotebookOptionsPosition[     72465,       1612]
NotebookOutlinePosition[     73200,       1637]
CellTagsIndexPosition[     73120,       1632]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"af915e94-5d7d-4ef0-a6d5-62a60562a45f"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"91b89d04-af30-4242-a61b-6b440b2244ae"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"df7ba674-c37f-4403-afd2-267d09202743"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"f18ca5fe-36dd-4d4b-822c-739ec3cba956"]
}], "History",
 CellID->1247902091,ExpressionUUID->"d65da6c0-1789-4d33-bb87-02d8f9452dec"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"dba8c2bf-bdc6-4f5b-ac59-ded035447953"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"612aa2d7-158d-4411-8b9b-aa6a6214544f"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"eae9b717-6285-416a-8e81-0fb4f1a9c0db"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"360f096b-6486-433d-b92a-55002257acac"],

Cell["CSSTools/ref/CSSInheritance", "Categorization",
 CellLabel->"URI",ExpressionUUID->"3c314a23-1d9b-42e4-b538-e2e21c066e7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"29b1c55e-5000-4b12-a842-34f384e928a0"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"f32362df-9ddd-4cbb-ada2-66621b3d1f1d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"627942b2-f1a6-41f9-9d13-07487a8db027"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"302fc04f-86d1-40e6-9b98-9e4ce072692e"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"1b00437e-5fd5-43ff-b02e-b5242c24eee3"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"43e1d796-b2d4-42fd-85f0-e3e0304f59eb"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"877549c0-c175-425f-925a-146d9a8c7fa1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"7af24f51-e14b-4867-9b11-9d2715a02a1a"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->670882175,ExpressionUUID->"276e18f6-da69-4cd0-a988-fb8eaad9ba44"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"0baac9b1-57bb-4f23-a031-6dcda5642096"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->8391405,ExpressionUUID->"c35fc0e8-7f21-4fdf-8e9e-eb51cc5edbc5"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->3610269,ExpressionUUID->"0943dfbd-e3dd-4e3f-85d6-eaef93c4f5e0"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->401364205,ExpressionUUID->"6c4c68ac-4341-4d93-ad80-c175c75de97a"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->350204745,ExpressionUUID->"d04d8ddd-9709-45e4-8ff2-c89ddbb200ee"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->732958810,ExpressionUUID->"0efce3bf-7806-4250-a140-a59f36c33c88"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->222905350,ExpressionUUID->"9bd9282a-2463-428e-a87b-56d3bd60c1b0"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"2f1257d4-c6fe-4d0b-ab8e-6a9d7385ee70"]
}, Closed]],

Cell[CellGroupData[{

Cell["CSSInheritance", "ObjectName",
 CellID->1224892054,ExpressionUUID->"688d75bc-340d-4da7-b5a6-9049681387e6"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"ff09091d-4230-4569-90dd-babda5b206e3"],
 Cell[BoxData[
  RowBox[{"CSSInheritance", "[", 
   RowBox[{
    StyleBox["target", "TI"], ",", 
    StyleBox["type", "TI"], ",", 
    StyleBox["CSSData", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "d2d02caa-5635-4db7-8590-134541f9726f"],
 " \[LineSeparator]calculates the properties of the element at ",
 StyleBox["target",
  FontSlant->"Italic"],
 " including any inherited CSS properties."
}], "Usage",
 CellChangeTimes->{{3.774605886664511*^9, 3.774605933155219*^9}, {
  3.7772271695794992`*^9, 3.777227169845151*^9}},
 CellID->982511436,ExpressionUUID->"f6a997b2-2caa-448b-a7f2-a8e22d9996ae"],

Cell["\<\
This is also known as getting the calculated properties of a specific XML \
element.\
\>", "Notes",
 CellChangeTimes->{{3.774607112923376*^9, 3.774607131242479*^9}, {
  3.7772270670793777`*^9, 3.777227067282503*^9}},
 CellID->8321735,ExpressionUUID->"e201c564-9da0-4d96-a7ce-9452937878d0"],

Cell[TextData[{
 "Certain CSS properties are inheritable from parent element to child \
element. Some inheritance is automatic e.g. color and font proprieties. Other \
inheritance can be forced with the ",
 StyleBox["inherit", "InlineCode"],
 " keyword. Even if a selector targets an element with a set of style rules, \
the element could also be styled due to inheritance of styles from its \
ancestors."
}], "Notes",
 CellChangeTimes->{{3.7746060024508038`*^9, 3.774606083204687*^9}, {
  3.7746061535009356`*^9, 3.7746061567778406`*^9}},
 CellID->1067943069,ExpressionUUID->"330f87e6-18e3-46c7-bd58-56f3115ad629"],

Cell[TextData[{
 "Wolfram Desktop also has inheritance of option values. Most options are \
inheritable and inheritance can be forced with the ",
 Cell[BoxData[
  ButtonBox["Inherit",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/Inherit"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "1696c67a-7e72-47b5-b7f6-57bf33f0ad90"],
 " option value."
}], "Notes",
 CellChangeTimes->{{3.774606099005569*^9, 3.774606125738908*^9}, {
  3.774606271155855*^9, 3.7746063425527115`*^9}, {3.792884352786536*^9, 
  3.7928843550894136`*^9}},
 CellID->71056514,ExpressionUUID->"0e0e1e18-db88-4d8d-8802-6c614ad2c083"],

Cell["\<\
Inheritance is not a property of the CSS stylesheet. Inheritance is resolved \
when CSS acts on an XML document.\
\>", "Notes",
 CellChangeTimes->{{3.7746064280210514`*^9, 3.7746065031707287`*^9}},
 CellID->326496822,ExpressionUUID->"5ce3c761-e740-4f90-b747-66f666580373"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"f8652376-a5ab-41af-85a8-e24094ba1249"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/tutorial/CSSTools"]], "Tutorials",
 CellChangeTimes->{{3.762101033487421*^9, 3.7621010376800995`*^9}},
 CellID->341631938,ExpressionUUID->"c0b26dc5-122d-411c-8a8b-9705e037d52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"e7a4fe18-64fc-47ae-a34c-1ea525741e9c"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"4556fdc6-614c-4798-a642-f9e506b6f25e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"545c0584-ad4f-4101-b994-079eda410c33"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"72801f10-3bff-4874-9753-040a5d52e34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"582da6ae-2f12-4e93-a087-f36de51dd83e"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  ExpressionUUID->"39588ed3-c895-48c6-94c0-0db17ffed27e"],
 ButtonBox[" \[EmptyVerySmallSquare] ",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 Cell[BoxData[
  ButtonBox["CSSSelectorQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelectorQ"]], "InlineFormula",
  ExpressionUUID->"47a2e2ed-e802-4f0d-bb4b-c0f3fba44f7a"],
 ButtonBox[" \[EmptyVerySmallSquare] ",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 Cell[BoxData[
  ButtonBox["CSSTargets",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSTargets"]], "InlineFormula",
  ExpressionUUID->"0b683b9c-fb30-4e5e-a69d-9f7df1e9cadb"],
 ButtonBox[" \[EmptyVerySmallSquare] ",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 Cell[BoxData[
  ButtonBox["CSSTargetQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSTargetQ"]], "InlineFormula",
  ExpressionUUID->"1412ed09-c6f0-4125-93dd-a63ac126417f"],
 ButtonBox[" \[EmptyVerySmallSquare] ",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 Cell[BoxData[
  ButtonBox["ExtractCSSFromXML",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"]], "InlineFormula",
  ExpressionUUID->"3f68fb2a-0da0-4cee-bbbd-28851abe37c4"],
 ButtonBox[" \[EmptyVerySmallSquare] ",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 Cell[BoxData[
  ButtonBox["CSSCascade",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSCascade"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "601caded-9404-4fef-8c28-92bc51cfc148"]
}], "SeeAlso",
 CellChangeTimes->{
  3.7621010557613335`*^9, {3.792884380761098*^9, 3.792884391469414*^9}},
 CellID->929782353,ExpressionUUID->"5bf4b678-f755-43be-9088-5de5fad65d09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"120e9287-f300-4cfe-94fa-9113019f61d5"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "MoreAbout",
 CellChangeTimes->{{3.762101039870405*^9, 3.762101043268321*^9}},
 CellID->1665078683,ExpressionUUID->"4e0617e5-b1d5-424f-8792-6b1336be7619"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"91f8d3d9-0987-4660-ae4d-54db0eb374ef"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[56]:=",
 CellID->12271288,ExpressionUUID->"28829a2b-9a63-424f-a833-65695f075faf"],

Cell["Load an XML file with embedded CSS rules:", "ExampleText",
 CellChangeTimes->{{3.7746065372207403`*^9, 3.7746065561086035`*^9}, {
  3.7928844027572184`*^9, 3.7928844030215435`*^9}},
 CellID->14111362,ExpressionUUID->"73187e9c-c5ca-437f-847e-ae34a6e7213f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XMLObject\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774606586481776*^9, 3.774606598251951*^9}},
 CellLabel->"In[246]:=",
 CellID->357691610,ExpressionUUID->"5b90204f-3f00-4180-aa18-7a638f8cbe27"],

Cell["Extract the CSS references:", "ExampleText",
 CellChangeTimes->{
  3.7746066227580566`*^9, {3.7928844079493275`*^9, 3.792884408381172*^9}},
 CellID->72447410,ExpressionUUID->"360b4a77-bccc-4153-9083-08292c6de943"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"ExtractCSSFromXML", "[", 
    RowBox[{"doc", ",", 
     RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.774606711882187*^9},
 CellLabel->"In[248]:=",
 CellID->372680361,ExpressionUUID->"fd9da4c4-ab76-4207-ba13-3065cad0b15c"],

Cell[TextData[{
 "The third rule of the example CSS data has two style declarations, ",
 StyleBox["font-size", "InlineCode"],
 " and ",
 StyleBox["font-weight", "InlineCode"],
 ":"
}], "ExampleText",
 CellChangeTimes->{
  3.7746067275581355`*^9, {3.774606758353136*^9, 3.7746067923511906`*^9}, {
   3.792884413428826*^9, 3.7928844155410175`*^9}, {3.7929257268654237`*^9, 
   3.7929257317851424`*^9}},
 CellID->594693738,ExpressionUUID->"237f621d-c14c-4f3b-8445-56a3c3b40044"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.7746067131007805`*^9, 3.7746067143233843`*^9}, {
   3.792925714027683*^9, 3.7929257151147685`*^9}, 3.7929266451856165`*^9},
 CellLabel->"In[250]:=",
 CellID->422662971,ExpressionUUID->"2eab8c5c-28ae-49dd-9c3e-1fb13f5a3dbc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Selector\"\>", "\[Rule]", 
    InterpretationBox[
     StyleBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"#CSS \"", 
          RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[0.92, 0.98, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0, 0.5, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      Editable->False,
      StripOnInput->False,
      ShowStringCharacters->False],
     CSSTools`CSSSelector[
      Association[
      "String" -> "h1 ", 
       "Sequence" -> {
        "SimpleSelectorSequence" -> {
          "Type" -> Association[
            "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
       "Specificity" -> {0, 0, 0, 1}]]]}], ",", 
   RowBox[{"\<\"Targets\"\>", "\[Rule]", 
    RowBox[{"{", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
        "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]], "}"}]}], ",", 
   RowBox[{"\<\"Block\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-size\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"32px\"\>"}], ",", 
        RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"FontSize", "\[Rule]", "32"}], "\[RightAssociation]"}]}], 
        ",", 
        RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-weight\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"bold\"\>"}], ",", 
        RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"FontWeight", "\[Rule]", "Bold"}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}]}], 
       "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7746067147072654`*^9, 3.7772272060136056`*^9, 
  3.7797126119328094`*^9, 3.792884416942297*^9, 3.792925715422943*^9, 
  3.7929266658583117`*^9, 3.792929839741008*^9},
 CellLabel->"Out[250]=",
 CellID->43220594,ExpressionUUID->"b1bc58f2-d6fa-465b-82fc-81db8f178980"]
}, Open  ]],

Cell[TextData[{
 "This rule also has a ",
 StyleBox["body", "InlineCode"],
 " parent element that may additionally contribute to the computed styles:"
}], "ExampleText",
 CellChangeTimes->{
  3.774606796265876*^9, 3.7746070868957977`*^9, {3.792884429428901*^9, 
   3.7928844393812695`*^9}, {3.7929264846969604`*^9, 3.792926515912423*^9}},
 CellID->431498689,ExpressionUUID->"8feb6943-b815-4130-9611-95b0cfddaa3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"ds", ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        InterpretationBox[
         StyleBox[
          TagBox[
           TooltipBox[
            FrameBox[
             TemplateBox[{
               StyleBox["\"XML \"", 
                RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                False], 
               StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
              "RowDefault"],
             Background->RGBColor[1, 0.9, 1],
             BaseStyle->{FontFamily -> Dynamic[
                 CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
               FontColor -> GrayLevel[0.2]},
             FrameMargins->{{5, 5}, {2, 2}},
             FrameStyle->Directive[
               RGBColor[0.5, 0, 1], 
               AbsoluteThickness[1]],
             ImageMargins->2,
             RoundingRadius->4,
             StripOnInput->False],
            RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
           Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
          Editable->False,
          StripOnInput->False,
          ShowStringCharacters->False],
         CSSTools`CSSTarget[
          Association[
          "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
           "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
           "id", "CaseSensitive" -> 
           Association[
            "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
             False]]]], "[", "\"\<Position\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", 
         RowBox[{"-", "3"}]}], "]"}], "]"}], ",", 
      RowBox[{"Alternatives", "@@", 
       RowBox[{"Through", "[", 
        RowBox[{"#Targets", "[", "\"\<Position\>\"", "]"}], "]"}]}]}], "]"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7929261786835823`*^9, 3.792926180921626*^9}, {
  3.792926395937385*^9, 3.7929264360012302`*^9}},
 CellLabel->"In[251]:=",
 CellID->474395755,ExpressionUUID->"0bf8784e-747b-439e-a826-ef9edb7bc983"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10177486160198306595981706881969027716172175505955179385488], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
         Association["ID" -> 198294540470465], "RowTarget" -> 20, 
         "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 
         3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Selector"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Selector"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Targets"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Targets"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Block", 
                    Style[
                    "Block", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{All, "Block"}, "ColumnHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Property"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Property"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Value"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Value"}, "ColumnHeader", 
                    True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Important"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Important"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Interpretation"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Interpretation"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Condition"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Condition"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{1, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["background", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "url(\"html-background-png-7.png\") repeat darkblue", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["#dfe366", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    1831330010, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
                 FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1831330010][
              Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1831330010][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1831330010; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
      DynamicBox[
       ToBoxes[
        Dataset`DatasetContent[
        1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
         TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm], 
       ImageSizeCache -> {894., {69., 75.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10177486160198306595981706881969027716172175505955179385488,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.792926436876892*^9, 3.7929298412449875`*^9},
 CellLabel->"Out[251]=",
 CellID->30530501,ExpressionUUID->"13ff79c6-6e8d-451e-beac-abd75798fd78"]
}, Open  ]],

Cell[TextData[{
 "In this case the ",
 StyleBox["color", "InlineCode"],
 " property is inheritable. Use ",
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "d667e712-7f75-407a-bdcc-81b1c2be8dcd"],
 " to include inherited styles at the target element."
}], "ExampleText",
 CellChangeTimes->{
  3.774606900737062*^9, {3.7746070881963987`*^9, 3.7746070939435315`*^9}, {
   3.7929256884909916`*^9, 3.7929256951751127`*^9}, {3.792926554185074*^9, 
   3.792926562400215*^9}, {3.7929267298720756`*^9, 3.792926730088483*^9}},
 CellID->264811443,ExpressionUUID->"f9e75b1c-0c71-4be8-806c-0349e657a510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSInheritance", "[", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"XML \"", 
           RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[1, 0.9, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
          FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0.5, 0, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
      Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
     Editable->False,
     StripOnInput->False,
     ShowStringCharacters->False],
    CSSTools`CSSTarget[
     Association[
     "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
      "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
      "id", "CaseSensitive" -> 
      Association[
       "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
        False]]]], ",", "Cell", ",", "ds"}], "]"}]], "Input",
 CellChangeTimes->{{3.7772272883922234`*^9, 3.777227288907851*^9}, 
   3.7929265763387685`*^9},
 CellLabel->"In[348]:=",
 CellID->92948257,ExpressionUUID->"227a62cb-68c5-41ef-ae67-31603e37df08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[223, 255], 
           Rational[227, 255], 
           Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["227", "255"], ",", 
            FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[223, 255], 
      Rational[227, 255], 
      Rational[2, 5]],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7746069058533936`*^9, 3.777227289730652*^9, 
  3.779712612247854*^9, 3.7929265788032007`*^9, 3.7929295511415076`*^9, 
  3.7929298497013674`*^9, 3.7929306617285695`*^9, 3.792931138763173*^9},
 CellLabel->"Out[348]=",
 CellID->36084245,ExpressionUUID->"5cca2992-f400-4a50-bbc1-6b92ec69abf9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"0d3f63c4-7663-4175-91cc-28647cf0a8f5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "531d8f4e-a27a-488a-ae6d-de6d83dfd6c8"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"874da3e6-0fba-4558-9aee-5fac871fe569"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "9a0b88fe-948f-4a96-865a-2418beafa420"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"c95b8a83-5390-472e-8786-016a00905ec4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "8bd7cbb5-1cfb-46c4-8503-0aa6f02552ee"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"97a6ba58-3a38-48e7-bd9a-3daac7c8a596"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "b5063a1a-efc3-4b02-914d-15b7553dc9be"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1757724783,ExpressionUUID->"ea6cc2c2-f5fb-417d-b506-eee3e82083b8"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "6a4c912f-e3a3-42d9-b181-27daef0af15d"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1295379749,ExpressionUUID->"ce542387-77cd-4a41-a855-ba8e6f0a8d35"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "841735cb-6c35-4213-92c3-5bf1b2aec81f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"51a848d1-6166-47f6-ad00-cb6a7becbf3b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "fab73134-686e-4d51-beed-fe65d20d6f76"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"6ddf16c4-4e29-4394-89c4-f136db1f615c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "f7bfd31f-834e-416e-9643-e061f8bdb26a"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"a11348b6-32dd-4efa-8e6f-5635c923a036"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "f63013bf-4955-4e1e-9e0a-78af39af1bc8"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"a1540f0a-5d74-4b0f-96a5-0ae51fdea9c7"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "352dffe7-8e5b-4d90-a104-35f2ed8815c8"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"78610fb4-7f5b-4a5e-a908-d227f70ac1d1"]
}, Open  ]]
},
WindowSize->{958, 947},
WindowMargins->{{Automatic, 243}, {Automatic, 0}},
CellContext->"Global`",
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (February 29, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"ad5e6952-d98f-434f-b536-96268d1bd3c0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[69720, 1534, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"0d3f63c4-7663-4175-91cc-28647cf0a8f5",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 72925, 1625}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 22, "History",ExpressionUUID->"d65da6c0-1789-4d33-bb87-02d8f9452dec",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 27, "CategorizationSection",ExpressionUUID->"dba8c2bf-bdc6-4f5b-ac59-ded035447953",
 CellID->1122911449],
Cell[1309, 41, 134, 2, 70, "Categorization",ExpressionUUID->"612aa2d7-158d-4411-8b9b-aa6a6214544f",
 CellID->686433507],
Cell[1446, 45, 136, 2, 70, "Categorization",ExpressionUUID->"eae9b717-6285-416a-8e81-0fb4f1a9c0db",
 CellID->605800465],
Cell[1585, 49, 133, 2, 70, "Categorization",ExpressionUUID->"360f096b-6486-433d-b92a-55002257acac",
 CellID->468444828],
Cell[1721, 53, 127, 1, 70, "Categorization",ExpressionUUID->"3c314a23-1d9b-42e4-b538-e2e21c066e7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1885, 59, 110, 1, 17, "KeywordsSection",ExpressionUUID->"29b1c55e-5000-4b12-a842-34f384e928a0",
 CellID->477174294],
Cell[1998, 62, 100, 1, 70, "Keywords",ExpressionUUID->"f32362df-9ddd-4cbb-ada2-66621b3d1f1d",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2135, 68, 120, 1, 17, "TemplatesSection",ExpressionUUID->"627942b2-f1a6-41f9-9d13-07487a8db027",
 CellID->1872225408],
Cell[2258, 71, 149, 2, 70, "Template",ExpressionUUID->"302fc04f-86d1-40e6-9b98-9e4ce072692e",
 CellID->1562036412],
Cell[2410, 75, 137, 2, 70, "Template",ExpressionUUID->"1b00437e-5fd5-43ff-b02e-b5242c24eee3",
 CellID->158391909],
Cell[2550, 79, 136, 2, 70, "Template",ExpressionUUID->"43e1d796-b2d4-42fd-85f0-e3e0304f59eb",
 CellID->1360575930],
Cell[2689, 83, 137, 2, 70, "Template",ExpressionUUID->"877549c0-c175-425f-925a-146d9a8c7fa1",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[2863, 90, 108, 1, 17, "DetailsSection",ExpressionUUID->"7af24f51-e14b-4867-9b11-9d2715a02a1a",
 CellID->307771771],
Cell[2974, 93, 118, 2, 70, "Details",ExpressionUUID->"276e18f6-da69-4cd0-a988-fb8eaad9ba44",
 CellID->670882175],
Cell[3095, 97, 124, 2, 70, "Details",ExpressionUUID->"0baac9b1-57bb-4f23-a031-6dcda5642096",
 CellID->350963985],
Cell[3222, 101, 119, 2, 70, "Details",ExpressionUUID->"c35fc0e8-7f21-4fdf-8e9e-eb51cc5edbc5",
 CellID->8391405],
Cell[3344, 105, 124, 2, 70, "Details",ExpressionUUID->"0943dfbd-e3dd-4e3f-85d6-eaef93c4f5e0",
 CellID->3610269],
Cell[3471, 109, 116, 2, 70, "Details",ExpressionUUID->"6c4c68ac-4341-4d93-ad80-c175c75de97a",
 CellID->401364205],
Cell[3590, 113, 116, 2, 70, "Details",ExpressionUUID->"d04d8ddd-9709-45e4-8ff2-c89ddbb200ee",
 CellID->350204745],
Cell[3709, 117, 118, 2, 70, "Details",ExpressionUUID->"0efce3bf-7806-4250-a140-a59f36c33c88",
 CellID->732958810],
Cell[3830, 121, 133, 2, 70, "Details",ExpressionUUID->"9bd9282a-2463-428e-a87b-56d3bd60c1b0",
 CellID->222905350],
Cell[3966, 125, 122, 2, 70, "Details",ExpressionUUID->"2f1257d4-c6fe-4d0b-ab8e-6a9d7385ee70",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4125, 132, 112, 1, 62, "ObjectName",ExpressionUUID->"688d75bc-340d-4da7-b5a6-9049681387e6",
 CellID->1224892054],
Cell[4240, 135, 702, 16, 72, "Usage",ExpressionUUID->"f6a997b2-2caa-448b-a7f2-a8e22d9996ae",
 CellID->982511436],
Cell[4945, 153, 299, 6, 23, "Notes",ExpressionUUID->"e201c564-9da0-4d96-a7ce-9452937878d0",
 CellID->8321735],
Cell[5247, 161, 615, 11, 67, "Notes",ExpressionUUID->"330f87e6-18e3-46c7-bd58-56f3115ad629",
 CellID->1067943069],
Cell[5865, 174, 632, 14, 38, "Notes",ExpressionUUID->"0e0e1e18-db88-4d8d-8802-6c614ad2c083",
 CellID->71056514],
Cell[6500, 190, 282, 5, 37, "Notes",ExpressionUUID->"5ce3c761-e740-4f90-b747-66f666580373",
 CellID->326496822]
}, Open  ]],
Cell[CellGroupData[{
Cell[6819, 200, 112, 1, 44, "TutorialsSection",ExpressionUUID->"f8652376-a5ab-41af-85a8-e24094ba1249",
 CellID->250839057],
Cell[6934, 203, 263, 4, 16, "Tutorials",ExpressionUUID->"c0b26dc5-122d-411c-8a8b-9705e037d52e",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[7234, 212, 138, 1, 31, "RelatedDemonstrationsSection",ExpressionUUID->"e7a4fe18-64fc-47ae-a34c-1ea525741e9c",
 CellID->1268215905],
Cell[7375, 215, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"4556fdc6-614c-4798-a642-f9e506b6f25e",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[7525, 221, 120, 1, 31, "RelatedLinksSection",ExpressionUUID->"545c0584-ad4f-4101-b994-079eda410c33",
 CellID->1584193535],
Cell[7648, 224, 104, 1, 16, "RelatedLinks",ExpressionUUID->"72801f10-3bff-4874-9753-040a5d52e34b",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[7789, 230, 110, 1, 31, "SeeAlsoSection",ExpressionUUID->"582da6ae-2f12-4e93-a087-f36de51dd83e",
 CellID->1255426704],
Cell[7902, 233, 1937, 50, 18, "SeeAlso",ExpressionUUID->"5bf4b678-f755-43be-9088-5de5fad65d09",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[9876, 288, 112, 1, 31, "MoreAboutSection",ExpressionUUID->"120e9287-f300-4cfe-94fa-9113019f61d5",
 CellID->38303248],
Cell[9991, 291, 259, 4, 16, "MoreAbout",ExpressionUUID->"4e0617e5-b1d5-424f-8792-6b1336be7619",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[10287, 300, 411, 11, 68, "PrimaryExamplesSection",ExpressionUUID->"91f8d3d9-0987-4660-ae4d-54db0eb374ef",
 CellID->880084151],
Cell[10701, 313, 172, 3, 25, "Input",ExpressionUUID->"28829a2b-9a63-424f-a833-65695f075faf",
 CellID->12271288],
Cell[10876, 318, 261, 3, 20, "ExampleText",ExpressionUUID->"73187e9c-c5ca-437f-847e-ae34a6e7213f",
 CellID->14111362],
Cell[11140, 323, 800, 20, 98, "Input",ExpressionUUID->"5b90204f-3f00-4180-aa18-7a638f8cbe27",
 CellID->357691610],
Cell[11943, 345, 219, 3, 20, "ExampleText",ExpressionUUID->"360b4a77-bccc-4153-9083-08292c6de943",
 CellID->72447410],
Cell[12165, 350, 358, 9, 25, "Input",ExpressionUUID->"fd9da4c4-ab76-4207-ba13-3065cad0b15c",
 CellID->372680361],
Cell[12526, 361, 475, 11, 37, "ExampleText",ExpressionUUID->"237f621d-c14c-4f3b-8445-56a3c3b40044",
 CellID->594693738],
Cell[CellGroupData[{
Cell[13026, 376, 354, 7, 25, "Input",ExpressionUUID->"2eab8c5c-28ae-49dd-9c3e-1fb13f5a3dbc",
 CellID->422662971],
Cell[13383, 385, 4094, 101, 117, "Output",ExpressionUUID->"b1bc58f2-d6fa-465b-82fc-81db8f178980",
 CellID->43220594]
}, Open  ]],
Cell[17492, 489, 413, 8, 35, "ExampleText",ExpressionUUID->"8feb6943-b815-4130-9611-95b0cfddaa3e",
 CellID->431498689],
Cell[CellGroupData[{
Cell[17930, 501, 2154, 54, 95, "Input",ExpressionUUID->"0bf8784e-747b-439e-a826-ef9edb7bc983",
 CellID->474395755],
Cell[20087, 557, 44708, 839, 156, "Output",ExpressionUUID->"13ff79c6-6e8d-451e-beac-abd75798fd78",
 CellID->30530501]
}, Open  ]],
Cell[64810, 1399, 730, 16, 35, "ExampleText",ExpressionUUID->"f9e75b1c-0c71-4be8-806c-0349e657a510",
 CellID->264811443],
Cell[CellGroupData[{
Cell[65565, 1419, 1582, 41, 37, "Input",ExpressionUUID->"227a62cb-68c5-41ef-ae67-31603e37df08",
 CellID->92948257],
Cell[67150, 1462, 2521, 66, 24, "Output",ExpressionUUID->"5cca2992-f400-4a50-bbc1-6b92ec69abf9",
 CellID->36084245]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69720, 1534, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"0d3f63c4-7663-4175-91cc-28647cf0a8f5",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[69878, 1538, 242, 5, 31, "ExampleSection",ExpressionUUID->"874da3e6-0fba-4558-9aee-5fac871fe569",
 CellID->1293636265],
Cell[70123, 1545, 265, 5, 19, "ExampleSection",ExpressionUUID->"c95b8a83-5390-472e-8786-016a00905ec4",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[70413, 1554, 244, 5, 19, "ExampleSection",ExpressionUUID->"97a6ba58-3a38-48e7-bd9a-3daac7c8a596",
 CellID->2061341341],
Cell[70660, 1561, 247, 5, 70, "ExampleSubsection",ExpressionUUID->"ea6cc2c2-f5fb-417d-b506-eee3e82083b8",
 CellID->1757724783],
Cell[70910, 1568, 247, 5, 70, "ExampleSubsection",ExpressionUUID->"ce542387-77cd-4a41-a855-ba8e6f0a8d35",
 CellID->1295379749]
}, Closed]],
Cell[71172, 1576, 248, 5, 19, "ExampleSection",ExpressionUUID->"51a848d1-6166-47f6-ad00-cb6a7becbf3b",
 CellID->258228157],
Cell[71423, 1583, 259, 5, 19, "ExampleSection",ExpressionUUID->"6ddf16c4-4e29-4394-89c4-f136db1f615c",
 CellID->2123667759],
Cell[71685, 1590, 252, 5, 19, "ExampleSection",ExpressionUUID->"a11348b6-32dd-4efa-8e6f-5635c923a036",
 CellID->1305812373],
Cell[71940, 1597, 257, 5, 19, "ExampleSection",ExpressionUUID->"a1540f0a-5d74-4b0f-96a5-0ae51fdea9c7",
 CellID->1653164318],
Cell[72200, 1604, 249, 5, 19, "ExampleSection",ExpressionUUID->"78610fb4-7f5b-4a5e-a908-d227f70ac1d1",
 CellID->589267740]
}, Open  ]]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    149921,       3118]
NotebookOptionsPosition[    139462,       2904]
NotebookOutlinePosition[    140205,       2929]
CellTagsIndexPosition[    140124,       2924]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"af915e94-5d7d-4ef0-a6d5-62a60562a45f"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"91b89d04-af30-4242-a61b-6b440b2244ae"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"df7ba674-c37f-4403-afd2-267d09202743"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"f18ca5fe-36dd-4d4b-822c-739ec3cba956"]
}], "History",
 CellID->1247902091,ExpressionUUID->"d65da6c0-1789-4d33-bb87-02d8f9452dec"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"dba8c2bf-bdc6-4f5b-ac59-ded035447953"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"612aa2d7-158d-4411-8b9b-aa6a6214544f"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"eae9b717-6285-416a-8e81-0fb4f1a9c0db"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"360f096b-6486-433d-b92a-55002257acac"],

Cell["CSSTools/ref/CSSInheritance", "Categorization",
 CellLabel->"URI",ExpressionUUID->"3c314a23-1d9b-42e4-b538-e2e21c066e7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"29b1c55e-5000-4b12-a842-34f384e928a0"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"f32362df-9ddd-4cbb-ada2-66621b3d1f1d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"627942b2-f1a6-41f9-9d13-07487a8db027"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"302fc04f-86d1-40e6-9b98-9e4ce072692e"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"1b00437e-5fd5-43ff-b02e-b5242c24eee3"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"43e1d796-b2d4-42fd-85f0-e3e0304f59eb"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"877549c0-c175-425f-925a-146d9a8c7fa1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"7af24f51-e14b-4867-9b11-9d2715a02a1a"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->670882175,ExpressionUUID->"276e18f6-da69-4cd0-a988-fb8eaad9ba44"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"0baac9b1-57bb-4f23-a031-6dcda5642096"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->8391405,ExpressionUUID->"c35fc0e8-7f21-4fdf-8e9e-eb51cc5edbc5"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->3610269,ExpressionUUID->"0943dfbd-e3dd-4e3f-85d6-eaef93c4f5e0"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->401364205,ExpressionUUID->"6c4c68ac-4341-4d93-ad80-c175c75de97a"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->350204745,ExpressionUUID->"d04d8ddd-9709-45e4-8ff2-c89ddbb200ee"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->732958810,ExpressionUUID->"0efce3bf-7806-4250-a140-a59f36c33c88"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->222905350,ExpressionUUID->"9bd9282a-2463-428e-a87b-56d3bd60c1b0"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"2f1257d4-c6fe-4d0b-ab8e-6a9d7385ee70"]
}, Closed]],

Cell[CellGroupData[{

Cell["CSSInheritance", "ObjectName",
 CellID->1224892054,ExpressionUUID->"688d75bc-340d-4da7-b5a6-9049681387e6"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"ff09091d-4230-4569-90dd-babda5b206e3"],
 Cell[BoxData[
  RowBox[{"CSSInheritance", "[", 
   RowBox[{
    StyleBox["CSSSubject", "TI"], ",", 
    StyleBox["type", "TI"], ",", 
    StyleBox["CSSData", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "d2d02caa-5635-4db7-8590-134541f9726f"],
 " \[LineSeparator]calculates the properties of the ",
 StyleBox["CSSSubject", "TI"],
 " including any inherited CSS properties."
}], "Usage",
 CellChangeTimes->{{3.774605886664511*^9, 3.774605933155219*^9}, {
  3.7772271695794992`*^9, 3.777227169845151*^9}, {3.800459196706214*^9, 
  3.8004592537633204`*^9}},
 CellID->982511436,ExpressionUUID->"f6a997b2-2caa-448b-a7f2-a8e22d9996ae"],

Cell["\<\
This is also known as getting the calculated properties of a specific XML \
element.\
\>", "Notes",
 CellChangeTimes->{{3.774607112923376*^9, 3.774607131242479*^9}, {
  3.7772270670793777`*^9, 3.777227067282503*^9}},
 CellID->8321735,ExpressionUUID->"e201c564-9da0-4d96-a7ce-9452937878d0"],

Cell[TextData[{
 "Certain CSS properties are inheritable from parent element to child \
element. Some inheritance is automatic e.g. color and font proprieties. Other \
inheritance can be forced with the ",
 StyleBox["inherit", "InlineCode"],
 " keyword. Even if an element that is the subject of a selector has a set of \
style rules, the element could also be styled due to inheritance of styles \
from its ancestors."
}], "Notes",
 CellChangeTimes->{{3.7746060024508038`*^9, 3.774606083204687*^9}, {
  3.7746061535009356`*^9, 3.7746061567778406`*^9}, {3.800614260134715*^9, 
  3.8006143088218966`*^9}},
 CellID->1067943069,ExpressionUUID->"330f87e6-18e3-46c7-bd58-56f3115ad629"],

Cell[TextData[{
 "Wolfram Desktop also has inheritance of option values. Most options are \
inheritable and inheritance can be forced with the ",
 Cell[BoxData[
  ButtonBox["Inherit",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/Inherit"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "1696c67a-7e72-47b5-b7f6-57bf33f0ad90"],
 " option value."
}], "Notes",
 CellChangeTimes->{{3.774606099005569*^9, 3.774606125738908*^9}, {
  3.774606271155855*^9, 3.7746063425527115`*^9}, {3.792884352786536*^9, 
  3.7928843550894136`*^9}},
 CellID->71056514,ExpressionUUID->"0e0e1e18-db88-4d8d-8802-6c614ad2c083"],

Cell["\<\
Inheritance is not a property of the CSS stylesheet. Inheritance is resolved \
when CSS acts on an XML document.\
\>", "Notes",
 CellChangeTimes->{{3.7746064280210514`*^9, 3.7746065031707287`*^9}},
 CellID->326496822,ExpressionUUID->"5ce3c761-e740-4f90-b747-66f666580373"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "2bb5a4fd-6204-4003-944e-0ce59ebb2b66"],
 " takes the following options:"
}], "Notes",
 CellChangeTimes->{{3.8004592961629524`*^9, 3.8004593021694136`*^9}, {
  3.8004736561699944`*^9, 3.8004736603941393`*^9}},
 CellID->67142138,ExpressionUUID->"443eff83-a21f-4842-a8eb-f8f25fe7a4f7"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "0394904f-79f1-45ff-ae3a-0c1113eef95c"], 
    "\"\<PropertyIsCaseSensitive\>\"", 
    ButtonBox["False",
     BaseStyle->"Link"], Cell[TextData[Cell[
    "Treat the CSS property as case-sensitive during inheritance.", 
     "TableText",ExpressionUUID->"1cc9eb99-7f16-41b4-b645-6131574496a7"]], 
     "TableText",ExpressionUUID->"29567872-63d4-4a88-9e4f-c6b47b583aa4"]}
  }]], "3ColumnTableMod",
 CellChangeTimes->{{3.800459356561336*^9, 3.800459372728862*^9}, {
  3.8004594407314873`*^9, 3.8004594558639493`*^9}},
 CellID->501703065,ExpressionUUID->"549f7e0f-de8a-403f-88ed-64fb2d796d4c"],

Cell[TextData[{
 "Some properties beyond CSS 2.1 are case-sensitive, such as custom \
properties. ",
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "c2dc0be0-8950-4856-9cf5-267719caf1ca"],
 " assumes case-insensitivity unless ",
 Cell[BoxData["\"\<PropertyIsCaseSensitive\>\""], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "5c477585-9ed4-4548-81e3-18295e4c6001"],
 " is set to ",
 Cell[BoxData[
  ButtonBox["True",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/True"]], "InlineFormula",
  FormatType->"StandardForm",ExpressionUUID->
  "90ec8157-e8d4-47f6-b9bd-2a93c10539a4"],
 "."
}], "Notes",
 CellChangeTimes->{{3.8004594750077353`*^9, 3.8004595053316483`*^9}, {
  3.800473466373448*^9, 3.8004734733029747`*^9}, {3.8004736721856055`*^9, 
  3.8004736835916758`*^9}, {3.8004739475564613`*^9, 3.8004740129884415`*^9}},
 CellID->357899477,ExpressionUUID->"371f09e0-2422-4f07-a99c-2db21312cb50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"f8652376-a5ab-41af-85a8-e24094ba1249"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/tutorial/CSSTools"]], "Tutorials",
 CellChangeTimes->{{3.762101033487421*^9, 3.7621010376800995`*^9}},
 CellID->341631938,ExpressionUUID->"c0b26dc5-122d-411c-8a8b-9705e037d52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"e7a4fe18-64fc-47ae-a34c-1ea525741e9c"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"4556fdc6-614c-4798-a642-f9e506b6f25e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"545c0584-ad4f-4101-b994-079eda410c33"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"72801f10-3bff-4874-9753-040a5d52e34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"582da6ae-2f12-4e93-a087-f36de51dd83e"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  ExpressionUUID->"8a8dd0e2-d93b-4e16-9326-ea37540348bc"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSSelectorQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelectorQ"]], "InlineFormula",
  ExpressionUUID->"2c486138-f9e4-4039-9733-32dd32036ecf"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox[
   ButtonBox["CSSSubjects",
    BaseStyle->"Link",
    ButtonData->"paclet:CSSTools/ref/CSSSubjects"],
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSTargets"]], "InlineFormula",
  ExpressionUUID->"4e0c4e41-16d7-46cb-b026-c93fd9800f40"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSSubjectQ",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSubjectQ"]], "InlineFormula",
  ExpressionUUID->"69011c15-8d95-45ff-9076-c6e337dfa07b"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["ExtractCSSFromXML",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"]], "InlineFormula",
  ExpressionUUID->"f3a91122-8dca-4cb4-b3eb-fab90799855a"],
 " \[EmptyVerySmallSquare] ",
 Cell[BoxData[
  ButtonBox["CSSCascade",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSCascade"]], "InlineFormula",
  ExpressionUUID->"25b189fe-4c39-4a8e-9988-07a8670313e3"]
}], "SeeAlso",
 CellChangeTimes->{
  3.7621010557613335`*^9, {3.792884380761098*^9, 3.792884391469414*^9}, {
   3.8004533193589783`*^9, 3.8004533254418097`*^9}, {3.800473505995139*^9, 
   3.8004735611388083`*^9}, {3.8039125545577617`*^9, 3.803912555798411*^9}},
 CellID->929782353,ExpressionUUID->"5bf4b678-f755-43be-9088-5de5fad65d09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"120e9287-f300-4cfe-94fa-9113019f61d5"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "MoreAbout",
 CellChangeTimes->{{3.762101039870405*^9, 3.762101043268321*^9}},
 CellID->1665078683,ExpressionUUID->"4e0617e5-b1d5-424f-8792-6b1336be7619"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"91f8d3d9-0987-4660-ae4d-54db0eb374ef"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->12271288,ExpressionUUID->"28829a2b-9a63-424f-a833-65695f075faf"],

Cell["Load an XML file with embedded CSS rules:", "ExampleText",
 CellChangeTimes->{{3.7746065372207403`*^9, 3.7746065561086035`*^9}, {
  3.7928844027572184`*^9, 3.7928844030215435`*^9}},
 CellID->14111362,ExpressionUUID->"73187e9c-c5ca-437f-847e-ae34a6e7213f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XMLObject\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774606586481776*^9, 3.774606598251951*^9}},
 CellLabel->"In[2]:=",
 CellID->357691610,ExpressionUUID->"5b90204f-3f00-4180-aa18-7a638f8cbe27"],

Cell["Extract the CSS references:", "ExampleText",
 CellChangeTimes->{
  3.7746066227580566`*^9, {3.7928844079493275`*^9, 3.792884408381172*^9}},
 CellID->72447410,ExpressionUUID->"360b4a77-bccc-4153-9083-08292c6de943"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"ExtractCSSFromXML", "[", 
    RowBox[{"doc", ",", 
     RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.774606711882187*^9},
 CellLabel->"In[4]:=",
 CellID->372680361,ExpressionUUID->"fd9da4c4-ab76-4207-ba13-3065cad0b15c"],

Cell[TextData[{
 "The third rule of the example CSS data has two style declarations, ",
 StyleBox["font-size", "InlineCode"],
 " and ",
 StyleBox["font-weight", "InlineCode"],
 ":"
}], "ExampleText",
 CellChangeTimes->{
  3.7746067275581355`*^9, {3.774606758353136*^9, 3.7746067923511906`*^9}, {
   3.792884413428826*^9, 3.7928844155410175`*^9}, {3.7929257268654237`*^9, 
   3.7929257317851424`*^9}},
 CellID->594693738,ExpressionUUID->"237f621d-c14c-4f3b-8445-56a3c3b40044"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.7746067131007805`*^9, 3.7746067143233843`*^9}, {
   3.792925714027683*^9, 3.7929257151147685`*^9}, 3.7929266451856165`*^9},
 CellLabel->"In[5]:=",
 CellID->422662971,ExpressionUUID->"2eab8c5c-28ae-49dd-9c3e-1fb13f5a3dbc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Selector\"\>", "\[Rule]", 
    InterpretationBox[
     StyleBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"#CSS \"", 
          RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[0.92, 0.98, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0, 0.5, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      Editable->False,
      StripOnInput->False,
      ShowStringCharacters->False],
     CSSTools`CSSSelector[
      Association[
      "String" -> "h1 ", 
       "Sequence" -> {
        "SimpleSelectorSequence" -> {
          "Type" -> Association[
            "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
       "Specificity" -> {0, 0, 0, 1}]]]}], ",", 
   RowBox[{"\<\"Subjects\"\>", "\[Rule]", 
    RowBox[{"{", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSubject[
       Association[
       "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
        "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]], "}"}]}], ",", 
   RowBox[{"\<\"Block\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-size\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"32px\"\>"}], ",", 
        RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"FontSize", "\[Rule]", "32"}], "\[RightAssociation]"}]}], 
        ",", 
        RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-weight\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"bold\"\>"}], ",", 
        RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"FontWeight", "\[Rule]", "Bold"}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}]}], 
       "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8004590290925517`*^9, 3.800614344652155*^9, 
  3.8039125779122496`*^9},
 CellLabel->"Out[5]=",
 CellID->30566145,ExpressionUUID->"31b00914-8d76-4a00-aa6b-138dec541ec3"]
}, Open  ]],

Cell[TextData[{
 "This rule also has a ",
 StyleBox["body", "InlineCode"],
 " parent element that may additionally contribute to the computed styles:"
}], "ExampleText",
 CellChangeTimes->{
  3.774606796265876*^9, 3.7746070868957977`*^9, {3.792884429428901*^9, 
   3.7928844393812695`*^9}, {3.7929264846969604`*^9, 3.792926515912423*^9}},
 CellID->431498689,ExpressionUUID->"8feb6943-b815-4130-9611-95b0cfddaa3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"ds", ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        InterpretationBox[
         StyleBox[
          TagBox[
           TooltipBox[
            FrameBox[
             TemplateBox[{
               StyleBox["\"XML \"", 
                RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                False], 
               StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
              "RowDefault"],
             Background->RGBColor[1, 0.9, 1],
             BaseStyle->{FontFamily -> Dynamic[
                 CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
               FontColor -> GrayLevel[0.2]},
             FrameMargins->{{5, 5}, {2, 2}},
             FrameStyle->Directive[
               RGBColor[0.5, 0, 1], 
               AbsoluteThickness[1]],
             ImageMargins->2,
             RoundingRadius->4,
             StripOnInput->False],
            RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
           Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
          Editable->False,
          StripOnInput->False,
          ShowStringCharacters->False],
         CSSTools`CSSSubject[
          Association[
          "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
           "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
           "id", "CaseSensitive" -> 
           Association[
            "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
             False]]]], "[", "\"\<Position\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", 
         RowBox[{"-", "3"}]}], "]"}], "]"}], ",", 
      RowBox[{"Alternatives", "@@", 
       RowBox[{"Through", "[", 
        RowBox[{"#Subjects", "[", "\"\<Position\>\"", "]"}], "]"}]}]}], "]"}],
     "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7929261786835823`*^9, 3.792926180921626*^9}, {
   3.792926395937385*^9, 3.7929264360012302`*^9}, {3.8004591060291357`*^9, 
   3.800459106861308*^9}, 3.800459144194638*^9, 3.8006143496894712`*^9},
 CellLabel->"In[6]:=",
 CellID->474395755,ExpressionUUID->"0bf8784e-747b-439e-a826-ef9edb7bc983"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10202091495037598243221238521466974112069649260179087359360], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
         Association["ID" -> 182055280107026], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Subjects"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Subjects" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Selector", "Subjects", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 
         3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Selector"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{All, "Selector"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Subjects", 
                    Style[
                    "Subjects", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Subjects"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{All, "Subjects"}, 
                    "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Block", 
                    Style[
                    "Block", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Block"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{All, "Block"}, 
                    "ColumnHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Block", All, "Property"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{
                    All, "Block", All, "Property"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Block", All, "Value"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{
                    All, "Block", All, "Value"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Block", All, "Important"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{
                    All, "Block", All, "Important"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Block", All, "Interpretation"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{
                    All, "Block", All, "Interpretation"}, "ColumnHeader", 
                    True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Block", All, "Condition"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{
                    All, "Block", All, "Condition"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSSubject[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Subjects"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Subjects"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["background", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "url(\"html-background-png-7.png\") repeat darkblue", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 5], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["#dfe366", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "8f675133-8225-4093-b4e4-5d788ea2dfb5"][{1, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], ImageSizeCache -> {688., {56.25, 60.75}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], ImageSizeCache -> {688., {56.25, 60.75}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10202091495037598243221238521466974112069649260179087359360,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.792926436876892*^9, 3.7929298412449875`*^9, 
  3.8004590690674305`*^9, 3.8004591089453125`*^9, 3.8004591450403104`*^9, 
  3.8006143505097523`*^9, 3.8039125779870787`*^9},
 CellLabel->"Out[6]=",
 CellID->342943110,ExpressionUUID->"af3df051-b0ca-4e59-8533-2e7d9144ea60"]
}, Open  ]],

Cell[TextData[{
 "In this case the ",
 StyleBox["color", "InlineCode"],
 " property is inheritable. Use ",
 Cell[BoxData[
  ButtonBox["CSSInheritance",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSInheritance"]], "InlineFormula",
  ExpressionUUID->"d667e712-7f75-407a-bdcc-81b1c2be8dcd"],
 " to include inherited styles at the selector subject ",
 StyleBox["h1", "InlineCode"],
 ":"
}], "ExampleText",
 CellChangeTimes->{
  3.774606900737062*^9, {3.7746070881963987`*^9, 3.7746070939435315`*^9}, {
   3.7929256884909916`*^9, 3.7929256951751127`*^9}, {3.792926554185074*^9, 
   3.792926562400215*^9}, {3.7929267298720756`*^9, 3.792926730088483*^9}, {
   3.800614393670199*^9, 3.8006144175270653`*^9}},
 CellID->264811443,ExpressionUUID->"f9e75b1c-0c71-4be8-806c-0349e657a510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSInheritance", "[", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"XML \"", 
           RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[1, 0.9, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
          FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0.5, 0, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
      Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
     Editable->False,
     StripOnInput->False,
     ShowStringCharacters->False],
    CSSTools`CSSSubject[
     Association[
     "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
      "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
      "id", "CaseSensitive" -> 
      Association[
       "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
        False]]]], ",", "Cell", ",", "ds"}], "]"}]], "Input",
 CellChangeTimes->{{3.7772272883922234`*^9, 3.777227288907851*^9}, 
   3.7929265763387685`*^9, 3.8004591578771057`*^9, 3.8006143605514336`*^9},
 CellLabel->"In[7]:=",
 CellID->92948257,ExpressionUUID->"227a62cb-68c5-41ef-ae67-31603e37df08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[223, 255], 
           Rational[227, 255], 
           Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["227", "255"], ",", 
            FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[223, 255], 
      Rational[227, 255], 
      Rational[2, 5]],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7746069058533936`*^9, 3.777227289730652*^9, 
  3.779712612247854*^9, 3.7929265788032007`*^9, 3.7929295511415076`*^9, 
  3.7929298497013674`*^9, 3.7929306617285695`*^9, 3.792931138763173*^9, 
  3.8004591591517134`*^9, 3.8006143610371323`*^9, 3.803912578232424*^9},
 CellLabel->"Out[7]=",
 CellID->871415445,ExpressionUUID->"f58027b9-c9dc-4f1b-aed3-70f488fa1a83"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"0d3f63c4-7663-4175-91cc-28647cf0a8f5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "531d8f4e-a27a-488a-ae6d-de6d83dfd6c8"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"874da3e6-0fba-4558-9aee-5fac871fe569"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "9a0b88fe-948f-4a96-865a-2418beafa420"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"c95b8a83-5390-472e-8786-016a00905ec4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "8bd7cbb5-1cfb-46c4-8503-0aa6f02552ee"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"97a6ba58-3a38-48e7-bd9a-3daac7c8a596"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"PropertyIsCaseSensitive\"", "ExampleSubsection",ExpressionUUID->
   "b5063a1a-efc3-4b02-914d-15b7553dc9be"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.80047404188401*^9, 3.80047404188401*^9}},
 CellID->1757724783,ExpressionUUID->"ea6cc2c2-f5fb-417d-b506-eee3e82083b8"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->156426616,ExpressionUUID->"f18e7a3b-5255-4d05-a558-ac232fc67294"],

Cell["\<\
Most of CSS is case-insensitive. Some modules beyond CSS 2.1 required \
case-sensitive properties. \
\>", "ExampleText",
 CellChangeTimes->{{3.8004740731041408`*^9, 3.8004741844654984`*^9}},
 CellID->278160955,ExpressionUUID->"99cd8b8b-19b5-4e10-a5ca-e57de490133a"],

Cell["\<\
The following CSS data uses custom variables and accesses them with the var() \
function:\
\>", "ExampleText",
 CellChangeTimes->{{3.792880251035471*^9, 3.7928802854035425`*^9}, {
  3.8004743128990517`*^9, 3.800474318447482*^9}},
 CellID->175903162,ExpressionUUID->"336b9bbf-46fc-4435-b934-37a1c9f9b339"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<\n:root {\n  --customVariable:10px;}\nh1 {\n  \
border-right-width:var(--customVariable, 20px);\n  \
border-left-width:var(--customvariable, 20px)}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7924553696648808`*^9, 3.79245538867319*^9}, {
  3.792455700641148*^9, 3.7924557131529083`*^9}, {3.7924557443537755`*^9, 
  3.7924557448799887`*^9}, {3.7924566479358044`*^9, 3.7924566826797776`*^9}, {
  3.7924587223815727`*^9, 3.7924587334762845`*^9}, {3.7924589085012107`*^9, 
  3.792458918361703*^9}, {3.7924589882853284`*^9, 3.7924589912918863`*^9}, {
  3.7924595494674945`*^9, 3.79245955101099*^9}, {3.7925258652198067`*^9, 
  3.7925258953392344`*^9}, {3.792526008412734*^9, 3.7925260169060106`*^9}, {
  3.7929394249751444`*^9, 3.792939446073671*^9}, {3.8006144489190283`*^9, 
  3.800614496974949*^9}, {3.800614732270479*^9, 3.8006147323502398`*^9}},
 CellLabel->"In[2]:=",
 CellID->173420460,ExpressionUUID->"d20d770f-d471-4011-95c9-872f8d2b570e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ":root ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "PseudoClass" -> Association["Name" -> "root"]}}, 
           "Specificity" -> {0, 0, 1, 0}]], "Block" -> {
          Association[
          "Property" -> "--customVariable", "Value" -> "10px", "Important" -> 
           False, "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--customVariable", "Value" -> "10px", 
               "Namespaces" -> {}]], "Condition" -> None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "border-right-width", "Value" -> 
           "var(--customVariable, 20px)", "Important" -> False, 
           "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "var(--customVariable, 20px)", "Property" -> 
               "border-right-width", "Namespaces" -> {}]], "Condition" -> 
           None], 
          Association[
          "Property" -> "border-left-width", "Value" -> 
           "var(--customvariable, 20px)", "Important" -> False, 
           "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "var(--customvariable, 20px)", "Property" -> 
               "border-left-width", "Namespaces" -> {}]], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          3, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[172.8], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[259.20000000000005`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
                    TypeSystem`PackageScope`ElidedShape[2]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], TypeSystem`AnyType, 5], 1], 
            TypeSystem`AnyType}], TypeSystem`AnyLength]}], 2], "Meta" -> 
     Association["ID" -> 182059575074322], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          3, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[172.8], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[259.20000000000005`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
                    TypeSystem`PackageScope`ElidedShape[2]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], TypeSystem`AnyType, 5], 1], 
            TypeSystem`AnyType}], TypeSystem`AnyLength]}], 2], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     2, "DataRowCount" -> 2, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Selector", 
                  Style[
                  "Selector", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Selector"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{All, "Selector"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{All, "Block"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Property", 
                  Style[
                  "Property", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Property"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{
                All, "Block", All, "Property"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Value"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{
                All, "Block", All, "Value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Important", 
                  Style[
                  "Important", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Important"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{
                All, "Block", All, "Important"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{
                All, "Block", All, "Interpretation"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Condition", 
                  Style[
                  "Condition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "Block", All, "Condition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{
                All, "Block", All, "Condition"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\":root\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ":root ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "PseudoClass" -> Association["Name" -> "root"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["--customVariable", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSCustomPropertyDefinition", 
                  Style[
                  "CSSCustomPropertyDefinition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Name", "Value", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Name", "Value", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["border-right-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["var(--customVariable, 20px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSResolveValueAtComputeTime", 
                  Style[
                  "CSSResolveValueAtComputeTime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["border-left-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["var(--customvariable, 20px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSResolveValueAtComputeTime", 
                  Style[
                  "CSSResolveValueAtComputeTime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "00747dfb-75d8-49af-a591-2f0d4fe9a4c5"][{2, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{667., {66.25, 70.75}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{667., {66.25, 70.75}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.800474328015049*^9, 3.800614430108686*^9, {3.8006144834413934`*^9, 
   3.800614498131177*^9}, 3.80061473298554*^9, 3.8039125784598136`*^9},
 CellLabel->"Out[2]=",
 CellID->483304100,ExpressionUUID->"130425d2-e93b-4871-8aab-c4d3e5fc20f1"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["border-left-width", "InlineCode"],
 " property value does not contain any matching custom variable property \
names because of the lowercase \"v\" and custom variable names are \
case-sensitive. Instead the fallback value is used. The ",
 StyleBox["border-right-width", "InlineCode"],
 " does contain a matching custom variable property name so the corresponding \
custom property value is substituted:"
}], "ExampleText",
 CellChangeTimes->{{3.7924587656841464`*^9, 3.7924588179082346`*^9}, {
  3.7924588633479676`*^9, 3.792458900962834*^9}, {3.792525402132634*^9, 
  3.7925254258911037`*^9}, {3.792525969795046*^9, 3.7925259701221385`*^9}, {
  3.7925260239622345`*^9, 3.79252610556205*^9}, {3.792526266305216*^9, 
  3.7925262786581993`*^9}, {3.792878269853774*^9, 3.792878289502203*^9}, {
  3.7928783566855164`*^9, 3.7928784676296997`*^9}, {3.79288029815641*^9, 
  3.792880298322966*^9}, {3.792882633367603*^9, 3.79288263371966*^9}, {
  3.799598916375025*^9, 3.7995989689663134`*^9}},
 CellID->329289187,ExpressionUUID->"01f9b7af-129b-403c-80be-4001d0c9fe3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<!DOCTYPE html><html><head></head><body><h1></h1></body></html>\>\"",
      ",", " ", "\"\<XMLObject\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8006146713500414`*^9, 3.8006146717095213`*^9}, 
   3.8006147436943626`*^9},
 CellLabel->"In[3]:=",
 CellID->27169844,ExpressionUUID->"e0f8ba27-263c-4de1-8f65-836fcdab348f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSInheritance", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8004743829088774`*^9, 3.8004743918770804`*^9}},
 CellLabel->"In[4]:=",
 CellID->283237647,ExpressionUUID->"9d0594a7-920a-4de1-a879-7ef9e3733eb6"],

Cell[BoxData[
 RowBox[{"CSSInheritance", "[", "]"}]], "Output",
 CellChangeTimes->{3.803912578740035*^9},
 CellLabel->"Out[4]=",
 CellID->18123251,ExpressionUUID->"57cd22e6-36eb-490b-bfa9-017d9fab4176"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "6a4c912f-e3a3-42d9-b181-27daef0af15d"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1295379749,ExpressionUUID->"ce542387-77cd-4a41-a855-ba8e6f0a8d35"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "841735cb-6c35-4213-92c3-5bf1b2aec81f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"51a848d1-6166-47f6-ad00-cb6a7becbf3b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "fab73134-686e-4d51-beed-fe65d20d6f76"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"6ddf16c4-4e29-4394-89c4-f136db1f615c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "f7bfd31f-834e-416e-9643-e061f8bdb26a"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"a11348b6-32dd-4efa-8e6f-5635c923a036"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "f63013bf-4955-4e1e-9e0a-78af39af1bc8"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"a1540f0a-5d74-4b0f-96a5-0ae51fdea9c7"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "352dffe7-8e5b-4d90-a104-35f2ed8815c8"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"78610fb4-7f5b-4a5e-a908-d227f70ac1d1"]
}, Open  ]]
},
WindowSize->{646.5, 735.75},
WindowMargins->{{Automatic, 164.25}, {Automatic, 0.75}},
CellContext->"Global`",
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"ad5e6952-d98f-434f-b536-96268d1bd3c0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[75704, 1635, 155, 2, 42, "ExtendedExamplesSection",ExpressionUUID->"0d3f63c4-7663-4175-91cc-28647cf0a8f5",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 139929, 2917}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 18, "History",ExpressionUUID->"d65da6c0-1789-4d33-bb87-02d8f9452dec",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 22, "CategorizationSection",ExpressionUUID->"dba8c2bf-bdc6-4f5b-ac59-ded035447953",
 CellID->1122911449],
Cell[1309, 41, 134, 2, 70, "Categorization",ExpressionUUID->"612aa2d7-158d-4411-8b9b-aa6a6214544f",
 CellID->686433507],
Cell[1446, 45, 136, 2, 70, "Categorization",ExpressionUUID->"eae9b717-6285-416a-8e81-0fb4f1a9c0db",
 CellID->605800465],
Cell[1585, 49, 133, 2, 70, "Categorization",ExpressionUUID->"360f096b-6486-433d-b92a-55002257acac",
 CellID->468444828],
Cell[1721, 53, 127, 1, 70, "Categorization",ExpressionUUID->"3c314a23-1d9b-42e4-b538-e2e21c066e7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[1885, 59, 110, 1, 15, "KeywordsSection",ExpressionUUID->"29b1c55e-5000-4b12-a842-34f384e928a0",
 CellID->477174294],
Cell[1998, 62, 100, 1, 70, "Keywords",ExpressionUUID->"f32362df-9ddd-4cbb-ada2-66621b3d1f1d",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2135, 68, 120, 1, 15, "TemplatesSection",ExpressionUUID->"627942b2-f1a6-41f9-9d13-07487a8db027",
 CellID->1872225408],
Cell[2258, 71, 149, 2, 70, "Template",ExpressionUUID->"302fc04f-86d1-40e6-9b98-9e4ce072692e",
 CellID->1562036412],
Cell[2410, 75, 137, 2, 70, "Template",ExpressionUUID->"1b00437e-5fd5-43ff-b02e-b5242c24eee3",
 CellID->158391909],
Cell[2550, 79, 136, 2, 70, "Template",ExpressionUUID->"43e1d796-b2d4-42fd-85f0-e3e0304f59eb",
 CellID->1360575930],
Cell[2689, 83, 137, 2, 70, "Template",ExpressionUUID->"877549c0-c175-425f-925a-146d9a8c7fa1",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[2863, 90, 108, 1, 15, "DetailsSection",ExpressionUUID->"7af24f51-e14b-4867-9b11-9d2715a02a1a",
 CellID->307771771],
Cell[2974, 93, 118, 2, 70, "Details",ExpressionUUID->"276e18f6-da69-4cd0-a988-fb8eaad9ba44",
 CellID->670882175],
Cell[3095, 97, 124, 2, 70, "Details",ExpressionUUID->"0baac9b1-57bb-4f23-a031-6dcda5642096",
 CellID->350963985],
Cell[3222, 101, 119, 2, 70, "Details",ExpressionUUID->"c35fc0e8-7f21-4fdf-8e9e-eb51cc5edbc5",
 CellID->8391405],
Cell[3344, 105, 124, 2, 70, "Details",ExpressionUUID->"0943dfbd-e3dd-4e3f-85d6-eaef93c4f5e0",
 CellID->3610269],
Cell[3471, 109, 116, 2, 70, "Details",ExpressionUUID->"6c4c68ac-4341-4d93-ad80-c175c75de97a",
 CellID->401364205],
Cell[3590, 113, 116, 2, 70, "Details",ExpressionUUID->"d04d8ddd-9709-45e4-8ff2-c89ddbb200ee",
 CellID->350204745],
Cell[3709, 117, 118, 2, 70, "Details",ExpressionUUID->"0efce3bf-7806-4250-a140-a59f36c33c88",
 CellID->732958810],
Cell[3830, 121, 133, 2, 70, "Details",ExpressionUUID->"9bd9282a-2463-428e-a87b-56d3bd60c1b0",
 CellID->222905350],
Cell[3966, 125, 122, 2, 70, "Details",ExpressionUUID->"2f1257d4-c6fe-4d0b-ab8e-6a9d7385ee70",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4125, 132, 112, 1, 47, "ObjectName",ExpressionUUID->"688d75bc-340d-4da7-b5a6-9049681387e6",
 CellID->1224892054],
Cell[4240, 135, 733, 16, 57, "Usage",ExpressionUUID->"f6a997b2-2caa-448b-a7f2-a8e22d9996ae",
 CellID->982511436],
Cell[4976, 153, 299, 6, 19, "Notes",ExpressionUUID->"e201c564-9da0-4d96-a7ce-9452937878d0",
 CellID->8321735],
Cell[5278, 161, 680, 12, 54, "Notes",ExpressionUUID->"330f87e6-18e3-46c7-bd58-56f3115ad629",
 CellID->1067943069],
Cell[5961, 175, 632, 14, 33, "Notes",ExpressionUUID->"0e0e1e18-db88-4d8d-8802-6c614ad2c083",
 CellID->71056514],
Cell[6596, 191, 282, 5, 30, "Notes",ExpressionUUID->"5ce3c761-e740-4f90-b747-66f666580373",
 CellID->326496822],
Cell[6881, 198, 486, 11, 21, "Notes",ExpressionUUID->"443eff83-a21f-4842-a8eb-f8f25fe7a4f7",
 CellID->67142138],
Cell[7370, 211, 662, 12, 29, "3ColumnTableMod",ExpressionUUID->"549f7e0f-de8a-403f-88ed-64fb2d796d4c",
 CellID->501703065],
Cell[8035, 225, 1056, 25, 36, "Notes",ExpressionUUID->"371f09e0-2422-4f07-a99c-2db21312cb50",
 CellID->357899477]
}, Open  ]],
Cell[CellGroupData[{
Cell[9128, 255, 112, 1, 35, "TutorialsSection",ExpressionUUID->"f8652376-a5ab-41af-85a8-e24094ba1249",
 CellID->250839057],
Cell[9243, 258, 263, 4, 15, "Tutorials",ExpressionUUID->"c0b26dc5-122d-411c-8a8b-9705e037d52e",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[9543, 267, 138, 1, 25, "RelatedDemonstrationsSection",ExpressionUUID->"e7a4fe18-64fc-47ae-a34c-1ea525741e9c",
 CellID->1268215905],
Cell[9684, 270, 113, 1, 15, "RelatedDemonstrations",ExpressionUUID->"4556fdc6-614c-4798-a642-f9e506b6f25e",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[9834, 276, 120, 1, 25, "RelatedLinksSection",ExpressionUUID->"545c0584-ad4f-4101-b994-079eda410c33",
 CellID->1584193535],
Cell[9957, 279, 104, 1, 15, "RelatedLinks",ExpressionUUID->"72801f10-3bff-4874-9753-040a5d52e34b",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[10098, 285, 110, 1, 25, "SeeAlsoSection",ExpressionUUID->"582da6ae-2f12-4e93-a087-f36de51dd83e",
 CellID->1255426704],
Cell[10211, 288, 1753, 44, 17, "SeeAlso",ExpressionUUID->"5bf4b678-f755-43be-9088-5de5fad65d09",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[12001, 337, 112, 1, 25, "MoreAboutSection",ExpressionUUID->"120e9287-f300-4cfe-94fa-9113019f61d5",
 CellID->38303248],
Cell[12116, 340, 259, 4, 15, "MoreAbout",ExpressionUUID->"4e0617e5-b1d5-424f-8792-6b1336be7619",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[12412, 349, 411, 11, 51, "PrimaryExamplesSection",ExpressionUUID->"91f8d3d9-0987-4660-ae4d-54db0eb374ef",
 CellID->880084151],
Cell[12826, 362, 171, 3, 20, "Input",ExpressionUUID->"28829a2b-9a63-424f-a833-65695f075faf",
 CellID->12271288],
Cell[13000, 367, 261, 3, 18, "ExampleText",ExpressionUUID->"73187e9c-c5ca-437f-847e-ae34a6e7213f",
 CellID->14111362],
Cell[13264, 372, 798, 20, 72, "Input",ExpressionUUID->"5b90204f-3f00-4180-aa18-7a638f8cbe27",
 CellID->357691610],
Cell[14065, 394, 219, 3, 18, "ExampleText",ExpressionUUID->"360b4a77-bccc-4153-9083-08292c6de943",
 CellID->72447410],
Cell[14287, 399, 356, 9, 20, "Input",ExpressionUUID->"fd9da4c4-ab76-4207-ba13-3065cad0b15c",
 CellID->372680361],
Cell[14646, 410, 475, 11, 30, "ExampleText",ExpressionUUID->"237f621d-c14c-4f3b-8445-56a3c3b40044",
 CellID->594693738],
Cell[CellGroupData[{
Cell[15146, 425, 352, 7, 20, "Input",ExpressionUUID->"2eab8c5c-28ae-49dd-9c3e-1fb13f5a3dbc",
 CellID->422662971],
Cell[15501, 434, 3999, 100, 88, "Output",ExpressionUUID->"31b00914-8d76-4a00-aa6b-138dec541ec3",
 CellID->30566145]
}, Open  ]],
Cell[19515, 537, 413, 8, 28, "ExampleText",ExpressionUUID->"8feb6943-b815-4130-9611-95b0cfddaa3e",
 CellID->431498689],
Cell[CellGroupData[{
Cell[19953, 549, 2253, 55, 73, "Input",ExpressionUUID->"0bf8784e-747b-439e-a826-ef9edb7bc983",
 CellID->474395755],
Cell[22209, 606, 48390, 888, 126, "Output",ExpressionUUID->"af3df051-b0ca-4e59-8533-2e7d9144ea60",
 CellID->342943110]
}, Open  ]],
Cell[70614, 1497, 791, 18, 32, "ExampleText",ExpressionUUID->"f9e75b1c-0c71-4be8-806c-0349e657a510",
 CellID->264811443],
Cell[CellGroupData[{
Cell[71430, 1519, 1629, 41, 29, "Input",ExpressionUUID->"227a62cb-68c5-41ef-ae67-31603e37df08",
 CellID->92948257],
Cell[73062, 1562, 2593, 67, 19, "Output",ExpressionUUID->"f58027b9-c9dc-4f1b-aed3-70f488fa1a83",
 CellID->871415445]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75704, 1635, 155, 2, 42, "ExtendedExamplesSection",ExpressionUUID->"0d3f63c4-7663-4175-91cc-28647cf0a8f5",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[75862, 1639, 242, 5, 24, "ExampleSection",ExpressionUUID->"874da3e6-0fba-4558-9aee-5fac871fe569",
 CellID->1293636265],
Cell[76107, 1646, 265, 5, 16, "ExampleSection",ExpressionUUID->"c95b8a83-5390-472e-8786-016a00905ec4",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[76397, 1655, 244, 5, 16, "ExampleSection",ExpressionUUID->"97a6ba58-3a38-48e7-bd9a-3daac7c8a596",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[76666, 1664, 334, 6, 18, "ExampleSubsection",ExpressionUUID->"ea6cc2c2-f5fb-417d-b506-eee3e82083b8",
 CellID->1757724783],
Cell[77003, 1672, 172, 3, 20, "Input",ExpressionUUID->"f18e7a3b-5255-4d05-a558-ac232fc67294",
 CellID->156426616],
Cell[77178, 1677, 275, 5, 26, "ExampleText",ExpressionUUID->"99cd8b8b-19b5-4e10-a5ca-e57de490133a",
 CellID->278160955],
Cell[77456, 1684, 314, 6, 18, "ExampleText",ExpressionUUID->"336b9bbf-46fc-4435-b934-37a1c9f9b339",
 CellID->175903162],
Cell[CellGroupData[{
Cell[77795, 1694, 1064, 18, 85, "Input",ExpressionUUID->"d20d770f-d471-4011-95c9-872f8d2b570e",
 CellID->173420460],
Cell[78862, 1714, 57012, 1095, 146, "Output",ExpressionUUID->"130425d2-e93b-4871-8aab-c4d3e5fc20f1",
 CellID->483304100]
}, Open  ]],
Cell[135889, 2812, 1097, 18, 52, "ExampleText",ExpressionUUID->"01f9b7af-129b-403c-80be-4001d0c9fe3b",
 CellID->329289187],
Cell[136989, 2832, 431, 10, 59, "Input",ExpressionUUID->"e0f8ba27-263c-4de1-8f65-836fcdab348f",
 CellID->27169844],
Cell[CellGroupData[{
Cell[137445, 2846, 230, 4, 20, "Input",ExpressionUUID->"9d0594a7-920a-4de1-a879-7ef9e3733eb6",
 CellID->283237647],
Cell[137678, 2852, 202, 4, 19, "Output",ExpressionUUID->"57cd22e6-36eb-490b-bfa9-017d9fab4176",
 CellID->18123251]
}, Open  ]]
}, Open  ]],
Cell[137907, 2860, 247, 5, 18, "ExampleSubsection",ExpressionUUID->"ce542387-77cd-4a41-a855-ba8e6f0a8d35",
 CellID->1295379749]
}, Open  ]],
Cell[138169, 2868, 248, 5, 24, "ExampleSection",ExpressionUUID->"51a848d1-6166-47f6-ad00-cb6a7becbf3b",
 CellID->258228157],
Cell[138420, 2875, 259, 5, 16, "ExampleSection",ExpressionUUID->"6ddf16c4-4e29-4394-89c4-f136db1f615c",
 CellID->2123667759],
Cell[138682, 2882, 252, 5, 16, "ExampleSection",ExpressionUUID->"a11348b6-32dd-4efa-8e6f-5635c923a036",
 CellID->1305812373],
Cell[138937, 2889, 257, 5, 16, "ExampleSection",ExpressionUUID->"a1540f0a-5d74-4b0f-96a5-0ae51fdea9c7",
 CellID->1653164318],
Cell[139197, 2896, 249, 5, 16, "ExampleSection",ExpressionUUID->"78610fb4-7f5b-4a5e-a908-d227f70ac1d1",
 CellID->589267740]
}, Open  ]]
}
]
*)


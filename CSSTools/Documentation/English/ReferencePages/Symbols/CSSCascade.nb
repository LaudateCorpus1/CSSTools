(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    215678,       4623]
NotebookOptionsPosition[    200928,       4316]
NotebookOutlinePosition[    201976,       4348]
CellTagsIndexPosition[    201895,       4343]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"638027f2-d831-4d87-a3a0-5f2ab710971c"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"00ce0616-6404-4527-b0e6-80c25d0d2782"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"21d15d0f-1a27-47f1-9dc9-532a7b2838f1"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"7028eb53-2943-48f9-99cc-7d476b1242ce"]
}], "History",
 CellID->1247902091,ExpressionUUID->"d6c4838d-75f5-49c4-9e33-47e97fc3b447"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"44414c1e-0636-4b7e-a590-9003aeb0f130"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"b66da3dd-961e-4dc9-b880-bcc451154e59"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"674acfab-c8be-4822-bf99-0f6a5d9400ba"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"5e7322ea-251a-4888-8eae-a147079a1993"],

Cell["CSSTools/ref/CSSCascade", "Categorization",
 CellLabel->"URI",ExpressionUUID->"8988dc38-8da1-4949-9e6a-bbf7f6395e92"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"70e05bd6-0130-4c31-82bc-bee2bc409552"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"6b5c24d1-a489-4a71-90b1-5e7ac24947e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"024e3cf5-cc06-43a1-b8dc-54e2bce7aa6f"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"5fd6a543-147f-410a-9431-85441254cf38"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"e0720a8e-ffad-4432-98de-69f4a412ce1f"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"b3c964bd-3288-48b4-aa9c-d55d12dfdd77"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"e84ded45-b870-40c9-85f6-89d1285a6373"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"c5c5e3a1-cd95-4996-afd8-64550f77dd30"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->670882175,ExpressionUUID->"3746774b-97f5-4a86-8010-79505f31743c"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"396cce8d-f951-408a-982a-49eea2b03e72"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->8391405,ExpressionUUID->"516fbbea-63b3-41f1-a977-e536e8fc53d3"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->3610269,ExpressionUUID->"34566eab-c57b-444c-bb96-b4a5d91a098e"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->401364205,ExpressionUUID->"c227bca7-6e5e-4d4e-a206-5ca652223358"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->350204745,ExpressionUUID->"a5e3a8b9-7588-4460-97c2-672590a3b483"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->732958810,ExpressionUUID->"78def1c1-995d-4d86-9d30-ff99bc68e8be"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->222905350,ExpressionUUID->"c1f77ce7-f152-4ba0-96a6-264aea730a4c"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"07fb67f0-2d30-452a-8f21-f059193a0f13"]
}, Closed]],

Cell[CellGroupData[{

Cell["CSSCascade", "ObjectName",
 CellChangeTimes->{{3.7772067746218596`*^9, 3.7772067751527815`*^9}},
 CellID->1224892054,ExpressionUUID->"f51ce40f-2cf9-4c91-bfa1-ec32abc0d736"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"0977545b-8b20-4b40-a722-8b775ab84ac9"],
 Cell[BoxData[
  RowBox[{"CSSCascade", "[", 
   RowBox[{
    StyleBox["CSSProperty", "TI"], ",", " ", 
    StyleBox["type", "TI"], ",", 
    StyleBox["CSSData", "TI"], ",", 
    StyleBox["CSSSelectorFilter", "TI"]}], "]"}]], "InlineFormula",
  ExpressionUUID->"fdecfff5-a8b8-42f1-8d26-4beb65f7b08f"],
 " \[LineSeparator]combines options that were interpreted from the CSS \
importer. CSS declarations are merged following the CSS cascade and the \
resulting options are filtered by ",
 Cell[BoxData[
  StyleBox["type", "TI"]], "InlineFormula",ExpressionUUID->
  "f5c2a606-ab10-4463-89c8-d8a71fadcf30"],
 "."
}], "Usage",
 CellChangeTimes->{{3.7624656378909564`*^9, 3.762465647454446*^9}, {
  3.7627299774847827`*^9, 3.762730115961416*^9}, {3.7746049128887076`*^9, 
  3.7746049133685493`*^9}, {3.777134721232565*^9, 3.777134723512182*^9}, {
  3.7771347867967176`*^9, 3.7771347903390236`*^9}, {3.77713482276221*^9, 
  3.7771348727622566`*^9}},
 CellID->982511436,ExpressionUUID->"a2795b5e-0066-434b-b2bc-8fb6dc722074"],

Cell["\<\
Following the CSS cascade rules, selector specificity and rule importance are \
taken into account. If two declarations have the same importance and selector \
specificity, then the latter declaration is used.\
\>", "Notes",
 CellChangeTimes->{{3.762465707603456*^9, 3.7624658003028803`*^9}, {
  3.7771349062840986`*^9, 3.777134911778507*^9}, {3.777226690811269*^9, 
  3.7772266915140123`*^9}},
 CellID->1067943069,ExpressionUUID->"3b725dab-ca02-4bab-83b2-5c84ff4563f8"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "af38d8d8-3093-4b02-8c70-467810933c43"], "\"\<IgnoreSpecificity\>\"", 
    ButtonBox["False",
     BaseStyle->"Link"], Cell[
    "process rules in the order they were provided", "TableText",
     ExpressionUUID->"454c9809-5a10-4078-af62-3f4bf3cb7684"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "fed176af-4f44-4def-baa4-7f8fc4792592"], "\"\<IgnoreImportance\>\"", 
    ButtonBox["False",
     BaseStyle->"Link"], Cell[
    "treat all rules as normal", "TableText",ExpressionUUID->
     "7cb983cf-3b60-421c-aed6-755b110c0bf7"]}
  }]], "3ColumnTableMod",
 CellID->56488170,ExpressionUUID->"e0159d89-ac50-4714-9b39-ea1f2dcfcbf8"],

Cell[TextData[{
 ButtonBox["CSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 " is often used with CSS data that includes specificity and target \
information. This information is often acquired with ",
 ButtonBox["ExtractCSSFromXML",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"],
 "."
}], "Notes",
 CellChangeTimes->{{3.762730561495417*^9, 3.762730638527372*^9}, {
  3.7627326234759607`*^9, 3.7627326242860575`*^9}},
 CellID->38300189,ExpressionUUID->"22a66f17-12af-4f4b-bd36-05eeae470922"],

Cell[TextData[{
 "The CSS property argument can either be a single CSS property, a list of \
CSS properties, or ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 ". Any duplicate CSS properties are ignored. If ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 ", then all CSS properties that appear in the CSS data are processed."
}], "Notes",
 CellChangeTimes->{{3.777135512951498*^9, 3.7771355714350514`*^9}, {
  3.777135747389196*^9, 3.7771357879562593`*^9}, {3.7771362664986534`*^9, 
  3.7771362845934153`*^9}},
 CellID->147178531,ExpressionUUID->"4713d8e3-806f-4bed-83d2-059c4dc51715"],

Cell[TextData[{
 "For CSS \"@page\" rules, the CSS property argument can include margin rules \
such as \"@top-left\" in order to process ",
 ButtonBox["PageHeaders",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PageHeaders"],
 " and ",
 ButtonBox["PageFooters",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/PageFooters"],
 "."
}], "Notes",
 CellChangeTimes->{{3.7771364899219823`*^9, 3.777136565360235*^9}},
 CellID->248229309,ExpressionUUID->"c83c5840-4e7b-433b-b777-10d8fa810c4f"],

Cell["The type argument can take the following values:", "Notes",
 CellChangeTimes->{{3.7771359714361362`*^9, 3.777135998326418*^9}},
 CellID->49210919,ExpressionUUID->"c6597b9c-f4f8-4ec3-94b3-9504bb4c128e"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "933ae9f4-222e-40e3-88e6-0e3bc294c9b3"], 
    ButtonBox["Notebook",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Notebook"], Cell[TextData[{
     "Only notebook-level options are returned, e.g. ",
     ButtonBox["PrintingOptions",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/PrintingOptions"],
     "."
    }], "TableText",ExpressionUUID->"b7840c94-2b3b-430f-8dd9-ac62da045719"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "66114bc2-5c48-47fa-a6d3-ef732608898d"], 
    ButtonBox["Cell",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Cell"], Cell[TextData[{
     "Only cell-level options are returned, e.g. ",
     ButtonBox["CellFrame",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CellFrame"],
     "."
    }], "TableText",ExpressionUUID->"7839970c-4e91-4a06-80ac-47d7ba16a935"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "be6ee00e-0470-4410-9356-f01d81b582dd"], "Box", Cell[TextData[{
     "Only box-level options are returned, e.g. ",
     ButtonBox["FrameBoxOptions",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/FrameBoxOptions"],
     "."
    }], "TableText",ExpressionUUID->"2403930d-adff-4800-afe2-d8e6a90e5ee6"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "f007f183-66c9-4c68-9d04-c30f800b0575"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[
    "All options are returned.", "TableText",ExpressionUUID->
     "438d58c9-38a4-4d11-ad64-d4661e1a66c8"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "41c1b01d-5545-4d3e-a9be-d6759906930e"], 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "All options are returned except for Box options. Useful for extracting \
pseudo options like ",
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     "."
    }], "TableText",ExpressionUUID->"9444dcb2-6bf2-4d9b-83c9-2f48a15b6ec9"]}
  }]], "2ColumnTableMod",
 CellChangeTimes->{{3.7771360119816384`*^9, 3.777136249468752*^9}},
 CellID->12602681,ExpressionUUID->"8fd18bbc-bce5-4222-8a32-78f8772118ff"],

Cell[TextData[{
 "The CSS selector filter is used to select particular rule sets from the CSS \
data. The argument can either be a single ",
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  ExpressionUUID->"313e0e73-9d53-4f19-b941-53b2b1d0f911"],
 " or a list of them. Strings are also allowed and automatically are \
converted to ",
 Cell[BoxData[
  ButtonBox["CSSSelector",
   BaseStyle->"Link",
   ButtonData->"paclet:CSSTools/ref/CSSSelector"]], "InlineFormula",
  ExpressionUUID->"822fa311-3d74-481e-bd1a-66042879aa5f"],
 " objects. The symbol ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " is also allowed and includes all rules from the CSS data."
}], "Notes",
 CellChangeTimes->{{3.7771358081090236`*^9, 3.777135919638873*^9}, {
  3.777136306922208*^9, 3.7771363581529274`*^9}},
 CellID->238218542,ExpressionUUID->"76d3b34a-ab0f-4008-ab23-7a6df7e24b2a"],

Cell["\<\
The CSS selector filter can include \"@page\" in order to process any CSS \
page at-rules.\
\>", "Notes",
 CellChangeTimes->{{3.7771363820086784`*^9, 3.7771364072320642`*^9}, {
  3.777136454918244*^9, 3.7771364752914157`*^9}},
 CellID->667340699,ExpressionUUID->"0c72d37e-0565-404a-8855-b380045d8023"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"a7c142f6-db8a-4644-9c50-f1d15ab2161b"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/tutorial/CSSTools"]], "Tutorials",
 CellChangeTimes->{{3.762100927854046*^9, 3.762100931160986*^9}},
 CellID->341631938,ExpressionUUID->"3231d808-6356-4011-a098-9647dc34971f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"450825dd-2c43-46a2-b610-fbc2f74e0407"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"b30b7f4a-0fe8-41d5-849d-d816d126e67c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"5ee20b13-9b68-4620-a7ad-c4865cacd0f5"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"c9ca7645-6cac-40d1-9c99-85d0ccaf8780"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"9eb84af0-e84b-44ee-86c1-03a56da32b68"],

Cell[TextData[{
 ButtonBox["CSSInheritance",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSInheritance"],
 " \[EmptyVerySmallSquare] ",
 ButtonBox["ExtractCSSFromXML",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"],
 " "
}], "SeeAlso",
 CellChangeTimes->{{3.7621009697586937`*^9, 3.762100995656477*^9}, {
  3.7627306493615446`*^9, 3.762730735475277*^9}, {3.7771359398124013`*^9, 
  3.7771359404679265`*^9}},
 CellID->929782353,ExpressionUUID->"3078abfd-6145-4fde-ace1-fdac7d6bfeec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"3a2d5e1a-f16b-4171-b6d8-4a45aa782030"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "MoreAbout",
 CellChangeTimes->{{3.7621009197926207`*^9, 3.7621009250039463`*^9}},
 CellID->1665078683,ExpressionUUID->"b475c6bc-3850-40a6-a0f2-df2f1eafc454"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"fc207952-6bbf-4490-a7ee-41f8f7e2a7c6"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->14098569,ExpressionUUID->"c16aa1dd-7a4f-4973-8591-71c202dcb6b3"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->104691956,ExpressionUUID->"24b430f6-702d-42f1-bd03-c3d2ed884c0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[2]:=",
 CellID->9491473,ExpressionUUID->"2965936b-276e-44c5-99eb-32effdccceaa"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 1], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Interpretation"} -> 
             2, {All, "Block", All, "Condition"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[60]]], 1, {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[3452620], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 1], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[3452620]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][{
                    All, "Block", All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[All, "Block", All, "Condition"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                    GeneralUtilities`Slice[1, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                    GeneralUtilities`Slice[2, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                    GeneralUtilities`Slice[3, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 77766129]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[77766129][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {533., {76., 82.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7620016048215895`*^9, 3.7620018296021442`*^9, 3.7627328468588357`*^9, 
   3.774556292004634*^9, 3.777134936291821*^9, {3.77971256337774*^9, 
   3.779712584964722*^9}},
 CellLabel->"Out[2]=",
 CellID->57889928,ExpressionUUID->"24ef9864-4a53-4379-8f2f-e476f34c1c34"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["CSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 " takes into account the specificity of each selector. The class selector \
\".header\" has a higher specificity than the element selector \"h1\". Thus, \
the ",
 ButtonBox["FontSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FontSize"],
 " for \".header\" is used."
}], "ExampleText",
 CellChangeTimes->{{3.7620017684885597`*^9, 3.762001784532466*^9}, {
  3.76200187749292*^9, 3.7620018967718124`*^9}, {3.7620019530738726`*^9, 
  3.762001954240514*^9}, {3.7627328785770187`*^9, 3.7627329110580072`*^9}, {
  3.762733197785269*^9, 3.762733216067321*^9}, {3.77713496948563*^9, 
  3.7771349699921255`*^9}},
 CellID->339362087,ExpressionUUID->"011b798c-7310-4a09-819c-ef6f62104483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       FrameBox[
        TemplateBox[{StyleBox["\"#CSS \"", 
           RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False],
          StyleBox["\".header\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[0.92, 0.98, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
          FontWeight -> Bold, FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0, 0.5, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSelector[
       Association[
       "String" -> ".header ", 
        "Sequence" -> {
         "SimpleSelectorSequence" -> {
           "Class" -> Association[
             "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
              "Value" -> "header"]}}, "Specificity" -> {0, 0, 1, 0}]]], ",", 
     InterpretationBox[
      StyleBox[
       FrameBox[
        TemplateBox[{StyleBox["\"#CSS \"", 
           RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False],
          StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[0.92, 0.98, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
          FontWeight -> Bold, FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0, 0.5, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSelector[
       Association[
       "String" -> "h1 ", 
        "Sequence" -> {
         "SimpleSelectorSequence" -> {
           "Type" -> Association[
             "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
        "Specificity" -> {0, 0, 0, 1}]]]}], "}"}], "[", "\"\<Specificity\>\"",
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7745563646648993`*^9, 3.7745564044828167`*^9}},
 CellLabel->"In[3]:=",
 CellID->18469184,ExpressionUUID->"de074d54-612b-4bba-9e6f-c42d7a0544ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7745563692473173`*^9, 3.7745564049559546`*^9, 
  3.777134974957346*^9, 3.779712585215394*^9},
 CellLabel->"Out[3]=",
 CellID->130346003,ExpressionUUID->"d4aaadc3-ef20-434f-b936-7db0e004528f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}, 
   3.7627328412080374`*^9, {3.7771349880768843`*^9, 3.7771349895124884`*^9}},
 CellLabel->"In[4]:=",
 CellID->202779533,ExpressionUUID->"b61770d7-42ad-44ed-9bd6-2bd7832c6871"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7620019400520115`*^9, 3.762001972191798*^9, 
  3.7627328520788746`*^9, 3.7627331874175787`*^9, 3.7771349949178658`*^9, 
  3.7797125853168316`*^9},
 CellLabel->"Out[4]=",
 CellID->268404712,ExpressionUUID->"d82aedae-3415-49b1-b3d6-a80afb625ef9"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["CSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/CSSCascade"],
 " also takes into account the importance of each declaration. The class \
selectors \".h\" and \".header\" have the same specificity and the \
\".header\" rule appears last. However, the \".h\" rule is important so it is \
used even though it is declared earlier."
}], "ExampleText",
 CellChangeTimes->{{3.7620017684885597`*^9, 3.762001784532466*^9}, {
  3.76200187749292*^9, 3.7620018967718124`*^9}, {3.7620019578363633`*^9, 
  3.7620019624489*^9}, {3.7627332264989567`*^9, 3.762733242387506*^9}, {
  3.7627332741135373`*^9, 3.7627332748971596`*^9}, {3.762733433487192*^9, 
  3.762733495482691*^9}},
 CellID->509811264,ExpressionUUID->"8db0525a-3655-4eb8-bdd8-b9d1581d7988"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.7620019388874135`*^9}, 
   3.7627328438393164`*^9, {3.7627334983205085`*^9, 3.7627335015867414`*^9}, {
   3.7771350255291815`*^9, 3.7771350269667063`*^9}},
 CellLabel->"In[5]:=",
 CellID->481809636,ExpressionUUID->"55144a5e-1ccb-44f8-ac73-18dfcb82e337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7620019400520115`*^9, 3.762001965651867*^9}, 
   3.7627328536899953`*^9, {3.7627334994347935`*^9, 3.7627335021689663`*^9}, 
   3.774556440220065*^9, 3.777135028309219*^9, 3.779712585411442*^9},
 CellLabel->"Out[5]=",
 CellID->61213577,ExpressionUUID->"189a7e73-d94a-432f-9338-99806e2d7825"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"d1a9ab58-fca7-4902-b258-1a4c0ce85345"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "a1963237-417d-4af7-9110-986f27823daa"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"8b7b44ed-ad96-4fb3-840e-1c9b95acb98e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->377128813,ExpressionUUID->"72777c99-2ad4-41d7-a248-6f76e8396a7f"],

Cell["\<\
CSSCascade allows for fine or coarse control over which declarations are \
involved in the cascade.\
\>", "ExampleText",
 CellChangeTimes->{{3.7772269438154545`*^9, 3.777226968157612*^9}},
 CellID->261440561,ExpressionUUID->"794afdfb-fb1c-4750-b410-a2ae60f690c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important;color:red} .header {font-weight:bold} \
h1 {font-style:italic;color:green}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.777226794561824*^9, 3.7772268172647896`*^9}, {
  3.777226876531109*^9, 3.7772268780948677`*^9}},
 CellLabel->"In[2]:=",
 CellID->11322628,ExpressionUUID->"3c0f2bd5-4cc0-4b9e-a6df-111e2e616dcc"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
               TypeSystem`AnyType}], TypeSystem`AnyLength]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Interpretation"} -> 
             2, {All, "Block", All, "Condition"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Property" -> 
                   TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                   "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`UnknownShape]], 1, {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1409008181], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
               TypeSystem`AnyType}], TypeSystem`AnyLength]}], 3], "HandleQ" -> 
        True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1409008181]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1651519770][{All, "Block", All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[All, "Block", All, "Condition"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1651519770][
                    GeneralUtilities`Slice[1, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["red", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontColor", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1651519770][
                    GeneralUtilities`Slice[1, 
                    Key["Block"], 2, 
                    Key["Interpretation"], 
                    Key[FontColor]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key[FontColor]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-weight", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["bold", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontWeight", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1651519770][
                    GeneralUtilities`Slice[2, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontWeight]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Bold", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontWeight]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-style", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["italic", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSlant", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1651519770][
                    GeneralUtilities`Slice[3, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSlant]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Italic", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSlant]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["green", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontColor", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1651519770][
                    GeneralUtilities`Slice[3, 
                    Key["Block"], 2, 
                    Key["Interpretation"], 
                    Key[FontColor]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False], FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key[FontColor]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651519770][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1651519770]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1651519770][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {593., {98., 104.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.777226819920637*^9, 3.7772268235457287`*^9}, 
   3.7772268787354903`*^9, 3.7797125856894245`*^9},
 CellLabel->"Out[2]=",
 CellID->511600033,ExpressionUUID->"72c91e0c-c40f-4326-8238-b3a3f42d13c6"]
}, Open  ]],

Cell["Resolve all declarations of a single selector.", "ExampleText",
 CellChangeTimes->{{3.7772267645616927`*^9, 3.777226780049104*^9}, {
  3.777226893343321*^9, 3.7772268943124*^9}, {3.7772270323452215`*^9, 
  3.7772270335788107`*^9}},
 CellID->228320806,ExpressionUUID->"a4698d41-a37a-4f73-a65b-f5f67770f7ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"All", ",", "Cell", ",", "cssData", ",", "\"\<.h\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.777226829702858*^9, 3.7772268509211764`*^9}},
 CellLabel->"In[3]:=",
 CellID->105796536,ExpressionUUID->"8343fcb9-bb3b-4d71-b6f9-5e73c8adc21a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "22.5`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.777226851499398*^9, 3.779712586037633*^9},
 CellLabel->"Out[3]=",
 CellID->91474965,ExpressionUUID->"d6290e47-aa6c-4561-ba3c-421f8b9b60bd"]
}, Open  ]],

Cell["Resolve a single declaration from multiple selectors.", "ExampleText",
 CellChangeTimes->{{3.7772268645624557`*^9, 3.777226908484495*^9}, {
  3.7772270286884146`*^9, 3.7772270301408854`*^9}},
 CellID->425186755,ExpressionUUID->"73992a46-ff30-4929-866f-1755d0857a6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<color\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.77722691063999*^9, 3.7772269276874475`*^9}},
 CellLabel->"In[4]:=",
 CellID->125390234,ExpressionUUID->"346dfd41-1aae-4ed8-9bc9-ff2ff0be89d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontColor", "\[Rule]", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7772269281720033`*^9, 3.779712586121502*^9},
 CellLabel->"Out[4]=",
 CellID->322500427,ExpressionUUID->"8a690749-2f95-4fcb-9c74-581c9e896550"]
}, Open  ]],

Cell["Resolve all declarations from all selectors.", "ExampleText",
 CellChangeTimes->{{3.7772269832042904`*^9, 3.7772269943128986`*^9}},
 CellID->657540,ExpressionUUID->"3356c143-33e6-4856-9de9-9669da3e9f24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"All", ",", "Cell", ",", "cssData", ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.777226998812603*^9, 3.777227001562475*^9}},
 CellLabel->"In[5]:=",
 CellID->334542912,ExpressionUUID->"2a33aa27-7f47-4546-89cd-b758b31eec2b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "22.5`"}], ",", 
   RowBox[{"FontSlant", "\[Rule]", "Italic"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7772270021722593`*^9, 3.779712586205397*^9},
 CellLabel->"Out[5]=",
 CellID->180008,ExpressionUUID->"3469e10e-af39-4907-92d4-1e6e7dc6d0de"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "0761205e-6eda-4403-b6dc-ccbb437b778d"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"be726698-82e3-4a94-b05b-91094515b7b1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "03b3abf1-452d-40f8-97a6-099ae2516cbe"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"c4358828-14b1-4658-99c7-b5867929dee6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"IgnoreSpecificity\"", "ExampleSubsection",ExpressionUUID->
   "3ed11e5e-da2e-4589-9dd5-651f0be0e38c"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.7627301929564896`*^9, 3.762730196755273*^9}},
 CellID->1757724783,ExpressionUUID->"053b05a6-b845-434f-811e-77ba01820411"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->405814373,ExpressionUUID->"e21b123b-af95-4d31-9dab-32fec6b6677b"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->108671522,ExpressionUUID->"60398388-f0c6-4bbe-b2c2-4d9ad9652408"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[2]:=",
 CellID->289398237,ExpressionUUID->"3d17f409-79d6-4a5a-a68c-836e1460518f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 1], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Interpretation"} -> 
             2, {All, "Block", All, "Condition"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[60]]], 1, {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[153002225], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 1], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[153002225]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1923113337][{All, "Block", All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[All, "Block", All, "Condition"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923113337][
                    GeneralUtilities`Slice[1, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923113337][
                    GeneralUtilities`Slice[2, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1923113337][
                    GeneralUtilities`Slice[3, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1923113337][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1923113337]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1923113337][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {533., {76., 82.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7627333843415813`*^9, 3.77455645610101*^9, 
  3.7771350550414224`*^9, 3.7797125864560685`*^9},
 CellLabel->"Out[2]=",
 CellID->55991799,ExpressionUUID->"9c1d91fd-44ce-43ca-a4c6-68130466775d"]
}, Open  ]],

Cell[TextData[{
 "Normally selector specificity is used in determining the CSS cascade. The \
class selector \".header\" has a higher specificity than the element selector \
\"h1\". Thus, the ",
 ButtonBox["FontSize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FontSize"],
 " for \".header\" is used."
}], "ExampleText",
 CellChangeTimes->{{3.7627339913057404`*^9, 3.7627340322342663`*^9}, {
  3.77713507130676*^9, 3.777135081684059*^9}},
 CellID->347175432,ExpressionUUID->"ffe17a78-c2c2-4679-b804-75d209b7c0ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}, 
   3.7627328412080374`*^9, {3.777135088044368*^9, 3.7771350895974193`*^9}},
 CellLabel->"In[3]:=",
 CellID->329914097,ExpressionUUID->"3ffeb617-141c-46f2-bcf3-43996f3c19b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7620019400520115`*^9, 3.762001972191798*^9, 
  3.7627328520788746`*^9, 3.7627331874175787`*^9, 3.7745564591571393`*^9, 
  3.7771350900973496`*^9, 3.779712586643345*^9},
 CellLabel->"Out[3]=",
 CellID->137853762,ExpressionUUID->"eb9b2396-bd79-4bff-b2be-205c2a58df53"]
}, Open  ]],

Cell["\<\
Ignoring specificity, the last selector in the list of selectors is used to \
determine the style.\
\>", "ExampleText",
 CellChangeTimes->{{3.762734046570868*^9, 3.762734128111518*^9}},
 CellID->30634469,ExpressionUUID->"5e127486-6631-4b5c-b63d-69f0142c340a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}], ",", 
   RowBox[{"\"\<IgnoreSpecificity\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7627341409810877`*^9, 3.7627341483164225`*^9}, {
  3.777135101107094*^9, 3.7771351012888975`*^9}},
 CellLabel->"In[4]:=",
 CellID->162791683,ExpressionUUID->"71809268-d840-4d64-8fc5-ffcd07e8d3a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "7.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.762734148820431*^9, 3.7745564606854935`*^9, 
  3.7771351281989837`*^9, 3.779712586722345*^9},
 CellLabel->"Out[4]=",
 CellID->370421081,ExpressionUUID->"699ce5f9-305e-48c9-b3d5-31444cbfd967"]
}, Open  ]],

Cell["\<\
However, importance is still used to determine the style. Including the class \
selector \".h\", because its \"font-size\" is important its value is used.\
\>", "ExampleText",
 CellChangeTimes->{{3.7627341592909317`*^9, 3.7627341740045595`*^9}, {
  3.7771351528723135`*^9, 3.777135207918468*^9}},
 CellID->17930543,ExpressionUUID->"f84410e7-cf88-4400-967a-5e2a8f999b4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}], 
   ",", 
   RowBox[{"\"\<IgnoreSpecificity\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762734182177323*^9, 3.762734183540351*^9}, {
  3.76273432428996*^9, 3.7627343244729385`*^9}, {3.777135135916209*^9, 
  3.7771351371535635`*^9}},
 CellLabel->"In[5]:=",
 CellID->154024933,ExpressionUUID->"bd8a64d4-c066-4a77-a3c0-007cc2c61144"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.762734184666148*^9, 3.76273432634756*^9, 
  3.7745564619855194`*^9, 3.7771351416846814`*^9, 3.7797125868033023`*^9},
 CellLabel->"Out[5]=",
 CellID->332501562,ExpressionUUID->"a682a604-8563-40d2-8375-cd9769664253"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"IgnoreImportance\"", "ExampleSubsection",ExpressionUUID->
   "3ac3fa52-8472-4992-8318-1d02060d1a31"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.762730199982797*^9, 3.7627302051948457`*^9}},
 CellID->1295379749,ExpressionUUID->"4b062e07-adc8-442c-8cc7-e0a23d7e03da"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->201519839,ExpressionUUID->"66430e8f-51d6-4e87-a340-1ac5f25a82a6"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->453615333,ExpressionUUID->"0f7f62ba-2591-40e9-b58b-b3b3a72f5a09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[2]:=",
 CellID->73940315,ExpressionUUID->"470f27ea-480e-4321-bce6-d23b0181725e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 1], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Interpretation"} -> 
             2, {All, "Block", All, "Condition"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[60]]], 1, {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1143836954], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Property", "Value", "Important", "Interpretation", 
               "Condition"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Assoc[TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 1], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1143836954]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][{
                    All, "Block", All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[All, "Block", All, "Condition"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   644166930][
                    GeneralUtilities`Slice[1, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["22.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   644166930][
                    GeneralUtilities`Slice[2, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["15.0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "FontSize", FontFamily -> "Source Code Pro", FontSize -> 
                    13, ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   644166930][
                    GeneralUtilities`Slice[3, 
                    Key["Block"], 1, 
                    Key["Interpretation"], 
                    Key[FontSize]]], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["7.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[FontSize]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 644166930]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[644166930][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {533., {76., 82.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7627333843415813`*^9, 3.774556464398554*^9, 
  3.7771352151086197`*^9, 3.7771354061064386`*^9, 3.7797125870939636`*^9},
 CellLabel->"Out[2]=",
 CellID->105617756,ExpressionUUID->"fb106d4d-60dd-4067-8759-f691858cefc9"]
}, Open  ]],

Cell["\<\
Normally rule importance is used in determining the style cascade. The class \
selectors \".h\" and \".header\" have the same specificity and the \
\".header\" rule appears last. However, the \".h\" rule is important so it is \
used even though it is declared earlier.\
\>", "ExampleText",
 CellChangeTimes->{{3.7627339913057404`*^9, 3.7627340322342663`*^9}, {
  3.7627342175112047`*^9, 3.762734227482669*^9}},
 CellID->328254856,ExpressionUUID->"a8d3045b-400a-43e8-8114-00dab44db1a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}, 
   3.7627328412080374`*^9, {3.762734244920356*^9, 3.7627342554395885`*^9}, 
   3.777135226233927*^9},
 CellLabel->"In[3]:=",
 CellID->415776725,ExpressionUUID->"509c9b49-fc04-407b-bfcb-b11948c08540"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7620019400520115`*^9, 3.762001972191798*^9, 3.7627328520788746`*^9, 
   3.7627331874175787`*^9, {3.762734246650782*^9, 3.762734255755934*^9}, 
   3.774556468921172*^9, {3.777135224046026*^9, 3.777135227027772*^9}, 
   3.777135407759265*^9, 3.7797125872900133`*^9},
 CellLabel->"Out[3]=",
 CellID->125867194,ExpressionUUID->"b01046cc-2cd2-4497-ad77-855db380ccec"]
}, Open  ]],

Cell["\<\
Ignoring importance, the last rule from the set of selectors is used to \
determine the style.\
\>", "ExampleText",
 CellChangeTimes->{{3.762734046570868*^9, 3.762734128111518*^9}, {
  3.7627342666257725`*^9, 3.762734267790305*^9}, {3.7771354266390142`*^9, 
  3.7771354497982054`*^9}},
 CellID->156540000,ExpressionUUID->"50c16e01-07be-453a-b110-6f4d6ea269e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}], ",", 
   RowBox[{"\"\<IgnoreImportance\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7627341409810877`*^9, 3.7627341483164225`*^9}, {
   3.7627342764611964`*^9, 3.7627342895146523`*^9}, 3.7771352412361937`*^9},
 CellLabel->"In[4]:=",
 CellID->814919511,ExpressionUUID->"667f39c5-985a-4f73-8224-0e4451b63378"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.762734148820431*^9, {3.762734280865424*^9, 3.7627342902633715`*^9}, 
   3.7745564700451117`*^9, 3.7771352419041023`*^9, 3.7771354092984176`*^9, 
   3.7771354611704364`*^9, 3.7797125873699985`*^9},
 CellLabel->"Out[4]=",
 CellID->60678543,ExpressionUUID->"9825aa03-edb6-481c-b927-6b2f338c2614"]
}, Open  ]],

Cell["\<\
However, specificity is still used to determine the style. Including the \
element selector \"h1\" has no effect since it has a lower specificity.\
\>", "ExampleText",
 CellChangeTimes->{{3.7627341592909317`*^9, 3.7627341740045595`*^9}, {
  3.7627342972166586`*^9, 3.762734298550301*^9}, {3.762734352996971*^9, 
  3.762734367599273*^9}},
 CellID->375301362,ExpressionUUID->"ce6dd233-5577-4ea4-8183-0c5e76ff5eb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<h1\>\"", ",", "\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}], 
   ",", 
   RowBox[{"\"\<IgnoreImportance\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762734182177323*^9, 3.762734183540351*^9}, {
   3.7627343180217705`*^9, 3.7627343496129055`*^9}, 3.777135257951337*^9},
 CellLabel->"In[5]:=",
 CellID->47133936,ExpressionUUID->"b9616fc8-3fb7-4135-a98a-72b19f53b629"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.762734184666148*^9, {3.76273433473697*^9, 3.762734350930483*^9}, 
   3.7745564716404686`*^9, 3.777135258701435*^9, 3.7771354689619684`*^9, 
   3.7797125874509544`*^9},
 CellLabel->"Out[5]=",
 CellID->166215598,ExpressionUUID->"787b8476-3524-4902-98d8-eae65b39ea34"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "ccc5dbb1-9336-44af-b0b4-5605fcaeda20"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"fb13abcf-09aa-42a6-895e-0b587544b87c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "2c611a67-e8b3-4c86-b53e-5cb270b99024"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"dc593277-af4e-4ca0-973a-03b2f243c96c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "a31154bd-e3a6-416a-b729-a1b8c8b8f36c"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"bbd12655-a402-42ec-942a-0b8a256b53e0"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "d9dd59e7-aaaa-433b-a41e-1714d3c13d66"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"2919d592-784e-4603-9c70-617ea738e0c2"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "48809587-6d73-42fd-988e-6025c5ddfd75"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"077cee6a-f751-415c-89e9-90a9f701f073"]
}, Open  ]]
},
WindowSize->{958, 956},
WindowMargins->{{Automatic, -1745}, {Automatic, 2}},
TaggingRules->{
 "DocuToolsSettings" -> {
   "$ApplicationName" -> "CSSTools", "$LinkBase" -> "CSSTools", 
    "$DocumentationDirectory" -> 
    "C:\\Users\\kevind\\WolframProjects\\Personal\\CSSTools\\CSSTools\\\
Documentation\\English\\", "$ApplicationDirectory" -> 
    "C:\\Users\\kevind\\WolframProjects\\Personal\\CSSTools\\CSSTools"}, 
  "TryRealOnly" -> False},
CellContext->"Global`",
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[58501, 1328, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"d1a9ab58-fca7-4902-b258-1a4c0ce85345",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 201700, 4336}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 22, "History",ExpressionUUID->"d6c4838d-75f5-49c4-9e33-47e97fc3b447",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 26, "CategorizationSection",ExpressionUUID->"44414c1e-0636-4b7e-a590-9003aeb0f130",
 CellID->1122911449],
Cell[1309, 41, 134, 2, 70, "Categorization",ExpressionUUID->"b66da3dd-961e-4dc9-b880-bcc451154e59",
 CellID->686433507],
Cell[1446, 45, 136, 2, 70, "Categorization",ExpressionUUID->"674acfab-c8be-4822-bf99-0f6a5d9400ba",
 CellID->605800465],
Cell[1585, 49, 133, 2, 70, "Categorization",ExpressionUUID->"5e7322ea-251a-4888-8eae-a147079a1993",
 CellID->468444828],
Cell[1721, 53, 123, 1, 70, "Categorization",ExpressionUUID->"8988dc38-8da1-4949-9e6a-bbf7f6395e92"]
}, Closed]],
Cell[CellGroupData[{
Cell[1881, 59, 110, 1, 17, "KeywordsSection",ExpressionUUID->"70e05bd6-0130-4c31-82bc-bee2bc409552",
 CellID->477174294],
Cell[1994, 62, 100, 1, 70, "Keywords",ExpressionUUID->"6b5c24d1-a489-4a71-90b1-5e7ac24947e3",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2131, 68, 120, 1, 17, "TemplatesSection",ExpressionUUID->"024e3cf5-cc06-43a1-b8dc-54e2bce7aa6f",
 CellID->1872225408],
Cell[2254, 71, 149, 2, 70, "Template",ExpressionUUID->"5fd6a543-147f-410a-9431-85441254cf38",
 CellID->1562036412],
Cell[2406, 75, 137, 2, 70, "Template",ExpressionUUID->"e0720a8e-ffad-4432-98de-69f4a412ce1f",
 CellID->158391909],
Cell[2546, 79, 136, 2, 70, "Template",ExpressionUUID->"b3c964bd-3288-48b4-aa9c-d55d12dfdd77",
 CellID->1360575930],
Cell[2685, 83, 137, 2, 70, "Template",ExpressionUUID->"e84ded45-b870-40c9-85f6-89d1285a6373",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[2859, 90, 108, 1, 17, "DetailsSection",ExpressionUUID->"c5c5e3a1-cd95-4996-afd8-64550f77dd30",
 CellID->307771771],
Cell[2970, 93, 118, 2, 70, "Details",ExpressionUUID->"3746774b-97f5-4a86-8010-79505f31743c",
 CellID->670882175],
Cell[3091, 97, 124, 2, 70, "Details",ExpressionUUID->"396cce8d-f951-408a-982a-49eea2b03e72",
 CellID->350963985],
Cell[3218, 101, 119, 2, 70, "Details",ExpressionUUID->"516fbbea-63b3-41f1-a977-e536e8fc53d3",
 CellID->8391405],
Cell[3340, 105, 124, 2, 70, "Details",ExpressionUUID->"34566eab-c57b-444c-bb96-b4a5d91a098e",
 CellID->3610269],
Cell[3467, 109, 116, 2, 70, "Details",ExpressionUUID->"c227bca7-6e5e-4d4e-a206-5ca652223358",
 CellID->401364205],
Cell[3586, 113, 116, 2, 70, "Details",ExpressionUUID->"a5e3a8b9-7588-4460-97c2-672590a3b483",
 CellID->350204745],
Cell[3705, 117, 118, 2, 70, "Details",ExpressionUUID->"78def1c1-995d-4d86-9d30-ff99bc68e8be",
 CellID->732958810],
Cell[3826, 121, 133, 2, 70, "Details",ExpressionUUID->"c1f77ce7-f152-4ba0-96a6-264aea730a4c",
 CellID->222905350],
Cell[3962, 125, 122, 2, 70, "Details",ExpressionUUID->"07fb67f0-2d30-452a-8f21-f059193a0f13",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4121, 132, 178, 2, 62, "ObjectName",ExpressionUUID->"f51ce40f-2cf9-4c91-bfa1-ec32abc0d736",
 CellID->1224892054],
Cell[4302, 136, 1112, 23, 88, "Usage",ExpressionUUID->"a2795b5e-0066-434b-b2bc-8fb6dc722074",
 CellID->982511436],
Cell[5417, 161, 480, 8, 37, "Notes",ExpressionUUID->"3b725dab-ca02-4bab-83b2-5c84ff4563f8",
 CellID->1067943069],
Cell[5900, 171, 710, 14, 40, "3ColumnTableMod",ExpressionUUID->"e0159d89-ac50-4714-9b39-ea1f2dcfcbf8",
 CellID->56488170],
Cell[6613, 187, 556, 13, 37, "Notes",ExpressionUUID->"22a66f17-12af-4f4b-bd36-05eeae470922",
 CellID->38300189],
Cell[7172, 202, 642, 15, 51, "Notes",ExpressionUUID->"4713d8e3-806f-4bed-83d2-059c4dc51715",
 CellID->147178531],
Cell[7817, 219, 487, 13, 37, "Notes",ExpressionUUID->"c83c5840-4e7b-433b-b777-10d8fa810c4f",
 CellID->248229309],
Cell[8307, 234, 207, 2, 23, "Notes",ExpressionUUID->"c6597b9c-f4f8-4ec3-94b3-9504bb4c128e",
 CellID->49210919],
Cell[8517, 238, 2194, 52, 132, "2ColumnTableMod",ExpressionUUID->"8fd18bbc-bce5-4222-8a32-78f8772118ff",
 CellID->12602681],
Cell[10714, 292, 978, 23, 67, "Notes",ExpressionUUID->"76d3b34a-ab0f-4008-ab23-7a6df7e24b2a",
 CellID->238218542],
Cell[11695, 317, 311, 6, 23, "Notes",ExpressionUUID->"0c72d37e-0565-404a-8855-b380045d8023",
 CellID->667340699]
}, Open  ]],
Cell[CellGroupData[{
Cell[12043, 328, 112, 1, 44, "TutorialsSection",ExpressionUUID->"a7c142f6-db8a-4644-9c50-f1d15ab2161b",
 CellID->250839057],
Cell[12158, 331, 261, 4, 16, "Tutorials",ExpressionUUID->"3231d808-6356-4011-a098-9647dc34971f",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[12456, 340, 138, 1, 31, "RelatedDemonstrationsSection",ExpressionUUID->"450825dd-2c43-46a2-b610-fbc2f74e0407",
 CellID->1268215905],
Cell[12597, 343, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"b30b7f4a-0fe8-41d5-849d-d816d126e67c",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[12747, 349, 120, 1, 31, "RelatedLinksSection",ExpressionUUID->"5ee20b13-9b68-4620-a7ad-c4865cacd0f5",
 CellID->1584193535],
Cell[12870, 352, 104, 1, 16, "RelatedLinks",ExpressionUUID->"c9ca7645-6cac-40d1-9c99-85d0ccaf8780",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[13011, 358, 110, 1, 31, "SeeAlsoSection",ExpressionUUID->"9eb84af0-e84b-44ee-86c1-03a56da32b68",
 CellID->1255426704],
Cell[13124, 361, 524, 13, 16, "SeeAlso",ExpressionUUID->"3078abfd-6145-4fde-ace1-fdac7d6bfeec",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[13685, 379, 112, 1, 31, "MoreAboutSection",ExpressionUUID->"3a2d5e1a-f16b-4171-b6d8-4a45aa782030",
 CellID->38303248],
Cell[13800, 382, 263, 4, 16, "MoreAbout",ExpressionUUID->"b475c6bc-3850-40a6-a0f2-df2f1eafc454",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[14100, 391, 411, 11, 68, "PrimaryExamplesSection",ExpressionUUID->"fc207952-6bbf-4490-a7ee-41f8f7e2a7c6",
 CellID->880084151],
Cell[14514, 404, 171, 3, 25, "Input",ExpressionUUID->"c16aa1dd-7a4f-4973-8591-71c202dcb6b3",
 CellID->14098569],
Cell[14688, 409, 311, 5, 20, "ExampleText",ExpressionUUID->"24b430f6-702d-42f1-bd03-c3d2ed884c0a",
 CellID->104691956],
Cell[CellGroupData[{
Cell[15024, 418, 630, 12, 80, "Input",ExpressionUUID->"2965936b-276e-44c5-99eb-32effdccceaa",
 CellID->9491473],
Cell[15657, 432, 36424, 727, 170, "Output",ExpressionUUID->"24ef9864-4a53-4379-8f2f-e476f34c1c34",
 CellID->57889928]
}, Open  ]],
Cell[52096, 1162, 796, 17, 33, "ExampleText",ExpressionUUID->"011b798c-7310-4a09-819c-ef6f62104483",
 CellID->339362087],
Cell[CellGroupData[{
Cell[52917, 1183, 2534, 66, 37, "Input",ExpressionUUID->"de074d54-612b-4bba-9e6f-c42d7a0544ba",
 CellID->18469184],
Cell[55454, 1251, 424, 10, 24, "Output",ExpressionUUID->"d4aaadc3-ef20-434f-b936-7db0e004528f",
 CellID->130346003]
}, Open  ]],
Cell[CellGroupData[{
Cell[55915, 1266, 445, 8, 25, "Input",ExpressionUUID->"b61770d7-42ad-44ed-9bd6-2bd7832c6871",
 CellID->202779533],
Cell[56363, 1276, 355, 7, 24, "Output",ExpressionUUID->"d82aedae-3415-49b1-b3d6-a80afb625ef9",
 CellID->268404712]
}, Open  ]],
Cell[56733, 1286, 787, 14, 46, "ExampleText",ExpressionUUID->"8db0525a-3655-4eb8-bdd8-b9d1581d7988",
 CellID->509811264],
Cell[CellGroupData[{
Cell[57545, 1304, 501, 9, 25, "Input",ExpressionUUID->"55144a5e-1ccb-44f8-ac73-18dfcb82e337",
 CellID->481809636],
Cell[58049, 1315, 403, 7, 24, "Output",ExpressionUUID->"189a7e73-d94a-432f-9338-99806e2d7825",
 CellID->61213577]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58501, 1328, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"d1a9ab58-fca7-4902-b258-1a4c0ce85345",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[CellGroupData[{
Cell[58681, 1334, 242, 5, 31, "ExampleSection",ExpressionUUID->"8b7b44ed-ad96-4fb3-840e-1c9b95acb98e",
 CellID->1293636265],
Cell[58926, 1341, 172, 3, 25, "Input",ExpressionUUID->"72777c99-2ad4-41d7-a248-6f76e8396a7f",
 CellID->377128813],
Cell[59101, 1346, 273, 5, 20, "ExampleText",ExpressionUUID->"794afdfb-fb1c-4750-b410-a2ae60f690c4",
 CellID->261440561],
Cell[CellGroupData[{
Cell[59399, 1355, 463, 10, 80, "Input",ExpressionUUID->"3c0f2bd5-4cc0-4b9e-a6df-111e2e616dcc",
 CellID->11322628],
Cell[59865, 1367, 47504, 950, 214, "Output",ExpressionUUID->"72c91e0c-c40f-4326-8238-b3a3f42d13c6",
 CellID->511600033]
}, Open  ]],
Cell[107384, 2320, 312, 4, 20, "ExampleText",ExpressionUUID->"a4698d41-a37a-4f73-a65b-f5f67770f7ea",
 CellID->228320806],
Cell[CellGroupData[{
Cell[107721, 2328, 295, 6, 25, "Input",ExpressionUUID->"8343fcb9-bb3b-4d71-b6f9-5e73c8adc21a",
 CellID->105796536],
Cell[108019, 2336, 1940, 50, 24, "Output",ExpressionUUID->"d6290e47-aa6c-4561-ba3c-421f8b9b60bd",
 CellID->91474965]
}, Open  ]],
Cell[109974, 2389, 272, 3, 20, "ExampleText",ExpressionUUID->"73992a46-ff30-4929-866f-1755d0857a6c",
 CellID->425186755],
Cell[CellGroupData[{
Cell[110271, 2396, 359, 7, 25, "Input",ExpressionUUID->"346dfd41-1aae-4ed8-9bc9-ff2ff0be89d9",
 CellID->125390234],
Cell[110633, 2405, 1835, 48, 24, "Output",ExpressionUUID->"8a690749-2f95-4fcb-9c74-581c9e896550",
 CellID->322500427]
}, Open  ]],
Cell[112483, 2456, 209, 2, 20, "ExampleText",ExpressionUUID->"3356c143-33e6-4856-9de9-9669da3e9f24",
 CellID->657540],
Cell[CellGroupData[{
Cell[112717, 2462, 283, 5, 25, "Input",ExpressionUUID->"2a33aa27-7f47-4546-89cd-b758b31eec2b",
 CellID->334542912],
Cell[113003, 2469, 2045, 52, 24, "Output",ExpressionUUID->"3469e10e-af39-4907-92d4-1e6e7dc6d0de",
 CellID->180008]
}, Open  ]]
}, Open  ]],
Cell[115075, 2525, 265, 5, 31, "ExampleSection",ExpressionUUID->"be726698-82e3-4a94-b05b-91094515b7b1",
 CellID->1020263627],
Cell[CellGroupData[{
Cell[115365, 2534, 244, 5, 19, "ExampleSection",ExpressionUUID->"c4358828-14b1-4658-99c7-b5867929dee6",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[115634, 2543, 332, 6, 22, "ExampleSubsection",ExpressionUUID->"053b05a6-b845-434f-811e-77ba01820411",
 CellID->1757724783],
Cell[115969, 2551, 172, 3, 25, "Input",ExpressionUUID->"e21b123b-af95-4d31-9dab-32fec6b6677b",
 CellID->405814373],
Cell[116144, 2556, 311, 5, 20, "ExampleText",ExpressionUUID->"60398388-f0c6-4bbe-b2c2-4d9ad9652408",
 CellID->108671522],
Cell[CellGroupData[{
Cell[116480, 2565, 632, 12, 80, "Input",ExpressionUUID->"3d17f409-79d6-4a5a-a68c-836e1460518f",
 CellID->289398237],
Cell[117115, 2579, 36490, 728, 170, "Output",ExpressionUUID->"9c1d91fd-44ce-43ca-a4c6-68130466775d",
 CellID->55991799]
}, Open  ]],
Cell[153620, 3310, 517, 11, 46, "ExampleText",ExpressionUUID->"ffe17a78-c2c2-4679-b804-75d209b7c0ef",
 CellID->347175432],
Cell[CellGroupData[{
Cell[154162, 3325, 443, 8, 25, "Input",ExpressionUUID->"3ffeb617-141c-46f2-bcf3-43996f3c19b8",
 CellID->329914097],
Cell[154608, 3335, 377, 7, 24, "Output",ExpressionUUID->"eb9b2396-bd79-4bff-b2be-205c2a58df53",
 CellID->137853762]
}, Open  ]],
Cell[155000, 3345, 269, 5, 20, "ExampleText",ExpressionUUID->"5e127486-6631-4b5c-b63d-69f0142c340a",
 CellID->30634469],
Cell[CellGroupData[{
Cell[155294, 3354, 489, 9, 44, "Input",ExpressionUUID->"71809268-d840-4d64-8fc5-ffcd07e8d3a1",
 CellID->162791683],
Cell[155786, 3365, 302, 6, 24, "Output",ExpressionUUID->"699ce5f9-305e-48c9-b3d5-31444cbfd967",
 CellID->370421081]
}, Open  ]],
Cell[156103, 3374, 380, 6, 33, "ExampleText",ExpressionUUID->"f84410e7-cf88-4400-967a-5e2a8f999b4c",
 CellID->17930543],
Cell[CellGroupData[{
Cell[156508, 3384, 558, 11, 44, "Input",ExpressionUUID->"bd8a64d4-c066-4a77-a3c0-007cc2c61144",
 CellID->154024933],
Cell[157069, 3397, 326, 6, 24, "Output",ExpressionUUID->"a682a604-8563-40d2-8375-cd9769664253",
 CellID->332501562]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157444, 3409, 331, 6, 22, "ExampleSubsection",ExpressionUUID->"4b062e07-adc8-442c-8cc7-e0a23d7e03da",
 CellID->1295379749],
Cell[157778, 3417, 172, 3, 25, "Input",ExpressionUUID->"66430e8f-51d6-4e87-a340-1ac5f25a82a6",
 CellID->201519839],
Cell[157953, 3422, 311, 5, 20, "ExampleText",ExpressionUUID->"0f7f62ba-2591-40e9-b58b-b3b3a72f5a09",
 CellID->453615333],
Cell[CellGroupData[{
Cell[158289, 3431, 631, 12, 80, "Input",ExpressionUUID->"470f27ea-480e-4321-bce6-d23b0181725e",
 CellID->73940315],
Cell[158923, 3445, 36479, 728, 170, "Output",ExpressionUUID->"fb106d4d-60dd-4067-8759-f691858cefc9",
 CellID->105617756]
}, Open  ]],
Cell[195417, 4176, 495, 8, 46, "ExampleText",ExpressionUUID->"a8d3045b-400a-43e8-8114-00dab44db1a5",
 CellID->328254856],
Cell[CellGroupData[{
Cell[195937, 4188, 469, 9, 25, "Input",ExpressionUUID->"509c9b49-fc04-407b-bfcb-b11948c08540",
 CellID->415776725],
Cell[196409, 4199, 477, 9, 24, "Output",ExpressionUUID->"b01046cc-2cd2-4497-ad77-855db380ccec",
 CellID->125867194]
}, Open  ]],
Cell[196901, 4211, 370, 7, 20, "ExampleText",ExpressionUUID->"50c16e01-07be-453a-b110-6f4d6ea269e9",
 CellID->156540000],
Cell[CellGroupData[{
Cell[197296, 4222, 515, 9, 44, "Input",ExpressionUUID->"667f39c5-985a-4f73-8224-0e4451b63378",
 CellID->814919511],
Cell[197814, 4233, 407, 8, 24, "Output",ExpressionUUID->"9825aa03-edb6-481c-b927-6b2f338c2614",
 CellID->60678543]
}, Open  ]],
Cell[198236, 4244, 422, 7, 33, "ExampleText",ExpressionUUID->"ce6dd233-5577-4ea4-8183-0c5e76ff5eb1",
 CellID->375301362],
Cell[CellGroupData[{
Cell[198683, 4255, 531, 10, 44, "Input",ExpressionUUID->"b9616fc8-3fb7-4135-a98a-72b19f53b629",
 CellID->47133936],
Cell[199217, 4267, 379, 8, 24, "Output",ExpressionUUID->"787b8476-3524-4902-98d8-eae65b39ea34",
 CellID->166215598]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[199635, 4280, 248, 5, 31, "ExampleSection",ExpressionUUID->"fb13abcf-09aa-42a6-895e-0b587544b87c",
 CellID->258228157],
Cell[199886, 4287, 259, 5, 19, "ExampleSection",ExpressionUUID->"dc593277-af4e-4ca0-973a-03b2f243c96c",
 CellID->2123667759],
Cell[200148, 4294, 252, 5, 19, "ExampleSection",ExpressionUUID->"bbd12655-a402-42ec-942a-0b8a256b53e0",
 CellID->1305812373],
Cell[200403, 4301, 257, 5, 19, "ExampleSection",ExpressionUUID->"2919d592-784e-4603-9c70-617ea738e0c2",
 CellID->1653164318],
Cell[200663, 4308, 249, 5, 19, "ExampleSection",ExpressionUUID->"077cee6a-f751-415c-89e9-90a9f701f073",
 CellID->589267740]
}, Open  ]]
}
]
*)


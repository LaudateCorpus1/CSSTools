(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    180037,       3826]
NotebookOptionsPosition[    167150,       3555]
NotebookOutlinePosition[    167829,       3579]
CellTagsIndexPosition[    167748,       3574]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"638027f2-d831-4d87-a3a0-5f2ab710971c"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"00ce0616-6404-4527-b0e6-80c25d0d2782"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"21d15d0f-1a27-47f1-9dc9-532a7b2838f1"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"7028eb53-2943-48f9-99cc-7d476b1242ce"]
}], "History",
 CellID->1247902091,ExpressionUUID->"d6c4838d-75f5-49c4-9e33-47e97fc3b447"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"44414c1e-0636-4b7e-a590-9003aeb0f130"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"b66da3dd-961e-4dc9-b880-bcc451154e59"],

Cell["CSSTools", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"674acfab-c8be-4822-bf99-0f6a5d9400ba"],

Cell["CSSTools`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"5e7322ea-251a-4888-8eae-a147079a1993"],

Cell["CSSTools/ref/ResolveCSSCascade", "Categorization",
 CellLabel->"URI",ExpressionUUID->"8988dc38-8da1-4949-9e6a-bbf7f6395e92"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->477174294,ExpressionUUID->"70e05bd6-0130-4c31-82bc-bee2bc409552"],

Cell["XXXX", "Keywords",
 CellID->1164421360,ExpressionUUID->"6b5c24d1-a489-4a71-90b1-5e7ac24947e3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1872225408,ExpressionUUID->"024e3cf5-cc06-43a1-b8dc-54e2bce7aa6f"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1562036412,ExpressionUUID->"5fd6a543-147f-410a-9431-85441254cf38"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->158391909,ExpressionUUID->"e0720a8e-ffad-4432-98de-69f4a412ce1f"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1360575930,ExpressionUUID->"b3c964bd-3288-48b4-aa9c-d55d12dfdd77"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->793782254,ExpressionUUID->"e84ded45-b870-40c9-85f6-89d1285a6373"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"c5c5e3a1-cd95-4996-afd8-64550f77dd30"],

Cell["XXXX", "Details",
 CellLabel->"Lead",
 CellID->670882175,ExpressionUUID->"3746774b-97f5-4a86-8010-79505f31743c"],

Cell["XXXX", "Details",
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"396cce8d-f951-408a-982a-49eea2b03e72"],

Cell["XXXX", "Details",
 CellLabel->"Authors",
 CellID->8391405,ExpressionUUID->"516fbbea-63b3-41f1-a977-e536e8fc53d3"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->3610269,ExpressionUUID->"34566eab-c57b-444c-bb96-b4a5d91a098e"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->401364205,ExpressionUUID->"c227bca7-6e5e-4d4e-a206-5ca652223358"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->350204745,ExpressionUUID->"a5e3a8b9-7588-4460-97c2-672590a3b483"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->732958810,ExpressionUUID->"78def1c1-995d-4d86-9d30-ff99bc68e8be"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->222905350,ExpressionUUID->"c1f77ce7-f152-4ba0-96a6-264aea730a4c"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"07fb67f0-2d30-452a-8f21-f059193a0f13"]
}, Closed]],

Cell[CellGroupData[{

Cell["ResolveCSSCascade", "ObjectName",
 CellID->1224892054,ExpressionUUID->"f51ce40f-2cf9-4c91-bfa1-ec32abc0d736"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"171a6cbf-c927-40ac-8729-8bc1570b0503"],
 Cell[BoxData[
  RowBox[{"ResolveCSSCascade", "[", 
   RowBox[{
    StyleBox["type", "TI"], ",", 
    StyleBox["CSSData", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["selector", "TI"], ",", " ", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
  ExpressionUUID->"7489e210-fc04-4e40-b884-0d0112c69fea"],
 " \[LineSeparator]combines options that were interpreted from the CSS \
importer. CSS styles are merged following the CSS cascade and the resulting \
options are filtered by ",
 Cell[BoxData[
  StyleBox["type", "TI"]], "InlineFormula",ExpressionUUID->
  "a4646b53-ca7a-4a0a-9814-82c4b7d566e8"],
 "."
}], "Usage",
 CellChangeTimes->{{3.7624656378909564`*^9, 3.762465647454446*^9}, {
  3.7627299774847827`*^9, 3.762730115961416*^9}, {3.7746049128887076`*^9, 
  3.7746049133685493`*^9}},
 CellID->982511436,ExpressionUUID->"a2795b5e-0066-434b-b2bc-8fb6dc722074"],

Cell["\<\
Following the CSS cascade rules, selector specificity and rule importance are \
taken into account. If two declarations have the same selector specificity \
and importance, then the latter declaration is used.\
\>", "Notes",
 CellChangeTimes->{{3.762465707603456*^9, 3.7624658003028803`*^9}},
 CellID->1067943069,ExpressionUUID->"3b725dab-ca02-4bab-83b2-5c84ff4563f8"],

Cell[BoxData[GridBox[{
   {Cell["      ", "ModInfo",ExpressionUUID->
     "af38d8d8-3093-4b02-8c70-467810933c43"], "\"\<IgnoreSpecificity\>\"", 
    ButtonBox["False",
     BaseStyle->"Link"], Cell[
    "process rules in the order they were provided", "TableText",
     ExpressionUUID->"454c9809-5a10-4078-af62-3f4bf3cb7684"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "fed176af-4f44-4def-baa4-7f8fc4792592"], "\"\<IgnoreImportance\>\"", 
    ButtonBox["False",
     BaseStyle->"Link"], Cell[
    "treat all rules as normal", "TableText",ExpressionUUID->
     "7cb983cf-3b60-421c-aed6-755b110c0bf7"]}
  }]], "3ColumnTableMod",
 CellID->56488170,ExpressionUUID->"e0159d89-ac50-4714-9b39-ea1f2dcfcbf8"],

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " is often used with CSS data that includes specificity and target \
information. This information is often acquired with ",
 ButtonBox["ExtractCSSFromXML",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"],
 "."
}], "Notes",
 CellChangeTimes->{{3.762730561495417*^9, 3.762730638527372*^9}, {
  3.7627326234759607`*^9, 3.7627326242860575`*^9}},
 CellID->38300189,ExpressionUUID->"22a66f17-12af-4f4b-bd36-05eeae470922"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tutorials", "TutorialsSection",
 CellID->250839057,ExpressionUUID->"a7c142f6-db8a-4644-9c50-f1d15ab2161b"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/tutorial/CSSTools"]], "Tutorials",
 CellChangeTimes->{{3.762100927854046*^9, 3.762100931160986*^9}},
 CellID->341631938,ExpressionUUID->"3231d808-6356-4011-a098-9647dc34971f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Demonstrations", "RelatedDemonstrationsSection",
 CellID->1268215905,ExpressionUUID->"450825dd-2c43-46a2-b610-fbc2f74e0407"],

Cell["XXXX", "RelatedDemonstrations",
 CellID->1129518860,ExpressionUUID->"b30b7f4a-0fe8-41d5-849d-d816d126e67c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 CellID->1584193535,ExpressionUUID->"5ee20b13-9b68-4620-a7ad-c4865cacd0f5"],

Cell["XXXX", "RelatedLinks",
 CellID->1038487239,ExpressionUUID->"c9ca7645-6cac-40d1-9c99-85d0ccaf8780"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->1255426704,ExpressionUUID->"9eb84af0-e84b-44ee-86c1-03a56da32b68"],

Cell[TextData[{
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " \[EmptyVerySmallSquare] ",
 ButtonBox["ResolveCSSInheritance",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInheritance"],
 " \[EmptyVerySmallSquare] ",
 ButtonBox["ExtractCSSFromXML",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"],
 " "
}], "SeeAlso",
 CellChangeTimes->{{3.7621009697586937`*^9, 3.762100995656477*^9}, {
  3.7627306493615446`*^9, 3.762730735475277*^9}},
 CellID->929782353,ExpressionUUID->"3078abfd-6145-4fde-ace1-fdac7d6bfeec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "MoreAboutSection",
 CellID->38303248,ExpressionUUID->"3a2d5e1a-f16b-4171-b6d8-4a45aa782030"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "MoreAbout",
 CellChangeTimes->{{3.7621009197926207`*^9, 3.7621009250039463`*^9}},
 CellID->1665078683,ExpressionUUID->"b475c6bc-3850-40a6-a0f2-df2f1eafc454"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox["Examples", "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->880084151,ExpressionUUID->"fc207952-6bbf-4490-a7ee-41f8f7e2a7c6"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[97]:=",
 CellID->14098569,ExpressionUUID->"c16aa1dd-7a4f-4973-8591-71c202dcb6b3"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->104691956,ExpressionUUID->"24b430f6-702d-42f1-bd03-c3d2ed884c0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[98]:=",
 CellID->9491473,ExpressionUUID->"2965936b-276e-44c5-99eb-32effdccceaa"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1740951116], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1740951116]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1637741789][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1637741789][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1637741789]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1637741789][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {512., {75., 81.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7620016048215895`*^9, 3.7620018296021442`*^9, 
  3.7627328468588357`*^9, 3.774556292004634*^9},
 CellLabel->"Out[98]=",
 CellID->511452652,ExpressionUUID->"c7d79c7c-0cc7-4611-b59f-bea6918ead94"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " takes into account the specificity of each selector. The class selector \
\".header\" has a higher specificity than the element selector \"h1\". Thus, \
the FontSize for \".header\" is used."
}], "ExampleText",
 CellChangeTimes->{{3.7620017684885597`*^9, 3.762001784532466*^9}, {
  3.76200187749292*^9, 3.7620018967718124`*^9}, {3.7620019530738726`*^9, 
  3.762001954240514*^9}, {3.7627328785770187`*^9, 3.7627329110580072`*^9}, {
  3.762733197785269*^9, 3.762733216067321*^9}},
 CellID->339362087,ExpressionUUID->"011b798c-7310-4a09-819c-ef6f62104483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       FrameBox[
        TemplateBox[{StyleBox["\"#CSS \"", 
           RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False],
          StyleBox["\".header\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[0.92, 0.98, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
          FontWeight -> Bold, FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0, 0.5, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSelector[
       Association[
       "String" -> ".header ", 
        "Sequence" -> {
         "SimpleSelectorSequence" -> {
           "Class" -> Association[
             "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
              "Value" -> "header"]}}, "Specificity" -> {0, 0, 1, 0}]]], ",", 
     InterpretationBox[
      StyleBox[
       FrameBox[
        TemplateBox[{StyleBox["\"#CSS \"", 
           RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False],
          StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[0.92, 0.98, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
          FontWeight -> Bold, FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0, 0.5, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSelector[
       Association[
       "String" -> "h1 ", 
        "Sequence" -> {
         "SimpleSelectorSequence" -> {
           "Type" -> Association[
             "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
        "Specificity" -> {0, 0, 0, 1}]]]}], "}"}], "[", "\"\<Specificity\>\"",
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7745563646648993`*^9, 3.7745564044828167`*^9}},
 CellLabel->"In[102]:=",
 CellID->18469184,ExpressionUUID->"de074d54-612b-4bba-9e6f-c42d7a0544ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7745563692473173`*^9, 3.7745564049559546`*^9},
 CellLabel->"Out[102]=",
 CellID->534634021,ExpressionUUID->"bb9dcd8e-a2c5-482f-9815-c7a28ce6525e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}, 
   3.7627328412080374`*^9},
 CellLabel->"In[59]:=",
 CellID->202779533,ExpressionUUID->"b61770d7-42ad-44ed-9bd6-2bd7832c6871"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7620019400520115`*^9, 3.762001972191798*^9, 
  3.7627328520788746`*^9, 3.7627331874175787`*^9},
 CellLabel->"Out[59]=",
 CellID->19396224,ExpressionUUID->"98d4ded9-b1aa-46af-8858-7bf5f475b029"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " also takes into account the importance of each declaration. The class \
selectors \".h\" and \".header\" have the same specificity and the \
\".header\" rule appears last. However, the \".h\" rule is important so it is \
used even though it is declared earlier."
}], "ExampleText",
 CellChangeTimes->{{3.7620017684885597`*^9, 3.762001784532466*^9}, {
  3.76200187749292*^9, 3.7620018967718124`*^9}, {3.7620019578363633`*^9, 
  3.7620019624489*^9}, {3.7627332264989567`*^9, 3.762733242387506*^9}, {
  3.7627332741135373`*^9, 3.7627332748971596`*^9}, {3.762733433487192*^9, 
  3.762733495482691*^9}},
 CellID->509811264,ExpressionUUID->"8db0525a-3655-4eb8-bdd8-b9d1581d7988"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.7620019388874135`*^9}, 
   3.7627328438393164`*^9, {3.7627334983205085`*^9, 3.7627335015867414`*^9}},
 CellLabel->"In[103]:=",
 CellID->481809636,ExpressionUUID->"55144a5e-1ccb-44f8-ac73-18dfcb82e337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7620019400520115`*^9, 3.762001965651867*^9}, 
   3.7627328536899953`*^9, {3.7627334994347935`*^9, 3.7627335021689663`*^9}, 
   3.774556440220065*^9},
 CellLabel->"Out[103]=",
 CellID->43335913,ExpressionUUID->"773e9aef-8f87-4adb-a61e-1b4e21b047e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->1854448968,ExpressionUUID->"d1a9ab58-fca7-4902-b258-1a4c0ce85345"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "a1963237-417d-4af7-9110-986f27823daa"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1293636265,ExpressionUUID->"8b7b44ed-ad96-4fb3-840e-1c9b95acb98e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "0761205e-6eda-4403-b6dc-ccbb437b778d"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1020263627,ExpressionUUID->"be726698-82e3-4a94-b05b-91094515b7b1"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->137523284,ExpressionUUID->"7871e991-615b-4169-9694-7be6737f5f2f"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->275361121,ExpressionUUID->"36ce1664-0d48-4d60-96fc-f026d7100f03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[105]:=",
 CellID->48919150,ExpressionUUID->"37502537-fd2f-42d4-bd58-86a0d9a8ac47"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1931127411], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1931127411]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 685881509]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[685881509][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {512., {75., 81.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7627333843415813`*^9, 3.7745564489312925`*^9},
 CellLabel->"Out[105]=",
 CellID->651089574,ExpressionUUID->"ec34f04e-820a-48b9-88cf-1dac6f9e23d9"]
}, Open  ]],

Cell[TextData[{
 "Using the similar function ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " with all interpretations would favor the last entry even though it has \
less specificity and is not important."
}], "ExampleText",
 CellChangeTimes->{{3.7620016871234503`*^9, 3.762001741307228*^9}, {
  3.762001852939741*^9, 3.7620018596596055`*^9}, {3.7627333747383633`*^9, 
  3.762733376974071*^9}},
 CellID->551044751,ExpressionUUID->"b4a9fba0-02c7-4c36-a34e-d9a7e7a273c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"cssData", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7620017521737423`*^9, 3.7620017556886377`*^9}, 
   3.762732839049445*^9},
 CellLabel->"In[106]:=",
 CellID->304063679,ExpressionUUID->"2ffe2ed3-e3d5-420c-8976-1ccdbc80c7c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "7.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.762001756244467*^9, 3.762001870036293*^9, 
  3.762732849242836*^9, 3.7627333862905245`*^9, 3.7745564522823954`*^9},
 CellLabel->"Out[106]=",
 CellID->325464182,ExpressionUUID->"29948d97-20e6-46aa-8e43-2d414de2c00d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "03b3abf1-452d-40f8-97a6-099ae2516cbe"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2061341341,ExpressionUUID->"c4358828-14b1-4658-99c7-b5867929dee6"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"IgnoreSpecificity\"", "ExampleSubsection",ExpressionUUID->
   "3ed11e5e-da2e-4589-9dd5-651f0be0e38c"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.7627301929564896`*^9, 3.762730196755273*^9}},
 CellID->1757724783,ExpressionUUID->"053b05a6-b845-434f-811e-77ba01820411"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->405814373,ExpressionUUID->"e21b123b-af95-4d31-9dab-32fec6b6677b"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->108671522,ExpressionUUID->"60398388-f0c6-4bbe-b2c2-4d9ad9652408"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[108]:=",
 CellID->289398237,ExpressionUUID->"3d17f409-79d6-4a5a-a68c-836e1460518f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[132168418], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[132168418]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268947660][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1268947660][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1268947660]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268947660][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {512., {75., 81.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7627333843415813`*^9, 3.77455645610101*^9},
 CellLabel->"Out[108]=",
 CellID->562290150,ExpressionUUID->"23f86fac-f5db-48bf-bdd3-bb709f09653f"]
}, Open  ]],

Cell["\<\
Normally selector specificity is used in determining the style cascade. The \
class selector \".header\" has a higher specificity than the element selector \
\"h1\". Thus, the FontSize for \".header\" is used.\
\>", "ExampleText",
 CellChangeTimes->{{3.7627339913057404`*^9, 3.7627340322342663`*^9}},
 CellID->347175432,ExpressionUUID->"ffe17a78-c2c2-4679-b804-75d209b7c0ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}, 
   3.7627328412080374`*^9},
 CellLabel->"In[109]:=",
 CellID->329914097,ExpressionUUID->"3ffeb617-141c-46f2-bcf3-43996f3c19b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7620019400520115`*^9, 3.762001972191798*^9, 
  3.7627328520788746`*^9, 3.7627331874175787`*^9, 3.7745564591571393`*^9},
 CellLabel->"Out[109]=",
 CellID->290790918,ExpressionUUID->"2bd41da2-ddb6-4a3f-aa7f-87162f09e3bf"]
}, Open  ]],

Cell["\<\
Ignoring specificity, the last selector in the list of selectors is used to \
determine the style.\
\>", "ExampleText",
 CellChangeTimes->{{3.762734046570868*^9, 3.762734128111518*^9}},
 CellID->30634469,ExpressionUUID->"5e127486-6631-4b5c-b63d-69f0142c340a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}], ",", 
   RowBox[{"\"\<IgnoreSpecificity\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7627341409810877`*^9, 3.7627341483164225`*^9}},
 CellLabel->"In[110]:=",
 CellID->162791683,ExpressionUUID->"71809268-d840-4d64-8fc5-ffcd07e8d3a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "7.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.762734148820431*^9, 3.7745564606854935`*^9},
 CellLabel->"Out[110]=",
 CellID->46922937,ExpressionUUID->"5342dce2-b1fa-4e2c-9622-2146bcb32e88"]
}, Open  ]],

Cell["However, importance is still used to determine the style.", \
"ExampleText",
 CellChangeTimes->{{3.7627341592909317`*^9, 3.7627341740045595`*^9}},
 CellID->17930543,ExpressionUUID->"f84410e7-cf88-4400-967a-5e2a8f999b4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}], 
   ",", 
   RowBox[{"\"\<IgnoreSpecificity\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762734182177323*^9, 3.762734183540351*^9}, {
  3.76273432428996*^9, 3.7627343244729385`*^9}},
 CellLabel->"In[111]:=",
 CellID->154024933,ExpressionUUID->"bd8a64d4-c066-4a77-a3c0-007cc2c61144"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.762734184666148*^9, 3.76273432634756*^9, 
  3.7745564619855194`*^9},
 CellLabel->"Out[111]=",
 CellID->595852045,ExpressionUUID->"0296c02c-a892-4f47-8dc0-2db749de00ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\"IgnoreImportance\"", "ExampleSubsection",ExpressionUUID->
   "3ac3fa52-8472-4992-8318-1d02060d1a31"],
  $Line = 0; Null]], "ExampleSubsection",
 CellChangeTimes->{{3.762730199982797*^9, 3.7627302051948457`*^9}},
 CellID->1295379749,ExpressionUUID->"4b062e07-adc8-442c-8cc7-e0a23d7e03da"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[112]:=",
 CellID->201519839,ExpressionUUID->"66430e8f-51d6-4e87-a340-1ac5f25a82a6"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellChangeTimes->{{3.761843429152788*^9, 3.7618434336213913`*^9}, {
   3.762001600144096*^9, 3.762001650162198*^9}, 3.7620018418902535`*^9},
 CellID->453615333,ExpressionUUID->"0f7f62ba-2591-40e9-b58b-b3b3a72f5a09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761839961000414*^9, 3.761839988523159*^9}, {
  3.7618425813132687`*^9, 3.761842582076127*^9}, {3.761843385170765*^9, 
  3.761843400655448*^9}, {3.762001563728671*^9, 3.7620015920206723`*^9}, {
  3.7620018030455728`*^9, 3.7620018285764904`*^9}, {3.7627328329882874`*^9, 
  3.762732834311369*^9}},
 CellLabel->"In[113]:=",
 CellID->73940315,ExpressionUUID->"470f27ea-480e-4321-bce6-d23b0181725e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[536932973], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[536932973]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 713635765]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[713635765][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {512., {75., 81.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7627333843415813`*^9, 3.774556464398554*^9},
 CellLabel->"Out[113]=",
 CellID->404284182,ExpressionUUID->"bedcfaf1-bc51-49b7-802a-41e51e8aa61b"]
}, Open  ]],

Cell["\<\
Normally rule importance is used in determining the style cascade. The class \
selectors \".h\" and \".header\" have the same specificity and the \
\".header\" rule appears last. However, the \".h\" rule is important so it is \
used even though it is declared earlier.\
\>", "ExampleText",
 CellChangeTimes->{{3.7627339913057404`*^9, 3.7627340322342663`*^9}, {
  3.7627342175112047`*^9, 3.762734227482669*^9}},
 CellID->328254856,ExpressionUUID->"a8d3045b-400a-43e8-8114-00dab44db1a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762001901594259*^9, 3.762001971232093*^9}, 
   3.7627328412080374`*^9, {3.762734244920356*^9, 3.7627342554395885`*^9}},
 CellLabel->"In[114]:=",
 CellID->415776725,ExpressionUUID->"509c9b49-fc04-407b-bfcb-b11948c08540"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7620019400520115`*^9, 3.762001972191798*^9, 3.7627328520788746`*^9, 
   3.7627331874175787`*^9, {3.762734246650782*^9, 3.762734255755934*^9}, 
   3.774556468921172*^9},
 CellLabel->"Out[114]=",
 CellID->32608169,ExpressionUUID->"ef4dd9ec-93fa-4d79-b480-ec4d9d190209"]
}, Open  ]],

Cell["\<\
Ignoring importance, the last selector in the list of selectors is used to \
determine the style.\
\>", "ExampleText",
 CellChangeTimes->{{3.762734046570868*^9, 3.762734128111518*^9}, {
  3.7627342666257725`*^9, 3.762734267790305*^9}},
 CellID->156540000,ExpressionUUID->"50c16e01-07be-453a-b110-6f4d6ea269e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}], ",", 
   RowBox[{"\"\<IgnoreImportance\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7627341409810877`*^9, 3.7627341483164225`*^9}, {
  3.7627342764611964`*^9, 3.7627342895146523`*^9}},
 CellLabel->"In[115]:=",
 CellID->814919511,ExpressionUUID->"667f39c5-985a-4f73-8224-0e4451b63378"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.762734148820431*^9, {3.762734280865424*^9, 3.7627342902633715`*^9}, 
   3.7745564700451117`*^9},
 CellLabel->"Out[115]=",
 CellID->20835206,ExpressionUUID->"5b3df7f4-71f4-48d9-9b99-955d5c9a417d"]
}, Open  ]],

Cell["\<\
However, specificity is still used to determine the style. Including the \
element selector \"h1\" has no effect since it has a lower specificity.\
\>", "ExampleText",
 CellChangeTimes->{{3.7627341592909317`*^9, 3.7627341740045595`*^9}, {
  3.7627342972166586`*^9, 3.762734298550301*^9}, {3.762734352996971*^9, 
  3.762734367599273*^9}},
 CellID->375301362,ExpressionUUID->"ce6dd233-5577-4ea4-8183-0c5e76ff5eb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<h1\>\"", ",", "\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}], 
   ",", 
   RowBox[{"\"\<IgnoreImportance\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.762734182177323*^9, 3.762734183540351*^9}, {
  3.7627343180217705`*^9, 3.7627343496129055`*^9}},
 CellLabel->"In[116]:=",
 CellID->47133936,ExpressionUUID->"b9616fc8-3fb7-4135-a98a-72b19f53b629"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.762734184666148*^9, {3.76273433473697*^9, 3.762734350930483*^9}, 
   3.7745564716404686`*^9},
 CellLabel->"Out[116]=",
 CellID->365622721,ExpressionUUID->"4391dc7e-b0de-43f0-a69e-bbd98ff4e535"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "ccc5dbb1-9336-44af-b0b4-5605fcaeda20"],
  $Line = 0; Null]], "ExampleSection",
 CellID->258228157,ExpressionUUID->"fb13abcf-09aa-42a6-895e-0b587544b87c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "2c611a67-e8b3-4c86-b53e-5cb270b99024"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2123667759,ExpressionUUID->"dc593277-af4e-4ca0-973a-03b2f243c96c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "a31154bd-e3a6-416a-b729-a1b8c8b8f36c"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1305812373,ExpressionUUID->"bbd12655-a402-42ec-942a-0b8a256b53e0"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "d9dd59e7-aaaa-433b-a41e-1714d3c13d66"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1653164318,ExpressionUUID->"2919d592-784e-4603-9c70-617ea738e0c2"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "48809587-6d73-42fd-988e-6025c5ddfd75"],
  $Line = 0; Null]], "ExampleSection",
 CellID->589267740,ExpressionUUID->"077cee6a-f751-415c-89e9-90a9f701f073"]
}, Open  ]]
},
WindowSize->{748, 900},
WindowMargins->{{Automatic, -1687}, {Automatic, 31}},
CellContext->"Global`",
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStyles.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[50688, 1142, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"d1a9ab58-fca7-4902-b258-1a4c0ce85345",
   CellTags->"ExtendedExamples",
   CellID->1854448968]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 167553, 3567}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 22, "History",ExpressionUUID->"d6c4838d-75f5-49c4-9e33-47e97fc3b447",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 27, "CategorizationSection",ExpressionUUID->"44414c1e-0636-4b7e-a590-9003aeb0f130",
 CellID->1122911449],
Cell[1309, 41, 134, 2, 70, "Categorization",ExpressionUUID->"b66da3dd-961e-4dc9-b880-bcc451154e59",
 CellID->686433507],
Cell[1446, 45, 136, 2, 70, "Categorization",ExpressionUUID->"674acfab-c8be-4822-bf99-0f6a5d9400ba",
 CellID->605800465],
Cell[1585, 49, 133, 2, 70, "Categorization",ExpressionUUID->"5e7322ea-251a-4888-8eae-a147079a1993",
 CellID->468444828],
Cell[1721, 53, 130, 1, 70, "Categorization",ExpressionUUID->"8988dc38-8da1-4949-9e6a-bbf7f6395e92"]
}, Closed]],
Cell[CellGroupData[{
Cell[1888, 59, 110, 1, 17, "KeywordsSection",ExpressionUUID->"70e05bd6-0130-4c31-82bc-bee2bc409552",
 CellID->477174294],
Cell[2001, 62, 100, 1, 70, "Keywords",ExpressionUUID->"6b5c24d1-a489-4a71-90b1-5e7ac24947e3",
 CellID->1164421360]
}, Closed]],
Cell[CellGroupData[{
Cell[2138, 68, 120, 1, 17, "TemplatesSection",ExpressionUUID->"024e3cf5-cc06-43a1-b8dc-54e2bce7aa6f",
 CellID->1872225408],
Cell[2261, 71, 149, 2, 70, "Template",ExpressionUUID->"5fd6a543-147f-410a-9431-85441254cf38",
 CellID->1562036412],
Cell[2413, 75, 137, 2, 70, "Template",ExpressionUUID->"e0720a8e-ffad-4432-98de-69f4a412ce1f",
 CellID->158391909],
Cell[2553, 79, 136, 2, 70, "Template",ExpressionUUID->"b3c964bd-3288-48b4-aa9c-d55d12dfdd77",
 CellID->1360575930],
Cell[2692, 83, 137, 2, 70, "Template",ExpressionUUID->"e84ded45-b870-40c9-85f6-89d1285a6373",
 CellID->793782254]
}, Closed]],
Cell[CellGroupData[{
Cell[2866, 90, 108, 1, 17, "DetailsSection",ExpressionUUID->"c5c5e3a1-cd95-4996-afd8-64550f77dd30",
 CellID->307771771],
Cell[2977, 93, 118, 2, 70, "Details",ExpressionUUID->"3746774b-97f5-4a86-8010-79505f31743c",
 CellID->670882175],
Cell[3098, 97, 124, 2, 70, "Details",ExpressionUUID->"396cce8d-f951-408a-982a-49eea2b03e72",
 CellID->350963985],
Cell[3225, 101, 119, 2, 70, "Details",ExpressionUUID->"516fbbea-63b3-41f1-a977-e536e8fc53d3",
 CellID->8391405],
Cell[3347, 105, 124, 2, 70, "Details",ExpressionUUID->"34566eab-c57b-444c-bb96-b4a5d91a098e",
 CellID->3610269],
Cell[3474, 109, 116, 2, 70, "Details",ExpressionUUID->"c227bca7-6e5e-4d4e-a206-5ca652223358",
 CellID->401364205],
Cell[3593, 113, 116, 2, 70, "Details",ExpressionUUID->"a5e3a8b9-7588-4460-97c2-672590a3b483",
 CellID->350204745],
Cell[3712, 117, 118, 2, 70, "Details",ExpressionUUID->"78def1c1-995d-4d86-9d30-ff99bc68e8be",
 CellID->732958810],
Cell[3833, 121, 133, 2, 70, "Details",ExpressionUUID->"c1f77ce7-f152-4ba0-96a6-264aea730a4c",
 CellID->222905350],
Cell[3969, 125, 122, 2, 70, "Details",ExpressionUUID->"07fb67f0-2d30-452a-8f21-f059193a0f13",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4128, 132, 115, 1, 62, "ObjectName",ExpressionUUID->"f51ce40f-2cf9-4c91-bfa1-ec32abc0d736",
 CellID->1224892054],
Cell[4246, 135, 1000, 23, 88, "Usage",ExpressionUUID->"a2795b5e-0066-434b-b2bc-8fb6dc722074",
 CellID->982511436],
Cell[5249, 160, 378, 6, 37, "Notes",ExpressionUUID->"3b725dab-ca02-4bab-83b2-5c84ff4563f8",
 CellID->1067943069],
Cell[5630, 168, 710, 14, 40, "3ColumnTableMod",ExpressionUUID->"e0159d89-ac50-4714-9b39-ea1f2dcfcbf8",
 CellID->56488170],
Cell[6343, 184, 570, 13, 37, "Notes",ExpressionUUID->"22a66f17-12af-4f4b-bd36-05eeae470922",
 CellID->38300189]
}, Open  ]],
Cell[CellGroupData[{
Cell[6950, 202, 112, 1, 44, "TutorialsSection",ExpressionUUID->"a7c142f6-db8a-4644-9c50-f1d15ab2161b",
 CellID->250839057],
Cell[7065, 205, 261, 4, 16, "Tutorials",ExpressionUUID->"3231d808-6356-4011-a098-9647dc34971f",
 CellID->341631938]
}, Open  ]],
Cell[CellGroupData[{
Cell[7363, 214, 138, 1, 31, "RelatedDemonstrationsSection",ExpressionUUID->"450825dd-2c43-46a2-b610-fbc2f74e0407",
 CellID->1268215905],
Cell[7504, 217, 113, 1, 16, "RelatedDemonstrations",ExpressionUUID->"b30b7f4a-0fe8-41d5-849d-d816d126e67c",
 CellID->1129518860]
}, Open  ]],
Cell[CellGroupData[{
Cell[7654, 223, 120, 1, 31, "RelatedLinksSection",ExpressionUUID->"5ee20b13-9b68-4620-a7ad-c4865cacd0f5",
 CellID->1584193535],
Cell[7777, 226, 104, 1, 16, "RelatedLinks",ExpressionUUID->"c9ca7645-6cac-40d1-9c99-85d0ccaf8780",
 CellID->1038487239]
}, Open  ]],
Cell[CellGroupData[{
Cell[7918, 232, 110, 1, 31, "SeeAlsoSection",ExpressionUUID->"9eb84af0-e84b-44ee-86c1-03a56da32b68",
 CellID->1255426704],
Cell[8031, 235, 640, 16, 16, "SeeAlso",ExpressionUUID->"3078abfd-6145-4fde-ace1-fdac7d6bfeec",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[8708, 256, 112, 1, 31, "MoreAboutSection",ExpressionUUID->"3a2d5e1a-f16b-4171-b6d8-4a45aa782030",
 CellID->38303248],
Cell[8823, 259, 263, 4, 16, "MoreAbout",ExpressionUUID->"b475c6bc-3850-40a6-a0f2-df2f1eafc454",
 CellID->1665078683]
}, Open  ]],
Cell[CellGroupData[{
Cell[9123, 268, 411, 11, 68, "PrimaryExamplesSection",ExpressionUUID->"fc207952-6bbf-4490-a7ee-41f8f7e2a7c6",
 CellID->880084151],
Cell[9537, 281, 172, 3, 25, "Input",ExpressionUUID->"c16aa1dd-7a4f-4973-8591-71c202dcb6b3",
 CellID->14098569],
Cell[9712, 286, 311, 5, 20, "ExampleText",ExpressionUUID->"24b430f6-702d-42f1-bd03-c3d2ed884c0a",
 CellID->104691956],
Cell[CellGroupData[{
Cell[10048, 295, 631, 12, 80, "Input",ExpressionUUID->"2965936b-276e-44c5-99eb-32effdccceaa",
 CellID->9491473],
Cell[10682, 309, 33962, 672, 168, "Output",ExpressionUUID->"c7d79c7c-0cc7-4611-b59f-bea6918ead94",
 CellID->511452652]
}, Open  ]],
Cell[44659, 984, 681, 12, 46, "ExampleText",ExpressionUUID->"011b798c-7310-4a09-819c-ef6f62104483",
 CellID->339362087],
Cell[CellGroupData[{
Cell[45365, 1000, 2536, 66, 37, "Input",ExpressionUUID->"de074d54-612b-4bba-9e6f-c42d7a0544ba",
 CellID->18469184],
Cell[47904, 1068, 379, 9, 24, "Output",ExpressionUUID->"bb9dcd8e-a2c5-482f-9815-c7a28ce6525e",
 CellID->534634021]
}, Open  ]],
Cell[CellGroupData[{
Cell[48320, 1082, 377, 8, 25, "Input",ExpressionUUID->"b61770d7-42ad-44ed-9bd6-2bd7832c6871",
 CellID->202779533],
Cell[48700, 1092, 304, 6, 24, "Output",ExpressionUUID->"98d4ded9-b1aa-46af-8858-7bf5f475b029",
 CellID->19396224]
}, Open  ]],
Cell[49019, 1101, 801, 14, 46, "ExampleText",ExpressionUUID->"8db0525a-3655-4eb8-bdd8-b9d1581d7988",
 CellID->509811264],
Cell[CellGroupData[{
Cell[49845, 1119, 430, 8, 25, "Input",ExpressionUUID->"55144a5e-1ccb-44f8-ac73-18dfcb82e337",
 CellID->481809636],
Cell[50278, 1129, 361, 7, 24, "Output",ExpressionUUID->"773e9aef-8f87-4adb-a61e-1b4e21b047e2",
 CellID->43335913]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50688, 1142, 155, 2, 54, "ExtendedExamplesSection",ExpressionUUID->"d1a9ab58-fca7-4902-b258-1a4c0ce85345",
 CellTags->"ExtendedExamples",
 CellID->1854448968],
Cell[50846, 1146, 242, 5, 31, "ExampleSection",ExpressionUUID->"8b7b44ed-ad96-4fb3-840e-1c9b95acb98e",
 CellID->1293636265],
Cell[CellGroupData[{
Cell[51113, 1155, 265, 5, 19, "ExampleSection",ExpressionUUID->"be726698-82e3-4a94-b05b-91094515b7b1",
 CellID->1020263627],
Cell[51381, 1162, 174, 3, 25, "Input",ExpressionUUID->"7871e991-615b-4169-9694-7be6737f5f2f",
 CellID->137523284],
Cell[51558, 1167, 311, 5, 20, "ExampleText",ExpressionUUID->"36ce1664-0d48-4d60-96fc-f026d7100f03",
 CellID->275361121],
Cell[CellGroupData[{
Cell[51894, 1176, 633, 12, 80, "Input",ExpressionUUID->"37502537-fd2f-42d4-bd58-86a0d9a8ac47",
 CellID->48919150],
Cell[52530, 1190, 33878, 671, 168, "Output",ExpressionUUID->"ec34f04e-820a-48b9-88cf-1dac6f9e23d9",
 CellID->651089574]
}, Open  ]],
Cell[86423, 1864, 552, 11, 33, "ExampleText",ExpressionUUID->"b4a9fba0-02c7-4c36-a34e-d9a7e7a273c9",
 CellID->551044751],
Cell[CellGroupData[{
Cell[87000, 1879, 455, 11, 44, "Input",ExpressionUUID->"2ffe2ed3-e3d5-420c-8976-1ccdbc80c7c5",
 CellID->304063679],
Cell[87458, 1892, 326, 6, 24, "Output",ExpressionUUID->"29948d97-20e6-46aa-8e43-2d414de2c00d",
 CellID->325464182]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87833, 1904, 244, 5, 31, "ExampleSection",ExpressionUUID->"c4358828-14b1-4658-99c7-b5867929dee6",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[88102, 1913, 332, 6, 22, "ExampleSubsection",ExpressionUUID->"053b05a6-b845-434f-811e-77ba01820411",
 CellID->1757724783],
Cell[88437, 1921, 174, 3, 25, "Input",ExpressionUUID->"e21b123b-af95-4d31-9dab-32fec6b6677b",
 CellID->405814373],
Cell[88614, 1926, 311, 5, 20, "ExampleText",ExpressionUUID->"60398388-f0c6-4bbe-b2c2-4d9ad9652408",
 CellID->108671522],
Cell[CellGroupData[{
Cell[88950, 1935, 634, 12, 80, "Input",ExpressionUUID->"3d17f409-79d6-4a5a-a68c-836e1460518f",
 CellID->289398237],
Cell[89587, 1949, 33909, 671, 168, "Output",ExpressionUUID->"23f86fac-f5db-48bf-bdd3-bb709f09653f",
 CellID->562290150]
}, Open  ]],
Cell[123511, 2623, 385, 6, 46, "ExampleText",ExpressionUUID->"ffe17a78-c2c2-4679-b804-75d209b7c0ef",
 CellID->347175432],
Cell[CellGroupData[{
Cell[123921, 2633, 378, 8, 25, "Input",ExpressionUUID->"3ffeb617-141c-46f2-bcf3-43996f3c19b8",
 CellID->329914097],
Cell[124302, 2643, 330, 6, 24, "Output",ExpressionUUID->"2bd41da2-ddb6-4a3f-aa7f-87162f09e3bf",
 CellID->290790918]
}, Open  ]],
Cell[124647, 2652, 269, 5, 20, "ExampleText",ExpressionUUID->"5e127486-6631-4b5c-b63d-69f0142c340a",
 CellID->30634469],
Cell[CellGroupData[{
Cell[124941, 2661, 421, 8, 44, "Input",ExpressionUUID->"71809268-d840-4d64-8fc5-ffcd07e8d3a1",
 CellID->162791683],
Cell[125365, 2671, 254, 5, 24, "Output",ExpressionUUID->"5342dce2-b1fa-4e2c-9622-2146bcb32e88",
 CellID->46922937]
}, Open  ]],
Cell[125634, 2679, 226, 3, 20, "ExampleText",ExpressionUUID->"f84410e7-cf88-4400-967a-5e2a8f999b4c",
 CellID->17930543],
Cell[CellGroupData[{
Cell[125885, 2686, 490, 10, 44, "Input",ExpressionUUID->"bd8a64d4-c066-4a77-a3c0-007cc2c61144",
 CellID->154024933],
Cell[126378, 2698, 280, 6, 24, "Output",ExpressionUUID->"0296c02c-a892-4f47-8dc0-2db749de00ab",
 CellID->595852045]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126707, 2710, 331, 6, 22, "ExampleSubsection",ExpressionUUID->"4b062e07-adc8-442c-8cc7-e0a23d7e03da",
 CellID->1295379749],
Cell[127041, 2718, 174, 3, 25, "Input",ExpressionUUID->"66430e8f-51d6-4e87-a340-1ac5f25a82a6",
 CellID->201519839],
Cell[127218, 2723, 311, 5, 20, "ExampleText",ExpressionUUID->"0f7f62ba-2591-40e9-b58b-b3b3a72f5a09",
 CellID->453615333],
Cell[CellGroupData[{
Cell[127554, 2732, 633, 12, 80, "Input",ExpressionUUID->"470f27ea-480e-4321-bce6-d23b0181725e",
 CellID->73940315],
Cell[128190, 2746, 33874, 671, 168, "Output",ExpressionUUID->"bedcfaf1-bc51-49b7-802a-41e51e8aa61b",
 CellID->404284182]
}, Open  ]],
Cell[162079, 3420, 495, 8, 46, "ExampleText",ExpressionUUID->"a8d3045b-400a-43e8-8114-00dab44db1a5",
 CellID->328254856],
Cell[CellGroupData[{
Cell[162599, 3432, 426, 8, 25, "Input",ExpressionUUID->"509c9b49-fc04-407b-bfcb-b11948c08540",
 CellID->415776725],
Cell[163028, 3442, 382, 8, 24, "Output",ExpressionUUID->"ef4dd9ec-93fa-4d79-b480-ec4d9d190209",
 CellID->32608169]
}, Open  ]],
Cell[163425, 3453, 320, 6, 20, "ExampleText",ExpressionUUID->"50c16e01-07be-453a-b110-6f4d6ea269e9",
 CellID->156540000],
Cell[CellGroupData[{
Cell[163770, 3463, 473, 9, 44, "Input",ExpressionUUID->"667f39c5-985a-4f73-8224-0e4451b63378",
 CellID->814919511],
Cell[164246, 3474, 309, 7, 24, "Output",ExpressionUUID->"5b3df7f4-71f4-48d9-9b99-955d5c9a417d",
 CellID->20835206]
}, Open  ]],
Cell[164570, 3484, 422, 7, 33, "ExampleText",ExpressionUUID->"ce6dd233-5577-4ea4-8183-0c5e76ff5eb1",
 CellID->375301362],
Cell[CellGroupData[{
Cell[165017, 3495, 491, 10, 44, "Input",ExpressionUUID->"b9616fc8-3fb7-4135-a98a-72b19f53b629",
 CellID->47133936],
Cell[165511, 3507, 307, 7, 24, "Output",ExpressionUUID->"4391dc7e-b0de-43f0-a69e-bbd98ff4e535",
 CellID->365622721]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[165857, 3519, 248, 5, 31, "ExampleSection",ExpressionUUID->"fb13abcf-09aa-42a6-895e-0b587544b87c",
 CellID->258228157],
Cell[166108, 3526, 259, 5, 19, "ExampleSection",ExpressionUUID->"dc593277-af4e-4ca0-973a-03b2f243c96c",
 CellID->2123667759],
Cell[166370, 3533, 252, 5, 19, "ExampleSection",ExpressionUUID->"bbd12655-a402-42ec-942a-0b8a256b53e0",
 CellID->1305812373],
Cell[166625, 3540, 257, 5, 19, "ExampleSection",ExpressionUUID->"2919d592-784e-4603-9c70-617ea738e0c2",
 CellID->1653164318],
Cell[166885, 3547, 249, 5, 19, "ExampleSection",ExpressionUUID->"077cee6a-f751-415c-89e9-90a9f701f073",
 CellID->589267740]
}, Open  ]]
}
]
*)


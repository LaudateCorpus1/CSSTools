(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     79126,       1745]
NotebookOptionsPosition[     72250,       1601]
NotebookOutlinePosition[     74580,       1660]
CellTagsIndexPosition[     74494,       1655]
WindowTitle->CSSInheritance
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["C S S TOOLS SYMBOL", "PacletNameCell",ExpressionUUID->
     "58db6af8-8eb8-4dc9-a4be-bb4e0057bc48"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"8480344e-5d2b-49d0-9857-c3758f4dbae9"],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/tutorial/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "168a9b59-6b13-4c06-a604-93a9e280bf5a"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"03374188-8dd3-47c8-9525-7692066647a1"],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSSelector\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSSelector"], "\<\" \[EmptyVerySmallSquare] \
\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"CSSSelectorQ\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSSelectorQ"], "\<\" \[EmptyVerySmallSquare] \
\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"CSSTargets\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSTargets"], "\<\" \[EmptyVerySmallSquare] \"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"CSSTargetQ\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSTargetQ"], "\<\" \[EmptyVerySmallSquare] \"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"ExtractCSSFromXML\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/ExtractCSSFromXML"], "\<\" \
\[EmptyVerySmallSquare] \"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"CSSCascade\"\>":>
       Documentation`HelpLookup["paclet:CSSTools/ref/CSSCascade"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "03dcb1cb-850a-424f-91f5-910031a76b00"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"e30d58d5-d2b8-4aa0-8f2a-c297d6227cac"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/guide/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "6a48f841-8d40-46a7-9eac-01d70832b856"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"db36c6ac-4778-4650-86f4-0190a95c7c70"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools/ref/CSSInheritance\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CSSTools/ref/CSSInheritance"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/CSSTools/ref/\
CSSInheritance.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$8251], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "CSSTools/ref/CSSInheritance", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "2a164edd-e750-45bc-b2b2-45742c1e62ef"]
    }], "AnchorBar",ExpressionUUID->"c6336606-a545-4c29-98a0-22dc553b4bae"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"fa846fc8-e840-42bf-a53d-5c635ea04989"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["CSSInheritance", "ObjectName",ExpressionUUID->
  "aada4963-053f-4f14-be03-5492c039c739"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]],ExpressionUUID->"1e492ca2-f0a3-441f-bc1a-02eee33c3406"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "7646e91b-7e27-4e68-8991-03d3d8b900e9"]
}], "ObjectNameGrid",ExpressionUUID->"71e39f4b-5a27-461b-b7f6-6652b1387c24"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"CSSInheritance", "[", 
       RowBox[{
        StyleBox["target", "TI"], ",", 
        StyleBox["type", "TI"], ",", 
        StyleBox["CSSData", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "d2d02caa-5635-4db7-8590-134541f9726f"],
     " \[LineSeparator]calculates the properties of the element at ",
     StyleBox["target",
      FontSlant->"Italic"],
     " including any inherited CSS properties."
    }],ExpressionUUID->"a462271c-ee32-4bf7-bab2-00c2c1c301e3"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}},
 CellID->982511436,ExpressionUUID->"f6a997b2-2caa-448b-a7f2-a8e22d9996ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]],ExpressionUUID->"ead061d9-936f-48c6-ba04-56def82a054c"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"abd8474a-1b35-49f6-a1de-4c1ff950a77e"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"396eb56a-e7c7-4ee7-9853-d66cd145178f"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->347234983,ExpressionUUID->"3a78ba52-2433-49e0-a437-e20f87766a39"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"d449ebb4-be07-499b-8a62-6c2cc24e5d76"],

Cell["\<\
This is also known as getting the calculated properties of a specific XML \
element.\
\>", "Notes",
 CellID->8321735,ExpressionUUID->"e201c564-9da0-4d96-a7ce-9452937878d0"],

Cell[TextData[{
 "Certain CSS properties are inheritable from parent element to child \
element. Some inheritance is automatic e.g. color and font proprieties. Other \
inheritance can be forced with the ",
 StyleBox["inherit", "InlineCode"],
 " keyword. Even if a selector targets an element with a set of style rules, \
the element could also be styled due to inheritance of styles from its \
ancestors."
}], "Notes",
 CellID->1067943069,ExpressionUUID->"330f87e6-18e3-46c7-bd58-56f3115ad629"],

Cell[TextData[{
 "Wolfram Desktop also has inheritance of option values. Most options are \
inheritable and inheritance can be forced with the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Inherit"]], "paclet:CSSTools/ref/Inherit"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "1696c67a-7e72-47b5-b7f6-57bf33f0ad90"],
 " option value."
}], "Notes",
 CellID->71056514,ExpressionUUID->"0e0e1e18-db88-4d8d-8802-6c614ad2c083"],

Cell["\<\
Inheritance is not a property of the CSS stylesheet. Inheritance is resolved \
when CSS acts on an XML document.\
\>", "Notes",
 CellID->326496822,ExpressionUUID->"5ce3c761-e740-4f90-b747-66f666580373"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"a1229b43-a5fc-45e2-a9dc-50700e6bd2f0"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"bc597f9d-f3d1-4fe8-940a-7812cc511065"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "18de17c8-7014-44ec-bea9-9375695fc648"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->51690026,ExpressionUUID->"5c19d718-b109-4fd6-82df-d18431311a1d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "d1948747-d79c-481a-bcbb-175fda0d8b88"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->493345475,ExpressionUUID->"bc7f5005-bbb5-4eda-8e1d-c46fcbd264b8"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->12271288,ExpressionUUID->"28829a2b-9a63-424f-a833-65695f075faf"],

Cell["Load an XML file with embedded CSS rules:", "ExampleText",
 CellID->14111362,ExpressionUUID->"73187e9c-c5ca-437f-847e-ae34a6e7213f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XMLObject\>\""}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->357691610,ExpressionUUID->"5b90204f-3f00-4180-aa18-7a638f8cbe27"],

Cell["Extract the CSS references:", "ExampleText",
 CellID->72447410,ExpressionUUID->"360b4a77-bccc-4153-9083-08292c6de943"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{"ExtractCSSFromXML", "[", 
    RowBox[{"doc", ",", 
     RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->372680361,ExpressionUUID->"fd9da4c4-ab76-4207-ba13-3065cad0b15c"],

Cell[TextData[{
 "The third rule of the example CSS data has two style declarations, ",
 StyleBox["font-size", "InlineCode"],
 " and ",
 StyleBox["font-weight", "InlineCode"],
 ":"
}], "ExampleText",
 CellID->594693738,ExpressionUUID->"237f621d-c14c-4f3b-8445-56a3c3b40044"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ds", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Normal"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->422662971,ExpressionUUID->"2eab8c5c-28ae-49dd-9c3e-1fb13f5a3dbc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Selector\"\>", "\[Rule]", 
    InterpretationBox[
     StyleBox[
      FrameBox[
       TemplateBox[{
         StyleBox["\"#CSS \"", 
          RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
         StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
        "RowDefault"],
       Background->RGBColor[0.92, 0.98, 1],
       BaseStyle->{FontFamily -> Dynamic[
           CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
         FontColor -> GrayLevel[0.2]},
       FrameMargins->{{5, 5}, {2, 2}},
       FrameStyle->Directive[
         RGBColor[0, 0.5, 1], 
         AbsoluteThickness[1]],
       ImageMargins->2,
       RoundingRadius->4,
       StripOnInput->False],
      Editable->False,
      StripOnInput->False,
      ShowStringCharacters->False],
     CSSTools`CSSSelector[
      Association[
      "String" -> "h1 ", 
       "Sequence" -> {
        "SimpleSelectorSequence" -> {
          "Type" -> Association[
            "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
       "Specificity" -> {0, 0, 0, 1}]]]}], ",", 
   RowBox[{"\<\"Targets\"\>", "\[Rule]", 
    RowBox[{"{", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
        "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]], "}"}]}], ",", 
   RowBox[{"\<\"Block\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-size\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"32px\"\>"}], ",", 
        RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"FontSize", "\[Rule]", "32"}], "\[RightAssociation]"}]}], 
        ",", 
        RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}]}], 
       "\[RightAssociation]"}], ",", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-weight\"\>"}], ",", 
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"bold\"\>"}], ",", 
        RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"FontWeight", "\[Rule]", "Bold"}], 
          "\[RightAssociation]"}]}], ",", 
        RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}]}], 
       "\[RightAssociation]"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->43220594,ExpressionUUID->"b1bc58f2-d6fa-465b-82fc-81db8f178980"]
}, Open  ]],

Cell[TextData[{
 "This rule also has a ",
 StyleBox["body", "InlineCode"],
 " parent element that may additionally contribute to the computed styles:"
}], "ExampleText",
 CellID->431498689,ExpressionUUID->"8feb6943-b815-4130-9611-95b0cfddaa3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"ds", ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        InterpretationBox[
         StyleBox[
          TagBox[
           TooltipBox[
            FrameBox[
             TemplateBox[{
               StyleBox["\"XML \"", 
                RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                False], 
               StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
              "RowDefault"],
             Background->RGBColor[1, 0.9, 1],
             BaseStyle->{FontFamily -> Dynamic[
                 CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
               FontColor -> GrayLevel[0.2]},
             FrameMargins->{{5, 5}, {2, 2}},
             FrameStyle->Directive[
               RGBColor[0.5, 0, 1], 
               AbsoluteThickness[1]],
             ImageMargins->2,
             RoundingRadius->4,
             StripOnInput->False],
            RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
           Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
          Editable->False,
          StripOnInput->False,
          ShowStringCharacters->False],
         CSSTools`CSSTarget[
          Association[
          "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
           "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
           "id", "CaseSensitive" -> 
           Association[
            "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
             False]]]], "[", "\"\<Position\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", 
         RowBox[{"-", "3"}]}], "]"}], "]"}], ",", 
      RowBox[{"Alternatives", "@@", 
       RowBox[{"Through", "[", 
        RowBox[{"#Targets", "[", "\"\<Position\>\"", "]"}], "]"}]}]}], "]"}], 
    "&"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->474395755,ExpressionUUID->"0bf8784e-747b-439e-a826-ef9edb7bc983"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10177486160198306595981706881969027716172175505955179385488], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
         Association["ID" -> 198294540470465], "RowTarget" -> 20, 
         "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 1, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 
         3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Selector"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Selector"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Targets"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Targets"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Block", 
                    Style[
                    "Block", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{All, "Block"}, "ColumnHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Property"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Property"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Value"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Value"}, "ColumnHeader", 
                    True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Important"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Important"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Interpretation"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Interpretation"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{All, "Block", All, "Condition"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1831330010][{All, "Block", All, "Condition"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{1, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["background", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "url(\"html-background-png-7.png\") repeat darkblue", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["#dfe366", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1831330010][{1, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    1831330010, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
                 FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1831330010]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1831330010][
              Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1831330010][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1831330010; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
      DynamicBox[
       ToBoxes[
        Dataset`DatasetContent[
        1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
         TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm], 
       ImageSizeCache -> {2138., {68.92857142857143, 74.07142857142857}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10177486160198306595981706881969027716172175505955179385488,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->30530501,ExpressionUUID->"13ff79c6-6e8d-451e-beac-abd75798fd78"]
}, Open  ]],

Cell[TextData[{
 "In this case the ",
 StyleBox["color", "InlineCode"],
 " property is inheritable. Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "d667e712-7f75-407a-bdcc-81b1c2be8dcd"],
 " to include inherited styles at the target element."
}], "ExampleText",
 CellID->264811443,ExpressionUUID->"f9e75b1c-0c71-4be8-806c-0349e657a510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSInheritance", "[", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"XML \"", 
           RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[1, 0.9, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
          FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0.5, 0, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
      Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
     Editable->False,
     StripOnInput->False,
     ShowStringCharacters->False],
    CSSTools`CSSTarget[
     Association[
     "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
      "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
      "id", "CaseSensitive" -> 
      Association[
       "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
        False]]]], ",", "Cell", ",", "ds"}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->92948257,ExpressionUUID->"227a62cb-68c5-41ef-ae67-31603e37df08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[223, 255], 
           Rational[227, 255], 
           Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["227", "255"], ",", 
            FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[223, 255], 
      Rational[227, 255], 
      Rational[2, 5]],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->36084245,ExpressionUUID->"5cca2992-f400-4a50-bbc1-6b92ec69abf9"]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer",ExpressionUUID->"14005abf-e3e4-4b26-95ee-1c2dac640de4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"ecec1995-28d8-4dd5-ba1c-68a52692695b"],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704,ExpressionUUID->"582da6ae-2f12-4e93-a087-f36de51dd83e"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelector"]], "paclet:CSSTools/ref/CSSSelector"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"39588ed3-c895-48c6-94c0-0db17ffed27e"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelectorQ"]], "paclet:CSSTools/ref/CSSSelectorQ"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"47a2e2ed-e802-4f0d-bb4b-c0f3fba44f7a"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSTargets"]], "paclet:CSSTools/ref/CSSTargets"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"0b683b9c-fb30-4e5e-a69d-9f7df1e9cadb"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSTargetQ"]], "paclet:CSSTools/ref/CSSTargetQ"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"1412ed09-c6f0-4125-93dd-a63ac126417f"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ExtractCSSFromXML"]], "paclet:CSSTools/ref/ExtractCSSFromXML"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"3f68fb2a-0da0-4cee-bbbd-28851abe37c4"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"601caded-9404-4fef-8c28-92bc51cfc148"]
}], "SeeAlso",
 CellID->929782353,ExpressionUUID->"5bf4b678-f755-43be-9088-5de5fad65d09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"d6cfe01e-bbd3-4d71-864c-925659c4410d"],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057,ExpressionUUID->"f8652376-a5ab-41af-85a8-e24094ba1249"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"5d960119-6bb5-4057-ae2b-ec8cb12e15c7"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["CSSTools"]], "paclet:CSSTools/tutorial/CSSTools"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938,ExpressionUUID->"c0b26dc5-122d-411c-8a8b-9705e037d52e"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"f057ee2c-14d8-42f2-a61a-05ed92a404c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"b83423a8-2eb5-42c2-88b5-c9f824d60644"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"120e9287-f300-4cfe-94fa-9113019f61d5"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"f5ea43bf-26dc-4c7a-b30d-b6cb3f1d8bdf"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["CSSTools"]], "paclet:CSSTools/guide/CSSTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->419498361,ExpressionUUID->"9dc4705e-ae9d-4b47-8228-a6e65de01fd2"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"69cedece-8b05-4731-9b79-485f0766cedd"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{724.5, 750.},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CSSInheritance",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "CSSTools", ButtonData -> "paclet:CSSTools/guide/CSSTools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2020, 5, 29, 11, 48, 28.3239975}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "CSSTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "C S S Tools Symbol", "language" -> "en", "paclet" -> "CSSTools", 
    "status" -> "None", "summary" -> 
    "CSSInheritance[target, type, CSSData] calculates the properties of the \
element at target including any inherited CSS properties.", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "CSSInheritance", "titlemodifier" -> "", 
    "windowtitle" -> "CSSInheritance", "type" -> "Symbol", "uri" -> 
    "CSSTools/ref/CSSInheritance", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (March 18, 2020)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"90898630-27d7-416a-8ee3-5fe6da2e46d2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[10158, 258, 434, 11, 36, "PrimaryExamplesSection",ExpressionUUID->"5c19d718-b109-4fd6-82df-d18431311a1d",
   CellTags->"PrimaryExamplesSection",
   CellID->51690026]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 74296, 1648}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 5931, 133, 54, "AnchorBarGrid",ExpressionUUID->"fa846fc8-e840-42bf-a53d-5c635ea04989",
 CellID->1],
Cell[CellGroupData[{
Cell[6542, 158, 399, 9, 52, "ObjectNameGrid",ExpressionUUID->"71e39f4b-5a27-461b-b7f6-6652b1387c24"],
Cell[6944, 169, 732, 17, 109, "Usage",ExpressionUUID->"f6a997b2-2caa-448b-a7f2-a8e22d9996ae",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[7713, 191, 855, 21, 37, "NotesSection",ExpressionUUID->"3a78ba52-2433-49e0-a437-e20f87766a39",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->347234983],
Cell[8571, 214, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"d449ebb4-be07-499b-8a62-6c2cc24e5d76"],
Cell[8660, 216, 182, 4, 70, "Notes",ExpressionUUID->"e201c564-9da0-4d96-a7ce-9452937878d0",
 CellID->8321735],
Cell[8845, 222, 494, 9, 70, "Notes",ExpressionUUID->"330f87e6-18e3-46c7-bd58-56f3115ad629",
 CellID->1067943069],
Cell[9342, 233, 475, 12, 70, "Notes",ExpressionUUID->"0e0e1e18-db88-4d8d-8802-6c614ad2c083",
 CellID->71056514],
Cell[9820, 247, 212, 4, 70, "Notes",ExpressionUUID->"5ce3c761-e740-4f90-b747-66f666580373",
 CellID->326496822],
Cell[10035, 253, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"a1229b43-a5fc-45e2-a9dc-50700e6bd2f0"]
}, Closed]],
Cell[CellGroupData[{
Cell[10158, 258, 434, 11, 36, "PrimaryExamplesSection",ExpressionUUID->"5c19d718-b109-4fd6-82df-d18431311a1d",
 CellTags->"PrimaryExamplesSection",
 CellID->51690026],
Cell[CellGroupData[{
Cell[10617, 273, 308, 7, 29, "ExampleSection",ExpressionUUID->"bc7f5005-bbb5-4eda-8e1d-c46fcbd264b8",
 CellID->493345475],
Cell[10928, 282, 171, 3, 26, "Input",ExpressionUUID->"28829a2b-9a63-424f-a833-65695f075faf",
 CellID->12271288],
Cell[11102, 287, 138, 1, 39, "ExampleText",ExpressionUUID->"73187e9c-c5ca-437f-847e-ae34a6e7213f",
 CellID->14111362],
Cell[11243, 290, 732, 19, 58, "Input",ExpressionUUID->"5b90204f-3f00-4180-aa18-7a638f8cbe27",
 CellID->357691610],
Cell[11978, 311, 124, 1, 39, "ExampleText",ExpressionUUID->"360b4a77-bccc-4153-9083-08292c6de943",
 CellID->72447410],
Cell[12105, 314, 314, 8, 26, "Input",ExpressionUUID->"fd9da4c4-ab76-4207-ba13-3065cad0b15c",
 CellID->372680361],
Cell[12422, 324, 274, 7, 39, "ExampleText",ExpressionUUID->"237f621d-c14c-4f3b-8445-56a3c3b40044",
 CellID->594693738],
Cell[CellGroupData[{
Cell[12721, 335, 206, 5, 26, "Input",ExpressionUUID->"2eab8c5c-28ae-49dd-9c3e-1fb13f5a3dbc",
 CellID->422662971],
Cell[12930, 342, 3904, 98, 124, "Output",ExpressionUUID->"b1bc58f2-d6fa-465b-82fc-81db8f178980",
 CellID->43220594]
}, Open  ]],
Cell[16849, 443, 244, 5, 39, "ExampleText",ExpressionUUID->"8feb6943-b815-4130-9611-95b0cfddaa3e",
 CellID->431498689],
Cell[CellGroupData[{
Cell[17118, 452, 2033, 52, 70, "Input",ExpressionUUID->"0bf8784e-747b-439e-a826-ef9edb7bc983",
 CellID->474395755],
Cell[19154, 506, 44669, 838, 166, "Output",ExpressionUUID->"13ff79c6-6e8d-451e-beac-abd75798fd78",
 CellID->30530501]
}, Open  ]],
Cell[63838, 1347, 494, 13, 70, "ExampleText",ExpressionUUID->"f9e75b1c-0c71-4be8-806c-0349e657a510",
 CellID->264811443],
Cell[CellGroupData[{
Cell[64357, 1364, 1484, 39, 70, "Input",ExpressionUUID->"227a62cb-68c5-41ef-ae67-31603e37df08",
 CellID->92948257],
Cell[65844, 1405, 2307, 63, 70, "Output",ExpressionUUID->"5cca2992-f400-4a50-bbc1-6b92ec69abf9",
 CellID->36084245]
}, Open  ]]
}, Open  ]],
Cell[68178, 1472, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"14005abf-e3e4-4b26-95ee-1c2dac640de4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68301, 1477, 260, 7, 70, "SeeAlsoSection",ExpressionUUID->"582da6ae-2f12-4e93-a087-f36de51dd83e",
 CellID->1255426704],
Cell[68564, 1486, 2255, 64, 70, "SeeAlso",ExpressionUUID->"5bf4b678-f755-43be-9088-5de5fad65d09",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[70856, 1555, 262, 7, 70, "TutorialsSection",ExpressionUUID->"f8652376-a5ab-41af-85a8-e24094ba1249",
 CellID->250839057],
Cell[71121, 1564, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"5d960119-6bb5-4057-ae2b-ec8cb12e15c7"],
Cell[71210, 1566, 231, 6, 70, "Tutorials",ExpressionUUID->"c0b26dc5-122d-411c-8a8b-9705e037d52e",
 CellID->341631938],
Cell[71444, 1574, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"f057ee2c-14d8-42f2-a61a-05ed92a404c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71567, 1579, 266, 7, 70, "MoreAboutSection",ExpressionUUID->"120e9287-f300-4cfe-94fa-9113019f61d5",
 CellID->38303248],
Cell[71836, 1588, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"f5ea43bf-26dc-4c7a-b30d-b6cb3f1d8bdf"],
Cell[71925, 1590, 228, 6, 70, "MoreAbout",ExpressionUUID->"9dc4705e-ae9d-4b47-8228-a6e65de01fd2",
 CellID->419498361]
}, Open  ]],
Cell[72168, 1599, 78, 0, 70, "FooterCell",ExpressionUUID->"69cedece-8b05-4731-9b79-485f0766cedd"]
}
]
*)

(* End of internal cache information *)


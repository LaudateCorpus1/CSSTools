(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    387576,       7984]
NotebookOptionsPosition[    373873,       7695]
NotebookOutlinePosition[    376120,       7753]
CellTagsIndexPosition[    376033,       7748]
WindowTitle->ExtractCSSFromXML
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["C S S TOOLS SYMBOL", "PacletNameCell",ExpressionUUID->
     "bbdf1b66-2f3f-4298-ac9d-066ee20cfc69"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"f34481fd-285c-43e0-a640-03b4051a0d76"],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/tutorial/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "72e17608-1673-42f5-8678-b4a79ea0ce19"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"95dd0942-afa7-4043-b9fc-90a932a3f510"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/guide/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "372e107e-554c-480b-9e89-091c1cbffb7d"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"deaabaf2-4c13-4526-bd51-ed981a574cad"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools/ref/ExtractCSSFromXML\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CSSTools/ref/ExtractCSSFromXML"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/CSSTools/ref/\
ExtractCSSFromXML.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$11655], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "CSSTools/ref/ExtractCSSFromXML", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "c7571abd-7dca-42c9-8035-6c173717c081"]
    }], "AnchorBar",ExpressionUUID->"a29cee8a-c077-4dd2-9778-923d7c1fc3df"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"26bb6f7f-8e5d-4d4b-8e51-dca3ff5457fb"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["ExtractCSSFromXML", "ObjectName",ExpressionUUID->
  "210048b9-745d-4464-b3b4-518993cba152"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]],ExpressionUUID->"6d48cdd7-1656-4aae-814f-347448f1ac34"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "f8dd9cf5-9e78-4f93-8530-426cd145cb3c"]
}], "ObjectNameGrid",ExpressionUUID->"12771211-f003-435d-8501-4f905e057194"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"ExtractCSSFromXML", "[", 
       StyleBox["XMLObject", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "8f51dbdc-9a7c-4394-a808-eb2365c1808f"],
     " \[LineSeparator]ExtractCSSFromXML imports the CSS declarations within ",
     Cell[BoxData[
      RowBox[{
       StyleBox["XMLObject", "TI"], " "}]], "InlineFormula",ExpressionUUID->
      "4598ceaf-726d-4bb8-8d93-529cbcd292ec"],
     "."
    }],ExpressionUUID->"54ebbb6e-70e2-42cc-b12a-6c7bdf337d69"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436,ExpressionUUID->"7d4f97a7-c82f-4676-955f-d9dac642849b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]],ExpressionUUID->"a5138741-88d5-4d61-8ffc-c2e2e65c673c"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"62fd4fd1-60e5-457c-aadd-ec8677562f17"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"e6376bab-91a7-4805-9ae4-a1528d6977fa"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->168613873,ExpressionUUID->"c9270ba1-ab21-4a56-98ef-5cbc81016810"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"c4183893-b4fa-428d-a37e-f3869b53f6ff"],

Cell["\<\
CSS rules can be found in external stylesheets, internal stylesheets, or \
inline within a document. Often external CSS file locations are given \
relative to the current XML file.\
\>", "Notes",
 CellID->1067943069,ExpressionUUID->"2a50e6a1-43be-49e7-90d1-509d3ff7c1b6"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "5a8303ec-7f59-482a-8e14-e87fc53d9d22"], "\"\<RootDirectory\>\"", 
    "Automatic", Cell[
    "directory from where relative locations are resolved", "TableText",
     ExpressionUUID->"7456c60d-0fe1-4a6a-aac8-ff96726e057a"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True}}}},
 CellID->120199297,ExpressionUUID->"b8877d56-49a0-4548-be3a-b13308027c64"],

Cell["\<\
\"RootDirectory\" can be used to set the root directory from where to find \
external stylesheets and other resources embedded in the XML document.\
\>", "Notes",
 CellID->333181165,ExpressionUUID->"8fa0225b-32ff-4dc5-922c-66ceb7e4e7bc"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"54f4baeb-856f-4788-acc0-28f107da4e1f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"1be23b1e-8c23-4e03-935a-7d50e701f4fa"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount",ExpressionUUID->
  "89532f02-a2cf-44a6-a71a-c90f514e8584"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->58904963,ExpressionUUID->"93d69e82-801f-4df1-9479-80ee03828e5b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "53f2503d-a29c-4036-8281-d93c86a7e009"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->143843691,ExpressionUUID->"a29d4d52-b449-4691-b24a-6554205ea6b6"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->140347243,ExpressionUUID->"36cae351-bc3b-482f-b88e-93b6c62ec969"],

Cell[TextData[{
 "Inline styles are interpreted as coming from a selector with None as the \
selector's string expression. Inline styles have the highest specificity of \
{1,0,0,0}",
 StyleBox[".", "ExampleText"]
}], "ExampleText",
 CellID->78378545,ExpressionUUID->"218c8928-3e3c-4501-a9f1-04925fa1d692"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<<tag style=\\\"font-size:2em\\\">Tag content.</tag>\>\"", ",", 
    "\"\<XML\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->47295443,ExpressionUUID->"1b67cecd-68df-4cea-ab40-7e8d66618933"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"tag\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"style\"\>", "\[Rule]", "\<\"font-size:2em\"\>"}], "}"}], 
     ",", 
     RowBox[{"{", "\<\"Tag content.\"\>", "}"}]}], "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 ImageSize->{426, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->337963110,ExpressionUUID->"7ab1b505-3eab-4154-82a5-062bbee826af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->77675145,ExpressionUUID->"9c41c45f-c18d-451f-927e-88f9c3b9c6b5"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           1, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MatrixShape[1, 1], 1, {
                All, "Targets", All}], "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[756148246], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[756148246]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1268164773][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2em", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"2", " ", "Inherited"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1268164773][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1268164773]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1268164773][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {602., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{606, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->321768387,ExpressionUUID->"ca8b123c-cb7c-476d-aa4a-27670a7cfcba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "488d476c-360e-462d-8c9b-e08f19a98d6a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->116477601,ExpressionUUID->"d25cdc19-c4dc-48f7-9595-5b69ab94dddb"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->214239584,ExpressionUUID->"eaa65f18-fdf9-4ff6-82b9-069c8038c6fc"],

Cell["Embedded stylesheets appear within the \"style\" tag.", "ExampleText",
 CellID->302647184,ExpressionUUID->"f96c17f8-5ccb-4060-a187-7d991a46a5b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<<body><style type=\\\"text/css\\\">tag {font-size:2em; \
color:blue}</style><tag>Tag content.</tag><label><tag>Another \
tag.</tag></label></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->823104529,ExpressionUUID->"6b8e1d1b-4786-4a77-9150-e7c90597c49c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"body\"\>", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"style\"\>", ",", 
         RowBox[{"{", 
          RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"text/css\"\>"}], "}"}], ",", 
         RowBox[{"{", "\<\"tag {font-size:2em; color:blue}\"\>", "}"}]}], 
        "]"}], ",", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"tag\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "\<\"Tag content.\"\>", "}"}]}], "]"}], ",", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"label\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\<\"tag\"\>", ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "\<\"Another tag.\"\>", "}"}]}], "]"}], "}"}]}], 
        "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 ImageSize->{520, 63},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->266877351,ExpressionUUID->"b55b9d64-e1aa-4992-a308-c0453d14a280"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->55848347,ExpressionUUID->"19049680-a08c-42bc-8e60-c3b5760bea5d"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], 
            TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 2]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           1, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape], 2, {All, "Targets"}], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1889367508], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 2], 
            TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 2]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1889367508]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    1, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2em", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"2", " ", "Inherited"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 3, 3, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 3, 3, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][{
                    1, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["blue", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 804323266]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[804323266][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {627., {56., 62.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{631, 120},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->419647296,ExpressionUUID->"4155730f-609a-481e-8497-a8904b6ba596"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "76a34a8f-7cc9-4566-a0fa-fd1802a87e06"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->443460876,ExpressionUUID->"3c7703b6-2900-4ab2-90b5-0f072e87c6cf"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->137415897,ExpressionUUID->"5314883b-6515-49dd-916c-47643f8ee14a"],

Cell[TextData[{
 "For external stylesheets, make sure any files are visible to ",
 ButtonBox["Import",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Import"],
 " by having them somewhere on ",
 ButtonBox["$Path",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/$Path"],
 "."
}], "ExampleText",
 CellID->100040506,ExpressionUUID->"a376d814-81bc-4108-a8a3-ebb8ef47d882"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->504538696,ExpressionUUID->"65deb636-505c-4104-84a4-b2991002451d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->10768370,ExpressionUUID->"f2bebd0b-1c5c-4e83-a1b6-dd065e7e8221"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssData", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$Path", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{"$Path", ",", "cssExamplesDirectory"}], "]"}]}], "}"}], ",", 
     RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cssData", "[", 
  RowBox[{"[", 
   RowBox[{";;", "3"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->61891354,ExpressionUUID->"648ef6d6-e3e9-41b1-9937-b982d6c7328e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
             TypeSystem`AnyLength], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           1, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape], 3, {All, "Targets"}], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[425956432], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
             TypeSystem`AnyLength], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[425956432]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"li\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "li ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "li"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 10, 3, 1}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 10, 3, 1}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{1, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["green", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 10, 3, 2}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 10, 3, 2}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{1, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 10, 3, 3}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 10, 3, 3}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{1, 
                    Key["Targets"], 3}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 3]], "Mouse"]], SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{2, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["background", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "url(\"html-background-png-7.png\") repeat darkblue", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{$CellContext`BackgroundAppearanceOptions -> 
                    Missing[
                    "Not supported."], $CellContext`BackgroundAppearance -> 
                    None, Background -> RGBColor[0, 0, 
                    Rational[139, 255]]}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{$CellContext`BackgroundAppearanceOptions -> 
                    Missing[
                    "Not supported."], $CellContext`BackgroundAppearance -> 
                    None, Background -> RGBColor[0, 0, 
                    Rational[139, 255]]}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["#dfe366", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.5934640522875817, 
                    0.26666666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["223", "255"], ",", 
                    FractionBox["227", "255"], ",", 
                    FractionBox["2", "5"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1627678878][{3, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["32px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "24.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-weight", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["bold", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontWeight", "\[Rule]", "Bold"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1627678878][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1627678878]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1627678878][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1632., {117., 123.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{1636, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->304034299,ExpressionUUID->"04c88c68-c1d7-40db-95f7-9bd71fa7551d"]
}, Open  ]],

Cell["Alternatively you can set the \"RootDirectory\" option.", "ExampleText",
 CellID->154049162,ExpressionUUID->"6d80ccdb-d0cc-4585-ad93-4c8148e606cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtractCSSFromXML", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
   "]"}], "[", 
  RowBox[{"[", 
   RowBox[{";;", "3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->409357899,ExpressionUUID->"3a0a0e5e-85bc-41ec-b689-63aba9732277"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
             TypeSystem`AnyLength], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           1, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape], 3, {All, "Targets"}], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> 
                   TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 2, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1952565924], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
             TypeSystem`AnyLength], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1952565924]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> G\
rayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"li\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "li ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "li"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 10, 3, 1}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 10, 3, 1}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    1, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["green", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[128, 255], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.33464052287581697`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["128", "255"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[128, 255], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[128, 255], 0], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 10, 3, 2}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 10, 3, 2}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    1, 
                    Key["Targets"], 2}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 2]], "Mouse"]], SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
              SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{2, 3, 2, 3, 10, 3, 3}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{2, 3, 2, 3, 10, 3, 3}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    1, 
                    Key["Targets"], 3}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 3]], "Mouse"]], SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    2, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["background", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                "url(\"html-background-png-7.png\") repeat darkblue", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{$CellContext`BackgroundAppearanceOptions -> 
                    Missing[
                    "Not supported."], $CellContext`BackgroundAppearance -> 
                    None, Background -> RGBColor[0, 0, 
                    Rational[139, 255]]}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{$CellContext`BackgroundAppearanceOptions -> 
                    Missing[
                    "Not supported."], $CellContext`BackgroundAppearance -> 
                    None, Background -> RGBColor[0, 0, 
                    Rational[139, 255]]}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["color", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["#dfe366", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontColor", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.5934640522875817, 
                    0.26666666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["223", "255"], ",", 
                    FractionBox["227", "255"], ",", 
                    FractionBox["2", "5"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]], Editable -> False, Selectable -> 
                    False]}], FontFamily -> "Source Code Pro", FontSize -> 13,
                    ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3, 2, 3, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3, 2, 3, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][{
                    3, 
                    Key["Targets"], 1}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Targets"], 1]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["32px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "24.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-weight", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["bold", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontWeight", "\[Rule]", "Bold"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 2, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 625470091]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[625470091][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1632., {117., 123.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{1636, 242},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->96050092,ExpressionUUID->"a990666a-0a42-440f-885f-df4091339126"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "56e1a655-b5d3-4d80-8583-00b84b423067"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1293636265,ExpressionUUID->"f3eb9265-3ae3-4326-89b9-b61d1f89bd2d"],

Cell[CellGroupData[{

Cell[TextData[{
 "External stylesheets",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "3170e8ce-9307-4b39-b130-9f31a8b358ba"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->473870500,ExpressionUUID->"675cedbc-8439-465e-935d-5e7ae0b1ae53"],

Cell["\<\
External stylesheets are usually present in the XML document's \"link\" tag.\
\>", "ExampleText",
 CellID->404756270,ExpressionUUID->"24d39302-8d2d-4f9b-aef1-4b3d6cf1b875"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->961184916,ExpressionUUID->"9c9ece7c-172e-4bad-82f5-55b4eec4a092"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->530281556,ExpressionUUID->"5bd1fbdf-53ee-41bc-a928-93115eed49ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"body\"\>", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"link\"\>", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"rel\"\>", "\[Rule]", "\<\"stylesheet\"\>"}], ",", 
           RowBox[{"\<\"href\"\>", "\[Rule]", "\<\"simple.css\"\>"}]}], "}"}],
          ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"tag\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "\<\"data\"\>", "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 ImageSize->{563, 47},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->457941692,ExpressionUUID->"1106a2ce-5e03-4ab2-a794-f40ea87919dc"]
}, Open  ]],

Cell["\<\
Importing the file directly ignores information, such as which tags the CSS \
selectors are targeting.\
\>", "ExampleText",
 CellID->228266911,ExpressionUUID->"2178f0b1-448e-41f3-a3cf-d27ce9533b56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->523152714,ExpressionUUID->"c0133962-cc1e-4146-a005-9891933aa4a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<simple.css\>\""}], "}"}], 
    "]"}], ",", "\"\<CSS\>\""}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->73777717,ExpressionUUID->"5ccfb894-bda3-4173-91a7-d45a6f07bf39"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[575606672], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
           TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[575606672]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "18.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 496912392]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[496912392][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {482., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{486, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->72813835,ExpressionUUID->"f6d244fa-fa79-4a7c-93ab-e03371a4f4be"]
}, Open  ]],

Cell["\<\
Setting the \"RootDirectory\" option value with ExtractCSSFromXML includes \
the selector target information.\
\>", "ExampleText",
 CellID->11429555,ExpressionUUID->"3afe3e10-7ad7-4e7a-b033-36cac90105b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->13922790,ExpressionUUID->"b93346dc-e079-492e-a6f5-458a478743da"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 3], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           3, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MatrixShape[1, 3], 1, {
                All, "Targets", All}], "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1390913479], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 3], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1390913479]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromBoth, SpanFromBoth, 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1343795640][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 3]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "18.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1343795640][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1343795640]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1343795640][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {611., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{615, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->913980765,ExpressionUUID->"39154503-8e5c-419e-baee-b6ecfe406055"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Internal stylesheets",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "69114279-0afb-4daa-9f62-48b3127e065b"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->147720695,ExpressionUUID->"aea86ad0-b390-4ea3-bb04-72b299b237d9"],

Cell["\<\
Internal stylesheets are usually present in the XML document's \"style\" \
tags. They can be found anywhere, but generally are near the start of the \
document. In HTML it is recommended that they appear within the \"head\" tag.\
\>", "ExampleText",
 CellID->88919951,ExpressionUUID->"c3ae7c10-b640-4218-a2e7-61aa758b119c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->52436315,ExpressionUUID->"512c21a6-810a-4f0c-b074-0b2dfb21f934"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<<html><head><style type=\\\"text/css\\\"> tag {font-size:20px} \
</style></head><body><tag>data</tag></body></html>\>\"", ",", "\"\<XML\>\""}],
    "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->74017799,ExpressionUUID->"ef78b13b-aa6d-4971-bc69-ca7d9acdf74f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"html\"\>", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"head\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\<\"style\"\>", ",", 
            RowBox[{"{", 
             RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"text/css\"\>"}], "}"}], 
            ",", 
            RowBox[{"{", "\<\"tag {font-size:20px}\"\>", "}"}]}], "]"}], 
          "}"}]}], "]"}], ",", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"body\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\<\"tag\"\>", ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "\<\"data\"\>", "}"}]}], "]"}], "}"}]}], "]"}]}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 ImageSize->{472, 47},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->75313624,ExpressionUUID->"d5a51ee7-29a5-45c1-8e62-db80500517c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->235986887,ExpressionUUID->"73a18601-1719-46df-8cbb-a863b8b81a5e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 5], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           5, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MatrixShape[1, 5], 1, {
                All, "Targets", All}], "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1421017982], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 5], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1421017982]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromBoth, SpanFromBoth, 
               SpanFromBoth, SpanFromBoth, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1250217971][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 3]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 4]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 5]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1250217971][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1250217971]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1250217971][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {697., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{701, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->478157919,ExpressionUUID->"b37a852b-afc7-403b-89fc-39f81b39a0f7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Inline stylesheets",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "2406f70d-6db5-4ff7-a3a6-beed6b20d455"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->407283549,ExpressionUUID->"72fbd0f5-6b99-478e-bdf0-ab4a2990ab5d"],

Cell["\<\
Inline stylesheets are declared in the \"style\" attribute of a document's \
tag.\
\>", "ExampleText",
 CellID->427755359,ExpressionUUID->"7a19fa44-a75d-4a66-87a1-8ee59861159c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->250909227,ExpressionUUID->"6715da3b-5036-4b43-8af0-c81d346e82f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<<html><head></head><body><tag \
style=\\\"font-size:12px\\\">data</tag></body></html>\>\"", ",", 
    "\"\<XML\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->16072950,ExpressionUUID->"4273a1bb-12cc-4793-b717-b1ec391de661"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"html\"\>", ",", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"head\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}], ",", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\<\"body\"\>", ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\<\"tag\"\>", ",", 
            RowBox[{"{", 
             RowBox[{"\<\"style\"\>", "\[Rule]", "\<\"font-size:12px\"\>"}], 
             "}"}], ",", 
            RowBox[{"{", "\<\"data\"\>", "}"}]}], "]"}], "}"}]}], "]"}]}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 ImageSize->{568, 31},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->222079400,ExpressionUUID->"a119e00c-11a1-4329-b36e-c4d32bf627de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->847413682,ExpressionUUID->"79254419-084b-4270-8558-b0a7e7fe14cf"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 5], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           5, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MatrixShape[1, 5], 1, {
                All, "Targets", All}], "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[730690969], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 5], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[730690969]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromBoth, SpanFromBoth, 
               SpanFromBoth, SpanFromBoth, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 3]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 4]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 5]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["12px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "9.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 517533949]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[517533949][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {696., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{700, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->467763855,ExpressionUUID->"122c400d-3fb3-44dd-bb93-796de0ed07f8"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "612ca0db-2c91-4dee-a46e-40845e5064fd"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2061341341,ExpressionUUID->"a9e27d1a-8219-4573-ac59-86ab1c63566b"],

Cell[CellGroupData[{

Cell[TextData[{
 "\"RootDirectory\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "59bb6cec-d47f-48f6-8f15-056f38938d54"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1757724783,ExpressionUUID->"fef5a0e5-88b2-447a-a883-1f663fe4a942"],

Cell["\<\
Use \"RootDirectory\" to set the root path from which files are expected to \
be found.\
\>", "ExampleText",
 CellID->480789144,ExpressionUUID->"a972a9e6-3f59-4e20-9afd-62b5088400cc"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->455582830,ExpressionUUID->"1e5c4236-df99-46a7-890c-26fada674a0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->139585394,ExpressionUUID->"dee2cc50-5e52-4eb5-a1c0-75921f5f9770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->76168790,ExpressionUUID->"621defdc-a396-4b38-a2cf-bf27aa4f40b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->884765519,ExpressionUUID->"543e85fb-bc54-4387-ac75-b1d1cbba1a15"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 3], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           3, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MatrixShape[1, 3], 1, {
                All, "Targets", All}], "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[361307366], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 3], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[361307366]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromBoth, SpanFromBoth, 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 3]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "18.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 380891567]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[380891567][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {611., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{615, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->522972128,ExpressionUUID->"00405411-6f70-4d23-b653-9f1871f03364"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Possible Issues",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "fd795fe7-2a04-4eb0-94db-e7642dfb9a99"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1305812373,ExpressionUUID->"ac2883c1-c1ca-4343-ab41-507da49a6400"],

Cell["\<\
Many documents use relative locations to specify where resources, such as \
stylesheets, should be found. If external stylesheets cannot be found, then \
no rules are imported from those locations.\
\>", "ExampleText",
 CellID->3458080,ExpressionUUID->"004fddce-31e8-4b5e-8a50-45f17e9f284b"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->247745711,ExpressionUUID->"5a8d5f91-130c-44c8-ac2c-ce24db00225b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->80511540,ExpressionUUID->"8fbf891d-dbbc-4637-935e-b56afd422e89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->399569939,ExpressionUUID->"9962f4a7-e71b-4c3b-9fde-83b308f0e380"],

Cell[BoxData[
 TemplateBox[{
  "Import","nffil",
   "\"File not found during \\!\\(\\*RowBox[{\\\"\\\\\\\"CSS extraction\\\\\\\
\"\\\"}]\\).\"",2,90,17,15794555418927699777,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[3]:=",
 CellID->168860252,ExpressionUUID->"b72b994b-e5e1-40a7-8097-2490e929a730"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 0, "Length" -> 0, "InitialType" -> 
        TypeSystem`Vector[TypeSystem`UnknownType, 0], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`UnknownShape], 0, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1207210741], "Type" -> 
        TypeSystem`Vector[TypeSystem`UnknownType, 0], "HandleQ" -> True, 
        "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1207210741]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    211145449][{}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[211145449][
                 Identity], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 211145449][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 211145449]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[211145449][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[211145449][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[
         TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {21., {17., 23.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{25, 42},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->215777380,ExpressionUUID->"10896e28-1081-43b4-9f87-03b6ac258b24"]
}, Open  ]],

Cell["\<\
Use the \"RootDirectory\" option to provide a directory from which to locate \
the resources relative to this root.\
\>", "ExampleText",
 CellID->128939588,ExpressionUUID->"be8836e0-84ee-4fa9-b7fd-9fa4560b5867"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->548480066,ExpressionUUID->"f6d7a080-b272-474f-8b7f-f7737a3f3550"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->774434792,ExpressionUUID->"9bc95a30-a753-4100-82ba-cb63658c7b0a"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 1, "Length" -> 1, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 3], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
           3, {All, "Condition"} -> 1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> TypeSystem`PackageScope`UnknownShape, "Targets" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`MatrixShape[1, 3], 1, {
                All, "Targets", All}], "Condition" -> 
              TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 1, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[2115663800], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{"Selector", "Targets", "Condition", "Block"}, {
           TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 3], 1], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 1], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2115663800]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Targets\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Targets\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Targets"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Targets"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, SpanFromBoth, SpanFromBoth, 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1026288805][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
                    FontWeight -> Bold, FontColor -> GrayLevel[0.2]}, 
                    StripOnInput -> False], Editable -> False, 
                    ShowStringCharacters -> False, StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 1]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Targets"], 1, 3]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{86.4, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["24px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "18.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            Module[{
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026288805][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1026288805]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1026288805][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {611., {45., 51.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{615, 98},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->48856256,ExpressionUUID->"4f1fe194-189c-4304-a31f-a9f28e536dd8"]
}, Open  ]]
}, Closed]],

Cell["", "SectionFooterSpacer",ExpressionUUID->"09cf5c24-4e23-45e6-87ea-9b500168da67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"217cccaa-b123-4cdf-8b82-612a72b6447d"],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057,ExpressionUUID->"3ab31fe9-e378-42a5-b00e-84cf81be8144"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"a5f7a66f-5fda-4611-a314-2fc857cccab1"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["CSSTools"]],"paclet:CSSTools/tutorial/CSSTools"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938,ExpressionUUID->"dc8b87ee-c7a1-4dc8-8206-03d0ca38f4a7"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"b959a160-fbd1-4ce2-8369-edb484c6da44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"5279642e-1a7b-4074-b6a2-fa365c3e3081"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"b309c0bc-c504-4e7d-800e-1c1891bb1f2e"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"86d8dcfb-b106-42c9-98db-ff2983b6fede"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["CSSTools"]],"paclet:CSSTools/guide/CSSTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->579814204,ExpressionUUID->"60f69ab0-ca09-4ba5-9287-c62679713358"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"dee639d2-d748-47d6-a6ce-70695ba7177a"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ExtractCSSFromXML",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "CSSTools", ButtonData -> "paclet:CSSTools/guide/CSSTools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2019, 8, 12, 10, 25, 16.7449486}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "CSSTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "C S S Tools Symbol", "language" -> "en", "paclet" -> "CSSTools", 
    "status" -> "None", "summary" -> 
    "ExtractCSSFromXML[XMLObject] ExtractCSSFromXML imports the CSS \
declarations within XMLObject .", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "ExtractCSSFromXML", "titlemodifier" -> "", "windowtitle" -> 
    "ExtractCSSFromXML", "type" -> "Symbol", "uri" -> 
    "CSSTools/ref/ExtractCSSFromXML", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[8114, 209, 434, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"93d69e82-801f-4df1-9479-80ee03828e5b",
   CellTags->"PrimaryExamplesSection",
   CellID->58904963]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 375836, 7741}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[589, 21, 4095, 93, 55, "AnchorBarGrid",ExpressionUUID->"26bb6f7f-8e5d-4d4b-8e51-dca3ff5457fb",
 CellID->1],
Cell[CellGroupData[{
Cell[4709, 118, 402, 9, 52, "ObjectNameGrid",ExpressionUUID->"12771211-f003-435d-8501-4f905e057194"],
Cell[5114, 129, 769, 18, 110, "Usage",ExpressionUUID->"7d4f97a7-c82f-4676-955f-d9dac642849b",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[5920, 152, 855, 21, 37, "NotesSection",ExpressionUUID->"c9270ba1-ab21-4a56-98ef-5cbc81016810",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->168613873],
Cell[6778, 175, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"c4183893-b4fa-428d-a37e-f3869b53f6ff"],
Cell[6867, 177, 281, 5, 70, "Notes",ExpressionUUID->"2a50e6a1-43be-49e7-90d1-509d3ff7c1b6",
 CellID->1067943069],
Cell[7151, 184, 587, 12, 70, "3ColumnTableMod",ExpressionUUID->"b8877d56-49a0-4548-be3a-b13308027c64",
 CellID->120199297],
Cell[7741, 198, 247, 4, 70, "Notes",ExpressionUUID->"8fa0225b-32ff-4dc5-922c-66ceb7e4e7bc",
 CellID->333181165],
Cell[7991, 204, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"54f4baeb-856f-4788-acc0-28f107da4e1f"]
}, Closed]],
Cell[CellGroupData[{
Cell[8114, 209, 434, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"93d69e82-801f-4df1-9479-80ee03828e5b",
 CellTags->"PrimaryExamplesSection",
 CellID->58904963],
Cell[CellGroupData[{
Cell[8573, 224, 308, 7, 29, "ExampleSection",ExpressionUUID->"a29d4d52-b449-4691-b24a-6554205ea6b6",
 CellID->143843691],
Cell[8884, 233, 172, 3, 26, "Input",ExpressionUUID->"36cae351-bc3b-482f-b88e-93b6c62ec969",
 CellID->140347243],
Cell[9059, 238, 305, 6, 57, "ExampleText",ExpressionUUID->"218c8928-3e3c-4501-a9f1-04925fa1d692",
 CellID->78378545],
Cell[CellGroupData[{
Cell[9389, 248, 288, 7, 26, "Input",ExpressionUUID->"1b67cecd-68df-4cea-ab40-7e8d66618933",
 CellID->47295443],
Cell[9680, 257, 588, 16, 52, "Output",ExpressionUUID->"7ab1b505-3eab-4154-82a5-062bbee826af",
 CellID->337963110]
}, Open  ]],
Cell[CellGroupData[{
Cell[10305, 278, 169, 3, 26, "Input",ExpressionUUID->"9c41c45f-c18d-451f-927e-88f9c3b9c6b5",
 CellID->77675145],
Cell[10477, 283, 27434, 538, 119, "Output",ExpressionUUID->"ca8b123c-cb7c-476d-aa4a-27670a7cfcba",
 CellID->321768387]
}, Open  ]],
Cell[CellGroupData[{
Cell[37948, 826, 242, 5, 8, "ExampleDelimiter",ExpressionUUID->"d25cdc19-c4dc-48f7-9595-5b69ab94dddb",
 CellID->116477601],
Cell[38193, 833, 172, 3, 26, "Input",ExpressionUUID->"eaa65f18-fdf9-4ff6-82b9-069c8038c6fc",
 CellID->214239584],
Cell[38368, 838, 151, 1, 38, "ExampleText",ExpressionUUID->"f96c17f8-5ccb-4060-a187-7d991a46a5b4",
 CellID->302647184],
Cell[CellGroupData[{
Cell[38544, 843, 379, 8, 59, "Input",ExpressionUUID->"6b8e1d1b-4786-4a77-9150-e7c90597c49c",
 CellID->823104529],
Cell[38926, 853, 1293, 34, 84, "Output",ExpressionUUID->"b55b9d64-e1aa-4992-a308-c0453d14a280",
 CellID->266877351]
}, Open  ]],
Cell[CellGroupData[{
Cell[40256, 892, 169, 3, 70, "Input",ExpressionUUID->"19049680-a08c-42bc-8e60-c3b5760bea5d",
 CellID->55848347],
Cell[40428, 897, 33483, 657, 70, "Output",ExpressionUUID->"4155730f-609a-481e-8497-a8904b6ba596",
 CellID->419647296]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73960, 1560, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"3c7703b6-2900-4ab2-90b5-0f072e87c6cf",
 CellID->443460876],
Cell[74205, 1567, 172, 3, 70, "Input",ExpressionUUID->"5314883b-6515-49dd-916c-47643f8ee14a",
 CellID->137415897],
Cell[74380, 1572, 368, 11, 70, "ExampleText",ExpressionUUID->"a376d814-81bc-4108-a8a3-ebb8ef47d882",
 CellID->100040506],
Cell[74751, 1585, 445, 11, 70, "Input",ExpressionUUID->"65deb636-505c-4104-84a4-b2991002451d",
 CellID->504538696],
Cell[75199, 1598, 375, 10, 70, "Input",ExpressionUUID->"f2bebd0b-1c5c-4e83-a1b6-dd065e7e8221",
 CellID->10768370],
Cell[CellGroupData[{
Cell[75599, 1612, 534, 15, 70, "Input",ExpressionUUID->"648ef6d6-e3e9-41b1-9937-b982d6c7328e",
 CellID->61891354],
Cell[76136, 1629, 51708, 1026, 70, "Output",ExpressionUUID->"04c88c68-c1d7-40db-95f7-9bd71fa7551d",
 CellID->304034299]
}, Open  ]],
Cell[127859, 2658, 153, 1, 70, "ExampleText",ExpressionUUID->"6d80ccdb-d0cc-4585-ad93-4c8148e606cb",
 CellID->154049162],
Cell[CellGroupData[{
Cell[128037, 2663, 339, 9, 70, "Input",ExpressionUUID->"3a0a0e5e-85bc-41ec-b689-63aba9732277",
 CellID->409357899],
Cell[128379, 2674, 51622, 1025, 70, "Output",ExpressionUUID->"a990666a-0a42-440f-885f-df4091339126",
 CellID->96050092]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180062, 3706, 300, 7, 70, "ExampleSection",ExpressionUUID->"f3eb9265-3ae3-4326-89b9-b61d1f89bd2d",
 CellID->1293636265],
Cell[CellGroupData[{
Cell[180387, 3717, 320, 7, 70, "ExampleSubsection",ExpressionUUID->"675cedbc-8439-465e-935d-5e7ae0b1ae53",
 CellID->473870500],
Cell[180710, 3726, 182, 3, 70, "ExampleText",ExpressionUUID->"24d39302-8d2d-4f9b-aef1-4b3d6cf1b875",
 CellID->404756270],
Cell[180895, 3731, 172, 3, 70, "Input",ExpressionUUID->"9c9ece7c-172e-4bad-82f5-55b4eec4a092",
 CellID->961184916],
Cell[CellGroupData[{
Cell[181092, 3738, 325, 7, 70, "Input",ExpressionUUID->"5bd1fbdf-53ee-41bc-a928-93115eed49ff",
 CellID->530281556],
Cell[181420, 3747, 997, 27, 68, "Output",ExpressionUUID->"1106a2ce-5e03-4ab2-a794-f40ea87919dc",
 CellID->457941692]
}, Open  ]],
Cell[182432, 3777, 208, 4, 70, "ExampleText",ExpressionUUID->"2178f0b1-448e-41f3-a3cf-d27ce9533b56",
 CellID->228266911],
Cell[182643, 3783, 445, 11, 70, "Input",ExpressionUUID->"c0133962-cc1e-4146-a005-9891933aa4a1",
 CellID->523152714],
Cell[CellGroupData[{
Cell[183113, 3798, 321, 8, 70, "Input",ExpressionUUID->"5ccfb894-bda3-4173-91a7-d45a6f07bf39",
 CellID->73777717],
Cell[183437, 3808, 25293, 494, 70, "Output",ExpressionUUID->"f6d244fa-fa79-4a7c-93ab-e03371a4f4be",
 CellID->72813835]
}, Open  ]],
Cell[208745, 4305, 214, 4, 70, "ExampleText",ExpressionUUID->"3afe3e10-7ad7-4e7a-b033-36cac90105b0",
 CellID->11429555],
Cell[CellGroupData[{
Cell[208984, 4313, 264, 6, 70, "Input",ExpressionUUID->"b93346dc-e079-492e-a6f5-458a478743da",
 CellID->13922790],
Cell[209251, 4321, 28406, 559, 70, "Output",ExpressionUUID->"39154503-8e5c-419e-baee-b6ecfe406055",
 CellID->913980765]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[237706, 4886, 320, 7, 70, "ExampleSubsection",ExpressionUUID->"aea86ad0-b390-4ea3-bb04-72b299b237d9",
 CellID->147720695],
Cell[238029, 4895, 333, 5, 70, "ExampleText",ExpressionUUID->"c3ae7c10-b640-4218-a2e7-61aa758b119c",
 CellID->88919951],
Cell[238365, 4902, 171, 3, 70, "Input",ExpressionUUID->"512c21a6-810a-4f0c-b074-0b2dfb21f934",
 CellID->52436315],
Cell[CellGroupData[{
Cell[238561, 4909, 351, 8, 70, "Input",ExpressionUUID->"ef78b13b-aa6d-4971-bc69-ca7d9acdf74f",
 CellID->74017799],
Cell[238915, 4919, 1272, 35, 68, "Output",ExpressionUUID->"d5a51ee7-29a5-45c1-8e62-db80500517c4",
 CellID->75313624]
}, Open  ]],
Cell[CellGroupData[{
Cell[240224, 4959, 170, 3, 70, "Input",ExpressionUUID->"73a18601-1719-46df-8cbb-a863b8b81a5e",
 CellID->235986887],
Cell[240397, 4964, 29207, 576, 70, "Output",ExpressionUUID->"b37a852b-afc7-403b-89fc-39f81b39a0f7",
 CellID->478157919]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[269653, 5546, 318, 7, 70, "ExampleSubsection",ExpressionUUID->"72fbd0f5-6b99-478e-bdf0-ab4a2990ab5d",
 CellID->407283549],
Cell[269974, 5555, 187, 4, 70, "ExampleText",ExpressionUUID->"7a19fa44-a75d-4a66-87a1-8ee59861159c",
 CellID->427755359],
Cell[270164, 5561, 172, 3, 70, "Input",ExpressionUUID->"6715da3b-5036-4b43-8af0-c81d346e82f2",
 CellID->250909227],
Cell[CellGroupData[{
Cell[270361, 5568, 322, 8, 70, "Input",ExpressionUUID->"4273a1bb-12cc-4793-b717-b1ec391de661",
 CellID->16072950],
Cell[270686, 5578, 1078, 30, 52, "Output",ExpressionUUID->"a119e00c-11a1-4329-b36e-c4d32bf627de",
 CellID->222079400]
}, Open  ]],
Cell[CellGroupData[{
Cell[271801, 5613, 170, 3, 70, "Input",ExpressionUUID->"79254419-084b-4270-8558-b0a7e7fe14cf",
 CellID->847413682],
Cell[271974, 5618, 28980, 572, 70, "Output",ExpressionUUID->"122c400d-3fb3-44dd-bb93-796de0ed07f8",
 CellID->467763855]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[301015, 6197, 302, 7, 70, "ExampleSection",ExpressionUUID->"a9e27d1a-8219-4573-ac59-86ab1c63566b",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[301342, 6208, 318, 7, 70, "ExampleSubsection",ExpressionUUID->"fef5a0e5-88b2-447a-a883-1f663fe4a942",
 CellID->1757724783],
Cell[301663, 6217, 193, 4, 70, "ExampleText",ExpressionUUID->"a972a9e6-3f59-4e20-9afd-62b5088400cc",
 CellID->480789144],
Cell[301859, 6223, 172, 3, 70, "Input",ExpressionUUID->"1e5c4236-df99-46a7-890c-26fada674a0a",
 CellID->455582830],
Cell[302034, 6228, 445, 11, 70, "Input",ExpressionUUID->"dee2cc50-5e52-4eb5-a1c0-75921f5f9770",
 CellID->139585394],
Cell[302482, 6241, 345, 8, 70, "Input",ExpressionUUID->"621defdc-a396-4b38-a2cf-bf27aa4f40b9",
 CellID->76168790],
Cell[CellGroupData[{
Cell[302852, 6253, 265, 6, 70, "Input",ExpressionUUID->"543e85fb-bc54-4387-ac75-b1d1cbba1a15",
 CellID->884765519],
Cell[303120, 6261, 28375, 559, 70, "Output",ExpressionUUID->"00405411-6f70-4d23-b653-9f1871f03364",
 CellID->522972128]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[331556, 6827, 310, 7, 70, "ExampleSection",ExpressionUUID->"ac2883c1-c1ca-4343-ab41-507da49a6400",
 CellID->1305812373],
Cell[331869, 6836, 301, 5, 70, "ExampleText",ExpressionUUID->"004fddce-31e8-4b5e-8a50-45f17e9f284b",
 CellID->3458080],
Cell[332173, 6843, 172, 3, 70, "Input",ExpressionUUID->"5a8d5f91-130c-44c8-ac2c-ce24db00225b",
 CellID->247745711],
Cell[332348, 6848, 345, 8, 70, "Input",ExpressionUUID->"8fbf891d-dbbc-4637-935e-b56afd422e89",
 CellID->80511540],
Cell[CellGroupData[{
Cell[332718, 6860, 170, 3, 70, "Input",ExpressionUUID->"9962f4a7-e71b-4c3b-9fde-83b308f0e380",
 CellID->399569939],
Cell[332891, 6865, 342, 7, 70, "Message",ExpressionUUID->"b72b994b-e5e1-40a7-8097-2490e929a730",
 CellID->168860252],
Cell[333236, 6874, 9721, 177, 70, "Output",ExpressionUUID->"10896e28-1081-43b4-9f87-03b6ac258b24",
 CellID->215777380]
}, Open  ]],
Cell[342972, 7054, 221, 4, 70, "ExampleText",ExpressionUUID->"be8836e0-84ee-4fa9-b7fd-9fa4560b5867",
 CellID->128939588],
Cell[343196, 7060, 445, 11, 70, "Input",ExpressionUUID->"f6d7a080-b272-474f-8b7f-f7737a3f3550",
 CellID->548480066],
Cell[CellGroupData[{
Cell[343666, 7075, 265, 6, 70, "Input",ExpressionUUID->"9bc95a30-a753-4100-82ba-cb63658c7b0a",
 CellID->774434792],
Cell[343934, 7083, 28405, 559, 70, "Output",ExpressionUUID->"4f1fe194-189c-4304-a31f-a9f28e536dd8",
 CellID->48856256]
}, Open  ]]
}, Closed]],
Cell[372366, 7646, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"09cf5c24-4e23-45e6-87ea-9b500168da67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372489, 7651, 262, 7, 70, "TutorialsSection",ExpressionUUID->"3ab31fe9-e378-42a5-b00e-84cf81be8144",
 CellID->250839057],
Cell[372754, 7660, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"a5f7a66f-5fda-4611-a314-2fc857cccab1"],
Cell[372843, 7662, 226, 5, 70, "Tutorials",ExpressionUUID->"dc8b87ee-c7a1-4dc8-8206-03d0ca38f4a7",
 CellID->341631938],
Cell[373072, 7669, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"b959a160-fbd1-4ce2-8369-edb484c6da44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373195, 7674, 266, 7, 70, "MoreAboutSection",ExpressionUUID->"b309c0bc-c504-4e7d-800e-1c1891bb1f2e",
 CellID->38303248],
Cell[373464, 7683, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"86d8dcfb-b106-42c9-98db-ff2983b6fede"],
Cell[373553, 7685, 223, 5, 70, "MoreAbout",ExpressionUUID->"60f69ab0-ca09-4ba5-9287-c62679713358",
 CellID->579814204]
}, Open  ]],
Cell[373791, 7693, 78, 0, 70, "FooterCell",ExpressionUUID->"dee639d2-d748-47d6-a6ce-70695ba7177a"]
}
]
*)

(* End of internal cache information *)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    501538,       9634]
NotebookOptionsPosition[    487403,       9340]
NotebookOutlinePosition[    490092,       9407]
CellTagsIndexPosition[    489968,       9401]
WindowTitle->ExtractCSSFromXML
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["C S S TOOLS SYMBOL", "PacletNameCell",ExpressionUUID->
     "6ff1bc7e-29ad-46f2-994e-1e4edbd7b539"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"76374ff2-7f88-4a4f-9971-926fe82ab176"],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/tutorial/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "c928dc40-1567-4e46-aaf9-f912c34b0c82"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"06eacc52-42bc-4060-a28f-44ae900a51d9"],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSSelector\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSSelector"], "\<\"CSSSelectorQ\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSSelectorQ"], "\<\"CSSTargets\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSTargets"], "\<\"CSSTargetQ\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSTargetQ"], "\<\"CSSCascade\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"CSSInheritance\"\>":>
       Documentation`HelpLookup["paclet:CSSTools/ref/CSSInheritance"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "711087e2-534a-4c63-a8ee-0f72a855e33c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"e58f7314-9f08-4dcd-becc-f521be249023"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/guide/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "bba97ead-64c7-4724-95d6-721ed62a1d89"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"d4c96fe9-f16c-4e3e-ace5-15c1591a11a6"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools/ref/ExtractCSSFromXML\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CSSTools/ref/ExtractCSSFromXML"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/CSSTools/ref/\
ExtractCSSFromXML.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$11686], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "CSSTools/ref/ExtractCSSFromXML", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "1885d672-1e4d-41f3-a1b0-bef5541c997d"]
    }], "AnchorBar",ExpressionUUID->"94c8ffbf-28fd-46c9-ae55-bd7431b2521d"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"e2a2f757-477d-47b6-bffd-3d7b75cdde51"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["ExtractCSSFromXML", "ObjectName",ExpressionUUID->
  "e9201dbc-8c32-4b11-9c34-dcd92c352af2"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]],ExpressionUUID->"f915f4aa-e95f-4b6a-bb13-2b2be2f25e97"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "d0d0dc6d-6b3c-467a-85b4-f2130955502f"]
}], "ObjectNameGrid",ExpressionUUID->"046a6dd8-b451-4fac-92f9-c3ba5a6cbda2"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"ExtractCSSFromXML", "[", 
       StyleBox["XMLObject", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "8f51dbdc-9a7c-4394-a808-eb2365c1808f"],
     " \[LineSeparator]ExtractCSSFromXML imports the CSS declarations within ",
     Cell[BoxData[
      RowBox[{
       StyleBox["XMLObject", "TI"], " "}]], "InlineFormula",ExpressionUUID->
      "4598ceaf-726d-4bb8-8d93-529cbcd292ec"],
     "."
    }],ExpressionUUID->"c3d9cb1a-bcf0-4f3b-9b76-30578f60902b"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}},
 CellID->982511436,ExpressionUUID->"7d4f97a7-c82f-4676-955f-d9dac642849b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]],ExpressionUUID->"d30156a6-5e46-4c10-a97f-bfa3199381a1"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"d253b493-bd4e-438e-9b87-175ad762dec7"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"8700f053-3d93-4aa9-b66a-b382060b9396"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->88250529,ExpressionUUID->"a464e52d-2c76-4a3e-848f-f1e7b45113ef"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"61ffd22e-5f29-4f65-ac8f-29c65015e6c4"],

Cell["\<\
CSS rules can be found in stylesheets external to the XML document, \
stylesheets declared within the XML document, or inline within the XML \
document. Often external CSS file locations are given relative to the current \
XML file.\
\>", "Notes",
 CellID->1067943069,ExpressionUUID->"2a50e6a1-43be-49e7-90d1-509d3ff7c1b6"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "f5d3dbfb-cd01-463f-b1ff-1b14ba764235"], "\"\<RootDirectory\>\"", 
    "Automatic", Cell[
    "directory from where relative locations are resolved", "TableText",
     ExpressionUUID->"7456c60d-0fe1-4a6a-aac8-ff96726e057a"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}},
 GridBoxDividers->{"Rows" -> {{True, True}}}},
 CellID->120199297,ExpressionUUID->"b8877d56-49a0-4548-be3a-b13308027c64"],

Cell["\<\
\"RootDirectory\" can be used to set the root directory from where to find \
external stylesheets and other resources embedded in the XML document.\
\>", "Notes",
 CellID->333181165,ExpressionUUID->"8fa0225b-32ff-4dc5-922c-66ceb7e4e7bc"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"f2bc80aa-b7ee-4ed6-8e52-3c2429d8db5a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"7763dd00-87bf-445b-8724-5e9023a76942"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount",ExpressionUUID->
  "85691740-1968-4630-b870-48649dd9cb12"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->871588196,ExpressionUUID->"90c1d41c-503b-4237-8642-e23350884c66"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "9068d8c2-227d-4c98-88b2-2d4466234fa4"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->733603380,ExpressionUUID->"1112da97-55dc-4e58-97fd-a270e39d6252"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->140347243,ExpressionUUID->"36cae351-bc3b-482f-b88e-93b6c62ec969"],

Cell[TextData[{
 "Inline styles are interpreted as coming from a selector, but with ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["None"]], "paclet:ref/None"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "8526e293-1252-4d87-82b6-11aad02cc1f0"],
 " as the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelector"]], "paclet:CSSTools/ref/CSSSelector"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "2a194780-d870-42f0-9c80-1d9b084cdd98"],
 "'s ",
 StyleBox["\"String\"", "InlineCode"],
 " key. ",
 StyleBox["The following extracts an inline CSS rule from a simple XML \
document:", "ExampleText"]
}], "ExampleText",
 CellID->78378545,ExpressionUUID->"218c8928-3e3c-4501-a9f1-04925fa1d692"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<tag style=\\\"font-size:2em\\\">Tag content.</tag>\>\"", ",", 
     "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->47295443,ExpressionUUID->"1b67cecd-68df-4cea-ab40-7e8d66618933"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->77675145,ExpressionUUID->"9c41c45f-c18d-451f-927e-88f9c3b9c6b5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> None, "Sequence" -> {}, "Specificity" -> {1, 0, 0, 0}]],
         "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2}, 
            "Attributes" -> 
            Association[
             "style" -> Association[
               "Namespace" -> None, "Value" -> "font-size:2em"]], "ID" -> 
            "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "2em", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 2 Inherited], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 16123502636908], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 244160603][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2em", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2", " ", "Inherited"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               244160603][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                244160603, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 244160603]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[244160603][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[244160603][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 244160603; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{596., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->221057355,ExpressionUUID->"95f16ccb-ae3c-4b34-8c28-9f143f62cb7a"]
}, Open  ]],

Cell[TextData[{
 "Inline styles have the highest specificity of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]], "InlineFormula",
  ExpressionUUID->"e8fb8ee8-6701-4a93-ac80-064c7a06d414"],
 ":"
}], "ExampleText",
 CellID->866509086,ExpressionUUID->"8d814b68-725a-4e98-b9a4-b270e1d0bae1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[
    FrameBox[
     TemplateBox[{
       StyleBox["\"#CSS \"", 
        RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
       StyleBox["None", Selectable -> True, StripOnInput -> False]},
      "RowDefault"],
     Background->RGBColor[0.92, 0.98, 1],
     BaseStyle->{FontFamily -> Dynamic[
         CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
       FontColor -> GrayLevel[0.2]},
     FrameMargins->{{5, 5}, {2, 2}},
     FrameStyle->Directive[
       RGBColor[0, 0.5, 1], 
       AbsoluteThickness[1]],
     ImageMargins->2,
     RoundingRadius->4,
     StripOnInput->False],
    Editable->False,
    StripOnInput->False,
    ShowStringCharacters->False],
   CSSTools`CSSSelector[
    Association[
    "String" -> None, "Sequence" -> {}, "Specificity" -> {1, 0, 0, 0}]]], "//",
   "InputForm"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->67312846,ExpressionUUID->"9ec445c9-75e0-4654-8541-5f16511f8435"],

Cell["\<\
CSSSelector[<|\"String\" -> None, \"Sequence\" -> {}, \"Specificity\" -> {1, \
0, 0, 0}|>]\
\>", "Output",
 CellLabel->"Out[4]//InputForm=",
 CellID->24484718,ExpressionUUID->"1f18c4cf-593a-459a-8686-2bd519d0ce08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "488d476c-360e-462d-8c9b-e08f19a98d6a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->116477601,ExpressionUUID->"d25cdc19-c4dc-48f7-9595-5b69ab94dddb"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->214239584,ExpressionUUID->"eaa65f18-fdf9-4ff6-82b9-069c8038c6fc"],

Cell[TextData[{
 "Embedded stylesheets appear within the XML document's ",
 StyleBox["style", "InlineCode"],
 " tag:"
}], "ExampleText",
 CellID->302647184,ExpressionUUID->"f96c17f8-5ccb-4060-a187-7d991a46a5b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><style type=\\\"text/css\\\">tag {font-size:2em; \
color:blue}</style><tag>Tag content.</tag><label><tag>Another \
tag.</tag></label></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->823104529,ExpressionUUID->"6b8e1d1b-4786-4a77-9150-e7c90597c49c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->55848347,ExpressionUUID->"19049680-a08c-42bc-8e60-c3b5760bea5d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 3, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "2em", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 2 Inherited], 
           "Condition" -> None], 
          Association[
          "Property" -> "color", "Value" -> "blue", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[0, 0, 1]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
     Association["ID" -> 204887315296200], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 2], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     1, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1182391571][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1182391571][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2em", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2", " ", "Inherited"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["blue", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1182391571][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1182391571, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1182391571]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1182391571][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1182391571][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1182391571; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{597., {67., 73.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->970589436,ExpressionUUID->"e4292f01-afc6-4d06-8a98-6333a16a67d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "76a34a8f-7cc9-4566-a0fa-fd1802a87e06"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->443460876,ExpressionUUID->"3c7703b6-2900-4ab2-90b5-0f072e87c6cf"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->137415897,ExpressionUUID->"5314883b-6515-49dd-916c-47643f8ee14a"],

Cell[TextData[{
 "For external stylesheets, make sure any files are visible to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Import"]], "paclet:ref/Import"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "5624fd63-7cae-4b82-b7c0-789cdeae6eef"],
 " by having them somewhere on ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$Path"]], "paclet:ref/$Path"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "c98dfe17-3a72-444b-8e49-787e84ba7ae6"],
 "."
}], "ExampleText",
 CellID->100040506,ExpressionUUID->"a376d814-81bc-4108-a8a3-ebb8ef47d882"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->504538696,ExpressionUUID->"65deb636-505c-4104-84a4-b2991002451d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->10768370,ExpressionUUID->"f2bebd0b-1c5c-4e83-a1b6-dd065e7e8221"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cssData", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"$Path", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{"$Path", ",", "cssExamplesDirectory"}], "]"}]}], "}"}], ",", 
     RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"cssData", "[", 
  RowBox[{"[", 
   RowBox[{";;", "3"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->61891354,ExpressionUUID->"648ef6d6-e3e9-41b1-9937-b982d6c7328e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
705e/cDraK8//cvJr/67yY/+yrQ47v73G6/2UugAAAAAAACMltElcqGuAgAw
Hlq/eVFedHSwlPin/s00kPzjvz75gw+On5H2mr++/t3JT/3utFx+8nPTGH/v
hQ4AAAAAAMBoGV0iF+oqAADjofWbF+VFR4dJiX/xg2kU+WMPJ1/81vGj0V7F
1/vfn/zYr01L582m8nS1AQAAAAAAIM7oErlQVwEAGA+t37woLzo6TEr87Lem
OeRPv3P8ULTX7uv3vzEtnR95OPneR30WOgAAAAAAAGNmdIlcqKsAAIyH1m9e
lBcdHSAl/tEPp7OI33trOm310RPRXqWvv/N4WkBf/VZvhQ4AAAAAAMDIGV0i
F+oqAADjofWbF+VFRwdIiX/lT6YJ5J/4jeNnob2qXj99NS2jx/+ht0IHAAAA
AABg5IwukQt1FQCA8dD6zYvyoqMDpMR/9Y+nCeSfvjp+Ftqr6vXLz6dl9GZt
kbraAAAAAAAAEGd0iVyoqwAAjIfWb16UFx0dICX+S380TSB/+p3jZ6G9ql53
pSMlfgS3l/fv3bm4bruC64t7M/cvb/vcL8hc51OrhfnZ6FwEODXHuKfAIWnD
AB25VYY4TNRSQULGepjG+r1DHJx8BEaXjlucKlOZUfYWDzoSmlDvFoOB89JY
fG7jg0Oqw532xaVgeEZ5KTgVjZcO+rDHcyR+UUq5fLnUAQXHyQG6ELUlt0lH
B0iJ/+KYUuJf++1Pvjbz8d/+5r628s6b80289pkv9bXOflPit9cX92cuSprD
t7fXl9O3763Nlry+LW06z5feXPhu6bvFq7bdtPwyWB2y57tSD/e+1C6d439A
t5cXBZ06h3VVZUyHNOrEU+KFIi/f3mKBkZQ21cquDotL/t63vTgLY6dE0sKZ
KG0L7dyD+yuN6Zo3bsA19/a0FQf2+fbyYvFde61a6wp8yKtZSW30qGJvUg/t
MYpi2dTevJLu1o+yi20/J2Gn/Y5dV/tswyT2NY4otZtzFKO/mUbpKyWquHB1
OBLDvlVqUQTpZiZxHh1CVudR7Pls27v1cL93slM4d/a0xT5WW/ooek8d9hak
xLM0ymjocFLis4eLl9ebiy5Ko6RlNqQ6LCV+YkZ1KWhurOR1KOovHdeX0zaC
6t6ZlDiQs0jr9xT68qdif72VVy+ePZ559uVX+1h/X159+dliN18Mej8HS0q8
35eUeN3AUuPNY/MD1xf1i2/fMmLLD2mYuJ97X7jv4fjvRfXx3/yuHZ/ySz6k
GE9KvPxLGr5nru7qsO+6WjL6XX2SnF6wrawtVFMcHb953e2926qD+1zcgf4u
PMWNV6215srb9qJ80CzKqIZYypxySrywcLe/FOy234dNiSf2NY4otZtzNCO/
mcbpKyUa2VN9LYq0tdQcKt3MIudRxTIjPo8iMfHWN+tBV480p3DuDDglXvoo
ej8d9jakxLM0yucWQ0mJzw5+4Y3NRUuKJqkO77lopcRPzKguBSeaEq+8dGxf
asaj12otJQ7kTEo8L/vqrbx49tbS46GnxB+vdvXZi2PvTYbyTom/nDx8Onn9
ren656/Xn06evNxY5t2XkwdvF5Z5e/Lg+fQft1YVXExKvLG4KxvCq8eU0z9L
LU4md1uYyG19F1jdaDaXvp0vvXunSV2+ZNcOfwvq6943X0/9ahz/fWlKiU8P
yFSnjSRWlcwPaXejSInfv7ioGl4cfQVgoWy44HYdjTt0DRnR0+TSr7o8cwvT
d61Lo9NhmV/yNufqvbv79rDqpH3u+cq72PZOA6VsoT6zKCUGnEXJXQ4p8c1N
lxRW+TvFJvC8fXy4fU3XS01M7GscUZduywCM/rpRSl8pUf9X0yE/1deiSF2L
bmaM86hqoRGfR80x8fZ/0TXk6pHoFM6dAafEZ23aabP2YmdVQ6hEUuJZGmX/
Yxgp8dmhrwmBS4nvi0tBmVFeCsrldyiCl44RVnkp8XGWO1AiISWedV/+VOyp
tzIPiQ88H160yIqLiacbVkp8lvqexrOL+e33Jg+eTh6+t73wk6frcPjG6+31
xyPLxBeTEg8U+iKptN0OXg/GV7eQp4Gm9Y8cXdQvvrFwi+U3ZJ8Sj27I8d+H
5pR4DxuRfEgzjpT45W3ViTf6CsBCVa1c3hMO/DQzv0eobZW3ha4vL8p+3rnp
BhraXvkvR3dfdeI+7w5gtbd9oSu/oMmiZO6EU+Krd3v5g4196y8VFe5rHFGn
bssAjP66UUpfKdGonuprUbRYi25mhPOoeqmkt1IN+jxqiol3+NmPAVePVKdw
7gw6JT5X+ki6zw57O1LiWRpl/2MIKfHS1ObGaVyyhJR4L1wKyozyUlAmy19x
a7p0DKGNcBRS4i51wIKUeF7201uZZ64zColPFsH2vHZ5GIaWEn99J5v97vPZ
JOHPN5ac/2NDtPu9wDLxxaTEE1Li2xfz5dxy4Yt8arCpWxDq5FPijv8+9ZoS
v768LF1c8iHNWFLiVWOQo68ALFTWyshvYR9wd05O2vwb+zth9/fYumKfe3yg
XKgtdVd0WZRM9NS8qV9++ucS+zuSbVPihSUGXNKda2JyX+OIevjTnOMazXWj
lL5ST8b0VF+LotVadDMDnEd1iyW8lWrY51F9R7tL92y41SPZKZw7e+qV9Lla
KfF2TuhM69Eo+x8DSImXDyxJiR+ES0GZUV4KSuTZI2pOifc55VlGpMRHWOhA
OSnxvOwzJZ7XxNxS4i0NJyX+7svptOHzlPiTl7P/nL2eLFPi8/9ch8mXQe7i
NOPTNTxdRLtXM4S/Xpyc/OXGMvHF2qTE3//SG59YBLo//onPf+H9neXf/9Jn
P/PJj7+29IlPvvFOWbZ8a7GVWUr8C59ZbmI3lx7Ok+83Jd4iGjHIlHLh19Jn
G7tfPnVnwsJVEwXcXl/cL3x4+quuF5c1G2vY7+yP//Rgbh6R2SHZ+DH7+YKF
A7r+zfjtX88qvDErmevby8ru2245bvwy/WVxnwp7N19Tase65jD2mXyofXN7
Q4X/ntfLjUNRvvX6g9bO3TpTalc/u117gu8su12Lko5zmuLzhtJaU7rtNufR
1vdcDUndbr/RsTIELnppZRr+stU7elmy8ADqdprUlHj8LGguss1K3nC1rD4j
Yru0efGPnfJx6WU0kJT4Huc22XtKfKPuln+RmkrVUN/qWwsltTHp+tP0t2Nb
O1G5k8tt93YVTdbb1am/5k3ttWLP0d8uKfGeQtRpJVJ7rJraMKl71iYGn3Sn
jtfw5lOmbVUJnIzJN6M930zbtEUH3dTRV6qWepAThhiDp2rnJxv7OCxTWhSr
bQeO8Ol1M5M4jyo5j1bbDjcGSitG6bHrUD2i3y7xKyQb47mzp15Jn6s9iZT4
EZ7+VZXBqsNT2njerDslfav4gEXj46+kE7/Ns7L+e4t5CtTVDmXRfLOrPF9n
y67+ebrQ1l0lWOgJd+fWzba+UuIuBadwKUgq0HY7nDDm20Hqw/ahfPGmS8fy
X6NnbMvKXNeG6/WJSuSaEGz/Vx6C2DnSU7YhflFKOaQD7l8Ah9dvSny4fflT
ISW+JCXe0kBS4nVzg2++nmwu/KR6nav494PndZsOLpacEv/Ebq77zS+ULbnt
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
6RKl26jb8NY3Tzlo7SwPVvPcqMm73cMJXvodo8c5ze6mtk7zmgrQ5TyqXG3F
A4ZIZQhf9BLKNP5lax7q7G57GHU7zWZieEPJE52ks6CxyJKeMlXdDYM305rq
0VuCNqWMIhf/4jr3Mkq7+qPpftfesM/Rrx7YxFbhV1SJTlmU8v2syaKErj/9
ZFH2cBVtp+3VaT/Nm8jy6y33+ySo+qoUGyfqK0kdLpGk6+rxUuIJd+ratbe5
U8e6LSlrTrgZHeZmOqko96qxnSE2dfSVEiQc5OSrb2MPou2TjX0eFi2K9SaD
R/iUupltOY9K1+08SjzC1TeRqqJoUT2Svp1zp2ZP2hyWPfVK+lxtede8jw57
Jwkp8WM8/dvaenUEK7Vv1XbAouTNNtHQhO7JHnqLmdpTSjx4s+sweJD0gLTN
3TnebOs2BuJSUP9mdpeCpAIdwg5XrS61Quf1xeMnbXNl7voYrY8nKoEuavLB
anfkO2Yb4heltCo39P4FcFAJKfGs+/KnYi8p8Tyn5c5zr48v65R441ziq9eT
57M1FxPgZZ8NLhZJiW/O4L3KbM/y3u9//uMlSfLiYq+98U71YiUp8dWs48s8
+eqzhWX2mxKv/tGpcO+7yeznJAozvzVd38PL13fwkt5NW9Xu3bQwDj6dzu7i
8vq6YSLuRrkf/+markvn+0vrSdVtpWIkqc564S4p8fV2Qs2dHpMPlU8Wtj4T
eHi1VflDB217TbfXMav61FD70ne7+wleXhGCxzlN2aY2NlS6n93Po/gbCZUh
etFLKNP4lw0+3RtS3U5Ttuf3N35/qbhY2p2rqci6BdsS78vV1aP5jOu1jBJ+
gHP1a6x77Kz21gBYrq95n5ePSht/RqR6IxUPW8v//fhZlIrK2zWLsoer6PaO
7/PqtK/mTXD5NpGM6Ka7psRrWrs9l0jSdbXbo7N2l5posyRWwzvcqedbqey2
pKw55WZ0kJtpxfIlXZShNnX0lRZr6v0gJ4z+pp2qBz95m7+kFkXCET6pbubO
upxHbTiPCm+kHOGEKE/76pHy7Zw7PZ87e+qV9LnaikfS3Tvs3XRMie/76V9x
C7URrNS+VdsBi5J3e4qGHrC3mKkTTIkn3Uf6aLaVfK/GO8r6wuRSUP/uIC4F
eyvQIexwxZaTr4SD+OJx4Y8GKnONWEq8yxOVcBc1+WClHvlesg3xi1JalTta
/wIYon5T4sPty5+KnlPir169+PKz6ZzcR5hJfD4Z+I547HuxgsfPvvziVVbT
oB9X1inx1xPn+n73vUIIfHMrLRbbZ0q8drGylPjqH+fbXe7G1lzl+0yJrxrH
Va3HHi/HyxtEdI1Ny0f64MHPJi1cfjctv3HeL/uFoJjMj3/x8fe0LXA7Myk9
es2d06Q/YY61LlqnxNdNmOYj2X/yIVh1453KpINWvi9p6o5a8uOFHk7wiveS
LhFBpSspPqoqqQB9nEfhNxIrQ+ii1+L5RvOXjT0cHlTdThOsb2l3rkmsyLoF
2xJ3KWkQpHxl/ZRRTVtoc7cOEBGfbaflI+zSdUX3+TZ2YlV9uul8K0sunV4W
ZR9X0dK9SRSqSnts3sSXT9mJpE23TYk3L9R3iSRdVzu2Tlr0NRKaJZEa3uVO
Xb5jy8WT1px4M9r/zbT4gdU/ly01zKaOvtL2vvR4kKMHLH6qHv3krdn30Iq1
KCrXknE3s+SoJXIeOY9Ch6H5QVBlS7BT9Yh/O+fOes/6OXf21Cvpc7XVj6S7
ddg76jkl3vPTv/Un15PdVRzhxL5V2wGLg0dD99JbzJOUeOdmW/WZWCN2DFwK
BnIp2FeBDmKHS7fb4qQcxBeP6yMl3tNjtC5PVBK6qC1T4tEj30dnufhu40Wp
1cXz8P0LYIj6TIkPuS9/KnpOic/n437r2YsjpKw7p8Sn61h9gb3t5skZSkr8
5eTJe8upvN+ePHxv9p+z18Ons0D408V/vvuDyZOn67m+n6REuKev92Lx7+Bi
wZT4Ku/92ptfmP7Ll9547bWyFPfWv6/+c/6pxesLn/lkSUp8lTCfRsqL//9Q
KfHb5aQh1Q+9+48pR3tlDctHUuLBd9NWVf986PZ68UMcHW9op3H8K+tVtCeV
8ke+obxP1Ye336k+SoVGTIufm2/ep4bFN75lw3BY4JAmHbSdrVwENXeDG3d7
673eTvCGQ1h/nNM0BtJ397OX8yh1+D71e9Ze9BLO7viXTUqJD6Nup0lKibe4
RNcVWdJTpsSi6TUl3msZ1bSFCgsdKCI+6VZ5N1cU3udVm6PdH7el9u5PPIvS
61V0ZxN7uzrtr3kTXb74GKqv8EN1mURKKxCj7rtEkq6rHZsn6X2NlGZJ4c3K
Gt7bxW6n25K05pY3o/3dTDc+sfj38mevw2zq6Cutt9L3QQ4esIRT9fgnb/ku
1tGiiKx4/c8ZdzMXn3UeJXMebaw17QiX3Xx319CteiSnOJw7vZ07e+qV9Lna
qkfSHTvsXfWbEu/76d9k8+Be1DwFSexbtR2wOHg0dC+9xTxJiXdutpV+r6Y7
SWwgwKVgIJeCvgq0y3P+ve1w/R7GDeKLx/WYEu/6GK3DE5WULmrLlHjwyPeV
bYhflNL6SkfrXwBD1GNKfNB9+VPR91zii5nEjzCV+Dwl3mm7y5z542eH3/t8
DSQlPp8wPPJ6Uoxwz1LcT14WoubPp3nyea77wVuTB88L784WePh0O/4dXKx9
Svz9L72xmCF8FdtezRk+/ZcvLILi3/zCZyoXW67tm+uI+HZKfL3pNz6zmFf8
jcj87X2lxGfmF+XK596t+lHV24mvr2H5+l5e7Z1m+82khcNPfG4r76cxOR//
xlBOtCdVdwyrum+hL9g+JT4p9u5Cy/WafCgc21ahlu2i6fC0JCo1phjZ7aRz
NqkW7a6kwzPe0KZWW7qseMTU8TyKv9G5Muxe9OJlmvBlg9eyIdXtNquNnjDB
O1fFOraLLOkpU1XRRHep1TUsUbyMqtpCxR1qDrz1omPrYSFhn2u/e3xT9Qev
+O7Rsyi7+1R9wUjIouzjKtpSu6vTnpo3oeVTwxhpm26VEk9tONeKlkjVrTn1
dEnbq+BXTGqWlK9h6+v0d6feLq2UNXe/GfV8My15o+IyPdimjr5SktS2SvwI
NH/++Cdv6R5qUaQd4RF0M5s5j3b20HnU7ggXPtRUxdtWj4Rv59yZL9fbubOn
Xkmfqy1/JN21w95Zt5T43p/+ba+z+llIYt+qrmgTH38lXdYS2rB77S3mKJwS
71wWZW92eJaZ1HE5dEq8ny/iUlDYcj6XgqT22xB2uHYH0z+cyxfvIyXe02O0
9k9UkrqobVPioSPfT2e5ZFV1YzUpVW7w/QvgkPpLiQ+7L38qek6Jz8zD1gfP
iXdNiR9pt7M3lJT4e5MHT6eveTZ7/v8Xr7cXae35f84z2w/frk6SF+LfNWnz
B+8tNh1cLDUlXmod237nzchi9WvbSokXZiyf25iB/DAp8cqnjatWa12C4vpy
+YBz+le9l9VZpJ3+fOryWxpuJTUf3+0StFm40Lm7rPh75Y5d2oyPf3VbYvF7
I+GeVE3/bffw1oer7hojl4GBykBKfFIonEC+qN/kw/pr3m/qOYbqc8JBa2N5
oCLDKym7nXTOVn/H28umEdG645ym6S8TliLD9ynnUcIb4coQvujFyzTly65q
VcUD8cWiA6rbaaK3jpSzIFpkSU+ZKvuGsRMzbRCkjbQyqhx5Xf5OVs9FfVcm
pbfg2vodXnnKPncdc2567p4yLFL3Vn9ZlOraWJOw2smiBNdcXFeLq2gbXa5O
+2jeNC9/u74P9nxFbXy4VVlWgUZ46l5ESiTl1lzXhkncs1hfI+FOHa3h4VMm
uduS0AZIGdE7zM10552mANwQmzr6SkFJB7nrU/3KRvUeT94kWhS1ay6ua+MI
n1I3sx3nUWzXq953HpV96K6n1nR/blc90r6dc2f52X7OnT31Svpcbekj6a4d
9u46pcQP8PRvd+uFIFbtzuy8lZwQ3sdlLeVZ2V57ixmK19WuZVH6ZvvnOUkP
SNvcnRPe+P/Zu59QWbL7TvBvJ++865171/RmmI1d9nC9aPDMMDC72RSWFtW7
66VXRtBtdRV0LQzd4AvtKg1Ycgs8mNI8ZJpquB7MVKtshDWawVMMQhJ0CgpZ
evUklVV/bKtKlkqVc/Nm3szIzBMRvxN/MuNkfD4kRb2bkZGR55yIOCfONyN7
XZJ1KGh+l+IOBV36bz03eKiUeL8cWlkfPL7TNi45yGW07ldUsoao+dWbsY8M
M1hOP1t3UMoq0mmPL4ATO0VKfApj+UsxRkr8THnrnilxIfGOJpIS397E+5mj
23evbzP+zOuHC9cGxQMp8Wce79YTXKx/Snx3d/H7x95dwWsX+4tPHy/wmeef
TabEV+usfbsTpcTrc7G76d3VReNFdZS6WNwd8vcGwdvx+tVqFr+ycGXRVMwz
unxyoxtOag8XYVc/x7jt4e/WvP/CjIWPz33Xm49xu/8h9ouni3LLf3fxZhvo
2JVI1khqVzPVNW038GALK/VYKa/t8sfjseMPGEuJL6u1U1dKIyUfqrO96bd+
6Mvtl8KuAmobf3Oh5Wu4UDbkZrfu4JW5r7322FyDreW8vx1tl3AarvRU9vSa
i6A99qOsJ4KNIXzQy6jTnA+7q5tKle4W3y46mba9vzU9mkrdKlv3gmiV1V9l
qr/MVNeEojtmbBIkX3YdJY/+4WrLfsWmTqqNc7FLpjZcFQyuOb7N9ae90Jra
oiiJJRomeNqfys2i5J5TbpJHoNRMTWMea6ijaL4OR6f0Cgbr3rQtnxnGyGrg
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
oDOnyhDFRCMNJGSuxTTXzx2icAYVnl1a3F5fXT3aUv6cmplQAADm4zy9X8Pt
roxW6OkEKfF/NaeU+Buf/9Qv33v289+ZbUr8/kLeynUiDrBY3N6snt5d6Ht0
v+TtIhkdWC+9v/Dd0neL17132/IPweqQkc9KA5z7NqsIr0P5n9Di5rqiVzim
qanMqUij+uxa6/IcpqAqdZNOR20WmEm1UC+1G2+OzaO/92Z3iQX4shYuRLLT
cnSyHK42VmveO1M2nITzVlzgNlfUHnsXN9eb+hl0d9jtdKc8Aif2INdBRpNb
tOeoiod+/P7R/7h9pE4Qg++E+dsdOxcMmRLPHMicUe4Y6ixm3wGIMhDLVHPg
6lES0z5V6lEEGRpnsR+dQlH7Uezib9ez9XQ/d7ZL2HdGeschVpu8zp01YI/N
Lh1X4yU0zpU596hLE50JzblcNuJVOwAA6CHS+72E4falGCslHqiR4ZvBGILT
cxczQs8flkqJS4kHRSu9Ye6n9aix/4Lb6+bFDw8xseWnNJM7zLkvnL1Q/qOo
L//9z9rzQrxwQo6Ou9bqtHg1ZEHt1U1qlabCWWvajcfunCb6wPWHtYvpMG+l
Oi0N1dHzkzedh/utusRt3r1F47G3ugHDHSyrBVa31ob+VdfY60mzKLO/g/Ml
p8QrC/f7GmK/7T5tSjxzIHNGuWOos5l5ByDOQCzTzKYM9Cjy1tJQVIbGVfaj
mmVmvB9FYuKdT9aTbh55LmHfmXBKPHmdO2vAHppd2rzN1anisyccOM+5R12a
vjmZo0oe76odAAD0JCVelnmnxFuG8BnTcxcxQu82LC07Jf50+eLj5TMvrNa/
fjzzePnK071lvvZ0+dzLlWVeXj73+uqPB6sKLjZ4SvyN177w6U/+8sZn/uIC
UuK1u+W2zV1dXe99c2FR+TLHbq/ctuf9pRfrpY8PMbnLJzbt9Kegoc596/U0
r0b5j6UtJb4qkJVeb5LZVAov0v46JsPSPYQeNo3j+rqujzH7mmIjcRxZLHb9
2FO3kBmFS5Mf9WHPrcxJ7mqjV7GsjzX73+DcJaT7rLrEbc469g58tWBTXke9
n9RCQ2ZREiacRSldCSnx/bdOVFb6mWr/et35Pt225hukJWYOZM6oz5hoAmZ/
3EgyEMs0/NF0ylMGehS5azE0jrEf1S004/2oPSbefXZrys0j0yXsOxNOid/3
aVfd2uMfAguuPjK7dPL+qA4wCfGcTPBy2XhX7QAAoKeMlHjRw+1Lcf6U+Dkr
rWkIX/j0XBfdhqXTSonfp75X8exqfvvry+ceL1/8+uHCrzzehcP3Hi/vXh5Z
Jr7YoCnx77z6+eef/eV9l5AS3zTDw71yUdMQ95a5a63bvXJ724iaxfcW7rD8
nuJT4tE3Uv5jaE+JD/Amwgl5JpYSv1nU7SGzryk26o4jD03zxPMF85kjS3da
7oYKqXtWtZ3pQu+X/jXZ/qsucZszj733bzhQqzw8OKffVhalcBecEt8+O9AX
NsY1XCoqPJA5o15jogmY/XEjyUAs06ymDPQoOqzF0DjCflS/VNZTuSa9H7XF
xHvcAmnCzSPXJew7k06JryWvd4cG7IHZpZqppRHpAJMQy8lkXC4b76odAAD0
JCVeFinxxiuE5U7PddFtWDq1lPgzR9nsr71+f5Pw1/dv/f16Ta67+vKvB5aJ
LzZoSvzVz/xywuWkxA93rofbv4V3utwLJP0uqFx8Slz5j2nQlPjtzU1yceGE
PD12rUHLbtc4aubzZl9TbNQeRyK/K33Czbk4kZ/i2Blvhx3vR42K2eb2DR0w
JV5p4U2nC1mUQgzUd2pefjXQHq8ku6bEK0tMuKZ7t8TsgcwZFT/JP5vjRpKB
2EDmNGWgR9FpLYbGAfajpsUynso17f2o+eJAn+HZdJtHtkvYd0YalQy52lFT
4qfvjs67A0yNPrmLrOOx/g8AAGcnJV6WvinxHvMgE6i0tmye0f295mHpdFLi
X3u6um34OiX+ytP7f94/XnlIia//uQuTPwS5q7cZX63h8Sbavb1D+DPVm5M/
3VsmvliXlPi3v/DpT24C4M9+8guvfruy5GvPb/7+mS+8+vnnLzwl3iG9MMmU
cuUHze/f7Cr9vYyMhWsOo6ufbryqvHj1w6vXNw1v1rLdxZf/qjD3S+S+SPZ+
b369YKVAd78bcbBh1Sc2v1t/U3syOa7HvV+nOLoL6t775abEG4pxyHBC45OH
b1T597pd7hVF+t2bC62bu3XmtK79lhDb7I2RUuJ139hKvVuXBr/3KVc/FLJZ
dnH4RM9aCxyd8tpM+MPWb+hNYuEJNMI8uSnx+Pmovcr29/qWw1r9sSi2ST32
zYD8OppISny8kHg523zKlPje/pb+IA07Qss+0twVSexBWcfMtsHvwUbUbuTD
ew925M822BF1uL5T4/Ft5GsLfVLiA4Wo82qksawOTwX13eyc98pbQVbvIt7C
23eZrk0lsDNmn0BH7gBkDSjiHzPbBA8msx+IZRRYdFftfdlkjGJZ0aPYvneg
hC9vaJzFflTLfrR973BnINkwkmXXo3lEP13mR8g2x31npFHJkKsdKyVes7Mc
X9Uf7NJTcPcMyu1+L3dDuRpH2zHWoZgjPXIXeZfLUv2f+Mlo24QTu7aIBAAA
QcOmxKc73L4UvVLi/eZBsuddTzmEzx0CTXKEPtCEV8uwdCIp8aZ7g+8/Xtlf
+JX6dW7j38+93vTWwcWyU+Kf/NSzh/cKf/7V3ZJ/8elPPv/Sa9+pJsYvNiXe
4ZJE5QpH6EW5y+8LZKgWdceEdOwxuHDqMHp7nT64tWxg+8cruPzrD8jpuaO7
jsJVerG6U0eyhGoXbl1dl5T4bl1jhxOanj16n4czyFWyXR5vanuhdZGdRnx4
wXVysxuLcbSUeHJCL/luuQ3+0VWy0O/2g4FrLXZ0ymsz4Q/buKGpDQitMW7E
GO9KW0q8+kzG+ShUZQOkxOOb1GPfbNWljrJS4uM0gtXPG/VvoLVrL2abT5gS
P9jd0oGK/lmUZFekPosSO2YOmEUZ9sifaaiGOWjfqWn53TFugO+z1L91x5T4
ALO/uTVScy7I6WaHdfp08d5FuIXHdpkuY6Lgzph3Aj1BByBnQBH/mJkmeTCZ
/UAso8Ciu2qvyybjFEtl+/Uowj2Kyh/LHxrnsR+1bb/9KFjC9THxdCPr0Txy
U+L2nY0B9p2RRiVDrvZcKfHhLz0NmBLv0P1e5s1Bj3go5ljH3EX25bKm817O
ySi9R45xzwgAAC7PsCnx6Q63L0X3lHjveZCcqZKTD+E7RhynNEIfZMIrMCyd
Tkr8mZdXj81tvV+uPF7Y++MrP12++PLu7t/B5Pkzj1f3J++zWG5KPOnTyUK4
9JR4/UXsJpV9cP31oNtF4zcvcpdPvLY9pVz9+kflLjTpaazAwseH0YcgxP4d
qxfr76F0u6xzEeV/dL/g7cGtLn5Qf/eq1XOVLyndfx8tcZzcVkV12dQhtW3q
JFLwzWfkZd4Zd9lapLXnl+PPUtmy/RadbP3hQsu2a8Y5J/WjHfEmuc/uGS8l
ngo61UyFd2vw22UrPZir1BPp7/G01Vr06JTbZoIfdrfevbU+rPbw1pbnb4R5
6o4jx3WWcYoJVlnWjHB6yBbepD77ZkB+HeWkxAe+C8/+aXOkrzcXtM3BlPgA
B+ej5p1xTow81dgVqc+ixI6ZWWmNho0c/MifbYAj6tB9p5blq9mJrpvc9tZd
U+JD9F3yaqT5XLDfzd6cDboeh7oOZGK9i3ALj/cuOo6h2teccwI9TQeg9hSz
XjRVLNPsnhmItckt5MZvjBwMpGO7ao/LJuMVix5F9bn44fFChsb57Ec17Ee7
50IlXNcxqim37s0jMyVu3xly3xlpVDLkautT4m0vD8wu1fakRrv01LR7RnXv
fic0d/BHOBSTkJm76Hq5LD2kyhsFJK4ddxtFAwAwVxkp8aKH25ei63daB5gH
yWkGiTH52EP4vOm5SY7Qe0x4ZQxLJ5IS3zye3mfCX15+7SjFXQ2EP/cQ6n7u
6y0rfO7oVuTPPN5bedZi2SnxTz7/6rfv/vidVz+z+cOzn//OpafEEzeO6JpR
WtTc7OfwrNJ1+aMtbJnJTT1//Nm6LHwU/xv0Ck7x5V+/gXUTOunP2lo1iTn5
xLJHuYfeKfHKGbl22WHDCfUTSEd/fXjj2o/XdEeUg7UMMn2YFbuvvTVYw6aM
mRI/boQZ75bT4Ov2+sQLwrUW3tScNtO2jkRvq2bqd7PohBphlzXv73ypnnLO
KSZa3D1DYllnvT77ZkxmHSU6LcOsOL7Ch8P/CIPWora5vb3mRPpb3yh1pjtq
CL2yKI1dkdR1kNAxc6AsyvBH/i56NdAR+k6ty1euUwxdIgOlxE93jutwLui6
cUN+2aXzyCuvd5EzJspYc8YJ9EQdgPiAYsrdMwOxmKxCjl8rbnz98RFm7J03
kx5FejP2njmeGriMoXE39qME+1F6M/aeicTE80bTgeaR9+nsO8FV7T9TuzEj
jUqGXG3yendowN49JT7ipacBUuL9W8XRutK9wpH2Mo51T4k/il8uqzu8ZV9a
f9g/1g1hqCusAADMxbAp8cbXT/5SVQm6pMQHmgeJNoOzDeGHmZ472tqTjtC7
TnhlDEuLTom/GLjv94uPDxPgq3j50U3Ig4vlpMSff/X4j8kc+CWlxFOXCXtN
7q9ictep34w9+iGCbstXt7BmP4tMKmyfzFr4+ACyO14Od+4qvfyr675f+Upl
zc1fOTt6Ljan1HQAP1y4X0o8eBV+4HBCconkezS98cEnzym0braXPHv0DluL
ZtSU+NH+2PBufRp87WprEiWRWgsfnTLaTPzDNvQlj997Go0wz36/bU+ol5x6
Mlpl/UJieWe9PvtmVE4dBb/LsztSjxGW3X63dNi1l7bNgQYQra4m6QYbT+wF
nmo8YTdkUULHzGGyKCMc+bvpekQdp++UdwFk2MtM9UfS2PzuUEnqcI1knQvO
lxLP6F00rr1L7yI2JspZc8YJ9DQdgGVNvddlx6bYPTMQy5BRyNlH39ZRT9fL
JmMWix7F7i2DJXxJQ+Ou7EfJdduPMku4/iRSO0OW3zyyPp19p2FLuhTLSKOS
IVebHppHBuydU+JjXnoaoJn26H6nV5TsFI65l3Go62+4xy+XNVy163BpfZcT
vxlyZgMAgFnISIkXPdy+FNmjleHmQYLN4MxD+GBkcboj9J55pPZhadEp8dZ7
iW8fr7x+v+ZqAjz12uBikZT43m3Dm3Pgl5ESr/9B8WC6r939z0lUvv3RtneF
l2+eyc16Nm9Vx0eeyiF69ZWW65vb2/hv1KWVXv6rNd0mv/NzfGxrv4aWNdnT
ZJiU+O59Qt2dAcMJtYGS9GX4puD9QeMPFdrhmha3Mdv21NL66je7tSRHTokf
vEHy3fo3+PgTGbUWPTpltJn4hw1Wy5QaYZ7Ull/t/UxNdbG8U0xblfULiWWe
QHvsm8PWUX2n5XjR5PdEhzXYmfphfeVtc2Qnfxg4tv5GSesaaubTkgmMc2ZR
ana4vlmUEY78hxs+5hF1rL5TcPlRguIDpcQbutID10jWuaDfVZFuh5poVyrW
wnv0LtbvUjsmyllzzgn0JB2AmuUT45+pds8MxDZrGryQ4wWWuauefOdt/5B6
FBklfFFD46N12Y+6sB9Vnsgp4bqTSKon2bl55Hw6+87A+85Io5IhV1tzvTsw
YO+cEh/z0lP9lzhaG+jxD2E3toqWWtheyDnqm454KKZG15T4SmAM23zVLu/S
+oNqM5ERBwAgw7Ap8ekOty9F518+6j8PEmwGZxnC12xxfWTxDCP00+WRmoel
RafEn8m81/fXvl4Jge+/S4fFpMT3bHfmugvIAx6Od1+Oj62xbfnIYSr42qyF
00ee9Ikz+kt19e9aavlXr1Cv+gKLe8tk6XW400LyuWoXpPXY3jklvjuBtJfk
8OGEYNONX5bMKrT0tuRpKrUpp8T3ZvDq7wL1qE+DDz+RWWuho1POpezwh41V
y6QaYZ5gjzbvFLOMVdkQKfHwJvVJiQ9aRw2dlv3NOkHc+v59QknQ4LoK3Obw
sXfR6xjdeoxIJZcuL4syxpE/uTWZQk1pxL5TfPmcjch6664p8faFhq6RrHNB
v5R4l4FMRlcq0sL79C7SG/aweNaaM0+g43cAqi/Y/jm11DS7ZwZih9syYCFH
Cyy+q559523Y9tCK9Shq11Lw0DhRapnsR/ajUDEkXpQ++Tatu0PziH86+85u
y4bZd0YalQy52vrr3W0D9p4p8XEuPfX4EscA19+O3q1+UNilOdFVn5R42wi9
9apdt5R4YyMCAIB6Q6bEpzzcvhQ5o5WB50GyUuInHsK3OI4snmGEfsI8UuOw
dCop8afLV77+cCvvl5cvfv3+n/ePFx/fB8Ifb/75tZ8uX3m8u9f3KzkR7tXj
67H4d3AxKfGtxcP3GeqvSw8fU45O1bYsn/lllqZn81bVPF+xuN38EEe/A8CF
lH9tu8pLiccS5FnRt84p8eoppPdPUqbeuWXxvU/ZMmMVKNI+ecG7w0fQdncI
5aWmmRKvvsfxuw3S4HOnwnNrrfHolLEbxj9sVkp8Go0wT1ZKvMOxtKnKhkiJ
hzepT0p80Dpq6LRUFjrdBMtgiesSt/leznmr6zfncgduF55FGfTIf/QWox1R
x+s7RZevXuMapK+wbKqTSG0FYtRD10jWuaBnSjx/IJPTlao8WdvCBzzYHYyJ
stbc8QQ6Xgdg7xWbv6cv7E6ze2YgtnuXoQs561px6HOff+dNb2ITPYrIind/
LnhovHmt/Sib/WhvrXklnDr5Hq+hX/PITonbdwbbd0YalQy52rrr3e0D9sLu
Jd7aQJPHnbzu994TzYefS086TMtoKfHIVbtuM1zVvMFg1yoAAJiDAVPikx5u
X4qs0cqw8yB5zeC0Q/g2R5HFM4zQT5hHahyWTiQlvr5heOTxSjXCfZ/ifuVp
JWr++ipPvs51P/fC8rnXK8/eL/Di48P4d3AxKfH42aH20vRgFyhOmlJu3M8P
n8xaODzjvKg9n8aUXP6tuZnMlHhsTiknKdw9Jb48OC+3LzdoOKFStp1yJ4dV
M2i8Oi2cfpx4SnxXdjc1vaCeDT7+RO+Pe3x0ireZjA8bPOhMqRF2WW20ZQdP
MTXrOKyyfiGxzE3qsW+GxeuortNS3aD2QdMgep7mN0rc5oO1tY89u79f8y6S
ePbsWZTjbWqbD4xlaUY48nfU7Yg6Ut8ptHxuGCPvrTulxHN75Y2iNVLXncjd
XfK2KvgRs7pS6TUcfJzheheHtZWz5v4n0IE7AIknag7Tk+2eGYhlye1fxUug
/fXn33mTW6hHkVfCMxgat7MfHW2h/ahbCVde1NbEuzaPjE9n31kvN9i+M9Ko
ZMjVpq93RwbsnVPiY1566j1cqRXpfu+2oGEbTrCXcaBXSrwtGdN21S7rZHTw
99thr9UBADAHw6XEpz3cvhS5o5UB50GClTbJIfzRZOqER+gD5JEah6VTSYl/
ffnc49Vjnc1e///m8fImrb3+5zqz/eLL9UnySvy7IW3+3Nc3bx1cbOCU+PYv
ac+/WmZKvPaC4PbQ0xRyuL15uAa5+hLFTf3FksQenLf8gZYdueHlxztXl4Ur
01I3NXfb6HnBsuDyrz+HbH5vJJoSb8qvHBdv8wW1u87ITWAuMZASX1bPyx3v
IZEQPTc9fMyrtmuPofacUWhdPBRUZAakR5DmJCnx/ft7xKbCcxp8xhPhWgsf
neJtJufDbqu/Zup3s+iEGmGe6DE+5xQTrbKsGeHaQVzsKDFAyK1FXh3VzmI+
/KDVwFV9VyfJc2Vj+w6vvMBtrr5P67E3MufcpC1tmxP8aHpquCxK/R7UkLA6
yqIE11xdV4cjfxd9jqhj9J3al1/szt0DnwVar5zV1lWgh5+7FZEayelOLG56
t5a8gUxG7yLawsO7TPaYKKPfknECPVEH4OiZtgDcFLtnBmJBWYXcd8qgdiAw
4s6bRY+icc3Vde2V8CUNjbuxH8U2ve55+1HqRXcjtbbzc7fmkffp7DsPrx1m
3xlpVDLkapPXu0MD9s4p8TEvPQ1wIbhH9zt2bWXkvYxjkbaaebksftUu62RU
ecHmz3LiAADkOUVKfArD7UvR4TutQ82DhKP9ZxjCZ0/PTXWEnnMdrOOwdCIp
8e1NvJ85un33+jbjz7x+uHBtUDyQEn/m8W49wcWkxGOVXpuL3R15Vu15UWmN
i8XirvXu7ZTbVnu12pMrC1cWTUWzo8snN7o9N3r/i4nbJORuzfsvzFj4+Nx3
vfkYt/sf4rr2MBpVbvnvDmHbI9yuRNoKNPU+9wWQ2MCDLazUY6W8tssfnT8S
HzCWEl8uA+flkcIJ1QnZ5i9z7ZfCrgJqG39zoeVr6EvULz1WSjz89a32e1od
FeMgDT7riWCthY9OGW0m58PuGmtlD94tvl10Mo1wf2t6NJW6VbaeYqJVVj8j
XD8lXNeEWk+RI6fEs+soeZjO/4Jm9BWbOqk2zsUu5dkwVgquuaxtTr6qoerq
z6mhd2yLoiSWaBgLtj+Vm0XJPc/eJI+ae9vTNJYd+sifr8MRNb2CwfpObctn
hjGydoTclPim874tgSFC61k10nTiuN4/pddXU04RdRvItPYu4i08uMt0GBPl
jjgiJ9CTdQAOXtTQgqbVPUuvwECsXmYhBwssYyDQ47JJXrHoUYzWo9gueRlD
4y7sR6kNtx8drCej4bV/1ahX88j8dPadIfad6Gfo+sXVIVfbcCGl5dXdU+Ij
XnoKTQI369z93p4BW4t9xL2MlHBbDV4u63SBIHYyqv8CqXYBAEDIcCnxaQ+3
L0W3Xz4aZB4kPlVy+iF89vTcNEfoedfBOg5Ly02Jb+5A/vJePvy515dfe7pb
2yuvL5/ZX+CZx8tXnh6+aWgxKfFQpa9bbc0F+MoJIO1hr9ybJEouuP9Fotzl
DwRmcuvfIfHtjPDCNee+5sLprNjyT2/31XXmvcTrN3QzrVJzG4a06nscVdve
nRtiR/CW8/JY4YTd+9Z92ampEBqm51oLLc/uPkmx5XOTqE2b3SfW1Bj9rbSb
g7m43g0+84lQrYWPTlltJv5hl83HsESaoG25TLmNsPKavk3lQPQUE62yZKuo
O6zlNqHD8ho1Jd6hjlKdltZT2lFNZX4bILTOvDWXuM1t2330+tpz6kBRlNQy
dTtC01MdsyjhIk7WyMNRs6aaU+sb9sifq8sR9diwfafG5Xfnn+A2B3eEZDUk
jtAN9dCzEPe3N7qyZFmlt/XqOt3Nzv5CSXwgE+9d5LTw0C7TaUwU7Ldkp8Tb
P9cAHYCjF+UOw1pe1WqKB5PZD8TiBRYeCPS6bJJRLHoU4/Uotuu4jKFxPvtR
8uPZj7L3o5rV1ed+uzaP7E9n39m8fohiGXRUMs5qz5MSH/HSU9PuGdK1+906
eggfoC49BXF68bbaWu0reVftck5GNRGCbvdvAABgngZMiU96uH0puqXEl0PM
g+RMlZx6CJ89PTfFEXrudbCOO820UuIe4UeJKfH1Aut731V3mqur670vWVSX
PFj04asftWvOWH4nOJO7d9e+h1X3Wjh1WFscvLLtjTIVWv57N6zZlEf9hE7b
mvbqZbWq+ivZR8VVU5P7a73OT4kvKwfm3BsgHYuHE9rW/PD0zVGDbmv8rYWW
ZVXAGZc1R02JZ3yDqzn6u3vXw1X1bfD5T4RqLXZ0ym0zwQ9bsw01x5gJNMLl
gE0lserY+ShUZTWlnT6stTWhtk0aNSXeuY56psQzKjp1Fm5onOE1l7jNbdud
jpQ2hOIa3zESRUkuld4Rmp7qmEW5e3mqg5JcSeVnULbL1RxEGrZ/GTtUjtQv
zd9b0wbsOzUsX7llV3CboztC15T4VU3vvbu8Gqkrq8PGebPrZtddj8g76mcM
ZIK9i6wWHjsYdhkTBdacdwI9ZQdgJXa3uml0z2q2zUCsXm4hZ10rDu2qp9p5
9ShG7VFc2NA4l/0osZD9KH8/qord+rl788j9dB0+QsRs9p3QZ8gflYy02vqU
eFtt9UuJr4x06al594zo1P3OmoPeffxh9zKSgjOh0RrplBIPjAIaTrsPT8mJ
AwDQZtCU+HK6w+1L0Tklvuw9D5I973rqIXzO9NwkR+gdsi4dhqVS4oU+ik2J
w+QMEU5MyUyJLxsO+2NtYuuKR3vjcnWLNc2INvNAUynAEJ2W8SramvfUTDrb
0WZvsL5T0/KLTiFqzbKeImJ6DMTmznEJ+rMfQX8DjkrGWu2oKXGYhLO2VaMA
AABOykitLD3r6/TzIEyNlHihDylxGMhoJ7z8lHitcYPsDRfx9QaO5N70eXa0
mQeaSgGG6LSMV9HWfLzq4zXb0agzZEo8k2bZShFREAOxmXBcgv7sR9DfSOf/
IVcrJc7lkxIHAGA+jNTKMlZ9GYjMxglS4v/2L1d55t+6PX+y+pIev/v6NFPi
sWuCcBarb0bt/57E7udTx7rv6aRT4u1TeHoDh0x7ttFmNjSVIvTvtJQYuC5x
zXWnVDsatc6XEtcsWykiSmIgNg+OS9Cf/QgGUGhKPHYNXPaAUkiJAwAwH0Zq
ZZESp6cTpMT/839d5Zl/5Q/Pn6y+pMdv3a5K9fe/ml3jnQUr/eH3RR9drfK4
pgaYkvUl64RxZrH2367XCXWUk3JkpXoDB/xcQittZk1TKUPvTst4FW3N25Ve
39VOzdnajka9s6XENctWioiiGIjNguMS9Gc/giFMOCWevM7dOGA/JHtAKaTE
AQCYDyO1skiJ09MJUuLvfLjKM3/ixfMnqy/p8Rt/vCrVPzthCjtc6YuHmzO7
gQwTc3/n8IdL15tc4P69xQe1unX5zuRS4qF16g3sM+3ZTpu5p6kUo1+npbDA
dZFr3iX5r28Pa8iORoNzpcQ1y1aKiLIYiM2B4xL0Zz+CQUw6JZ64zt00YD8i
e0AppMQBAJgPI7WySInT0wlS4nf+6c0q0vzFb50/XH0Zj2+8s0rd3xXp07/P
q+4+cit9sRgrewvzs7hdsU8BjEKnZcJUDt3k9p30tYAkBwcA4GRG6niM15/J
GLDLHlAKbRUAgPnQ+y3LaPVlHmQuTpMS/zdfXkWaf+n3l9/74PwR6wt4rG8k
/i++kFfXPTk7AAAAAAAAEGd2iVJoqwAAzIfeb1nUFz2dJiX+4c+Wv/q5VbD5
N//0/BHr0h8vfmVVkr/4e8s3382r654cbQAAAAAAAIgzu0QptFUAAOZD77cs
6oueTpMSv/Ott5e/8OIq3vwrf7j8q6fnz1qX+PjGO5u7iN89/uiNrOIfgKMN
AAAAAAAAcWaXKIW2CgDAfOj9lkV90dPJUuJ3vvrd5T//g1XC+RMvLn/9Py5/
+8+Xv/v68nde82h5vPiV1X9/449X9w9f30X89BHxpaMNAAAAAAAAOcwuUQpt
FQCA+dD7LYv6oqdTpsTvvPvh8l/+p83dsD06PH7tc6u7sp+Fow0AAAAAAABx
ZpcohbYKAMB86P2WRX3R04lT4mtvvrv88pvL57/skfH4s8XZ8uFrjjYAAAAA
AADEmV2iFNoqAADzofdbFvVFT2dJiVMilQ4AAAAAAECc2SVKoa0CADAfer9l
UV/0JCVOkEoHAAAAAAAgzuwSpdBWAQCYD73fsqgvepISJ0ilAwAAAAAAEGd2
iVJoqwAAzIfeb1nUFz1JiROk0gEAAAAAAIgzu0QptFUAAOZD77cs6ouepMQJ
UukAAAAAAADErWeX3oTJ01YBAJgPvd+yqC96khInSKUDAAAAAAAQ92UAAAAA
zkdKnCCVDgAAAAAAQNx6duncN82CdtoqAADzofdbFvVFT1LiBKl0AAAAAAAA
4swuUQptFQCA+dD7LYv6oicpcYJUOgAAAAAAAHFmlyiFtgoAwHzo/ZZFfdGT
lDhBKh0AAAAAAIA4s0uUQlsFAGA+9H7Lor7oSUqcIJUOAAAAAABAnNklSqGt
AgAwH3q/ZVFf9CQlTpBKBwAAAAAAIM7sEqXQVgEAmA+937KoL3qSEidIpQMA
AAAAABBndolSaKsAAMyH3m9Z1Bc9SYkTpNIBAAAAAACIM7tEKbRVAADmQ++3
LOqLnqTECVLpAAAAAAAAxJldohTaKgAA86H3Wxb1RU9S4gSpdAAAAAAAAOLM
LlEKbRUAgPnQ+y2L+qInKXGCVDoAAAAAAABxZpcohbYKAMB86P2WRX3Rk5Q4
QSodAAAAAACAOLNLlEJbBQBgPvR+y6K+6ElKnCCVDgAAAAAAQJzZJUqhrQIA
MB96v2VRX/QkJU6QSgcAAAAAACDO7BKl0FYBAJgPvd+yqC96khInSKUDAAAA
AAAQF55dWtxeX1092rq+HXvLZmFxc6U0owJtdbTyzFrx7fVq2aubxdBbAQDA
fJwnB2iA0pXc5qU42z4gJU6QSgcAAAAAACAuNru0mSd9JCV+YFMwnQPBQhgZ
pMQBAJiPyEjteJx2KLdnbIDS1Vi5zUCNDN8MBtM4YF6Pm2q2rvtQu9hBupQ4
QSodAAAAAACAuNDs0mb29urm9jS513JStiedgC6nWMYhJQ4AwHxIiZdl3inx
2iFQw4h5t9mpzes+qCp2kC4lTpBKBwAAAAAAIC4yu3Ty0Ot8UrbCxxmkxAEA
mI+MlPiA3V8p8a7OnxI/Z6XVD4E2Xzk/3rhKtj3xutqXjU9KnKlT6QAAAAAA
AMSFk7enzLzOJ2UrfJxBShwAgPmQEi+LlHjNEKgu733/96s7qRee8yNJiTN1
Kh0AAAAAAIC4wOzS6TOv80nZCh9nkBIHAGA+pMTL0je3eXtzkyz04lPim607
fG795+vb9SsPtr3mNachJc7UqXQAAAAAAADimmeXKj8CXbU3B7q4vbm+2i12
dXV9c3s8RVqdaV3cVl5wt3x18Zp3zJ12bZyJPprvrZvZPf5ot4vQCh9eu//S
m+O3OXGxlC0vJb5oKs+910QacFNFH706UdEAAJBn2JT4qtN7fXVVHVVcJcY3
dWtcd66v9l98kxz4tY6hLlSv3ObmftupIcQIKfETD+GTg/OHkPjDZ9/f+KbQ
+eUO0qXECVLpAAAAAAAAxPVLiS82s9nHSxxmch9mhq+vU2vcTeAONdOa/Fnr
7coDU9B1G1I/gRx4bd3rT1YsRYunxK+ukuWZ+h5AsAH3rWgAAMgzbEq8rt+b
Du/ur/E22bl+dPzOsTHUheqe29wV2wlS4ucYwqcb1cMi62f3PnpyNN/wVhcx
SF/cSIkTpNIBAAAAAACIC8wu1U3RbpMG1bt3Ve7OtfeCygzq3uLJ3PYQv9qc
2OrKNiT+nNiCR3s3Vbv7aFeHs74Nrz148eIhW5GagD5dsZQsnhJ/dHBPuW3h
19VUawPOqejNCuZbUQAADCAjJV6j2iFd3RJ51W3d/1Goq0C/dzs0qr54se72
XlVfGh1DXaiOuc3miPiyLvNcs472ZhAeAQ05Vj0enO9C4omYeONPgF3wIF1K
nCCVDgAAAAAAQFz3lPgikSnYf0V1qjT5K9N1Twwy03q0ks1vWl8f/qD18S9c
N/xE9cEE9vGSrcWSvE3Z6YqlYPGU+HWijI6acVYD7lvRAACQZ9iUeOPrj3u5
u7/Ufme4dVX7z1x877hLbrMSEa8t4AFT4ucbwh8+vRmb31afPWxz6R/7uuRB
upQ4QSodAAAAAACAuM4p8dqp0/ST9XO6idUPMtN6+I7bieiDOejjN2uKMRws
ffSxmoqlfgL6hMVSsIyUeCpCka66YAPuW9EAAJAnIyXeGuHeLn97c3N9fXWv
kiNuSonvAraNvduMMdSFys5t1vzUVc1iPRepLHaOIfzB2vdD4vt3Fm8MiV/2
IF1KnCCVDgAAAAAAQFznlHjzPeXqbtxce+ev2EzrYnHbYnEY9n5YcWUiei8m
nphtfvg16nr1E9BNxZI1AZ1TLDPRMyV+8FxeA+5b0QAAkGfYlPji9rr+ftNN
KfG9G1VfXV1f3+yPujYyxlAXKjO3uSuwUP5+iJT4WYbw+y/ZLLCfCj8YlKff
t/xBevvFDClxglQ6AAAAAAAAcT1T4nWzoSNNMbdPDdetZu9uZdWY+OGvW7f9
XndoAjp8Dz0p8QxjpMSjDbhvRQMAQJ4hU+K7Ic7VKuW9uJd8fXKN6Yj53aoO
7zsdGkNdqJzc5m5c214qQ6fETzyET62+bgx+/5f0217AIL39YoaUOEEqHQAA
AAAAgLjC7iV+c91i7zW79Rz8pPVuWvp4grr5h7jbNn4atym7TO4lDgDAfAyY
Et/0XY87qMGU+PbJxe3tzd2Q7Gqb2H1YZc4Y6kJl5TYroeeWW4lfyL3Eq+s/
GJxXnt2N0A/XdAGD9PaLGVLiBKl0AAAAAAAA4jqnxBunaY+fPE8c+mGu+Wge
uvaJ3ZOR322vnYBObruUeD/9UuKHbTKvAfetaAAAyDNcSry+55uZEq++8qA/
nDGGulC5uc29oHj7cgOkxM87hN++we39/xwsunj4Y92K5jBIlxInSKUDAAAA
AAAQ1zklvp3VTkyeJmZhO8y0DhAx2Mw1X18fZcE3MfHr69SUbtMs8n0g4qb2
FtNNrx1mAnq+yYteKfHjeslqwDkVvbiREgcAoK9TpMRvr1tT4rc31+l+7cHo
Jj6GulAdcpu7oHjD2GG4lPiZh/APzfAqERI/GLrXj6YvepAuJU6QSgcAAAAA
ACCue0p8+8Sjq+ubxfaey7c315up7r0XZM20Psxe98/Z1t+g7WHjG6egVx/t
drGLCj98uOv6CejKS7c/Hb6olEqPCejhiqVM8ZT4QbUtbpNtMqcBN1XHXkVf
XwWSHgAA0Ga4lHhlILHfc00MlWruw3y16vRWAsTbVx9HcVvHUBeqW26zPSg+
YEr8zEP4yuC84epC/Se5+EG6lDhBKh0AAAAAAIC4Pinx/XnefbvZ170lYzOt
+1PEvSZdtys6euf6Z1o+WssEdO1L1zdN6zEBPWCxFCmeEk9L3vY72IAzKvrq
OlHRAACQZ8CU+Pam4Uc918C9xA+HIA0d7NgY6kJ1zm22BMUHTYmfdwi/WyS1
qc3Ptmz8owsYpN9KiROk0gEAAAAAAIjrlxJfub8F11VlmvX65vZ4VjRzpvX+
J6Ora635mfN29Vvf/tvQ649WmU0++nB1H+tg69e3LFu/Yff7syVW3LlYShRP
id8VS6oCal4TacD1Fb27Ad32pYlfLQcAgDyDpsSX65HEYcf1+PWpNS4Oesy1
g77127SNoS5Un9zmNsJc/8XWoVLi98ufawi/vaV3Qxy+bSB1wYN0KXGCVDoA
AAAAAABxZpdOJnfungPaKgAA86H3W5ae9bUKGifTxYaRY5pU6UqJE6TSAQAA
AAAAiDO7dCqTmn8ukrYKAMB86P2WZaz6Mo4c0bQKV0qcIJUOAAAAAABAnNml
4a1uA7f60evdneDufxX70YTmn4ukrQIAMB96v2WREp+0EgbpUuIEqXQAAAAA
AADizC4N7/b6UVr6J8QJ0lYBAJgPvd+ySIlPWgmDdClxglQ6AAAAAAAAcWaX
hnd/U7Krq+rM88Fty+hCWwUAYD70fssiJT5pJQzSpcQJUukAAAAAAADEmV2i
FNoqAADzofdbltHqa3G7Mqk4M6OQEidIpQMAAAAAABBndolSaKsAAMyH3m9Z
1Bc9SYkTpNIBAAAAAACIM7tEKbRVAADmQ++3LOqLnqTECVLpAAAAAAAAxJld
ohTaKgAA86H3Wxb1RU9S4gSpdAAAAAAAAOLMLlEKbRUAgPnQ+y2L+qInKXGC
VDoAAAAAAABxZpcohbYKAMB86P2WRX3Rk5Q4QSodAAAAAACAOLNLlEJbBQBg
PvR+y6K+6ElKnCCVDgAAAAAAQJzZJUqhrQIAMB96v2VRX/QkJU6QSgcAAAAA
ACDO7BKl0FYBAJgPvd+yqC966pYSf+Pem8yJSgcAAAAAACDO7BKl0FYBAJgP
vd+yqC966nMvcQAAAAAAAAAAAAAApqZbSvzc2XYAAAAAAAAAAAAAANK6pcQB
AAAAAAAAAAAAAJgmKXEAAAAAAAAAAAAAgEsiJQ4AAAAAAAAAAAAAcEmkxAEA
AAAAAAAAAAAALomUOAAAAAAAAAAAAADAJZESBwAAAAAAAAAAAAC4JFLiAAAA
AAAAAAAAAACXREocAAAAAAAAAAAAAOCSSIkDAAAAAAAAAAAAAFwSKXEAAAAA
AAAAAAAAgEsiJQ4AAAAAAAAAAAAAcEmkxAEAAAAAAAAAAAAALsk6Jf7++++f
e0MAAAAAAAAAAAAAABjAhx9++OTJkx/+8Ifn3hAAAAAAAAAAAAAAAAbw85//
/MmTJ2+99dZHH3107m0BAAAAAAAAAAAAAGAAf/u3f/vkyZMf/ehH594QAAAA
AAAAAAAAAAAG8NFHH7311ltPnjx5//33P/7443NvDgAAAAAAAAAAAAAAff34
xz9+cu/73//++++//3cAAAAAAAAAAAAAAJRpGxT/x3/8xx/84AdPAAAAAAAA
AAAAAAAoWfWO4h9//PFPfvKTc+fWAQAAAAAAAAAAAADobgkAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAfvzjH7/zzjvf
//7333rrrbv/Pn369C2A2bg76P3whz98eu/uYPjBBx+c+6gMAAAAAAAAAAAA
0Nc777zz1ltvPXny5O5//u7v/u699957F2A27g56//AP//D+++/fHQbvDoZ3
fzn3URkAAAAAAAAAAACgrx/84Aff+973Pvjgg5/+9Kc///nPP/roo58BzMbd
Qe/uSPjxxx//5Cc/efLkyQ9/+MNzH5UBAAAAAAAAAAAA+nr69Onbb7/905/+
9Mc//vEHH3zwY4CZ+fDeRx999KMf/ejukHjuozIAAAAAAAAAAABAX2+99dZ7
773385///IMPPvjwww8/AJiZu0PfT37yk48//vj9999/8uTJuY/KAAAAAAAA
AAAAAH299dZb77777jol/oF7iQPzsw6K3x0G33vvPSlxAAAAAAAAAAAA4AI8
efLk3Xff/eijj6TEgXmSEgcAAAAAAAAAAAAuzPpe4sGU+Hvvvff48eM/6e2v
//qvTxP+BGhVTYnfHRLPfVQGAAAAAAAAAAAA6OssKfE7pwl/ArSSEgcAAAAA
AAAAAAAuTFZKfKvzLcHvXiIlDkyKlDgAAAAAAAAAAABwYfqkxDukMd977z0p
cWBSpMQBAAAAAAAAAACAC5OVEn/vvfceP378Jw+6BTKlxIFJkRIHAAAAAAAA
AAAALsywKfH3fvCDu0fzSqTEGcIbX3zhhRdeeu1v5vjuDExKHAAAAAAAAAAA
ALgwWSnxrWTS+70f/OCP/vv/7u7xvf/vjdzXxvzNay+9cOyll1764muvvSGw
u/PGF1+6+BDzJaXE/+aN17740kt7bfqLF115UyMlDgAAAADw/7d3b7mJI20Y
gDc09//22AQX/wZaslgDS2ih2QIa0p2+idPpTB+kjsZgbHwo2+VgmuA8j0Yz
AerwuVz46qUGAAAAAJiZyVPi///fX/1B8QlS4suKarT21cnaPKX7xnO5I4q8
kZT4Wcs+l5R45acP9S2d1L5CN7FFb5aUOAAAAAAAAAAAADAzo1LiaZquVqsP
hXaDf/7eDAbFz06Jt6Oy2+2mOIp5mfSdYz5y3DflJooc5bwrmkdK/DDOftfW
R9pnwtfVnTy/u/+mSIkDAAAAAAAAAAAAMzNtSvw5Iih+gZR49dPmGcznj/tG
3ESRo0iJxw8zv7v/pkiJAwAAAAAAAAAAADMzKiVe6k969wfFL5YSfy5PZh6b
pb2JCO5NFDmKlHj8Cszv7r8pUuIAAAAAAAAAAADAzFwiJf7cGxS/ZEo8GBPf
btbJMj9m/PBhst6UHxfnj9dUuvf17ZZXsT/T/NB/sHdzlkbDoSL7CnhtSVe/
oto8+wGaE51y2vWS2i2jShrZMpASb55lv9kXNZDrjvhZQ+xa9Recj5LfwKR9
5v7gavdUP/GuaC5G8N3T5UxDShwAAAAAAAAAAACYmcGUeHp/n+e9X/1P1r06
4EVT4q18dJGxXS6TvSKjWjTY51b3bx/TrbkiujrQd7CIdV7usfci3PsUAj5O
f3pZtOwtMmoVxpV0/SsqgsyL2kz1G3/MaW/y2eq3KJw07i1pZMtmSnybr9Di
FK8+vjEQEy/3WOf9HFiryIKLWPWxqtp9i1ntoIl3RTD73czedzY8i5Q4AAAA
AAAAAAAAMDNzS4k386PbddI4FzkwSMe4UX1DiijuMjBLvXcrW5y3LN8eP3dl
2HZKPKakq19RsKh22zLvXJ8q0Du+pJEty0mC/WLOEi/bHQPT3Vnx8FpFF3zs
v1yGT+UeXO2OyifeFe19ewqXt1a/LyRev4D2sE1S4gAAAAAAAAAAAMDMDKbE
gwaT3v/8vcmz5dm/s79H9e32ipR4VJP4AHbcIcahSPTp/dM8xwhsaLh2SZOk
xAdLuv4VdUV6m+93ldSsIb6kMcVXUuLRUfse21NUfH+4dnuk4FqNKDh4JPdz
/GoHTb8rWke07z/ODysPL/5Qccc5h748UuIAAAAAAAAAAADAzFwiJd4TER/s
2+vVKfHtZrNeJ0my3B+m3D6auHfcgb4hnRHbRry1L+3aqmmKlPhwSVe/ou4R
QlNFJI/jSxpTfNF2ioh4OUclK94ccORadSTgw2eRx6x20AV2Rb1pHhLf5P/t
jJJ3qQ/d+wMPKXEAAAAAAAAAAABgZkalxNM0Xa1WHwrBNv0R8edLp8RbhxFX
Dmle7IPe+7x3ZEo8qm9nEcPp2f6DyYPHKr/xlPj5V1Sced0lKnpc/Si+pFHF
H4/Lni4iXip3Xa2S7rWKKzi8e+JXu3uKiXdF644c+lVj4vXIeL/61PnYoUKk
xAEAAAAAAAAAAICZmTYlPhgRf75wSryRWy1Pet5UurRDq8FxI/tGVNH4QEr8
udo6mBLfB/KDTnfjDaTEl8dfDQSDx+c4ZtArFzdNSrx1xn70aveUOe2uqDbe
f3T85NCqFRgfVIxWOSw+WIiUOAAAAAAAAAAAADAzo1LipWDSO72/H4yId/WN
MxSUboZrw/HUdlY0PoLbnTONahVzvnPX/LeTEj/riuLq6W1Ymyi+pFHFl7OX
PyaY8jzx9np3b9G4gjuS2tGrHVdleNjX7Ir9G5WQeCUmXns3or6ibW8VUuIA
AAAAAAAAAADAzEyeEu+PiHf1jRMRN619GkyxHtsNpcRj+4bERrJ7hmuXdAsp
8QmuKPoy2+dthz+IL2lM8dXrziecNCjeuit9x93HFNyREh+zqTqqnHpXlKU2
4uDHl6dDxccUtx3Y5lLiAAAAAAAAAAAAwMyMSomnabparT4UhpOaIdOnxLfb
TbI85FAXyaZ92HLtoOKs5WIRTonXs6exfUPiI9nhgPH2+PZAQWMK+EMp8Smu
qGzavM2bJGlPtFjWGoYmii9pZMtTvjzUMWJlt+skq77ZYhsIwPev1XDBHSnx
6NUOusiuONa63H+jW+u5TPbfweHvQP1JMfx/AJASBwAAAAAAAAAAAGbmBlPi
hwRpYVFaBkKtRYesR5Ikecg7WbcDs6eB963ygWL7BoyJZJfTHOdJypetMHyg
yOgC/lhKfIorao+wbI+Qz3wcvXKP+iaKL2moZcdh382TyQcW9jTbormhmz3j
1yo4QGdKPHK1gy6zKwJrWR8h6ocS40iJAwAAAAAAAAAAADMzKiVeunJKvGYf
Ol03T0Ku9ClPAC+C5OHAbKVZea5ybN+mkZHsylnoxwvqup5QkXEF/MGU+CRX
tN2sk9pvAFpDlDNnTZfV2xSeKb6kqJah666Fm2NC4sVl1i+0s7LOtYoouH/j
Dq920AV3xSIw8pjT9EeSEgcAAAAAAAAAAABm5pyU+MePH0dFMdM0zbqckzCH
G3EIOl8i0MwFSIkDAAAAAAAAAAAAMzMqJZ6m6Wq1+jCFPxP+hOs4nHstJH4r
pMQBAAAAAAAAAACAmblKSnzsIeRwW4TEb4uUOAAAAAAAAAAAADAzo1LiAPMj
JQ4AAAAAAAAAAADMzG63S9NUShx4t8qU+OPjo5Q4AAAAAAAAAAAAMAO73e7p
6Sn74/vBvwDvTPbo+/HjR/YY/PbtW/ZIvPZTGQAAAAAAAAAAAOBcd3d3j4+P
Ly8vPw6+A7wz+dMvex5mD0MpcQAAAAAAAAAAAGAG7g9+/vz5+/fv7OVvgHcm
e/S9vLz8+vUrfx5e+6kMAAAAAAAAAAAAcK40TT9//rzb7R4eHr5+/Zq9fAB4
N7KH3tPT0+Pj493dXfYwzN659lMZAAAAAAAAAAAA4Fzfv39/eHj49OnTbre7
v7/P/rgDeDeyh96XL18+H2QPw+yReO2nMgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAQ9h8jeq4H
    "], {{0, 242.}, {1969., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1969., 242.},
  PlotRange->{{0, 1969.}, {0, 242.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->159672880,ExpressionUUID->"0cd03362-e3da-4b3e-8a4e-22c5bf5b7bc4"]
}, Open  ]],

Cell[TextData[{
 "Alternatively you can set the ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "065871de-c982-4d2a-a894-008e15f9e4da"],
 " option:"
}], "ExampleText",
 CellID->154049162,ExpressionUUID->"6d80ccdb-d0cc-4585-ad93-4c8148e606cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtractCSSFromXML", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
   "]"}], "[", 
  RowBox[{"[", 
   RowBox[{";;", "3"}], "]"}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->409357899,ExpressionUUID->"3a0a0e5e-85bc-41ec-b689-63aba9732277"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
705e/cDraK8//cvJr/67yY/+yrQ47v73G6/2UugAAAAAAACMltElcqGuAgAw
Hlq/eVFedHSwlPin/s00kPzjvz75gw+On5H2mr++/t3JT/3utFx+8nPTGH/v
hQ4AAAAAAMBoGV0iF+oqAADjofWbF+VFR4dJiX/xg2kU+WMPJ1/81vGj0V7F
1/vfn/zYr01L582m8nS1AQAAAAAAIM7oErlQVwEAGA+t37woLzo6TEr87Lem
OeRPv3P8ULTX7uv3vzEtnR95OPneR30WOgAAAAAAAGNmdIlcqKsAAIyH1m9e
lBcdHSAl/tEPp7OI33trOm310RPRXqWvv/N4WkBf/VZvhQ4AAAAAAMDIGV0i
F+oqAADjofWbF+VFRwdIiX/lT6YJ5J/4jeNnob2qXj99NS2jx/+ht0IHAAAA
AABg5IwukQt1FQCA8dD6zYvyoqMDpMR/9Y+nCeSfvjp+Ftqr6vXLz6dl9GZt
kbraAAAAAAAAEGd0iVyoqwAAjIfWb16UFx0dICX+S380TSB/+p3jZ6G9ql53
pSMlfgS3l/fv3bm4bruC64t7M/cvb/vcL8hc51OrhfnZ6FwEODXHuKfAIWnD
AB25VYY4TNRSQULGepjG+r1DHJx8BEaXjlucKlOZUfYWDzoSmlDvFoOB89JY
fG7jg0Oqw532xaVgeEZ5KTgVjZcO+rDHcyR+UUq5fLnUAQXHyQG6ELUlt0lH
B0iJ/+KYUuJf++1Pvjbz8d/+5r628s6b80289pkv9bXOflPit9cX92cuSprD
t7fXl9O3763Nlry+LW06z5feXPhu6bvFq7bdtPwyWB2y57tSD/e+1C6d439A
t5cXBZ06h3VVZUyHNOrEU+KFIi/f3mKBkZQ21cquDotL/t63vTgLY6dE0sKZ
KG0L7dyD+yuN6Zo3bsA19/a0FQf2+fbyYvFde61a6wp8yKtZSW30qGJvUg/t
MYpi2dTevJLu1o+yi20/J2Gn/Y5dV/tswyT2NY4otZtzFKO/mUbpKyWquHB1
OBLDvlVqUQTpZiZxHh1CVudR7Pls27v1cL93slM4d/a0xT5WW/ooek8d9hak
xLM0ymjocFLis4eLl9ebiy5Ko6RlNqQ6LCV+YkZ1KWhurOR1KOovHdeX0zaC
6t6ZlDiQs0jr9xT68qdif72VVy+ePZ559uVX+1h/X159+dliN18Mej8HS0q8
35eUeN3AUuPNY/MD1xf1i2/fMmLLD2mYuJ97X7jv4fjvRfXx3/yuHZ/ySz6k
GE9KvPxLGr5nru7qsO+6WjL6XX2SnF6wrawtVFMcHb953e2926qD+1zcgf4u
PMWNV6215srb9qJ80CzKqIZYypxySrywcLe/FOy234dNiSf2NY4otZtzNCO/
mcbpKyUa2VN9LYq0tdQcKt3MIudRxTIjPo8iMfHWN+tBV480p3DuDDglXvoo
ej8d9jakxLM0yucWQ0mJzw5+4Y3NRUuKJqkO77lopcRPzKguBSeaEq+8dGxf
asaj12otJQ7kTEo8L/vqrbx49tbS46GnxB+vdvXZi2PvTYbyTom/nDx8Onn9
ren656/Xn06evNxY5t2XkwdvF5Z5e/Lg+fQft1YVXExKvLG4KxvCq8eU0z9L
LU4md1uYyG19F1jdaDaXvp0vvXunSV2+ZNcOfwvq6943X0/9ahz/fWlKiU8P
yFSnjSRWlcwPaXejSInfv7ioGl4cfQVgoWy44HYdjTt0DRnR0+TSr7o8cwvT
d61Lo9NhmV/yNufqvbv79rDqpH3u+cq72PZOA6VsoT6zKCUGnEXJXQ4p8c1N
lxRW+TvFJvC8fXy4fU3XS01M7GscUZduywCM/rpRSl8pUf9X0yE/1deiSF2L
bmaM86hqoRGfR80x8fZ/0TXk6pHoFM6dAafEZ23aabP2YmdVQ6hEUuJZGmX/
Yxgp8dmhrwmBS4nvi0tBmVFeCsrldyiCl44RVnkp8XGWO1AiISWedV/+VOyp
tzIPiQ88H160yIqLiacbVkp8lvqexrOL+e33Jg+eTh6+t73wk6frcPjG6+31
xyPLxBeTEg8U+iKptN0OXg/GV7eQp4Gm9Y8cXdQvvrFwi+U3ZJ8Sj27I8d+H
5pR4DxuRfEgzjpT45W3ViTf6CsBCVa1c3hMO/DQzv0eobZW3ha4vL8p+3rnp
BhraXvkvR3dfdeI+7w5gtbd9oSu/oMmiZO6EU+Krd3v5g4196y8VFe5rHFGn
bssAjP66UUpfKdGonuprUbRYi25mhPOoeqmkt1IN+jxqiol3+NmPAVePVKdw
7gw6JT5X+ki6zw57O1LiWRpl/2MIKfHS1ObGaVyyhJR4L1wKyozyUlAmy19x
a7p0DKGNcBRS4i51wIKUeF7201uZZ64zColPFsH2vHZ5GIaWEn99J5v97vPZ
JOHPN5ac/2NDtPu9wDLxxaTEE1Li2xfz5dxy4Yt8arCpWxDq5FPijv8+9ZoS
v768LF1c8iHNWFLiVWOQo68ALFTWyshvYR9wd05O2vwb+zth9/fYumKfe3yg
XKgtdVd0WZRM9NS8qV9++ucS+zuSbVPihSUGXNKda2JyX+OIevjTnOMazXWj
lL5ST8b0VF+LotVadDMDnEd1iyW8lWrY51F9R7tL92y41SPZKZw7e+qV9Lla
KfF2TuhM69Eo+x8DSImXDyxJiR+ES0GZUV4KSuTZI2pOifc55VlGpMRHWOhA
OSnxvOwzJZ7XxNxS4i0NJyX+7svptOHzlPiTl7P/nL2eLFPi8/9ch8mXQe7i
NOPTNTxdRLtXM4S/Xpyc/OXGMvHF2qTE3//SG59YBLo//onPf+H9neXf/9Jn
P/PJj7+29IlPvvFOWbZ8a7GVWUr8C59ZbmI3lx7Ok+83Jd4iGjHIlHLh19Jn
G7tfPnVnwsJVEwXcXl/cL3x4+quuF5c1G2vY7+yP//Rgbh6R2SHZ+DH7+YKF
A7r+zfjtX88qvDErmevby8ru2245bvwy/WVxnwp7N19Tase65jD2mXyofXN7
Q4X/ntfLjUNRvvX6g9bO3TpTalc/u117gu8su12Lko5zmuLzhtJaU7rtNufR
1vdcDUndbr/RsTIELnppZRr+stU7elmy8ADqdprUlHj8LGguss1K3nC1rD4j
Yru0efGPnfJx6WU0kJT4Huc22XtKfKPuln+RmkrVUN/qWwsltTHp+tP0t2Nb
O1G5k8tt93YVTdbb1am/5k3ttWLP0d8uKfGeQtRpJVJ7rJraMKl71iYGn3Sn
jtfw5lOmbVUJnIzJN6M930zbtEUH3dTRV6qWepAThhiDp2rnJxv7OCxTWhSr
bQeO8Ol1M5M4jyo5j1bbDjcGSitG6bHrUD2i3y7xKyQb47mzp15Jn6s9iZT4
EZ7+VZXBqsNT2njerDslfav4gEXj46+kE7/Ns7L+e4t5CtTVDmXRfLOrPF9n
y67+ebrQ1l0lWOgJd+fWzba+UuIuBadwKUgq0HY7nDDm20Hqw/ahfPGmS8fy
X6NnbMvKXNeG6/WJSuSaEGz/Vx6C2DnSU7YhflFKOaQD7l8Ah9dvSny4fflT
ISW+JCXe0kBS4nVzg2++nmwu/KR6nav494PndZsOLpacEv/Ebq77zS+ULbnt
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
6RKl26jb8NY3Tzlo7SwPVvPcqMm73cMJXvodo8c5ze6mtk7zmgrQ5TyqXG3F
A4ZIZQhf9BLKNP5lax7q7G57GHU7zWZieEPJE52ks6CxyJKeMlXdDYM305rq
0VuCNqWMIhf/4jr3Mkq7+qPpftfesM/Rrx7YxFbhV1SJTlmU8v2syaKErj/9
ZFH2cBVtp+3VaT/Nm8jy6y33+ySo+qoUGyfqK0kdLpGk6+rxUuIJd+ratbe5
U8e6LSlrTrgZHeZmOqko96qxnSE2dfSVEiQc5OSrb2MPou2TjX0eFi2K9SaD
R/iUupltOY9K1+08SjzC1TeRqqJoUT2Svp1zp2ZP2hyWPfVK+lxtede8jw57
Jwkp8WM8/dvaenUEK7Vv1XbAouTNNtHQhO7JHnqLmdpTSjx4s+sweJD0gLTN
3TnebOs2BuJSUP9mdpeCpAIdwg5XrS61Quf1xeMnbXNl7voYrY8nKoEuavLB
anfkO2Yb4heltCo39P4FcFAJKfGs+/KnYi8p8Tyn5c5zr48v65R441ziq9eT
57M1FxPgZZ8NLhZJiW/O4L3KbM/y3u9//uMlSfLiYq+98U71YiUp8dWs48s8
+eqzhWX2mxKv/tGpcO+7yeznJAozvzVd38PL13fwkt5NW9Xu3bQwDj6dzu7i
8vq6YSLuRrkf/+markvn+0vrSdVtpWIkqc564S4p8fV2Qs2dHpMPlU8Wtj4T
eHi1VflDB217TbfXMav61FD70ne7+wleXhGCxzlN2aY2NlS6n93Po/gbCZUh
etFLKNP4lw0+3RtS3U5Ttuf3N35/qbhY2p2rqci6BdsS78vV1aP5jOu1jBJ+
gHP1a6x77Kz21gBYrq95n5ePSht/RqR6IxUPW8v//fhZlIrK2zWLsoer6PaO
7/PqtK/mTXD5NpGM6Ka7psRrWrs9l0jSdbXbo7N2l5posyRWwzvcqedbqey2
pKw55WZ0kJtpxfIlXZShNnX0lRZr6v0gJ4z+pp2qBz95m7+kFkXCET6pbubO
upxHbTiPCm+kHOGEKE/76pHy7Zw7PZ87e+qV9LnaikfS3Tvs3XRMie/76V9x
C7URrNS+VdsBi5J3e4qGHrC3mKkTTIkn3Uf6aLaVfK/GO8r6wuRSUP/uIC4F
eyvQIexwxZaTr4SD+OJx4Y8GKnONWEq8yxOVcBc1+WClHvlesg3xi1JalTta
/wIYon5T4sPty5+KnlPir169+PKz6ZzcR5hJfD4Z+I547HuxgsfPvvziVVbT
oB9X1inx1xPn+n73vUIIfHMrLRbbZ0q8drGylPjqH+fbXe7G1lzl+0yJrxrH
Va3HHi/HyxtEdI1Ny0f64MHPJi1cfjctv3HeL/uFoJjMj3/x8fe0LXA7Myk9
es2d06Q/YY61LlqnxNdNmOYj2X/yIVh1453KpINWvi9p6o5a8uOFHk7wiveS
LhFBpSspPqoqqQB9nEfhNxIrQ+ii1+L5RvOXjT0cHlTdThOsb2l3rkmsyLoF
2xJ3KWkQpHxl/ZRRTVtoc7cOEBGfbaflI+zSdUX3+TZ2YlV9uul8K0sunV4W
ZR9X0dK9SRSqSnts3sSXT9mJpE23TYk3L9R3iSRdVzu2Tlr0NRKaJZEa3uVO
Xb5jy8WT1px4M9r/zbT4gdU/ly01zKaOvtL2vvR4kKMHLH6qHv3krdn30Iq1
KCrXknE3s+SoJXIeOY9Ch6H5QVBlS7BT9Yh/O+fOes/6OXf21Cvpc7XVj6S7
ddg76jkl3vPTv/Un15PdVRzhxL5V2wGLg0dD99JbzJOUeOdmW/WZWCN2DFwK
BnIp2FeBDmKHS7fb4qQcxBeP6yMl3tNjtC5PVBK6qC1T4tEj30dnufhu40Wp
1cXz8P0LYIj6TIkPuS9/KnpOic/n437r2YsjpKw7p8Sn61h9gb3t5skZSkr8
5eTJe8upvN+ePHxv9p+z18Ons0D408V/vvuDyZOn67m+n6REuKev92Lx7+Bi
wZT4Ku/92ptfmP7Ll9547bWyFPfWv6/+c/6pxesLn/lkSUp8lTCfRsqL//9Q
KfHb5aQh1Q+9+48pR3tlDctHUuLBd9NWVf986PZ68UMcHW9op3H8K+tVtCeV
8ke+obxP1Ye336k+SoVGTIufm2/ep4bFN75lw3BY4JAmHbSdrVwENXeDG3d7
673eTvCGQ1h/nNM0BtJ397OX8yh1+D71e9Ze9BLO7viXTUqJD6Nup0lKibe4
RNcVWdJTpsSi6TUl3msZ1bSFCgsdKCI+6VZ5N1cU3udVm6PdH7el9u5PPIvS
61V0ZxN7uzrtr3kTXb74GKqv8EN1mURKKxCj7rtEkq6rHZsn6X2NlGZJ4c3K
Gt7bxW6n25K05pY3o/3dTDc+sfj38mevw2zq6Cutt9L3QQ4esIRT9fgnb/ku
1tGiiKx4/c8ZdzMXn3UeJXMebaw17QiX3Xx319CteiSnOJw7vZ07e+qV9Lna
qkfSHTvsXfWbEu/76d9k8+Be1DwFSexbtR2wOHg0dC+9xTxJiXdutpV+r6Y7
SWwgwKVgIJeCvgq0y3P+ve1w/R7GDeKLx/WYEu/6GK3DE5WULmrLlHjwyPeV
bYhflNL6SkfrXwBD1GNKfNB9+VPR91zii5nEjzCV+Dwl3mm7y5z542eH3/t8
DSQlPp8wPPJ6Uoxwz1LcT14WoubPp3nyea77wVuTB88L784WePh0O/4dXKx9
Svz9L72xmCF8FdtezRk+/ZcvLILi3/zCZyoXW67tm+uI+HZKfL3pNz6zmFf8
jcj87X2lxGfmF+XK596t+lHV24mvr2H5+l5e7Z1m+82khcNPfG4r76cxOR//
xlBOtCdVdwyrum+hL9g+JT4p9u5Cy/WafCgc21ahlu2i6fC0JCo1phjZ7aRz
NqkW7a6kwzPe0KZWW7qseMTU8TyKv9G5Muxe9OJlmvBlg9eyIdXtNquNnjDB
O1fFOraLLOkpU1XRRHep1TUsUbyMqtpCxR1qDrz1omPrYSFhn2u/e3xT9Qev
+O7Rsyi7+1R9wUjIouzjKtpSu6vTnpo3oeVTwxhpm26VEk9tONeKlkjVrTn1
dEnbq+BXTGqWlK9h6+v0d6feLq2UNXe/GfV8My15o+IyPdimjr5SktS2SvwI
NH/++Cdv6R5qUaQd4RF0M5s5j3b20HnU7ggXPtRUxdtWj4Rv59yZL9fbubOn
Xkmfqy1/JN21w95Zt5T43p/+ba+z+llIYt+qrmgTH38lXdYS2rB77S3mKJwS
71wWZW92eJaZ1HE5dEq8ny/iUlDYcj6XgqT22xB2uHYH0z+cyxfvIyXe02O0
9k9UkrqobVPioSPfT2e5ZFV1YzUpVW7w/QvgkPpLiQ+7L38qek6Jz8zD1gfP
iXdNiR9pt7M3lJT4e5MHT6eveTZ7/v8Xr7cXae35f84z2w/frk6SF+LfNWnz
B+8tNh1cLDUlXmod237nzchi9WvbSokXZiyf25iB/DAp8cqnjatWa12C4vpy
+YBz+le9l9VZpJ3+fOryWxpuJTUf3+0StFm40Lm7rPh75Y5d2oyPf3VbYvF7
I+GeVE3/bffw1oer7hojl4GBykBKfFIonEC+qN/kw/pr3m/qOYbqc8JBa2N5
oCLDKym7nXTOVn/H28umEdG645ym6S8TliLD9ynnUcIb4coQvujFyzTly65q
VcUD8cWiA6rbaaK3jpSzIFpkSU+ZKvuGsRMzbRCkjbQyqhx5Xf5OVs9FfVcm
pbfg2vodXnnKPncdc2567p4yLFL3Vn9ZlOraWJOw2smiBNdcXFeLq2gbXa5O
+2jeNC9/u74P9nxFbXy4VVlWgUZ46l5ESiTl1lzXhkncs1hfI+FOHa3h4VMm
uduS0AZIGdE7zM10552mANwQmzr6SkFJB7nrU/3KRvUeT94kWhS1ay6ua+MI
n1I3sx3nUWzXq953HpV96K6n1nR/blc90r6dc2f52X7OnT31Svpcbekj6a4d
9u46pcQP8PRvd+uFIFbtzuy8lZwQ3sdlLeVZ2V57ixmK19WuZVH6ZvvnOUkP
SNvcnRPe+P/Zu59QWbL7TvBvJ++865171/RmmI1d9nC9aPDMMDC72RSWFtW7
66VXRtBtdRV0LQzd4AvtKg1Ycgs8mNI8ZJpquB7MVKtshDWawVMMQhJ0CgpZ
evUklVV/bKtKlkqVc/Nm3szIzBMRvxN/MuNkfD4kRb2bkZGR55yIOCfONyN7
XZJ1KGh+l+IOBV36bz03eKiUeL8cWlkfPL7TNi45yGW07ldUsoao+dWbsY8M
M1hOP1t3UMoq0mmPL4ATO0VKfApj+UsxRkr8THnrnilxIfGOJpIS397E+5mj
23evbzP+zOuHC9cGxQMp8Wce79YTXKx/Snx3d/H7x95dwWsX+4tPHy/wmeef
TabEV+usfbsTpcTrc7G76d3VReNFdZS6WNwd8vcGwdvx+tVqFr+ycGXRVMwz
unxyoxtOag8XYVc/x7jt4e/WvP/CjIWPz33Xm49xu/8h9ouni3LLf3fxZhvo
2JVI1khqVzPVNW038GALK/VYKa/t8sfjseMPGEuJL6u1U1dKIyUfqrO96bd+
6Mvtl8KuAmobf3Oh5Wu4UDbkZrfu4JW5r7322FyDreW8vx1tl3AarvRU9vSa
i6A99qOsJ4KNIXzQy6jTnA+7q5tKle4W3y46mba9vzU9mkrdKlv3gmiV1V9l
qr/MVNeEojtmbBIkX3YdJY/+4WrLfsWmTqqNc7FLpjZcFQyuOb7N9ae90Jra
oiiJJRomeNqfys2i5J5TbpJHoNRMTWMea6ijaL4OR6f0Cgbr3rQtnxnGyGrg
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
oDOnyhDFRCMNJGSuxTTXzx2icAYVnl1a3F5fXT3aUv6cmplQAADm4zy9X8Pt
roxW6OkEKfF/NaeU+Buf/9Qv33v289+ZbUr8/kLeynUiDrBY3N6snt5d6Ht0
v+TtIhkdWC+9v/Dd0neL17132/IPweqQkc9KA5z7NqsIr0P5n9Di5rqiVzim
qanMqUij+uxa6/IcpqAqdZNOR20WmEm1UC+1G2+OzaO/92Z3iQX4shYuRLLT
cnSyHK42VmveO1M2nITzVlzgNlfUHnsXN9eb+hl0d9jtdKc8Aif2INdBRpNb
tOeoiod+/P7R/7h9pE4Qg++E+dsdOxcMmRLPHMicUe4Y6ixm3wGIMhDLVHPg
6lES0z5V6lEEGRpnsR+dQlH7Uezib9ez9XQ/d7ZL2HdGeschVpu8zp01YI/N
Lh1X4yU0zpU596hLE50JzblcNuJVOwAA6CHS+72E4falGCslHqiR4ZvBGILT
cxczQs8flkqJS4kHRSu9Ye6n9aix/4Lb6+bFDw8xseWnNJM7zLkvnL1Q/qOo
L//9z9rzQrxwQo6Ou9bqtHg1ZEHt1U1qlabCWWvajcfunCb6wPWHtYvpMG+l
Oi0N1dHzkzedh/utusRt3r1F47G3ugHDHSyrBVa31ob+VdfY60mzKLO/g/Ml
p8QrC/f7GmK/7T5tSjxzIHNGuWOos5l5ByDOQCzTzKYM9Cjy1tJQVIbGVfaj
mmVmvB9FYuKdT9aTbh55LmHfmXBKPHmdO2vAHppd2rzN1anisyccOM+5R12a
vjmZo0oe76odAAD0JCVelnmnxFuG8BnTcxcxQu82LC07Jf50+eLj5TMvrNa/
fjzzePnK071lvvZ0+dzLlWVeXj73+uqPB6sKLjZ4SvyN177w6U/+8sZn/uIC
UuK1u+W2zV1dXe99c2FR+TLHbq/ctuf9pRfrpY8PMbnLJzbt9Kegoc596/U0
r0b5j6UtJb4qkJVeb5LZVAov0v46JsPSPYQeNo3j+rqujzH7mmIjcRxZLHb9
2FO3kBmFS5Mf9WHPrcxJ7mqjV7GsjzX73+DcJaT7rLrEbc469g58tWBTXke9
n9RCQ2ZREiacRSldCSnx/bdOVFb6mWr/et35Pt225hukJWYOZM6oz5hoAmZ/
3EgyEMs0/NF0ylMGehS5azE0jrEf1S004/2oPSbefXZrys0j0yXsOxNOid/3
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
y6QaYZ5gjzbvFLOMVdkQKfHwJvVJiQ9aRw2dlv3NOkHc+v59QknQ4LoK3Obw
sXfR6xjdeoxIJZcuL4syxpE/uTWZQk1pxL5TfPmcjch6664p8faFhq6RrHNB
v5R4l4FMRlcq0sL79C7SG/aweNaaM0+g43cAqi/Y/jm11DS7ZwZih9syYCFH
Cyy+q559523Y9tCK9Shq11Lw0DhRapnsR/ajUDEkXpQ++Tatu0PziH86+85u
y4bZd0YalQy52vrr3W0D9p4p8XEuPfX4EscA19+O3q1+UNilOdFVn5R42wi9
9apdt5R4YyMCAIB6Q6bEpzzcvhQ5o5WB50GyUuInHsK3OI4snmGEfsI8UuOw
dCop8afLV77+cCvvl5cvfv3+n/ePFx/fB8Ifb/75tZ8uX3m8u9f3KzkR7tXj
67H4d3AxKfGtxcP3GeqvSw8fU45O1bYsn/lllqZn81bVPF+xuN38EEe/A8CF
lH9tu8pLiccS5FnRt84p8eoppPdPUqbeuWXxvU/ZMmMVKNI+ecG7w0fQdncI
5aWmmRKvvsfxuw3S4HOnwnNrrfHolLEbxj9sVkp8Go0wT1ZKvMOxtKnKhkiJ
hzepT0p80Dpq6LRUFjrdBMtgiesSt/leznmr6zfncgduF55FGfTIf/QWox1R
x+s7RZevXuMapK+wbKqTSG0FYtRD10jWuaBnSjx/IJPTlao8WdvCBzzYHYyJ
stbc8QQ6Xgdg7xWbv6cv7E6ze2YgtnuXoQs561px6HOff+dNb2ITPYrIind/
LnhovHmt/Sib/WhvrXklnDr5Hq+hX/PITonbdwbbd0YalQy52rrr3e0D9sLu
Jd7aQJPHnbzu994TzYefS086TMtoKfHIVbtuM1zVvMFg1yoAAJiDAVPikx5u
X4qs0cqw8yB5zeC0Q/g2R5HFM4zQT5hHahyWTiQlvr5heOTxSjXCfZ/ifuVp
JWr++ipPvs51P/fC8rnXK8/eL/Di48P4d3AxKfH42aH20vRgFyhOmlJu3M8P
n8xaODzjvKg9n8aUXP6tuZnMlHhsTiknKdw9Jb48OC+3LzdoOKFStp1yJ4dV
M2i8Oi2cfpx4SnxXdjc1vaCeDT7+RO+Pe3x0ireZjA8bPOhMqRF2WW20ZQdP
MTXrOKyyfiGxzE3qsW+GxeuortNS3aD2QdMgep7mN0rc5oO1tY89u79f8y6S
ePbsWZTjbWqbD4xlaUY48nfU7Yg6Ut8ptHxuGCPvrTulxHN75Y2iNVLXncjd
XfK2KvgRs7pS6TUcfJzheheHtZWz5v4n0IE7AIknag7Tk+2eGYhlye1fxUug
/fXn33mTW6hHkVfCMxgat7MfHW2h/ahbCVde1NbEuzaPjE9n31kvN9i+M9Ko
ZMjVpq93RwbsnVPiY1566j1cqRXpfu+2oGEbTrCXcaBXSrwtGdN21S7rZHTw
99thr9UBADAHw6XEpz3cvhS5o5UB50GClTbJIfzRZOqER+gD5JEah6VTSYl/
ffnc49Vjnc1e///m8fImrb3+5zqz/eLL9UnySvy7IW3+3Nc3bx1cbOCU+PYv
ac+/WmZKvPaC4PbQ0xRyuL15uAa5+hLFTf3FksQenLf8gZYdueHlxztXl4Ur
01I3NXfb6HnBsuDyrz+HbH5vJJoSb8qvHBdv8wW1u87ITWAuMZASX1bPyx3v
IZEQPTc9fMyrtmuPofacUWhdPBRUZAakR5DmJCnx/ft7xKbCcxp8xhPhWgsf
neJtJufDbqu/Zup3s+iEGmGe6DE+5xQTrbKsGeHaQVzsKDFAyK1FXh3VzmI+
/KDVwFV9VyfJc2Vj+w6vvMBtrr5P67E3MufcpC1tmxP8aHpquCxK/R7UkLA6
yqIE11xdV4cjfxd9jqhj9J3al1/szt0DnwVar5zV1lWgh5+7FZEayelOLG56
t5a8gUxG7yLawsO7TPaYKKPfknECPVEH4OiZtgDcFLtnBmJBWYXcd8qgdiAw
4s6bRY+icc3Vde2V8CUNjbuxH8U2ve55+1HqRXcjtbbzc7fmkffp7DsPrx1m
3xlpVDLkapPXu0MD9s4p8TEvPQ1wIbhH9zt2bWXkvYxjkbaaebksftUu62RU
ecHmz3LiAADkOUVKfArD7UvR4TutQ82DhKP9ZxjCZ0/PTXWEnnMdrOOwdCIp
8e1NvJ85un33+jbjz7x+uHBtUDyQEn/m8W49wcWkxGOVXpuL3R15Vu15UWmN
i8XirvXu7ZTbVnu12pMrC1cWTUWzo8snN7o9N3r/i4nbJORuzfsvzFj4+Nx3
vfkYt/sf4rr2MBpVbvnvDmHbI9yuRNoKNPU+9wWQ2MCDLazUY6W8tssfnT8S
HzCWEl8uA+flkcIJ1QnZ5i9z7ZfCrgJqG39zoeVr6EvULz1WSjz89a32e1od
FeMgDT7riWCthY9OGW0m58PuGmtlD94tvl10Mo1wf2t6NJW6VbaeYqJVVj8j
XD8lXNeEWk+RI6fEs+soeZjO/4Jm9BWbOqk2zsUu5dkwVgquuaxtTr6qoerq
z6mhd2yLoiSWaBgLtj+Vm0XJPc/eJI+ae9vTNJYd+sifr8MRNb2CwfpObctn
hjGydoTclPim874tgSFC61k10nTiuN4/pddXU04RdRvItPYu4i08uMt0GBPl
jjgiJ9CTdQAOXtTQgqbVPUuvwECsXmYhBwssYyDQ47JJXrHoUYzWo9gueRlD
4y7sR6kNtx8drCej4bV/1ahX88j8dPadIfad6Gfo+sXVIVfbcCGl5dXdU+Ij
XnoKTQI369z93p4BW4t9xL2MlHBbDV4u63SBIHYyqv8CqXYBAEDIcCnxaQ+3
L0W3Xz4aZB4kPlVy+iF89vTcNEfoedfBOg5Ly02Jb+5A/vJePvy515dfe7pb
2yuvL5/ZX+CZx8tXnh6+aWgxKfFQpa9bbc0F+MoJIO1hr9ybJEouuP9Fotzl
DwRmcuvfIfHtjPDCNee+5sLprNjyT2/31XXmvcTrN3QzrVJzG4a06nscVdve
nRtiR/CW8/JY4YTd+9Z92ampEBqm51oLLc/uPkmx5XOTqE2b3SfW1Bj9rbSb
g7m43g0+84lQrYWPTlltJv5hl83HsESaoG25TLmNsPKavk3lQPQUE62yZKuo
O6zlNqHD8ho1Jd6hjlKdltZT2lFNZX4bILTOvDWXuM1t2330+tpz6kBRlNQy
dTtC01MdsyjhIk7WyMNRs6aaU+sb9sifq8sR9diwfafG5Xfnn+A2B3eEZDUk
jtAN9dCzEPe3N7qyZFmlt/XqOt3Nzv5CSXwgE+9d5LTw0C7TaUwU7Ldkp8Tb
P9cAHYCjF+UOw1pe1WqKB5PZD8TiBRYeCPS6bJJRLHoU4/Uotuu4jKFxPvtR
8uPZj7L3o5rV1ed+uzaP7E9n39m8fohiGXRUMs5qz5MSH/HSU9PuGdK1+906
eggfoC49BXF68bbaWu0reVftck5GNRGCbvdvAABgngZMiU96uH0puqXEl0PM
g+RMlZx6CJ89PTfFEXrudbCOO820UuIe4UeJKfH1Aut731V3mqur670vWVSX
PFj04asftWvOWH4nOJO7d9e+h1X3Wjh1WFscvLLtjTIVWv57N6zZlEf9hE7b
mvbqZbWq+ivZR8VVU5P7a73OT4kvKwfm3BsgHYuHE9rW/PD0zVGDbmv8rYWW
ZVXAGZc1R02JZ3yDqzn6u3vXw1X1bfD5T4RqLXZ0ym0zwQ9bsw01x5gJNMLl
gE0lserY+ShUZTWlnT6stTWhtk0aNSXeuY56psQzKjp1Fm5onOE1l7jNbdud
jpQ2hOIa3zESRUkuld4Rmp7qmEW5e3mqg5JcSeVnULbL1RxEGrZ/GTtUjtQv
zd9b0wbsOzUsX7llV3CboztC15T4VU3vvbu8Gqkrq8PGebPrZtddj8g76mcM
ZIK9i6wWHjsYdhkTBdacdwI9ZQdgJXa3uml0z2q2zUCsXm4hZ10rDu2qp9p5
9ShG7VFc2NA4l/0osZD9KH8/qord+rl788j9dB0+QsRs9p3QZ8gflYy02vqU
eFtt9UuJr4x06al594zo1P3OmoPeffxh9zKSgjOh0RrplBIPjAIaTrsPT8mJ
AwDQZtCU+HK6w+1L0Tklvuw9D5I973rqIXzO9NwkR+gdsi4dhqVS4oU+ik2J
w+QMEU5MyUyJLxsO+2NtYuuKR3vjcnWLNc2INvNAUynAEJ2W8SramvfUTDrb
0WZvsL5T0/KLTiFqzbKeImJ6DMTmznEJ+rMfQX8DjkrGWu2oKXGYhLO2VaMA
AABOykitLD3r6/TzIEyNlHihDylxGMhoJ7z8lHitcYPsDRfx9QaO5N70eXa0
mQeaSgGG6LSMV9HWfLzq4zXb0agzZEo8k2bZShFREAOxmXBcgv7sR9DfSOf/
IVcrJc7lkxIHAGA+jNTKMlZ9GYjMxglS4v/2L1d55t+6PX+y+pIev/v6NFPi
sWuCcBarb0bt/57E7udTx7rv6aRT4u1TeHoDh0x7ttFmNjSVIvTvtJQYuC5x
zXWnVDsatc6XEtcsWykiSmIgNg+OS9Cf/QgGUGhKPHYNXPaAUkiJAwAwH0Zq
ZZESp6cTpMT/839d5Zl/5Q/Pn6y+pMdv3a5K9fe/ml3jnQUr/eH3RR9drfK4
pgaYkvUl64RxZrH2367XCXWUk3JkpXoDB/xcQittZk1TKUPvTst4FW3N25Ve
39VOzdnajka9s6XENctWioiiGIjNguMS9Gc/giFMOCWevM7dOGA/JHtAKaTE
AQCYDyO1skiJ09MJUuLvfLjKM3/ixfMnqy/p8Rt/vCrVPzthCjtc6YuHmzO7
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
AAAQ9h8jeq4H
    "], {{0, 242.}, {1969., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1969., 242.},
  PlotRange->{{0, 1969.}, {0, 242.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->567836013,ExpressionUUID->"c0e3cc37-8645-4cd1-aa87-667ec1cb268b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "5fbcff33-a02a-4411-a38e-6bc7f6c65521"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1293636265,ExpressionUUID->"f3eb9265-3ae3-4326-89b9-b61d1f89bd2d"],

Cell[CellGroupData[{

Cell[TextData[{
 "External stylesheets",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "e9637dca-39cf-4f79-9052-6a0951937acb"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->473870500,ExpressionUUID->"675cedbc-8439-465e-935d-5e7ae0b1ae53"],

Cell[TextData[{
 "External stylesheets are usually present in the XML document's ",
 StyleBox["link", "InlineCode"],
 " tag:"
}], "ExampleText",
 CellID->404756270,ExpressionUUID->"24d39302-8d2d-4f9b-aef1-4b3d6cf1b875"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->961184916,ExpressionUUID->"9c9ece7c-172e-4bad-82f5-55b4eec4a092"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->530281556,ExpressionUUID->"5bd1fbdf-53ee-41bc-a928-93115eed49ff"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Import"]], "paclet:ref/Import"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "9867c0ff-6a9d-402e-a4b1-c7e34099ab9a"],
 " ignores which tags the CSS selectors target:"
}], "ExampleText",
 CellID->228266911,ExpressionUUID->"2178f0b1-448e-41f3-a3cf-d27ce9533b56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->523152714,ExpressionUUID->"c0133962-cc1e-4146-a005-9891933aa4a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<simple.css\>\""}], "}"}], 
    "]"}], ",", "\"\<CSS\>\""}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->73777717,ExpressionUUID->"5ccfb894-bda3-4173-91a7-d45a6f07bf39"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 200798506430451], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 1, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1639976514][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1639976514][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1639976514][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1639976514, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1639976514]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1639976514][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1639976514][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1639976514; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{500., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->642301971,ExpressionUUID->"ae82044e-fab8-4239-a38f-971170848cf1"]
}, Open  ]],

Cell[TextData[{
 "Setting the ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "1fcfc880-0bbb-40cf-95ea-f240a81aa404"],
 " option value with ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ExtractCSSFromXML"]], "paclet:CSSTools/ref/ExtractCSSFromXML"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "431aa6e1-84f0-40cf-91da-37cdb352605e"],
 " includes the selector target information:"
}], "ExampleText",
 CellID->11429555,ExpressionUUID->"3afe3e10-7ad7-4e7a-b033-36cac90105b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->13922790,ExpressionUUID->"b93346dc-e079-492e-a6f5-458a478743da"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 49241995456504], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 749338082][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               749338082][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                749338082, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 749338082]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[749338082][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[749338082][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 749338082; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1633., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->263427236,ExpressionUUID->"252ea054-ac30-45ec-a500-b2108219b36a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Internal stylesheets",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "2a138258-ab01-48de-aca6-195782c3f1f1"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->147720695,ExpressionUUID->"aea86ad0-b390-4ea3-bb04-72b299b237d9"],

Cell[TextData[{
 "Internal stylesheets are usually present in the XML document's ",
 StyleBox["style", "InlineCode"],
 " tags. They can be found anywhere but generally are near the start of the \
document. In HTML documents it is recommended that they appear within the ",
 StyleBox["head", "InlineCode"],
 " tag. The following XML contains an internal stylesheet:"
}], "ExampleText",
 CellID->88919951,ExpressionUUID->"c3ae7c10-b640-4218-a2e7-61aa758b119c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->52436315,ExpressionUUID->"512c21a6-810a-4f0c-b074-0b2dfb21f934"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head><style type=\\\"text/css\\\"> tag {font-size:20px} \
</style></head><body><tag>data</tag></body></html>\>\"", ",", "\"\<XML\>\""}],
     "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->74017799,ExpressionUUID->"ef78b13b-aa6d-4971-bc69-ca7d9acdf74f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->235986887,ExpressionUUID->"73a18601-1719-46df-8cbb-a863b8b81a5e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "20px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 20], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 68560758353942], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1044021399][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1044021399][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> 
                    Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2, 3, 1}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1044021399][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1044021399, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1044021399]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1044021399][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1044021399][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1044021399; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1663., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->286286271,ExpressionUUID->"f61d6cc6-483c-4e03-8e84-4251ed9c4dfc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Inline stylesheets",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "85faf75a-eace-49f0-8916-614cc87e5368"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->407283549,ExpressionUUID->"72fbd0f5-6b99-478e-bdf0-ab4a2990ab5d"],

Cell[TextData[{
 "Inline stylesheets are declared in the ",
 StyleBox["style", "InlineCode"],
 " attribute of a document's tag:"
}], "ExampleText",
 CellID->427755359,ExpressionUUID->"7a19fa44-a75d-4a66-87a1-8ee59861159c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->250909227,ExpressionUUID->"6715da3b-5036-4b43-8af0-c81d346e82f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html><head></head><body><tag \
style=\\\"font-size:12px\\\">data</tag></body></html>\>\"", ",", 
     "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->16072950,ExpressionUUID->"4273a1bb-12cc-4793-b717-b1ec391de661"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->847413682,ExpressionUUID->"79254419-084b-4270-8558-b0a7e7fe14cf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> None, "Sequence" -> {}, "Specificity" -> {1, 0, 0, 0}]],
         "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2, 3, 1}, 
            "Attributes" -> 
            Association[
             "style" -> Association[
               "Namespace" -> None, "Value" -> "font-size:12px"]], "ID" -> 
            "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "12px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 12], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 71429796507702], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1087726348][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1087726348][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["12px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1087726348][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1087726348, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1087726348]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1087726348][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1087726348][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1087726348; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{567., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->462770766,ExpressionUUID->"3a7cd595-7184-46c0-a0b8-6e97fec6c2df"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "a6977602-58df-4641-98d3-62957e23f6b0"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2061341341,ExpressionUUID->"a9e27d1a-8219-4573-ac59-86ab1c63566b"],

Cell[CellGroupData[{

Cell[TextData[{
 "\"RootDirectory\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "3095e33f-6ea5-48e6-8872-9a6338ebf450"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1757724783,ExpressionUUID->"fef5a0e5-88b2-447a-a883-1f663fe4a942"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "837d01fc-62ec-4614-9af5-e4609b000870"],
 " to set the root path from which files are expected to be found:"
}], "ExampleText",
 CellID->480789144,ExpressionUUID->"a972a9e6-3f59-4e20-9afd-62b5088400cc"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->455582830,ExpressionUUID->"1e5c4236-df99-46a7-890c-26fada674a0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->139585394,ExpressionUUID->"dee2cc50-5e52-4eb5-a1c0-75921f5f9770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->76168790,ExpressionUUID->"621defdc-a396-4b38-a2cf-bf27aa4f40b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->884765519,ExpressionUUID->"543e85fb-bc54-4387-ac75-b1d1cbba1a15"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 106249096376385], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Targets"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1618940952][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1618940952][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> 
                    Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][{
                  1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1618940952][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1618940952, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1618940952]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1618940952][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1618940952][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1618940952; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1633., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->256842310,ExpressionUUID->"5775bf7b-d5ab-4372-ab67-e454d5673efe"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Possible Issues",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "e1cd2aa8-5b64-41af-9605-678cbcd643c1"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1305812373,ExpressionUUID->"ac2883c1-c1ca-4343-ab41-507da49a6400"],

Cell["\<\
Many XML documents use relative locations to specify where resources, such as \
stylesheets, should be found. If external stylesheets cannot be found then no \
rules are imported from those locations.\
\>", "ExampleText",
 CellID->3458080,ExpressionUUID->"004fddce-31e8-4b5e-8a50-45f17e9f284b"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->247745711,ExpressionUUID->"5a8d5f91-130c-44c8-ac2c-ce24db00225b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<body><link rel=\\\"stylesheet\\\" href=\\\"simple.css\\\"></link>\n\
<tag>data</tag></body>\>\"", ",", "\"\<XML\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->80511540,ExpressionUUID->"8fbf891d-dbbc-4637-935e-b56afd422e89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", "doc", "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->399569939,ExpressionUUID->"9962f4a7-e71b-4c3b-9fde-83b308f0e380"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"simple.css\\\\\\\"\\\"}]\\) not found \
during \\!\\(\\*RowBox[{\\\"\\\\\\\"CSS extraction\\\\\\\"\\\"}]\\).\"", 2, 
   175, 38, 29909339096118746220, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[3]:=",
 CellID->31400741,ExpressionUUID->"b66b2cce-66b0-4b3b-87ca-0255d60287b1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {}, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 0, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Vector[TypeSystem`UnknownType, 0], "Meta" -> 
     Association["ID" -> 96636959567958], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 0, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Vector[TypeSystem`UnknownType, 0], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 0, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 0, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Spacer[10], 
                  Style[
                   Spacer[10], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  1472242368][{}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1472242368][{}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1472242368, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1472242368]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1472242368][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1472242368][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1472242368; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{39., {21., 27.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[3]=",
 CellID->151632703,ExpressionUUID->"be3eab9e-ba13-447f-a015-0fac7283b8dc"]
}, Open  ]],

Cell[TextData[{
 "Use the ",
 Cell[BoxData[
 "\"\<RootDirectory\>\""], "InlineFormula",ExpressionUUID->
  "72f9a91d-3d70-4e93-a0af-528afd1e5c7f"],
 " option to provide a directory from which to locate the resources relative \
to this root:"
}], "ExampleText",
 CellID->128939588,ExpressionUUID->"be8836e0-84ee-4fa9-b7fd-9fa4560b5867"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->548480066,ExpressionUUID->"f6d7a080-b272-474f-8b7f-f7737a3f3550"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExtractCSSFromXML", "[", 
  RowBox[{"doc", ",", 
   RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->774434792,ExpressionUUID->"9bc95a30-a753-4100-82ba-cb63658c7b0a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "tag ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "tag", "Namespace" -> "", "Position" -> {2, 3, 2}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 24], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 16243761721437], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, 1], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 245438971][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"tag\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "tag ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "tag"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "tag", "Namespace" -> "", 
                    "Position" -> {2, 3, 2}, "Attributes" -> Association[], 
                    "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               245438971][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                245438971, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 245438971]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[245438971][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[245438971][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 245438971; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1637., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->25051574,ExpressionUUID->"4609bb43-ce1b-47e7-aa03-847b0ca5547d"]
}, Open  ]]
}, Closed]],

Cell["", "SectionFooterSpacer",ExpressionUUID->"111f355a-4b71-4d8d-989d-e17038797b21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"59edff08-8cc1-495f-acc0-b9ec87f71652"],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704,ExpressionUUID->"36cc81e3-566d-4f61-a364-602db2ddc746"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelector"]], "paclet:CSSTools/ref/CSSSelector"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"73f2a71c-fcbd-4574-a3e2-160a77fa9339"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelectorQ"]], "paclet:CSSTools/ref/CSSSelectorQ"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"245e2822-bcfb-4977-a219-7da3cb71eddd"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSTargets"]], "paclet:CSSTools/ref/CSSTargets"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"43ea4bba-22ff-4861-92be-57aefa74f01a"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSTargetQ"]], "paclet:CSSTools/ref/CSSTargetQ"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"c997289a-4fd7-47c2-bcd9-beb5117fe003"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"28faa4dc-3163-46b7-9998-8f2712c12c6f"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula",
  ExpressionUUID->"a382549e-552f-4f97-afa2-803ded66e98f"]
}], "SeeAlso",
 CellID->929782353,ExpressionUUID->"a84c30ee-a95d-4c0c-8d94-612ee61d747d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"eb585d22-d203-46b9-a7c2-c231f0277f4b"],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057,ExpressionUUID->"3ab31fe9-e378-42a5-b00e-84cf81be8144"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"38a7b4f7-3629-4ba0-a65c-62bb7455f3c1"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["CSSTools"]], "paclet:CSSTools/tutorial/CSSTools"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938,ExpressionUUID->"dc8b87ee-c7a1-4dc8-8206-03d0ca38f4a7"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"750a9b16-7664-413b-8ec2-bf288546ca8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"c40e734c-0e96-4d22-a936-d33ecc809f88"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"b309c0bc-c504-4e7d-800e-1c1891bb1f2e"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"7832d09b-5fb2-45ff-9384-32a2ad9973c8"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["CSSTools"]], "paclet:CSSTools/guide/CSSTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->678086490,ExpressionUUID->"11340729-3bb7-4042-86b0-4f71774274ef"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"5eddad73-56e1-4766-8518-573f28d21374"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{726, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ExtractCSSFromXML",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "CSSTools", ButtonData -> "paclet:CSSTools/guide/CSSTools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2020, 3, 12, 10, 53, 34.8507832}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "CSSTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "C S S Tools Symbol", "language" -> "en", "paclet" -> "CSSTools", 
    "status" -> "None", "summary" -> 
    "ExtractCSSFromXML[XMLObject] ExtractCSSFromXML imports the CSS \
declarations within XMLObject .", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "ExtractCSSFromXML", "titlemodifier" -> "", "windowtitle" -> 
    "ExtractCSSFromXML", "type" -> "Symbol", "uri" -> 
    "CSSTools/ref/ExtractCSSFromXML", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (February 29, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (February 29, 2020)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"d9e99e05-0dcf-4dba-b75c-6857b88f4a48"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[9357, 236, 435, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"90c1d41c-503b-4237-8642-e23350884c66",
   CellTags->"PrimaryExamplesSection",
   CellID->871588196]},
 "RasterizedOutput"->{
  Cell[101380, 2101, 57883, 955, 87, "Output",ExpressionUUID->"0cd03362-e3da-4b3e-8a4e-22c5bf5b7bc4",
   CellTags->"RasterizedOutput",
   CellID->159672880],
  Cell[159919, 3081, 57883, 955, 87, "Output",ExpressionUUID->"c0e3cc37-8645-4cd1-aa87-667ec1cb268b",
   CellTags->"RasterizedOutput",
   CellID->567836013]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 489430, 9387},
 {"RasterizedOutput", 489628, 9391}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[589, 21, 5391, 123, 53, "AnchorBarGrid",ExpressionUUID->"e2a2f757-477d-47b6-bffd-3d7b75cdde51",
 CellID->1],
Cell[CellGroupData[{
Cell[6005, 148, 402, 9, 52, "ObjectNameGrid",ExpressionUUID->"046a6dd8-b451-4fac-92f9-c3ba5a6cbda2"],
Cell[6410, 159, 717, 16, 110, "Usage",ExpressionUUID->"7d4f97a7-c82f-4676-955f-d9dac642849b",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[7164, 180, 854, 21, 37, "NotesSection",ExpressionUUID->"a464e52d-2c76-4a3e-848f-f1e7b45113ef",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->88250529],
Cell[8021, 203, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"61ffd22e-5f29-4f65-ac8f-29c65015e6c4"],
Cell[8110, 205, 333, 6, 70, "Notes",ExpressionUUID->"2a50e6a1-43be-49e7-90d1-509d3ff7c1b6",
 CellID->1067943069],
Cell[8446, 213, 535, 10, 70, "3ColumnTableMod",ExpressionUUID->"b8877d56-49a0-4548-be3a-b13308027c64",
 CellID->120199297],
Cell[8984, 225, 247, 4, 70, "Notes",ExpressionUUID->"8fa0225b-32ff-4dc5-922c-66ceb7e4e7bc",
 CellID->333181165],
Cell[9234, 231, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"f2bc80aa-b7ee-4ed6-8e52-3c2429d8db5a"]
}, Closed]],
Cell[CellGroupData[{
Cell[9357, 236, 435, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"90c1d41c-503b-4237-8642-e23350884c66",
 CellTags->"PrimaryExamplesSection",
 CellID->871588196],
Cell[CellGroupData[{
Cell[9817, 251, 308, 7, 29, "ExampleSection",ExpressionUUID->"1112da97-55dc-4e58-97fd-a270e39d6252",
 CellID->733603380],
Cell[10128, 260, 172, 3, 26, "Input",ExpressionUUID->"36cae351-bc3b-482f-b88e-93b6c62ec969",
 CellID->140347243],
Cell[10303, 265, 793, 23, 58, "ExampleText",ExpressionUUID->"218c8928-3e3c-4501-a9f1-04925fa1d692",
 CellID->78378545],
Cell[11099, 290, 310, 8, 26, "Input",ExpressionUUID->"1b67cecd-68df-4cea-ab40-7e8d66618933",
 CellID->47295443],
Cell[CellGroupData[{
Cell[11434, 302, 169, 3, 26, "Input",ExpressionUUID->"9c41c45f-c18d-451f-927e-88f9c3b9c6b5",
 CellID->77675145],
Cell[11606, 307, 39161, 744, 139, "Output",ExpressionUUID->"95f16ccb-ae3c-4b34-8c28-9f143f62cb7a",
 CellID->221057355]
}, Open  ]],
Cell[50782, 1054, 328, 8, 38, "ExampleText",ExpressionUUID->"8d814b68-725a-4e98-b9a4-b270e1d0bae1",
 CellID->866509086],
Cell[CellGroupData[{
Cell[51135, 1066, 999, 29, 38, "Input",ExpressionUUID->"9ec445c9-75e0-4654-8541-5f16511f8435",
 CellID->67312846],
Cell[52137, 1097, 224, 5, 35, "Output",ExpressionUUID->"1f18c4cf-593a-459a-8686-2bd519d0ce08",
 CellID->24484718]
}, Open  ]],
Cell[CellGroupData[{
Cell[52398, 1107, 242, 5, 13, "ExampleDelimiter",ExpressionUUID->"d25cdc19-c4dc-48f7-9595-5b69ab94dddb",
 CellID->116477601],
Cell[52643, 1114, 172, 3, 26, "Input",ExpressionUUID->"eaa65f18-fdf9-4ff6-82b9-069c8038c6fc",
 CellID->214239584],
Cell[52818, 1119, 211, 5, 70, "ExampleText",ExpressionUUID->"f96c17f8-5ccb-4060-a187-7d991a46a5b4",
 CellID->302647184],
Cell[53032, 1126, 400, 9, 70, "Input",ExpressionUUID->"6b8e1d1b-4786-4a77-9150-e7c90597c49c",
 CellID->823104529],
Cell[CellGroupData[{
Cell[53457, 1139, 169, 3, 70, "Input",ExpressionUUID->"19049680-a08c-42bc-8e60-c3b5760bea5d",
 CellID->55848347],
Cell[53629, 1144, 45254, 874, 70, "Output",ExpressionUUID->"e4292f01-afc6-4d06-8a98-6333a16a67d2",
 CellID->970589436]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98932, 2024, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"3c7703b6-2900-4ab2-90b5-0f072e87c6cf",
 CellID->443460876],
Cell[99177, 2031, 172, 3, 70, "Input",ExpressionUUID->"5314883b-6515-49dd-916c-47643f8ee14a",
 CellID->137415897],
Cell[99352, 2036, 640, 19, 70, "ExampleText",ExpressionUUID->"a376d814-81bc-4108-a8a3-ebb8ef47d882",
 CellID->100040506],
Cell[99995, 2057, 445, 11, 70, "Input",ExpressionUUID->"65deb636-505c-4104-84a4-b2991002451d",
 CellID->504538696],
Cell[100443, 2070, 375, 10, 70, "Input",ExpressionUUID->"f2bebd0b-1c5c-4e83-a1b6-dd065e7e8221",
 CellID->10768370],
Cell[CellGroupData[{
Cell[100843, 2084, 534, 15, 70, "Input",ExpressionUUID->"648ef6d6-e3e9-41b1-9937-b982d6c7328e",
 CellID->61891354],
Cell[101380, 2101, 57883, 955, 87, "Output",ExpressionUUID->"0cd03362-e3da-4b3e-8a4e-22c5bf5b7bc4",
 CellTags->"RasterizedOutput",
 CellID->159672880]
}, Open  ]],
Cell[159278, 3059, 274, 7, 70, "ExampleText",ExpressionUUID->"6d80ccdb-d0cc-4585-ad93-4c8148e606cb",
 CellID->154049162],
Cell[CellGroupData[{
Cell[159577, 3070, 339, 9, 70, "Input",ExpressionUUID->"3a0a0e5e-85bc-41ec-b689-63aba9732277",
 CellID->409357899],
Cell[159919, 3081, 57883, 955, 87, "Output",ExpressionUUID->"c0e3cc37-8645-4cd1-aa87-667ec1cb268b",
 CellTags->"RasterizedOutput",
 CellID->567836013]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217863, 4043, 300, 7, 70, "ExampleSection",ExpressionUUID->"f3eb9265-3ae3-4326-89b9-b61d1f89bd2d",
 CellID->1293636265],
Cell[CellGroupData[{
Cell[218188, 4054, 320, 7, 70, "ExampleSubsection",ExpressionUUID->"675cedbc-8439-465e-935d-5e7ae0b1ae53",
 CellID->473870500],
Cell[218511, 4063, 219, 5, 70, "ExampleText",ExpressionUUID->"24d39302-8d2d-4f9b-aef1-4b3d6cf1b875",
 CellID->404756270],
Cell[218733, 4070, 172, 3, 70, "Input",ExpressionUUID->"9c9ece7c-172e-4bad-82f5-55b4eec4a092",
 CellID->961184916],
Cell[218908, 4075, 346, 8, 70, "Input",ExpressionUUID->"5bd1fbdf-53ee-41bc-a928-93115eed49ff",
 CellID->530281556],
Cell[219257, 4085, 372, 10, 70, "ExampleText",ExpressionUUID->"2178f0b1-448e-41f3-a3cf-d27ce9533b56",
 CellID->228266911],
Cell[219632, 4097, 445, 11, 70, "Input",ExpressionUUID->"c0133962-cc1e-4146-a005-9891933aa4a1",
 CellID->523152714],
Cell[CellGroupData[{
Cell[220102, 4112, 321, 8, 70, "Input",ExpressionUUID->"5ccfb894-bda3-4173-91a7-d45a6f07bf39",
 CellID->73777717],
Cell[220426, 4122, 36078, 680, 70, "Output",ExpressionUUID->"ae82044e-fab8-4239-a38f-971170848cf1",
 CellID->642301971]
}, Open  ]],
Cell[256519, 4805, 558, 15, 70, "ExampleText",ExpressionUUID->"3afe3e10-7ad7-4e7a-b033-36cac90105b0",
 CellID->11429555],
Cell[CellGroupData[{
Cell[257102, 4824, 264, 6, 70, "Input",ExpressionUUID->"b93346dc-e079-492e-a6f5-458a478743da",
 CellID->13922790],
Cell[257369, 4832, 39988, 760, 70, "Output",ExpressionUUID->"252ea054-ac30-45ec-a500-b2108219b36a",
 CellID->263427236]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[297406, 5598, 320, 7, 70, "ExampleSubsection",ExpressionUUID->"aea86ad0-b390-4ea3-bb04-72b299b237d9",
 CellID->147720695],
Cell[297729, 5607, 458, 8, 70, "ExampleText",ExpressionUUID->"c3ae7c10-b640-4218-a2e7-61aa758b119c",
 CellID->88919951],
Cell[298190, 5617, 171, 3, 70, "Input",ExpressionUUID->"512c21a6-810a-4f0c-b074-0b2dfb21f934",
 CellID->52436315],
Cell[298364, 5622, 373, 9, 70, "Input",ExpressionUUID->"ef78b13b-aa6d-4971-bc69-ca7d9acdf74f",
 CellID->74017799],
Cell[CellGroupData[{
Cell[298762, 5635, 170, 3, 70, "Input",ExpressionUUID->"73a18601-1719-46df-8cbb-a863b8b81a5e",
 CellID->235986887],
Cell[298935, 5640, 40083, 762, 70, "Output",ExpressionUUID->"f61d6cc6-483c-4e03-8e84-4251ed9c4dfc",
 CellID->286286271]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[339067, 6408, 318, 7, 70, "ExampleSubsection",ExpressionUUID->"72fbd0f5-6b99-478e-bdf0-ab4a2990ab5d",
 CellID->407283549],
Cell[339388, 6417, 222, 5, 70, "ExampleText",ExpressionUUID->"7a19fa44-a75d-4a66-87a1-8ee59861159c",
 CellID->427755359],
Cell[339613, 6424, 172, 3, 70, "Input",ExpressionUUID->"6715da3b-5036-4b43-8af0-c81d346e82f2",
 CellID->250909227],
Cell[339788, 6429, 344, 9, 70, "Input",ExpressionUUID->"4273a1bb-12cc-4793-b717-b1ec391de661",
 CellID->16072950],
Cell[CellGroupData[{
Cell[340157, 6442, 170, 3, 70, "Input",ExpressionUUID->"79254419-084b-4270-8558-b0a7e7fe14cf",
 CellID->847413682],
Cell[340330, 6447, 39072, 742, 70, "Output",ExpressionUUID->"3a7cd595-7184-46c0-a0b8-6e97fec6c2df",
 CellID->462770766]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[379463, 7196, 302, 7, 70, "ExampleSection",ExpressionUUID->"a9e27d1a-8219-4573-ac59-86ab1c63566b",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[379790, 7207, 318, 7, 70, "ExampleSubsection",ExpressionUUID->"fef5a0e5-88b2-447a-a883-1f663fe4a942",
 CellID->1757724783],
Cell[380111, 7216, 304, 7, 70, "ExampleText",ExpressionUUID->"a972a9e6-3f59-4e20-9afd-62b5088400cc",
 CellID->480789144],
Cell[380418, 7225, 172, 3, 70, "Input",ExpressionUUID->"1e5c4236-df99-46a7-890c-26fada674a0a",
 CellID->455582830],
Cell[380593, 7230, 445, 11, 70, "Input",ExpressionUUID->"dee2cc50-5e52-4eb5-a1c0-75921f5f9770",
 CellID->139585394],
Cell[381041, 7243, 345, 8, 70, "Input",ExpressionUUID->"621defdc-a396-4b38-a2cf-bf27aa4f40b9",
 CellID->76168790],
Cell[CellGroupData[{
Cell[381411, 7255, 265, 6, 70, "Input",ExpressionUUID->"543e85fb-bc54-4387-ac75-b1d1cbba1a15",
 CellID->884765519],
Cell[381679, 7263, 40066, 762, 70, "Output",ExpressionUUID->"5775bf7b-d5ab-4372-ab67-e454d5673efe",
 CellID->256842310]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[421806, 8032, 310, 7, 70, "ExampleSection",ExpressionUUID->"ac2883c1-c1ca-4343-ab41-507da49a6400",
 CellID->1305812373],
Cell[422119, 8041, 304, 5, 70, "ExampleText",ExpressionUUID->"004fddce-31e8-4b5e-8a50-45f17e9f284b",
 CellID->3458080],
Cell[422426, 8048, 172, 3, 70, "Input",ExpressionUUID->"5a8d5f91-130c-44c8-ac2c-ce24db00225b",
 CellID->247745711],
Cell[422601, 8053, 345, 8, 70, "Input",ExpressionUUID->"8fbf891d-dbbc-4637-935e-b56afd422e89",
 CellID->80511540],
Cell[CellGroupData[{
Cell[422971, 8065, 170, 3, 70, "Input",ExpressionUUID->"9962f4a7-e71b-4c3b-9fde-83b308f0e380",
 CellID->399569939],
Cell[423144, 8070, 410, 8, 70, "Message",ExpressionUUID->"b66b2cce-66b0-4b3b-87ca-0255d60287b1",
 CellID->31400741],
Cell[423557, 8080, 18676, 331, 70, "Output",ExpressionUUID->"be3eab9e-ba13-447f-a015-0fac7283b8dc",
 CellID->151632703]
}, Open  ]],
Cell[442248, 8414, 334, 8, 70, "ExampleText",ExpressionUUID->"be8836e0-84ee-4fa9-b7fd-9fa4560b5867",
 CellID->128939588],
Cell[442585, 8424, 445, 11, 70, "Input",ExpressionUUID->"f6d7a080-b272-474f-8b7f-f7737a3f3550",
 CellID->548480066],
Cell[CellGroupData[{
Cell[443055, 8439, 265, 6, 70, "Input",ExpressionUUID->"9bc95a30-a753-4100-82ba-cb63658c7b0a",
 CellID->774434792],
Cell[443323, 8447, 39987, 760, 70, "Output",ExpressionUUID->"4609bb43-ce1b-47e7-aa03-847b0ca5547d",
 CellID->25051574]
}, Open  ]]
}, Closed]],
Cell[483337, 9211, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"111f355a-4b71-4d8d-989d-e17038797b21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483460, 9216, 260, 7, 70, "SeeAlsoSection",ExpressionUUID->"36cc81e3-566d-4f61-a364-602db2ddc746",
 CellID->1255426704],
Cell[483723, 9225, 2249, 64, 70, "SeeAlso",ExpressionUUID->"a84c30ee-a95d-4c0c-8d94-612ee61d747d",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[486009, 9294, 262, 7, 70, "TutorialsSection",ExpressionUUID->"3ab31fe9-e378-42a5-b00e-84cf81be8144",
 CellID->250839057],
Cell[486274, 9303, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"38a7b4f7-3629-4ba0-a65c-62bb7455f3c1"],
Cell[486363, 9305, 231, 6, 70, "Tutorials",ExpressionUUID->"dc8b87ee-c7a1-4dc8-8206-03d0ca38f4a7",
 CellID->341631938],
Cell[486597, 9313, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"750a9b16-7664-413b-8ec2-bf288546ca8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486720, 9318, 266, 7, 70, "MoreAboutSection",ExpressionUUID->"b309c0bc-c504-4e7d-800e-1c1891bb1f2e",
 CellID->38303248],
Cell[486989, 9327, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"7832d09b-5fb2-45ff-9384-32a2ad9973c8"],
Cell[487078, 9329, 228, 6, 70, "MoreAbout",ExpressionUUID->"11340729-3bb7-4042-86b0-4f71774274ef",
 CellID->678086490]
}, Open  ]],
Cell[487321, 9338, 78, 0, 70, "FooterCell",ExpressionUUID->"5eddad73-56e1-4766-8518-573f28d21374"]
}
]
*)

(* End of internal cache information *)


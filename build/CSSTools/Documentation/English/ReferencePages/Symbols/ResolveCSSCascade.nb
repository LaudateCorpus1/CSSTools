(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    155107,       3350]
NotebookOptionsPosition[    143637,       3108]
NotebookOutlinePosition[    146015,       3167]
CellTagsIndexPosition[    145928,       3162]
WindowTitle->ResolveCSSCascade
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["C S S TOOLS SYMBOL", "PacletNameCell",ExpressionUUID->
     "80cc8233-484a-4699-927f-168cc3a818be"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"b45cf261-4685-4539-9cfd-6f505b936048"],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/tutorial/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "5c06b8af-70f7-4b6e-aceb-4b8f7406f790"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"3c04a03f-b74d-4b5b-94a2-8b449b62fcdb"],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"ResolveCSSInterpretations\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/ResolveCSSInterpretations"], \
"\<\"ResolveCSSInheritance\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/ref/ResolveCSSInheritance"], "\<\"ExtractCSSFromXML\"\
\>":>Documentation`HelpLookup["paclet:CSSTools/ref/ExtractCSSFromXML"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "d1859672-9e8f-467b-b526-e20be249cdde"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"331fc8aa-bb3c-4899-9495-4073144974c2"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/guide/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "d1d6b827-2fcc-406c-919d-e9c8f7b3b458"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"486cdf55-9a3b-413e-82f5-5bd34815ab6c"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools/ref/ResolveCSSCascade\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CSSTools/ref/ResolveCSSCascade"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/CSSTools/ref/\
ResolveCSSCascade.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$11445], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "CSSTools/ref/ResolveCSSCascade", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "3c84ca3b-0c69-4b93-b0c8-34b389a8e3cc"]
    }], "AnchorBar",ExpressionUUID->"706e95a2-e0ec-45cf-b09d-4352af9c3163"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"6a7bcc29-f6af-42b8-9b16-b5b57351ffb5"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["ResolveCSSCascade", "ObjectName",ExpressionUUID->
  "fb14d589-aa5b-4eae-b002-5369848c5c00"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]],ExpressionUUID->"3ddfc26c-c928-4af4-9b47-ee6fda5399b2"],
 Cell[BoxData[
 ""], "ObjectNameTranslation",ExpressionUUID->
  "599c5dd8-58fd-43c2-a073-cc8fc4be2c34"]
}], "ObjectNameGrid",ExpressionUUID->"3b50cc90-0f59-4a0d-a700-f893b413634d"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"ResolveCSSCascade", "[", 
       RowBox[{
        StyleBox["type", "TI"], ",", 
        StyleBox["CSSData", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["selector", "TI"], ",", " ", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
      ExpressionUUID->"7489e210-fc04-4e40-b884-0d0112c69fea"],
     " \[LineSeparator]ResolveCSSCascade combines options that were \
interpreted from the CSS importer. CSS styles are merged following the CSS \
cascade and the resulting options are filtered by ",
     Cell[BoxData[
      StyleBox["type", "TI"]], "InlineFormula",ExpressionUUID->
      "a4646b53-ca7a-4a0a-9814-82c4b7d566e8"],
     "."
    }],ExpressionUUID->"dd44728d-565b-4e30-a318-13800222317a"]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436,ExpressionUUID->"a2795b5e-0066-434b-b2bc-8fb6dc722074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]],ExpressionUUID->"1e2c882c-278f-4b2a-8e05-3c3492242ffb"],
   "Details"
  }], "NotesFrameText",ExpressionUUID->"b833aa40-1134-4f96-b1ce-f36f3dcccaae"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"9216dc68-abcb-4254-ad83-fb2abb7fecea"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->141183935,ExpressionUUID->"2dc09c1c-3a23-40af-a093-5383c21945a2"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"1134bdcc-e55a-4175-b700-04113af44685"],

Cell["\<\
Following the CSS cascade rules, selector specificity and rule importance are \
taken into account. If two declarations have the same selector specificity \
and importance, then the latter declaration is used.\
\>", "Notes",
 CellID->1067943069,ExpressionUUID->"3b725dab-ca02-4bab-83b2-5c84ff4563f8"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "9fca5179-b041-44be-9d06-9e63cf79bae5"], "\"\<IgnoreSpecificity\>\"", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "process rules in the order they were provided", "TableText",
     ExpressionUUID->"454c9809-5a10-4078-af62-3f4bf3cb7684"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "564cb7c4-3882-45cc-907c-510ebeae26d2"], "\"\<IgnoreImportance\>\"", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "treat all rules as normal", "TableText",ExpressionUUID->
     "7cb983cf-3b60-421c-aed6-755b110c0bf7"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->56488170,ExpressionUUID->"e0159d89-ac50-4714-9b39-ea1f2dcfcbf8"],

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " is often used with CSS data that includes specificity and target \
information. This information is often acquired with ",
 ButtonBox["ExtractCSSFromXML",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"],
 "."
}], "Notes",
 CellID->38300189,ExpressionUUID->"22a66f17-12af-4f4b-bd36-05eeae470922"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"9d6398f2-7ed0-4b3d-bd0f-5b48f9d8a748"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"5c15b9c6-3def-488b-9207-bab1415ef15d"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "535d9375-788d-4683-9f20-84b4b7effe7f"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->8796266,ExpressionUUID->"3cdc6caa-4fca-4f01-bcbd-f5bdb56e69f0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "72cd6a0e-76f9-4101-8e93-9b925aa311fd"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->16360252,ExpressionUUID->"e9739497-47e7-4b78-8caf-d742fe29321d"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->14098569,ExpressionUUID->"c16aa1dd-7a4f-4973-8591-71c202dcb6b3"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellID->104691956,ExpressionUUID->"24b430f6-702d-42f1-bd03-c3d2ed884c0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->9491473,ExpressionUUID->"2965936b-276e-44c5-99eb-32effdccceaa"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[933880627], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[933880627]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2044317196][{All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".h", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".header", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2044317196][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2044317196]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2044317196][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {480., {69., 75.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{484, 146},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->244525884,ExpressionUUID->"4d04e430-2522-483b-bc6a-7b7907d855c8"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " takes into account the specificity of each selector. The class selector \
\".header\" has a higher specificity than the element selector \"h1\". Thus, \
the FontSize for \".header\" is used."
}], "ExampleText",
 CellID->339362087,ExpressionUUID->"011b798c-7310-4a09-819c-ef6f62104483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Selector", "[", 
     RowBox[{"\"\<\>\"", ",", "#"}], "]"}], "[", 
    RowBox[{"[", "\"\<Specificity\>\"", "]"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->571563147,ExpressionUUID->"f845f691-3203-457b-9388-ac3745c82975"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 ImageSize->{179, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->308123595,ExpressionUUID->"a994dcb7-ac65-4eb8-83e1-702368d7bfd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->202779533,ExpressionUUID->"b61770d7-42ad-44ed-9bd6-2bd7832c6871"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 ImageSize->{112, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->19396224,ExpressionUUID->"98d4ded9-b1aa-46af-8858-7bf5f475b029"]
}, Open  ]],

Cell[TextData[{
 ButtonBox["ResolveCSSCascade",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSCascade"],
 " also takes into account the importance of each declaration. The class \
selectors \".h\" and \".header\" have the same specificity and the \
\".header\" rule appears last. However, the \".h\" rule is important so it is \
used even though it is declared earlier."
}], "ExampleText",
 CellID->509811264,ExpressionUUID->"8db0525a-3655-4eb8-bdd8-b9d1581d7988"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->481809636,ExpressionUUID->"55144a5e-1ccb-44f8-ac73-18dfcb82e337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 ImageSize->{119, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->120766142,ExpressionUUID->"f6e5821f-db87-460e-91cc-ea06e2c86809"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generalizations & Extensions",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "1cadb50a-ae27-4d25-a1af-315b51f29e63"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1020263627,ExpressionUUID->"be726698-82e3-4a94-b05b-91094515b7b1"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->137523284,ExpressionUUID->"7871e991-615b-4169-9694-7be6737f5f2f"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellID->275361121,ExpressionUUID->"36ce1664-0d48-4d60-96fc-f026d7100f03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->48919150,ExpressionUUID->"37502537-fd2f-42d4-bd58-86a0d9a8ac47"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[677059525], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[677059525]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".h", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".header", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {480., {69., 75.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{484, 146},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->65982193,ExpressionUUID->"af53a948-3b2d-4fd1-a50e-308e393c8f3f"]
}, Open  ]],

Cell[TextData[{
 "Using the similar function ",
 ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
 " with all interpretations would favor the last entry even though it has \
less specificity and is not important."
}], "ExampleText",
 CellID->551044751,ExpressionUUID->"b4a9fba0-02c7-4c36-a34e-d9a7e7a273c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSInterpretations", "[", 
  RowBox[{"Cell", ",", 
   RowBox[{"cssData", "[", 
    RowBox[{"[", 
     RowBox[{
     "All", ",", "\"\<Block\>\"", ",", "All", ",", "\"\<Interpretation\>\""}],
      "]"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->304063679,ExpressionUUID->"2ffe2ed3-e3d5-420c-8976-1ccdbc80c7c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "7.5`"}], "}"}]], "Output",
 ImageSize->{112, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->672902617,ExpressionUUID->"7c47d228-031f-4074-9e77-c650c05e6e7e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "24c94b2e-f9c4-41fb-935b-6705c0bddbcf"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2061341341,ExpressionUUID->"c4358828-14b1-4658-99c7-b5867929dee6"],

Cell[CellGroupData[{

Cell[TextData[{
 "\"IgnoreSpecificity\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "105ba6a9-d2af-4325-afb2-2255b5d91814"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1757724783,ExpressionUUID->"053b05a6-b845-434f-811e-77ba01820411"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->405814373,ExpressionUUID->"e21b123b-af95-4d31-9dab-32fec6b6677b"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellID->108671522,ExpressionUUID->"60398388-f0c6-4bbe-b2c2-4d9ad9652408"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->289398237,ExpressionUUID->"3d17f409-79d6-4a5a-a68c-836e1460518f"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[677059525], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[677059525]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".h", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".header", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {480., {69., 75.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{484, 146},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->636414141,ExpressionUUID->"65fbf359-cf03-4639-9fb0-342a181f8c0d"]
}, Open  ]],

Cell["\<\
Normally selector specificity is used in determining the style cascade. The \
class selector \".header\" has a higher specificity than the element selector \
\"h1\". Thus, the FontSize for \".header\" is used.\
\>", "ExampleText",
 CellID->347175432,ExpressionUUID->"ffe17a78-c2c2-4679-b804-75d209b7c0ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->329914097,ExpressionUUID->"3ffeb617-141c-46f2-bcf3-43996f3c19b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 ImageSize->{112, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->696316718,ExpressionUUID->"ef6ba795-f8e9-47c3-83a4-2777b63324ac"]
}, Open  ]],

Cell["\<\
Ignoring specificity, the last selector in the list of selectors is used to \
determine the style.\
\>", "ExampleText",
 CellID->30634469,ExpressionUUID->"5e127486-6631-4b5c-b63d-69f0142c340a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}], ",", 
   RowBox[{"\"\<IgnoreSpecificity\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->162791683,ExpressionUUID->"71809268-d840-4d64-8fc5-ffcd07e8d3a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "7.5`"}], "}"}]], "Output",
 ImageSize->{112, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->558658582,ExpressionUUID->"7f6109b1-4700-42b0-8c02-bba8f3a7b2ce"]
}, Open  ]],

Cell["However, importance is still used to determine the style.", \
"ExampleText",
 CellID->17930543,ExpressionUUID->"f84410e7-cf88-4400-967a-5e2a8f999b4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\"", ",", "\"\<h1\>\""}], "}"}], 
   ",", 
   RowBox[{"\"\<IgnoreSpecificity\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->154024933,ExpressionUUID->"bd8a64d4-c066-4a77-a3c0-007cc2c61144"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 ImageSize->{119, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->235900111,ExpressionUUID->"a66c70cc-5f36-4f47-8e05-0e59de01a6b6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "\"IgnoreImportance\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "78ed7279-beca-49e3-9147-cfa9ed503813"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1295379749,ExpressionUUID->"4b062e07-adc8-442c-8cc7-e0a23d7e03da"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CSSTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->201519839,ExpressionUUID->"66430e8f-51d6-4e87-a340-1ac5f25a82a6"],

Cell["\<\
An example of CSS matching properties from different selectors.\
\>", "ExampleText",
 CellID->453615333,ExpressionUUID->"0f7f62ba-2591-40e9-b58b-b3b3a72f5a09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} h1 \
{font-size:10px}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->73940315,ExpressionUUID->"470f27ea-480e-4321-bce6-d23b0181725e"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Selector"} -> 1, {All, "Condition"} -> 
           1, {All, "Block"} -> 
           Association[{All, "Block", All, "Important"} -> 
             1, {All, "Block", All, "Property"} -> 
             1, {All, "Block", All, "Value"} -> 
             1, {All, "Block", All, "Interpretation"} -> 1]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Selector" -> 
              TypeSystem`PackageScope`AtomShape[67.20000000000002], 
              "Condition" -> TypeSystem`PackageScope`UnknownShape, "Block" -> 
              TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`RowShape[
                  Association[
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                   "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                   "Value" -> 
                   TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                   "Interpretation" -> 
                   TypeSystem`PackageScope`UnknownShape]]], 1, {
                All, "Block"}]]]], 3, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[677059525], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"Selector", "Condition", "Block"}, {
            TypeSystem`Atom[String], TypeSystem`AnyType, 
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "Important", "Property", "Value", "Interpretation"}, {
               TypeSystem`Atom[TypeSystem`Boolean], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["font-size"]], 
               TypeSystem`Atom[String], TypeSystem`AnyType}], 1]}], 3], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[677059525]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Selector\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Selector\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Selector"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Selector"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Condition\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Condition"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Condition"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Block\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Block\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
              SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Important\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Important"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Important"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Property\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Property\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Property"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Property"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Value\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Value\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Value"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[All, "Block", All, "Value"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Interpretation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][{
                    All, "Block", All, "Interpretation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[
                  All, "Block", All, "Interpretation"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".h", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["30px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "22.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[".header", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["20px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "15.`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[2, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["h1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Selector"]]], "Mouse"], 
                ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "None", FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Condition"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["False"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Important"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["font-size", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Property"]]], "Mouse"], 
                ImageSize -> {{81., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10px", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Value"]]], "Mouse"], 
                ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"FontSize", "\[Rule]", "7.5`"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
                  GeneralUtilities`Slice[3, 
                   Key["Block"], 1, 
                   Key["Interpretation"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 989786238]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[989786238][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {480., {69., 75.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 ImageSize->{484, 146},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->510915971,ExpressionUUID->"9079b814-6446-4bb6-8e98-ffabe1bfe927"]
}, Open  ]],

Cell["\<\
Normally rule importance is used in determining the style cascade. The class \
selectors \".h\" and \".header\" have the same specificity and the \
\".header\" rule appears last. However, the \".h\" rule is important so it is \
used even though it is declared earlier.\
\>", "ExampleText",
 CellID->328254856,ExpressionUUID->"a8d3045b-400a-43e8-8114-00dab44db1a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->415776725,ExpressionUUID->"509c9b49-fc04-407b-bfcb-b11948c08540"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "22.5`"}], "}"}]], "Output",
 ImageSize->{119, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->6226931,ExpressionUUID->"d6c16d05-b3c3-4072-a376-a67d60417d9b"]
}, Open  ]],

Cell["\<\
Ignoring importance, the last selector in the list of selectors is used to \
determine the style.\
\>", "ExampleText",
 CellID->156540000,ExpressionUUID->"50c16e01-07be-453a-b110-6f4d6ea269e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}], ",", 
   RowBox[{"\"\<IgnoreImportance\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->814919511,ExpressionUUID->"667f39c5-985a-4f73-8224-0e4451b63378"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 ImageSize->{112, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->524196320,ExpressionUUID->"d52ff07b-41ca-49f7-97c7-4b5c2d5e7502"]
}, Open  ]],

Cell["\<\
However, specificity is still used to determine the style. Including the \
element selector \"h1\" has no effect since it has a lower specificity.\
\>", "ExampleText",
 CellID->375301362,ExpressionUUID->"ce6dd233-5577-4ea4-8183-0c5e76ff5eb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResolveCSSCascade", "[", 
  RowBox[{"Cell", ",", "cssData", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<h1\>\"", ",", "\"\<.h\>\"", ",", "\"\<.header\>\""}], "}"}], 
   ",", 
   RowBox[{"\"\<IgnoreImportance\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->47133936,ExpressionUUID->"b9616fc8-3fb7-4135-a98a-72b19f53b629"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "15.`"}], "}"}]], "Output",
 ImageSize->{112, 14},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->9879418,ExpressionUUID->"2bd96c1a-8be1-4357-9483-0e9eee039901"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["", "SectionFooterSpacer",ExpressionUUID->"aed653df-980b-4498-8e8a-3f8a24866559"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"f3d1f7c4-2cb9-4c27-8240-682372ab5b8b"],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704,ExpressionUUID->"9eb84af0-e84b-44ee-86c1-03a56da32b68"],

Cell[TextData[{
 StyleBox[ButtonBox["ResolveCSSInterpretations",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInterpretations"],
  FontFamily->"Verdana"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 StyleBox[ButtonBox["ResolveCSSInheritance",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ResolveCSSInheritance"],
  FontFamily->"Verdana"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 StyleBox[ButtonBox["ExtractCSSFromXML",
  BaseStyle->"Link",
  ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"],
  FontFamily->"Verdana"],
 " "
}], "SeeAlso",
 CellID->929782353,ExpressionUUID->"3078abfd-6145-4fde-ace1-fdac7d6bfeec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"e227c500-da61-43a5-8c16-0f7c276e9ea3"],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057,ExpressionUUID->"a7c142f6-db8a-4644-9c50-f1d15ab2161b"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"b2ae2673-39b8-4a1d-973a-928b26a7638e"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["CSSTools"]],"paclet:CSSTools/tutorial/CSSTools"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938,ExpressionUUID->"3231d808-6356-4011-a098-9647dc34971f"],

Cell["", "SectionFooterSpacer",ExpressionUUID->"ce70d3c1-1abf-41c7-a445-eb904502f4c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"802a6f7b-ca96-436b-bc83-55ec77d6231f"],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248,ExpressionUUID->"3a2d5e1a-f16b-4171-b6d8-4a45aa782030"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"6eec0ef2-12bf-49de-b153-07f22c66837b"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["CSSTools"]],"paclet:CSSTools/guide/CSSTools"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->169279544,ExpressionUUID->"892329f5-08e5-4822-a710-5cdc61406260"]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"c5670f8f-a181-45e1-b1b7-4122cdf0587a"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ResolveCSSCascade",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "CSSTools", ButtonData -> "paclet:CSSTools/guide/CSSTools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2019, 6, 19, 15, 7, 17.1812678}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "CSSTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "C S S Tools Symbol", "language" -> "en", "paclet" -> "CSSTools", 
    "status" -> "None", "summary" -> 
    "ResolveCSSCascade[type, CSSData, {selector, ...}] ResolveCSSCascade \
combines options that were interpreted from the CSS importer. CSS styles are \
merged following the CSS cascade and the resulting options are filtered by \
type.", "synonyms" -> {}, "tabletags" -> {}, "title" -> "ResolveCSSCascade", 
    "titlemodifier" -> "", "windowtitle" -> "ResolveCSSCascade", "type" -> 
    "Symbol", "uri" -> "CSSTools/ref/ResolveCSSCascade", "WorkflowDockedCell" -> 
    ""}, "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  TaggingRules -> {"NewStyles" -> False}, FrontEndVersion -> 
  "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", StyleDefinitions -> 
  "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[10083, 256, 433, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"3cdc6caa-4fca-4f01-bcbd-f5bdb56e69f0",
   CellTags->"PrimaryExamplesSection",
   CellID->8796266]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 145731, 3155}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[589, 21, 5137, 117, 55, "AnchorBarGrid",ExpressionUUID->"6a7bcc29-f6af-42b8-9b16-b5b57351ffb5",
 CellID->1],
Cell[CellGroupData[{
Cell[5751, 142, 402, 9, 52, "ObjectNameGrid",ExpressionUUID->"3b50cc90-0f59-4a0d-a700-f893b413634d"],
Cell[6156, 153, 1061, 25, 131, "Usage",ExpressionUUID->"a2795b5e-0066-434b-b2bc-8fb6dc722074",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[7254, 183, 855, 21, 37, "NotesSection",ExpressionUUID->"2dc09c1c-3a23-40af-a093-5383c21945a2",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->141183935],
Cell[8112, 206, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"1134bdcc-e55a-4175-b700-04113af44685"],
Cell[8201, 208, 310, 5, 70, "Notes",ExpressionUUID->"3b725dab-ca02-4bab-83b2-5c84ff4563f8",
 CellID->1067943069],
Cell[8514, 215, 989, 21, 70, "3ColumnTableMod",ExpressionUUID->"e0159d89-ac50-4714-9b39-ea1f2dcfcbf8",
 CellID->56488170],
Cell[9506, 238, 451, 11, 70, "Notes",ExpressionUUID->"22a66f17-12af-4f4b-bd36-05eeae470922",
 CellID->38300189],
Cell[9960, 251, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"9d6398f2-7ed0-4b3d-bd0f-5b48f9d8a748"]
}, Closed]],
Cell[CellGroupData[{
Cell[10083, 256, 433, 11, 35, "PrimaryExamplesSection",ExpressionUUID->"3cdc6caa-4fca-4f01-bcbd-f5bdb56e69f0",
 CellTags->"PrimaryExamplesSection",
 CellID->8796266],
Cell[CellGroupData[{
Cell[10541, 271, 307, 7, 29, "ExampleSection",ExpressionUUID->"e9739497-47e7-4b78-8caf-d742fe29321d",
 CellID->16360252],
Cell[10851, 280, 171, 3, 26, "Input",ExpressionUUID->"c16aa1dd-7a4f-4973-8591-71c202dcb6b3",
 CellID->14098569],
Cell[11025, 285, 169, 3, 38, "ExampleText",ExpressionUUID->"24b430f6-702d-42f1-bd03-c3d2ed884c0a",
 CellID->104691956],
Cell[CellGroupData[{
Cell[11219, 292, 312, 7, 59, "Input",ExpressionUUID->"2965936b-276e-44c5-99eb-32effdccceaa",
 CellID->9491473],
Cell[11534, 301, 29169, 578, 167, "Output",ExpressionUUID->"4d04e430-2522-483b-bc6a-7b7907d855c8",
 CellID->244525884]
}, Open  ]],
Cell[40718, 882, 413, 8, 57, "ExampleText",ExpressionUUID->"011b798c-7310-4a09-819c-ef6f62104483",
 CellID->339362087],
Cell[CellGroupData[{
Cell[41156, 894, 378, 10, 26, "Input",ExpressionUUID->"f845f691-3203-457b-9388-ac3745c82975",
 CellID->571563147],
Cell[41537, 906, 397, 11, 35, "Output",ExpressionUUID->"a994dcb7-ac65-4eb8-83e1-702368d7bfd1",
 CellID->308123595]
}, Open  ]],
Cell[CellGroupData[{
Cell[41971, 922, 282, 6, 70, "Input",ExpressionUUID->"b61770d7-42ad-44ed-9bd6-2bd7832c6871",
 CellID->202779533],
Cell[42256, 930, 274, 7, 35, "Output",ExpressionUUID->"98d4ded9-b1aa-46af-8858-7bf5f475b029",
 CellID->19396224]
}, Open  ]],
Cell[42545, 940, 484, 9, 70, "ExampleText",ExpressionUUID->"8db0525a-3655-4eb8-bdd8-b9d1581d7988",
 CellID->509811264],
Cell[CellGroupData[{
Cell[43054, 953, 282, 6, 70, "Input",ExpressionUUID->"55144a5e-1ccb-44f8-ac73-18dfcb82e337",
 CellID->481809636],
Cell[43339, 961, 276, 7, 35, "Output",ExpressionUUID->"f6e5821f-db87-460e-91cc-ea06e2c86809",
 CellID->120766142]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43664, 974, 323, 7, 70, "ExampleSection",ExpressionUUID->"be726698-82e3-4a94-b05b-91094515b7b1",
 CellID->1020263627],
Cell[43990, 983, 172, 3, 70, "Input",ExpressionUUID->"7871e991-615b-4169-9694-7be6737f5f2f",
 CellID->137523284],
Cell[44165, 988, 169, 3, 70, "ExampleText",ExpressionUUID->"36ce1664-0d48-4d60-96fc-f026d7100f03",
 CellID->275361121],
Cell[CellGroupData[{
Cell[44359, 995, 313, 7, 70, "Input",ExpressionUUID->"37502537-fd2f-42d4-bd58-86a0d9a8ac47",
 CellID->48919150],
Cell[44675, 1004, 29132, 578, 70, "Output",ExpressionUUID->"af53a948-3b2d-4fd1-a50e-308e393c8f3f",
 CellID->65982193]
}, Open  ]],
Cell[73822, 1585, 382, 8, 70, "ExampleText",ExpressionUUID->"b4a9fba0-02c7-4c36-a34e-d9a7e7a273c9",
 CellID->551044751],
Cell[CellGroupData[{
Cell[74229, 1597, 357, 9, 70, "Input",ExpressionUUID->"2ffe2ed3-e3d5-420c-8976-1ccdbc80c7c5",
 CellID->304063679],
Cell[74589, 1608, 275, 7, 35, "Output",ExpressionUUID->"7c47d228-031f-4074-9e77-c650c05e6e7e",
 CellID->672902617]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[74913, 1621, 302, 7, 70, "ExampleSection",ExpressionUUID->"c4358828-14b1-4658-99c7-b5867929dee6",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[75240, 1632, 322, 7, 70, "ExampleSubsection",ExpressionUUID->"053b05a6-b845-434f-811e-77ba01820411",
 CellID->1757724783],
Cell[75565, 1641, 172, 3, 70, "Input",ExpressionUUID->"e21b123b-af95-4d31-9dab-32fec6b6677b",
 CellID->405814373],
Cell[75740, 1646, 169, 3, 70, "ExampleText",ExpressionUUID->"60398388-f0c6-4bbe-b2c2-4d9ad9652408",
 CellID->108671522],
Cell[CellGroupData[{
Cell[75934, 1653, 314, 7, 70, "Input",ExpressionUUID->"3d17f409-79d6-4a5a-a68c-836e1460518f",
 CellID->289398237],
Cell[76251, 1662, 29133, 578, 70, "Output",ExpressionUUID->"65fbf359-cf03-4639-9fb0-342a181f8c0d",
 CellID->636414141]
}, Open  ]],
Cell[105399, 2243, 315, 5, 70, "ExampleText",ExpressionUUID->"ffe17a78-c2c2-4679-b804-75d209b7c0ef",
 CellID->347175432],
Cell[CellGroupData[{
Cell[105739, 2252, 282, 6, 70, "Input",ExpressionUUID->"3ffeb617-141c-46f2-bcf3-43996f3c19b8",
 CellID->329914097],
Cell[106024, 2260, 275, 7, 35, "Output",ExpressionUUID->"ef6ba795-f8e9-47c3-83a4-2777b63324ac",
 CellID->696316718]
}, Open  ]],
Cell[106314, 2270, 203, 4, 70, "ExampleText",ExpressionUUID->"5e127486-6631-4b5c-b63d-69f0142c340a",
 CellID->30634469],
Cell[CellGroupData[{
Cell[106542, 2278, 349, 7, 70, "Input",ExpressionUUID->"71809268-d840-4d64-8fc5-ffcd07e8d3a1",
 CellID->162791683],
Cell[106894, 2287, 275, 7, 35, "Output",ExpressionUUID->"7f6109b1-4700-42b0-8c02-bba8f3a7b2ce",
 CellID->558658582]
}, Open  ]],
Cell[107184, 2297, 156, 2, 70, "ExampleText",ExpressionUUID->"f84410e7-cf88-4400-967a-5e2a8f999b4c",
 CellID->17930543],
Cell[CellGroupData[{
Cell[107365, 2303, 372, 8, 70, "Input",ExpressionUUID->"bd8a64d4-c066-4a77-a3c0-007cc2c61144",
 CellID->154024933],
Cell[107740, 2313, 276, 7, 35, "Output",ExpressionUUID->"a66c70cc-5f36-4f47-8e05-0e59de01a6b6",
 CellID->235900111]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[108065, 2326, 321, 7, 70, "ExampleSubsection",ExpressionUUID->"4b062e07-adc8-442c-8cc7-e0a23d7e03da",
 CellID->1295379749],
Cell[108389, 2335, 172, 3, 70, "Input",ExpressionUUID->"66430e8f-51d6-4e87-a340-1ac5f25a82a6",
 CellID->201519839],
Cell[108564, 2340, 169, 3, 70, "ExampleText",ExpressionUUID->"0f7f62ba-2591-40e9-b58b-b3b3a72f5a09",
 CellID->453615333],
Cell[CellGroupData[{
Cell[108758, 2347, 313, 7, 70, "Input",ExpressionUUID->"470f27ea-480e-4321-bce6-d23b0181725e",
 CellID->73940315],
Cell[109074, 2356, 29133, 578, 70, "Output",ExpressionUUID->"9079b814-6446-4bb6-8e98-ffabe1bfe927",
 CellID->510915971]
}, Open  ]],
Cell[138222, 2937, 374, 6, 70, "ExampleText",ExpressionUUID->"a8d3045b-400a-43e8-8114-00dab44db1a5",
 CellID->328254856],
Cell[CellGroupData[{
Cell[138621, 2947, 282, 6, 70, "Input",ExpressionUUID->"509c9b49-fc04-407b-bfcb-b11948c08540",
 CellID->415776725],
Cell[138906, 2955, 274, 7, 35, "Output",ExpressionUUID->"d6c16d05-b3c3-4072-a376-a67d60417d9b",
 CellID->6226931]
}, Open  ]],
Cell[139195, 2965, 203, 4, 70, "ExampleText",ExpressionUUID->"50c16e01-07be-453a-b110-6f4d6ea269e9",
 CellID->156540000],
Cell[CellGroupData[{
Cell[139423, 2973, 348, 7, 70, "Input",ExpressionUUID->"667f39c5-985a-4f73-8224-0e4451b63378",
 CellID->814919511],
Cell[139774, 2982, 275, 7, 35, "Output",ExpressionUUID->"d52ff07b-41ca-49f7-97c7-4b5c2d5e7502",
 CellID->524196320]
}, Open  ]],
Cell[140064, 2992, 252, 4, 70, "ExampleText",ExpressionUUID->"ce6dd233-5577-4ea4-8183-0c5e76ff5eb1",
 CellID->375301362],
Cell[CellGroupData[{
Cell[140341, 3000, 370, 8, 70, "Input",ExpressionUUID->"b9616fc8-3fb7-4135-a98a-72b19f53b629",
 CellID->47133936],
Cell[140714, 3010, 273, 7, 35, "Output",ExpressionUUID->"2bd96c1a-8be1-4357-9483-0e9eee039901",
 CellID->9879418]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[141026, 3022, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"aed653df-980b-4498-8e8a-3f8a24866559"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141149, 3027, 260, 7, 70, "SeeAlsoSection",ExpressionUUID->"9eb84af0-e84b-44ee-86c1-03a56da32b68",
 CellID->1255426704],
Cell[141412, 3036, 804, 23, 70, "SeeAlso",ExpressionUUID->"3078abfd-6145-4fde-ace1-fdac7d6bfeec",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[142253, 3064, 262, 7, 70, "TutorialsSection",ExpressionUUID->"a7c142f6-db8a-4644-9c50-f1d15ab2161b",
 CellID->250839057],
Cell[142518, 3073, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"b2ae2673-39b8-4a1d-973a-928b26a7638e"],
Cell[142607, 3075, 226, 5, 70, "Tutorials",ExpressionUUID->"3231d808-6356-4011-a098-9647dc34971f",
 CellID->341631938],
Cell[142836, 3082, 86, 0, 70, "SectionFooterSpacer",ExpressionUUID->"ce70d3c1-1abf-41c7-a445-eb904502f4c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142959, 3087, 266, 7, 70, "MoreAboutSection",ExpressionUUID->"3a2d5e1a-f16b-4171-b6d8-4a45aa782030",
 CellID->38303248],
Cell[143228, 3096, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"6eec0ef2-12bf-49de-b153-07f22c66837b"],
Cell[143317, 3098, 223, 5, 70, "MoreAbout",ExpressionUUID->"892329f5-08e5-4822-a710-5cdc61406260",
 CellID->169279544]
}, Open  ]],
Cell[143555, 3106, 78, 0, 70, "FooterCell",ExpressionUUID->"c5670f8f-a181-45e1-b1b7-4122cdf0587a"]
}
]
*)

(* End of internal cache information *)


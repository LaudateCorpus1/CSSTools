(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1606715,      30965]
NotebookOptionsPosition[   1567497,      30172]
NotebookOutlinePosition[   1570662,      30247]
CellTagsIndexPosition[   1570579,      30242]
WindowTitle->CSS Tools Package
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["C S S TOOLS TUTORIAL", "PacletNameCell",ExpressionUUID->
     "96351a0f-7c0f-44b1-a902-4dbef6e126c2"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"a5ee16ce-c3bc-4de3-875f-7629cba7a119"],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools\"\>":>Documentation`HelpLookup[
       "paclet:CSSTools/guide/CSSTools"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialMoreAboutSection"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "79ad9cc9-a4fa-45cf-adfa-059886c9e677"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"5046cff5-32a5-4822-ba95-65c0c4bb5c8c"],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Cell\"\>":>Documentation`HelpLookup[
       "paclet:ref/Cell"], "\<\"CellFrame\"\>":>Documentation`HelpLookup[
       "paclet:ref/CellFrame"], "\<\"CSSCascade\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSCascade"], "\<\"CSSInheritance\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/CSSInheritance"], "\<\"ExtractCSSFromXML\"\>":>
       Documentation`HelpLookup[
       "paclet:CSSTools/ref/ExtractCSSFromXML"], "\<\"ImageSize\"\>":>
       Documentation`HelpLookup["paclet:ref/ImageSize"], "\<\"Notebook\"\>":>
       Documentation`HelpLookup["paclet:ref/Notebook"], "\<\"Style\"\>":>
       Documentation`HelpLookup["paclet:ref/Style"], "\<\"StyleSheetPath\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/StyleSheetPath"], "\<\"TraditionalForm\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/TraditionalForm"], "\<\"WindowSize\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/WindowSize"], "\<\"$BaseDirectory\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/$BaseDirectory"], "\<\"$FrontEnd\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/$FrontEnd"], "\<\"$FrontEndSession\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/$FrontEndSession"], "\<\"$UserBaseDirectory\"\>":>
       Documentation`HelpLookup["paclet:ref/$UserBaseDirectory"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a998f9c1-0e63-4717-891e-9fe4b764afed"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }],ExpressionUUID->"e14bd94d-6183-4f8b-b8dc-bfb30a983292"],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"CSSTools/tutorial/CSSTools\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CSSTools/tutorial/CSSTools"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/CSSTools/tutorial/\
CSSTools.html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, 
            Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$12708], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "CSSTools/tutorial/CSSTools", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "1b338b50-df35-4bff-8b52-392994c5d9c9"]
    }], "AnchorBar",ExpressionUUID->"fa4843b3-2051-4acf-8e7e-0503ad53c55a"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"5ccd377e-360d-423a-ab01-8eb31ffd8242"],

Cell[CellGroupData[{

Cell["CSS Tools Package", "Title",
 CellID->509267359,ExpressionUUID->"66be0c7f-129c-4236-8284-4c50587b284a"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Introduction and Comparisons between CSS and Wolfram Desktop"], 
      "paclet:CSSTools/tutorial/CSSTools#185646103", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Making a Custom Stylesheet from CSS Data"], 
      "paclet:CSSTools/tutorial/CSSTools#78394971", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Importing CSS"], "paclet:CSSTools/tutorial/CSSTools#121087292", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Using a Custom Stylesheet on a Notebook"], 
      "paclet:CSSTools/tutorial/CSSTools#534745247", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Working with Imported CSS Data"], 
      "paclet:CSSTools/tutorial/CSSTools#19141817", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Beyond CSS 2.1"], "paclet:CSSTools/tutorial/CSSTools#350926873", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["CSS within SymbolicXML"], 
      "paclet:CSSTools/tutorial/CSSTools#69801460", 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}], 
      GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
          0, 8.}, {8., 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8., 8.}, PlotRange -> {{0, 8.}, {0, 8.}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TutorialJumpBox",ExpressionUUID->"fd281d40-9808-471d-bc90-\
30e7f413c4ab"],

Cell["\<\
Cascading Style Sheets (CSS) is a stylesheet language used for describing the \
presentation of a document written in markup language like HTML and XML. \
Wolfram Desktop also uses stylesheets to describe the styling of notebooks. \
This package provides tools for importing and processing CSS to be used \
within Wolfram Desktop's stylesheet system.\
\>", "Text",
 CellID->1534169418,ExpressionUUID->"58cf0cf3-5168-465c-a524-35cb5b1da76e"],

Cell["This loads the package :", "MathCaption",
 CellID->310445284,ExpressionUUID->"6c5f91a0-83cf-46d8-a6f0-c7f574fac3cc"],

Cell[BoxData[
 RowBox[{"<<", "CSSTools`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->575452366,ExpressionUUID->"6b966142-09bc-409c-8088-88712128147f"],

Cell[CellGroupData[{

Cell["Introduction and Comparisons between CSS and Wolfram Desktop", "Section",
 CellID->185646103,ExpressionUUID->"27fce8ca-96a5-4e8f-8893-f65ca438ca15"],

Cell[TextData[{
 "It is beyond the scope of this tutorial to provide explanations for every \
difference between the CSS and Wolfram Desktop (WD) stylesheet \
specifications. Please refer to the WD ",
 ButtonBox["Stylesheets guide page",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Stylesheets"],
 " and tutorial ",
 ButtonBox["\"Working with Stylesheets\[CloseCurlyDoubleQuote]",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/WorkingWithStylesheets"],
 " for more details on the WD system, or the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["W3C learning resource"]], 
    "https://www.w3.org/Style/CSS/learning"},
   "WebLink",
   BaseStyle->{"Text"}]],ExpressionUUID->
  "3f642667-f904-4d4f-9710-a987378719b9"],
 " for details with CSS."
}], "Text",
 CellID->72334175,ExpressionUUID->"a75fc352-5150-4177-b01c-2148207806cc"],

Cell[CellGroupData[{

Cell["Basic Syntax", "Subsection",
 CellID->492661331,ExpressionUUID->"10f8fcb6-a74f-4040-8260-1718748265f8"],

Cell[BoxData[GridBox[{
   {Cell["CSS", "TableHeader",ExpressionUUID->
     "8232fbf4-1b25-4c06-81ac-1b93719aa282"], Cell[
    "CSS Example", "TableHeader",ExpressionUUID->
     "66f1dfef-1511-41fc-add1-777a815c4bad"], Cell[
    "WD", "TableHeader",ExpressionUUID->
     "e0369806-bfaa-4ecf-9dc3-d160116263f4"], Cell[
    "WD Example", "TableHeader",ExpressionUUID->
     "64952fa1-afc4-4302-b0a0-7f01f301f2d7"]},
   {"selector", 
    StyleBox["h1", "InlineCode"], 
    RowBox[{"style", " ", "name"}], 
    StyleBox["\"\<Section\>\"", "InlineCode"]},
   {"declaration", 
    StyleBox[
     RowBox[{"property", ":", "value"}], "InlineCode"], "option", 
    StyleBox[
     RowBox[{"name", "\[Rule]", "value"}], "InlineCode"]},
   {"rule", 
    StyleBox[
     RowBox[{"h1", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p1", ":", "v1"}], ";", 
        RowBox[{"p2", ":", "v2"}], ";", "\[Ellipsis]"}], "}"}]}], 
     "InlineCode"], 
    RowBox[{"style", " ", "cell"}], 
    StyleBox[
     RowBox[{"Cell", "[", 
      RowBox[{
       RowBox[{"StyleData", "[", "\"\<Section\>\"", "]"}], ",", 
       RowBox[{"n1", "\[Rule]", "v1"}], ",", 
       RowBox[{"n2", "\[Rule]", "v2"}], ",", "\[Ellipsis]"}], "]"}], 
     "InlineCode"]}
  }]], "DefinitionBox4Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->282349,ExpressionUUID->"865a3552-2484-4964-8dba-0a00a6ae7876"],

Cell["Comparison of stylesheet notations.", "Caption",
 CellID->168574036,ExpressionUUID->"693f37f7-7990-4b5e-8c6c-0ebac88388d2"],

Cell[TextData[{
 "CSS styles are called declarations. They consist of a property name and a \
value separated by a colon. A group of declarations is a declaration block \
where multiple declarations are delimited by semicolons. The declaration \
block is indicated by a set of curly braces. A selector indicates the target \
element to be styled by the corresponding declarations. The selector and \
declaration block together is called a rule.\nWD styles are given as options \
using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Rule"]], "paclet:ref/Rule"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "459b828f-3af9-46b8-aca0-197872605f62"],
 " syntax. They consist of an option name and a value separated by \
\"\[Rule]\" where multiple options are delimited by commas. Within a WD \
stylesheet, option sequences are grouped into ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleData"]], "paclet:ref/StyleData"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "92285f29-90bb-4819-a161-dedb16cee80a"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Cell"]], "paclet:ref/Cell"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "d750014a-9710-4db9-ab5a-f11e5fe5992b"],
 " expressions."
}], "Text",
 CellID->771639886,ExpressionUUID->"7d78e86e-edc3-497e-91d2-3b72ed1df102"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS Cascade", "Subsection",
 CellID->27852929,ExpressionUUID->"c7682611-d8ca-4032-b5b3-d1c04d56dffd"],

Cell["\<\
Multiple selectors can target the same element. In that case the declarations \
merge via the following cascading order with later ones overriding earlier \
ones:\
\>", "Text",
 CellID->222985747,ExpressionUUID->"88ff5561-8eea-4f7f-a8a1-eed43706ddfc"],

Cell[BoxData[GridBox[{
   {Cell["Origin", "TableHeader",ExpressionUUID->
     "20c02ef8-fe63-48e7-b1f9-2ebeb352c2cd"], Cell[
    "Importance", "TableHeader",ExpressionUUID->
     "eeb276d6-6838-494a-bdd4-6dc46023a02a"], Cell[
    "Example", "TableHeader",ExpressionUUID->
     "3f962221-c907-4802-90e0-bc644cf66070"]},
   {Cell["1. user agent", "TableText",ExpressionUUID->
     "9d440d29-a69c-4efa-8819-13eef70c84ac"], Cell[
    "normal", "TableText",ExpressionUUID->
     "deee67e7-9b0b-4fdb-8e4c-32df899094de"], Cell[
    "web browser's default styles", "TableText",ExpressionUUID->
     "edb9ffd0-56d8-433d-bc04-3eec3a06c9c6"]},
   {Cell["2. user", "TableText",ExpressionUUID->
     "2e014377-6145-42df-8f4c-dee289ba4118"], Cell[
    "normal", "TableText",ExpressionUUID->
     "4ebff6c0-fe24-4bf4-a56f-1b3b434b4f1f"], Cell[
    "web browser's user preferences", "TableText",ExpressionUUID->
     "6244c73e-a0b8-4c2c-b949-c64c0b6619e9"]},
   {Cell["3. author", "TableText",ExpressionUUID->
     "5ff273e8-c85c-469e-84a4-50ca7504c14d"], Cell[
    "normal", "TableText",ExpressionUUID->
     "f9bfb890-d0a0-451d-8ee2-7e342401b08a"], Cell[
    "HTML document's embedded styles", "TableText",ExpressionUUID->
     "e5385b41-bf91-44ff-954f-37097b05d30d"]},
   {Cell["4. author", "TableText",ExpressionUUID->
     "6cd0c212-021d-4dcb-bb47-be1968287d0d"], Cell[
    "important", "TableText",ExpressionUUID->
     "882af6cf-cf0b-4a34-986c-9432be7e9cc2"], Cell[
    "HTML document's embedded important styles", "TableText",ExpressionUUID->
     "d7b1878e-f592-4bfb-bf87-9594c1561181"]},
   {Cell["5. user", "TableText",ExpressionUUID->
     "ec60f58b-8e8c-45f1-9469-9b3276149e6e"], Cell[
    "important", "TableText",ExpressionUUID->
     "33c62eaf-ad39-46c1-bb64-9c72301b5c1e"], Cell[
    "web browser's user preference overrides", "TableText",ExpressionUUID->
     "868c661d-4363-462e-80b0-6b634e514ce6"]},
   {Cell["6. user agent", "TableText",ExpressionUUID->
     "cfeecaf5-8ec1-4c95-b1f7-73faeaa6deb1"], Cell[
    "important", "TableText",ExpressionUUID->
     "8d3fff23-1e12-466e-ae46-6d291e3977ef"], Cell[
    "web browser's enforced overrides", "TableText",ExpressionUUID->
     "7e580fdf-f78d-4334-a3e7-254233b73330"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->200218437,ExpressionUUID->"97a1efd9-6db0-4b17-af87-267ca9f0709c"],

Cell["Summary of CSS cascade order.", "Caption",
 CellID->88591569,ExpressionUUID->"b73fe078-6f09-4c7c-9644-bcd9f8c757bb"],

Cell["\<\
The user agent is the application used to view the document content. For web \
content a web browser is used. For notebook content WD is used. The user is \
the one interacting with the user agent. The author is the one who wrote the \
XML content and any associated stylesheets.\
\>", "Text",
 CellID->51822448,ExpressionUUID->"1029939c-6f27-4ae2-9929-887cc3ff1e7a"],

Cell[TextData[{
 "All declarations that apply to the targeted element are gathered. The \
declarations are sorted by origin and then importance. If two declarations \
come from the same origin and have the same importance, then they are ordered \
by specificity of the selector with higher specificity overriding lower. See \
the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelector"]], "paclet:CSSTools/ref/CSSSelector"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "67e72c05-10ac-40ef-9eda-b9c0a1263262"],
 " documentation to learn more about specificity. If two declarations have \
the same origin, importance and specificity, then the last declaration is \
used."
}], "Text",
 CellID->271229263,ExpressionUUID->"e75cd706-2aa6-4a12-b5e3-fd7f0d4a1ba8"],

Cell["\<\
Importing CSS to WD has a simplified cascade because there is only one origin \
(the CSS file being imported). Effectively only origins (3-4) are considered.\
\>", "Text",
 CellID->122626150,ExpressionUUID->"38eebda8-096f-4933-8cc0-ef1bb6e62f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WD Cascade", "Subsection",
 CellID->305221324,ExpressionUUID->"4d71f6ac-ab32-405b-81ab-cabc314db410"],

Cell[TextData[{
 "Named styles can appear in multiple stylesheets or used directly in a \
notebook, cell, or box (via the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Style"]], "paclet:ref/Style"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "1f9e7733-e861-4742-9258-21928d85562c"],
 " wrapper). Additional options can be directly embedded at the notebook, \
cell, or box level. These options merge via the following cascade order, with \
later ones overriding earlier ones:"
}], "Text",
 CellID->555909034,ExpressionUUID->"f8bec49d-defc-43d8-8210-438837c82b0f"],

Cell[BoxData[GridBox[{
   {Cell["Origin", "TableHeader",ExpressionUUID->
     "1cd50acb-111a-415a-97d5-51082f3f14bb"], Cell[
    "Example", "TableHeader",ExpressionUUID->
     "24c7791e-2ff5-4deb-8e69-a0b4a7621579"]},
   {
    RowBox[{"1.", "$DefaultFrontEnd"}], 
    RowBox[{"default", " ", "options"}]},
   {
    RowBox[{"2.", " ", 
     ButtonBox["$FrontEnd",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEnd"]}], Cell[
    "see results for Options[$FrontEnd]", "TableText",ExpressionUUID->
     "5179d195-8530-439b-b441-1c8d5dbd91c4"]},
   {
    RowBox[{"3.", 
     ButtonBox["$FrontEndSession",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEndSession"]}], Cell[TextData[Cell[
    BoxData[Cell[
     "see results for Options[$FrontEndSession]", "TableText",ExpressionUUID->
      "58a4259c-f768-4510-bbed-6570f5c75c78"]],
     GridBoxOptions->{BaseStyle->"TableText",
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
       "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
     ExpressionUUID->"80a6561b-3778-4e76-8ee4-5de02372cdb9"]], "TableText",
     ExpressionUUID->"7eb13247-3a4d-401e-9cbd-f45a281ef4e5"]},
   {
    RowBox[{"4.", "  ", 
     RowBox[{"StyleData", "[", 
      RowBox[{"All", ",", " ", 
       StyleBox[
        RowBox[{"current", " ", "environment"}], "TI"]}], "]"}]}], Cell[
    "from stylesheet inheritance order", "TableText",ExpressionUUID->
     "15b704d2-27f7-4cf7-b5dc-5a0998a21c1e"]},
   {
    RowBox[{"5.", "  ", 
     RowBox[{"StyleData", "[", "\"\<Notebook\>\"", "]"}]}], Cell[
    "from stylesheet inheritance order", "TableText",ExpressionUUID->
     "59514a79-b7f8-49e7-a216-201e7131cc4e"]},
   {
    RowBox[{
     RowBox[{"6.", " ", 
      ButtonBox["Notebook",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Notebook"]}], "-", 
     RowBox[{"level", " ", "option"}]}], Cell[TextData[{
     "embedded option like ",
     ButtonBox["WindowSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/WindowSize"]
    }], "TableText",ExpressionUUID->"53c64b85-9e7b-4445-a363-dc15eca59bf9"]},
   {
    RowBox[{"7.", "  ", 
     RowBox[{"StyleData", "[", 
      StyleBox["name", "TI"], "]"}]}], Cell[
    "from stylesheet inheritance order", "TableText",ExpressionUUID->
     "8d96d29c-27d9-44f4-a93a-50cdac167897"]},
   {
    RowBox[{"8.", "  ", 
     RowBox[{"StyleData", "[", 
      StyleBox[
       RowBox[{"name", ",", " ", 
        RowBox[{"current", " ", "environment"}]}], "TI"], "]"}]}], Cell[
    "from stylesheet inheritance order", "TableText",ExpressionUUID->
     "afb5791a-9a07-459e-8039-20a31a863f7a"]},
   {
    RowBox[{"9.", "  ", 
     RowBox[{"StyleData", "[", 
      StyleBox["form", "TI"], "]"}]}], Cell[TextData[{
     "from stylesheet inheritance order, e.g. ",
     ButtonBox["TraditionalForm",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/TraditionalForm"]
    }], "TableText",ExpressionUUID->"4ccc39bc-a169-4008-a789-fd1d4be6cd5b"]},
   {
    RowBox[{"10.", "  ", 
     RowBox[{"StyleData", "[", 
      StyleBox[
       RowBox[{"form", ",", " ", 
        RowBox[{"current", " ", "environment"}]}], "TI"], "]"}]}], Cell[
    "from stylesheet inheritance order", "TableText",ExpressionUUID->
     "7691fcfe-916f-4c52-9a0d-0c5aaec568cc"]},
   {
    RowBox[{
     RowBox[{"11.", " ", 
      ButtonBox["Cell",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Cell"]}], "-", 
     RowBox[{"level", " ", "options"}]}], Cell[TextData[{
     "embedded option like ",
     ButtonBox["CellFrame",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CellFrame"]
    }], "TableText",ExpressionUUID->"b737d0d2-1c6d-404f-b2dd-0123cdb64a3c"]},
   {
    RowBox[{"12.", " ", 
     ButtonBox["Style",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Style"], " ", "function", " "}], Cell[
    "innermost of nested styles have highest priority", "TableText",
     ExpressionUUID->"4ee1f56c-9248-4a71-b29c-eaed549bbca4"]},
   {
    RowBox[{
     RowBox[{"13.", " ", "Box"}], "-", 
     RowBox[{"level", " ", "options"}]}], Cell[TextData[{
     "embedded option like ",
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"]
    }], "TableText",ExpressionUUID->"6af7e83f-892d-4baf-9846-72128713161b"]}
  }]], "DefinitionBox",
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->792685257,ExpressionUUID->"4eda8d7f-dc70-4246-ab46-0e4fcc2852bd"],

Cell["Summary of WD cascade order.", "Caption",
 CellID->264816302,ExpressionUUID->"3ef0af3d-b25e-43c1-b943-11032c1ecd35"],

Cell[TextData[{
 "More details on WD inheritance can be found in the tutorial ",
 ButtonBox["Styles and the Inheritance of Option Settings",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/StylesAndTheInheritanceOfOptionSettings"],
 "."
}], "Text",
 CellID->103579448,ExpressionUUID->"5c74b4fe-8f36-40d6-9d9f-e4b5ce712b93"],

Cell[TextData[{
 "The origins (1-3) are user agent settings that occur globally. Origin (4) \
is also a global setting but is resolved from the inheritance order of \
stylesheets. Origins (5-6) are notebook-level options where (5) is resolved \
from the inheritance order of stylesheets and (6) is embedded in the notebook \
itself. Origins (7-11) are cell-level options where (7-10) are resolved from \
the inheritance order of stylesheets and (11) is embedded in the cell itself. \
Origins (12-13) are at the box-level. Origin (12) resolves to a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleBox"]], "paclet:ref/StyleBox"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "80d8e94c-880e-452d-b103-46e20219c4db"],
 " and (13) is embedded in the box itself e.g. ",
 Cell[BoxData[
  RowBox[{"PanelBox", "[", 
   RowBox[{"\"\<A\>\"", ",", " ", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]], "InlineFormula",
  ExpressionUUID->"69a4f6bf-3df5-4062-a20f-9e8c7b0cd1ef"],
 "."
}], "Text",
 CellID->112998587,ExpressionUUID->"fce80ee6-2687-4e71-a404-928889e1954e"],

Cell[TextData[{
 "Along the inheritance order of linked stylesheets the first found instance \
of the named ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleData"]], "paclet:ref/StyleData"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "8da74c06-cc2e-48d3-9fc9-f2c902305d1d"],
 " is the one that is used. For example, when a named style is used such as ",
 StyleBox["\"Section\"", "InlineCode"],
 ", the named style is looked for within the notebook's ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleDefinitions"]], "paclet:ref/StyleDefinitions"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "ac7d7a45-7a15-4ed6-b2a9-bf1911be2ef9"],
 ". If not found, then the search continues into the next named stylesheet \
pointed to from the current stylesheet. Typically the stylesheet inheritance \
order ends with Default.nb then Core.nb."
}], "Text",
 CellID->120150103,ExpressionUUID->"c1b0f50d-dd70-4a75-9282-3959ad72bbc6"],

Cell[TextData[{
 "Each stylesheet that make up the stylesheet inheritance order is itself \
located via the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleSheetPath"]], "paclet:ref/StyleSheetPath"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "e9558734-5da3-4524-b0c3-423885f03a44"],
 " order. ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$BaseDirectory"]], "paclet:ref/$BaseDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "ad631304-5a57-402c-b14a-5e161854616d"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$UserBaseDirectory"]], "paclet:ref/$UserBaseDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "5b3946a8-2fbe-42e8-9673-b4aee7c9d03d"],
 " are searched before ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$InstallationDirectory"]], "paclet:ref/$InstallationDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "252f6131-2d3e-4b67-bc75-c366b433510b"],
 ". Note this exception to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleSheetPath"]], "paclet:ref/StyleSheetPath"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "2fd1b3e8-1563-467c-af82-ad186642441c"],
 ": if a notebook is opened from a file then ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NotebookDirectory"]], "paclet:ref/NotebookDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "5b6be4e0-e249-463f-b32d-e879f1df0f1c"],
 " is automatically the first stylesheet directory before following the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleSheetPath"]], "paclet:ref/StyleSheetPath"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "cf52b2a3-b4ad-44a8-afbc-3ba555b01797"],
 " order."
}], "Text",
 CellID->281172209,ExpressionUUID->"d6bff9bd-99b3-4a74-bc1f-87e7572305f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS vs WD Cascade Origins", "Subsection",
 CellID->12152049,ExpressionUUID->"9305eb8c-022d-4f49-8197-332309c7b25c"],

Cell["\<\
The following comparison is only one such interpretation between CSS and WD \
inheritance. Numbers in parentheses refer to the numbers in the tables above \
for CSS and WD, respectively:\
\>", "Text",
 CellID->320649723,ExpressionUUID->"3158fcd9-6a76-4f64-b40a-88932ce43d01"],

Cell[BoxData[GridBox[{
   {Cell["CSS", "TableHeader",ExpressionUUID->
     "708504e6-e476-4c0b-9765-509e4849d091"], Cell[
    "WD", "TableHeader",ExpressionUUID->
     "eef6e5a8-7522-4724-97e5-b9f64c83da8c"]},
   {
    RowBox[{
     RowBox[{"(", "1", ")"}], " ", "user", " ", "agent", " ", "normal", " ", 
     "declarations"}], Cell[TextData[{
     "(1-3) $DefaultFrontEnd/",
     ButtonBox["$FrontEnd",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEnd"],
     "/",
     ButtonBox["$FrontEndSession",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$FrontEndSession"]
    }], "TableText",ExpressionUUID->"4acf17ee-f572-4393-a0f9-8d5416dcd58f"]},
   {
    RowBox[{
     RowBox[{"(", "2", ")"}], " ", "user", " ", "normal", " ", 
     "declarations"}], Cell[TextData[{
     ButtonBox["$BaseDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$BaseDirectory"],
     " and ",
     ButtonBox["$UserBaseDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/$UserBaseDirectory"],
     " stylesheets that occur earlier along the ",
     ButtonBox["StyleSheetPath",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/StyleSheetPath"]
    }], "TableText",ExpressionUUID->"2aee1e0e-8058-480b-98a9-7f419bf4fade"]},
   {
    RowBox[{
     RowBox[{"(", "3", ")"}], " ", "author", " ", "normal", " ", 
     "declarations"}], Cell[TextData[{
     "(4-13) stylesheets, Notebook/Cell/Box options, ",
     ButtonBox["Style",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Style"]
    }], "TableText",ExpressionUUID->"8e26732e-9be9-4350-a533-18ae3c05e341"]},
   {
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", "-", "6"}], ")"}], " ", "important", " ", "styles"}], Cell[
    "Not available", "TableText",ExpressionUUID->
     "6189b1a7-256c-4332-98da-908ad6a5a833"]}
  }]], "DefinitionBox",
 GridBoxOptions->{BaseStyle->"TableText",
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->392524317,ExpressionUUID->"34026ad2-a853-4646-be55-f0d0aa6ff1ee"],

Cell["Other interpretations can be made.", "Caption",
 CellID->46612784,ExpressionUUID->"0eb282d9-f0bd-483f-82dd-7dff77f410be"],

Cell[TextData[{
 "The WD ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Style"]], "paclet:ref/Style"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "01347e82-a8d2-4ba1-bae8-8a3ebc85cd5e"],
 " function is similar to a CSS inline style and is another instance of an \
author style declaration. WD does not have a feature like the CSS ",
 StyleBox["!important", "InlineCode"],
 " label."
}], "Text",
 CellID->32504473,ExpressionUUID->"b433d696-d2f1-4cb8-b303-e79385146ddf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing CSS", "Section",
 CellID->121087292,ExpressionUUID->"db63729e-1e5d-42ea-8be7-6f76ebc8f9ff"],

Cell["This tutorial uses prepared examples found here:", "MathCaption",
 CellID->836781195,ExpressionUUID->"045b02fb-135d-4e3c-b1f6-fd7b454d3fdd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cssExamplesDirectory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"DirectoryName", "[", 
        RowBox[{"FindFile", "[", "\"\<CSSTools`\>\"", "]"}], "]"}], "]"}], 
      ",", "\"\<Examples\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->31754730,ExpressionUUID->"41c5b849-7e33-4381-966e-68d0206cc4f9"],

Cell["\<\
Loading the package provides \"CSS\" as a valid file type for Import.\
\>", "Text",
 CellID->102370062,ExpressionUUID->"45443317-b154-4f73-b949-7a4ea538aecd"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"Import", "[", 
     RowBox[{
     "\[LeftGuillemet]filepath\[RightGuillemet]", ",", " ", "\"\<CSS\>\""}], 
     "]"}], Cell[
    "import CSS as a dataset with interpreted options", "TableText",
     ExpressionUUID->"d7758440-e576-46b7-8064-85e07bd44a48"]}
  }]], "DefinitionBox",
 CellID->81978558,ExpressionUUID->"ece5c163-0f68-453a-b4ea-b52d8f33fc3a"],

Cell["Importing CSS.", "Caption",
 CellID->123757612,ExpressionUUID->"b896e7ae-72bd-4854-96c3-c6d0d72fed10"],

Cell["Import from a string:", "MathCaption",
 CellID->226527354,ExpressionUUID->"67cd4ea0-81ae-4f94-b55c-0b16f9d59100"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red;}\>\"", ",", " ", "\"\<CSS\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->681723581,ExpressionUUID->"8df01d96-31de-4992-938a-289df7a5e291"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "color", "Value" -> "red", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[1, 0, 0]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 140278122239718], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2140452412][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 2140452412][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2140452412][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 2140452412][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2140452412][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 2140452412][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2140452412][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 2140452412][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2140452412][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 2140452412][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               2140452412][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                2140452412, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{
                   TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2140452412]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2140452412][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2140452412][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 2140452412; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{493., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[16]=",
 CellID->133396686,ExpressionUUID->"a7b10ba0-7d97-4b1d-9c85-b6f221a591c7"]
}, Open  ]],

Cell["Import from an external file:", "MathCaption",
 CellID->154777042,ExpressionUUID->"31bf620d-cb23-4208-988a-68d7918f3679"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle2.css\>\""}], "}"}], 
    "]"}], ",", "\"\<CSS\>\""}], "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->58583108,ExpressionUUID->"5f14ce15-8798-4d79-b62a-ae304f6338ba"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ".tooltip ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Class" -> Association[
                "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
                 "Value" -> "tooltip"]}}, "Specificity" -> {0, 0, 1, 0}]], 
        "Block" -> {
          Association[
          "Property" -> "font-style", "Value" -> "italic", "Important" -> 
           False, "Interpretation" -> Association[FontSlant -> Italic], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 18382655411944], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 280379934][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 280379934][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 280379934][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 280379934][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 280379934][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".tooltip\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ".tooltip ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "tooltip"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-style", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["italic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSlant", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSlant]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Italic", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSlant]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               280379934][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                280379934, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 280379934]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[280379934][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[280379934][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 280379934; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{588., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[17]=",
 CellID->142078965,ExpressionUUID->"4adbcfb6-3c7c-487c-97fa-ff47cb80b497"]
}, Open  ]],

Cell[TextData[{
 "CSS declarations can include conditions either from ",
 StyleBox["@media", "InlineCode"],
 " or ",
 StyleBox["@page", "InlineCode"],
 " rules. The ",
 StyleBox["@page", "InlineCode"],
 " rule indicates paged media that directly translates to the WD ",
 StyleBox["\"Printout\"", "InlineCode"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ScreenStyleEnvironment"]], "paclet:ref/ScreenStyleEnvironment"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "4b2d89e8-1509-4b3b-85a9-90fbeea57059"],
 ". The ",
 StyleBox["@media", "InlineCode"],
 " rule indicates a target media type such as a screen."
}], "Text",
 CellID->745579111,ExpressionUUID->"4d91b273-40b2-4aad-a6f3-a924acf7ed9a"],

Cell["Example of page filtering:", "MathCaption",
 CellID->27523641,ExpressionUUID->"13419783-7208-4371-8033-cd7c6654c72f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<@page {font-family:monospace}}\>\"", ",", " ", "\"\<CSS\>\""}],
   "]"}]], "Input",
 CellLabel->"In[18]:=",
 CellID->313868854,ExpressionUUID->"277727ea-f36c-4328-9fbe-beb89c01b352"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> "@page", "Block" -> {
          Association[
          "Property" -> "font-family", "Value" -> "monospace", "Important" -> 
           False, "Interpretation" -> 
           Association[FontFamily -> "Source Code Pro"], "Condition" -> 
           Hold[CurrentValue[
               InputNotebook[], ScreenStyleEnvironment] === "Printout"]]}]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`AtomShape[48.00000000000001],
             "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                  "Value" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[144.00000000000003`]]], 
                    1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[String], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Meta" -> Association["ID" -> 186461905573655], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`AtomShape[48.00000000000001],
             "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[105.60000000000002`], 
                  "Value" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[144.00000000000003`]]], 
                    1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[String], 1], TypeSystem`AnyType}], 1]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 1, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 743378307][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 743378307][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 743378307][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 743378307][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 743378307][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["@page", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-family", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["monospace", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontFamily", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontFamily]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Source Code Pro", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontFamily]}, "Item", False], "Mouse"], 
              ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Hold", "[", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"InputNotebook", "[", "]"}], ",", 
                    "ScreenStyleEnvironment"}], "]"}], "===", 
                    "\"Printout\""}], "]"}], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               743378307][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                743378307, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743378307]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743378307][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743378307][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 743378307; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{629., {50., 56.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[18]=",
 CellID->165535879,ExpressionUUID->"a53d4ec5-4cf0-49cb-bd52-12a54e05933d"]
}, Open  ]],

Cell["Example of media filtering:", "MathCaption",
 CellID->610584558,ExpressionUUID->"82712f09-cef4-4018-8e83-ab0b98b1117b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{
  "\"\<\n   @media screen {h1 {font-size:24pt}} \n   @media \
(min-height:500px) {h1 {font-size:30pt}}\>\"", ",", " ", "\"\<CSS\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->568946600,ExpressionUUID->"1696c732-bcbe-49a5-963b-87f7fc29a85e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "24pt", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 32], "Condition" -> 
           Hold[CurrentValue[
               InputNotebook[], ScreenStyleEnvironment] =!= "Printout"]]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "30pt", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 40], "Condition" -> 
           Hold[CurrentValue[
               InputNotebook[], {WindowSize, 2}] >= 500]]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 2], 
     "Meta" -> Association["ID" -> 100077228349217], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 2], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 2, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1526854365][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1526854365][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1526854365][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1526854365][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1526854365][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1526854365][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1526854365][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1526854365][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1526854365][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1526854365][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["24pt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Hold", "[", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"InputNotebook", "[", "]"}], ",", 
                    "ScreenStyleEnvironment"}], "]"}], "=!=", 
                    "\"Printout\""}], "]"}], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30pt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Hold", "[", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"InputNotebook", "[", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"WindowSize", ",", "2"}], "}"}]}], "]"}], 
                    "\[GreaterEqual]", "500"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1526854365][{2, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1526854365, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1526854365]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1526854365][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1526854365][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1526854365; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{593., {71., 77.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[19]=",
 CellID->142923443,ExpressionUUID->"664a571e-29e0-4ad3-8643-7eb9e5884937"]
}, Open  ]],

Cell[TextData[{
 "CSS files can be nested. They can contain ",
 StyleBox["@import", "InlineCode"],
 " rules at the start of the file indicating that other CSS files should be \
imported first. Often the ",
 StyleBox["@import", "InlineCode"],
 " file locations are given relative to the current CSS file. In these cases \
it is best to have the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$Path"]], "paclet:ref/$Path"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "7a846dce-633f-4ce7-b4f8-b407bdc07794"],
 " defined with these locations included, otherwise the nested CSS files \
won't be found."
}], "Text",
 CellID->410138926,ExpressionUUID->"8cf2765a-7072-49ac-bdb5-ef15e4d75fcb"],

Cell[TextData[{
 "The file \"mystyle1.css\" imports from \"mystyle2.css\". The font-style \
property from \"mystyle2.css\" appears first because of the ",
 StyleBox["@import url(\"mystyle2.css\")", "InlineCode"],
 " that appears at the start of \"mystyle1.css\":"
}], "MathCaption",
 CellID->714335307,ExpressionUUID->"eb4d08fd-55c6-4d89-98c8-2a574646e067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FilePrint", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle1.css\>\""}], "}"}], 
   "]"}], "]"}]], "Input",
 CellLabel->"In[24]:=",
 CellID->10489580,ExpressionUUID->"bc2a696b-73a1-4d0f-b241-5e12ac5277fd"],

Cell["\<\
@import url(\"mystyle2.css\");

.tooltip {
\tcolor: red;
}\
\>", "Print",
 CellLabel->"During evaluation of In[24]:=",
 CellID->325991272,ExpressionUUID->"62d70803-c255-45fe-9a7e-adbb9de3725c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FilePrint", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle2.css\>\""}], "}"}], 
   "]"}], "]"}]], "Input",
 CellLabel->"In[25]:=",
 CellID->719835970,ExpressionUUID->"ee301fa1-2f51-40bf-96e0-a104e4124915"],

Cell["\<\
.tooltip {
\tfont-style: italic;
}\
\>", "Print",
 CellLabel->"During evaluation of In[25]:=",
 CellID->286251346,ExpressionUUID->"3b6daf37-bef7-4d85-861e-8422362626f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$Path", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"$Path", ",", "cssExamplesDirectory"}], "]"}]}], "}"}], ",", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<mystyle1.css\>\""}], "}"}], 
      "]"}], ",", "\"\<CSS\>\""}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[26]:=",
 CellID->971740772,ExpressionUUID->"994deaf4-5f3b-4218-b57f-f2bb4201fac2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ".tooltip ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Class" -> Association[
                "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
                 "Value" -> "tooltip"]}}, "Specificity" -> {0, 0, 1, 0}]], 
        "Block" -> {
          Association[
          "Property" -> "font-style", "Value" -> "italic", "Important" -> 
           False, "Interpretation" -> Association[FontSlant -> Italic], 
           "Condition" -> False]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ".tooltip ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Class" -> Association[
                "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
                 "Value" -> "tooltip"]}}, "Specificity" -> {0, 0, 1, 0}]], 
        "Block" -> {
          Association[
          "Property" -> "color", "Value" -> "red", "Important" -> False, 
           "Interpretation" -> Association[FontColor -> RGBColor[1, 0, 0]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 2], "Meta" -> 
     Association["ID" -> 194055407753301], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 2], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     2, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1403287493][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1403287493][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1403287493][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1403287493][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1403287493][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1403287493][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1403287493][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1403287493][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1403287493][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1403287493][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".tooltip\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ".tooltip ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "tooltip"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-style", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["italic", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSlant", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSlant]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Italic", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSlant]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".tooltip\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ".tooltip ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "tooltip"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{57.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontColor", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontColor]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1403287493][{2, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1403287493, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1403287493]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1403287493][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1403287493][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1403287493; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{593., {71., 77.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[26]=",
 CellID->49312414,ExpressionUUID->"3dc90ae8-36ea-4a96-b105-03f616a5c5ee"]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"\"\<RawData\>\"", Cell[
    "import without interpreting the values", "TableText",ExpressionUUID->
     "ac2ba2e1-8894-43f7-a0e1-be3e1472cf4c"]},
   {"\"\<Interpreted\>\"", Cell[
    "(default) import and interpret values", "TableText",ExpressionUUID->
     "76f77381-308b-48c0-bc67-d3d731e4fed9"]},
   {"\"\<Stylesheet\>\"", Cell[
    "import directly to WD stylesheet format", "TableText",ExpressionUUID->
     "ebe4e40e-6e1c-4ffb-a54b-f65d5d029bb9"]}
  }]], "DefinitionBox",
 CellID->669987316,ExpressionUUID->"35794b86-2060-40fc-896e-47af7fc56f03"],

Cell["Supported import types.", "Caption",
 CellID->40274191,ExpressionUUID->"a35358a6-c9c9-413f-a237-7d02a2dbe810"],

Cell[TextData[{
 "Ignoring style interpretation can improve the speed of importing large CSS \
files. Use ",
 StyleBox["\"RawData\"", "InlineCode"],
 " if the interpreted values are not needed. "
}], "Text",
 CellID->217179338,ExpressionUUID->"9e60f475-5491-4a28-9358-3294397059be"],

Cell["Import without interpretation:", "MathCaption",
 CellID->266594283,ExpressionUUID->"c8b74c4e-6cf8-42f0-8176-8ab50d7a12b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red}\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CSS\>\"", ",", "\"\<RawData\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[27]:=",
 CellID->103365394,ExpressionUUID->"76f318ec-44d3-4dd1-b8d9-9a6fe63c96b9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "color", "Value" -> "red", "Important" -> False, 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 4, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Property", "Value", "Important", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType}], 1]}], 
       1], "Meta" -> Association["ID" -> 227813850699903], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[48.00000000000001], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 4, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          TypeSystem`Struct[{"Property", "Value", "Important", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType}], 1]}], 
       1], "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 1, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1771140335][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1771140335][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1771140335][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1771140335][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1771140335][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1771140335][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1771140335][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1771140335][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1771140335][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1771140335][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1771140335][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> 
                    Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1771140335][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1771140335][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1771140335][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1771140335][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1771140335][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1771140335, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1771140335]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1771140335][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1771140335][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1771140335; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{354., {55., 61.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[27]=",
 CellID->151922447,ExpressionUUID->"2d198d9e-b416-4d61-adfc-66d81e96eeee"]
}, Open  ]],

Cell[TextData[{
 "A stylesheet has more meaning when applied to a document due to the CSS \
inheritance and style cascade.  However, the ",
 StyleBox["\"Stylesheet\"", "InlineCode"],
 " import element creates a WD stylesheet directly and uses the selectors to \
label the Wolfram styles."
}], "Text",
 CellID->260369650,ExpressionUUID->"bf7706d2-9d3d-433b-8b83-3d360f5447c8"],

Cell["Import directly to a WD stylesheet:", "MathCaption",
 CellID->24798626,ExpressionUUID->"8eb17ec5-6227-4012-b603-3f5cef113eb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportString", "[", 
  RowBox[{"\"\<h1 {color:red}\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CSS\>\"", ",", "\"\<Stylesheet\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[28]:=",
 CellID->169988763,ExpressionUUID->"f0120d2a-b987-4f4a-8b10-b08fe03a1f60"],

Cell[BoxData[
 RowBox[{"\<\"Stylesheet\"\>", "\[Rule]", 
  TemplateBox[{
    FrontEndObject[
     LinkObject["jbssw_shm", 3, 1]], 33, 
    "FrontEndObject[LinkObject[\"jbssw_shm\", 3, 1]]", "33", "\"Untitled-5\""},
   "NotebookObjectUnsaved"]}]], "Output",
 CellLabel->"Out[28]=",
 CellID->194992739,ExpressionUUID->"aee6d07c-bec4-44cd-9c61-9928a0ff8e41"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3XuwZHdhH/gL+JGquCq2ATspewtjYGuT2lSCFVGacWWxWQdnK+GPJN7N
olLKMkLX3k0t7yoMOCUWvCALiRkwBgNmkBiH4Eh2pBG+jl27tiRHkTFCDOIh
mAFpBqSIh2bmzohBM6PH3V/36Xvv6Xse/Tuv7tP3fL71MR71PX1efbr7fO89
/evnvuLV/3L16SsrK6//G+F//uWvvPHnX/e6X3nTv/rh8B//66te/3/86quu
fOX/8qo3XPmrV77uklc8I9z47aetrPxv37eyMvr3++/4JQAAAAAAAHalDRER
ERERkV0dDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhE
RERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhERERERIYTDUhE
RERERIYTDUhERERERIYTDUhERERERIaTJg3oaz+y0qkutldERERERIaceTSg
Z3/f/T/5Qw/81A8H4R/hPzUgERERERFZSObQgELrOf4zz/vGP/4HQfjHqARp
QCIiIiIisoi03IB+9Gn3//gPPPDcHwnCP8J/Bsf+7t95+F//s2+/6oog/CP8
Z3L7zik1IBERERER6ThtNqBQap759GPPe+aDP3dREP5x/7Oe8bVnPv0bP/v3
T17ztu8euikI/wj/+bVnPSP8aDTlz29O+cynZ0tQF9srIiIiIiJDTusN6Osv
/Olv/9tfeeTXX/3wy1/20Esv+caLX/itV7787NotFx74ahD+Ef4z3PjQS/c8
fOnLHnnTq8PE4S4akIiIiIgsRVYaZNHr3mEOH/7cL/zCS0+dWo+/S5g43CXc
sbu1yk3rV8E9+JJ/dOaGDz32qTvP/uknz3zihvX3XXvm9w9cOHLfk999NAj/
CP85uvETN5z9s0+GycLE4S6ughMRERGRpYgGlJvQZb7/B//GRS96UWQJCpOF
icNdwh27XrcdaX0khIf+6c+e/ZNDT3znW49/4/j5+77w2F1/ee6zn37y1Mnk
LuEf4T8fu+uO8KMwQZgsTBzuYiQEEREREVmK1Osyu74BbTWamBJUaeLW03oD
evCfXPLoH33iwv1Hz3/x3nNfOHz+K196/KGvP/W9s8ldwj+SZnTu84fDBGGy
MHG4y65oQGuro+N6da21GR7dv7fdGS5pCnfs0bXVvXuTlxN7KZvWD0gREREZ
RQMqSmSvWWz92WjegJ759Pt/7Psf+Im/eex5zzz+937i6y/86W/+8i+dXbsl
dJzv3fHnZ//8zx67+6/Of+Fz57/8xQtH7gvC7efv/ey5v/6v3/uLP/veX/55
+M8wcbhLuGO4e5hJmFWYYZhtfgNKOsHe/Ufz12jGj2slnGRHzrNHDShVDUbZ
2+4umbGjkx/mr3etR6hgxyY3h41bXV3d28/z/MmuqHL8tHgE7aYGFP80bD2j
BzFiwZGTjZ6c+9PPznD8ri1gq0REpEk0oJLMbDcLrz8bjRvQqP485299/R8+
96Ff3PvNf/MvvvOa1fUP7Dt3+O7zX/r8o//x4PoH9p/+6AdPf/R313/nulP7
rz61752n3nft6Y+8P9xy+oPvffSmj4/+GHT47nCXcMdw9zCTMKvRF6eGEjT/
BpScmey8c96pV9GUvWhAW2fdK6NqMGoH4XSr7dPgZFtz9/Tm8vN+WFaOZi1s
x526aLutJ/VYzFrR7UlrPFZzOiDnkvin4ZzWZfbDFznZOOnevrrdhJbtURIR
GXg0oPKUdJw+1J+N5g3ox3/w2POf/eBLLv7Oa391/X3XPvoff/+xO29//KFv
nP/Kl0LNOfmOf3fy2t88efVbH3nza77z+l/7zut+7ZE3vebkb7311LvfEf73
zMc+fOEr94WJw13CHcPdw0we/J8vPvaCZ9//t39w/g0o/s4FU/aiAW1Wk65/
rVxYgUpP+uvtorx7LUUBSu2MWVudmrL6ETSvA3Ie6csDu9Vqygts5GTbCdNP
PzePTjrRkj1OIiLDjgY0M7lNpyf1Z6N5A/rbP3jsBT/28L/6xTM3fOjcZ+++
8MBXn3jk209973sX7v/qmd//yMlr/u9T77nm1P7fOvnOq068/c0n3vamk1df
tf6+69bfv+/Udf/PmX//0QsPfC1MHO4S7hjuHmYSZnXsv/8xDSi1nCozHK/C
fM4ei7Y2WYW9uWte8pejqovqy4lyeSZruTrzDxjJXkum04AW/sBuXpAYHpLQ
WArXJ3KyWenFJouISJVoQDHZ0Xf6U382WrgK7gceeO6PPPTPXzy6+O3uvwpd
ZuPJJzaeeio0mtMHPhBaz6l3v3P9g+89c/AjZ/7DDY9+/PpQi8YXxb07dKLT
138oNKAwcbhLuGO4e5hJmFWYYZitBlS9Ac135IT8zZ10sP1tXri29A1o/1rM
cbu6tlbzAdSAWk7Yc3tXJ39HLfmtQuRks9KLTRYRkSrRgCKTbj39qT8b7YyE
8APH/8f/7r/90i+efNfbzt17z1PnHguN5sKR+07te+d3XvdrJ97+ljM3fPjc
3Z96/PgDjx+7/9xn/vrMJz528l1vf+SNrzr1nmsuHPlymDjcJdwx3D3MJMxq
VH9aGwlh+yRw6nKVrfOW1N12ZHMuU6eR8VOm12r6QpmCDz7vmGo0UcVGM+eh
43Ifi63zwJydkXuH7MfCsxfwTc8r7zGYzHR7Dxxdm+zMrTXYuaDMcrZPYbfu
PJ7s6NYMpo6fqNPV7U0uayNbP8ufqGzNIw/I6YO/6KP3Mw/U5ruohW3ZMcPp
QT/2Ti925oMekchq06ABzfEvtyIiNZN9fY7Pote9k9TbtF28Q0qyVYL6U382
WhoN+/6f/KHjP/O8b/2fv/y9O2978tTJJ7758GOfuvPU/qu/88b/65HfeP3p
j7z/wtEvP3X+/FPnz1346ldOf+z3TrztTY+8+bXr733Xub/+r0986+Fwl3DH
cPcwkzCrstGw6zag/ckPJp8+njwlp06Ot26fDB+wda403YCip9xegc3RwNLL
3rkF22OGpSarelHUePlTp/8rnY40lfNgpEpY9rQus3+yYzZs/efUNu9oQDmP
weQh2PpbyubVSZv32hqdYfrz51OLmazw+O8wyXSpA2XyQfyyx3DGLio+dLf3
VGFtLFzzmAMyOfinVz7vD0azD9SGu6iFbSl4cqUXu7XQmAc9Il02oKObpVP/
EZGeZ6VBFr3unaTepu3iHVKSgTSgx79+7Ht3/H+P3vTxMx/78LgEverktb95
7p7Rl6KOvg71nk+ffPc7HnnTa07t/60wwXf/8BOP/eVfjO7SbQNa2TEe9OTc
aMcAb9GXEkVPGbmcrY9CZyercMY2Of3frk+djzSV2ZL0X6EyP9y5e3K3Ovdz
4dFXwU1u3JsZlvhoOLdey5s071BJ3Zb6s0TOzbP3anopBUdNep/lHmuz17z8
gMyfuMmBWncXNd+WvHXe8bRZ2/ozT9TiZqf9BjT1x65af5cSEZEFRwOKzFCu
gvvcPReOfmU0DvbvXHf6wAfW3//uR/7dG05e/dazf3IodJ9zn/10+MfJd171
yG+8fv19153+yPvX37/v0Rv//YWvfiXcscur4KI+k99+AyodLGDnVV05F/hU
Gzq64Hy3y5Gmdmzg9GV4Oy7Ky/3P3NWa2Z1yJ0rNNGpjM9cM5g/TsDl4ce6C
Zi5nei3ztmPqtrgP7mSvdixvQJn5Re3gvNvb30UVtyXiyVVxcbPTQQNK/tiV
jFO/klPjRESk79GAYjKUkRA+/VdPfOubF45++fT1Hzzx9jef/M23nLz6qlPv
fsf6e68JhShMsP67+9d/592n9l196pq3jQbKfvtbTrz9Ladv+FAoTeGO4e4d
jIRQeJ6UPWFpvQEVnxNN/aR4smrna4VVp+YIbPHL3Fzkji3J+QTVjh8WrFPu
tBX+BlQ8cvHa/v3JiWfOH8cKPoTTaJCBHfcu+KPZ1g2Fcy1f88ormfdAzT5Q
W9pF7WxLdAGasbjZ6fpzQJvXrLoQTkRkiaIBzcyARsO+59MXvnrk3OHPPHrj
x9c/+J7Tv/ue0x9+X7g9/O/Jd71tNBp2qEXvetvpD7139I2oH/rtMMH6+HtR
w11Gd7zn0x2Mhr3ABpT7we5UMp/eL9iczEl63lw2yopOxNli6Zxn3i91DVfR
zt/xw/JyF3HiXa0BpT8ZNbpKbu/mxYI7d27BRWql166VZOe9cxtR6Wl9zJo3
bECRB2rzXdTitsTs/6jFzU73IyFU/WuviIgsPMmby3zutYwZ1jei/va1j/7B
wbP/738+d/enzn/p8xeOfvnc4bvPrt185uDvrX9g/6n3/Nap/Vevf2DfmY9/
9OyffvLc5z5z4ciXz3/pC2HicJdwx3D32d+IOuM8I3tetPgGtPmR7kx2fHo/
ZnOO7i+aS+mMIhpQ6ZxL77e1K3Iemh2f8S/4xFDBCtduQAVXfa1Mf01sfr3s
uAHltMLSP0PFrXk7DWjWgdp0F7W6LbP3f+TiZmcODajeB5RERGRx0YBKMrPj
9KEENb4K7vsfeM7f+vo/fO5Dv7j3m//mX3znNaujy+EO3/3k6fWnLlwYDX1w
+O7vfvI/nf7I+5MGFP5x9j9/8vwXPjeZ4PR6mCDcJdwx3D3MJMzqgZ/64TDb
ggZUeqqQ88N+XgUXuUUVP+pQuLxGJ2czsrX6eSeXWz8sOLUvfRzLr3iq0IDy
b82vH503oJ07rPRojVzz7q6CK79f+dLLPwfWcFtmVobYxc2OBiQiIploQEWJ
bDcLL0FtjITw/Q/8xN889rxnHv97P/H1F/70N3/5l86u3fLEtx5+6txjT104
Py5Bnzn9e79z4m1vPvn2t5w+8IHz9342qT9hgjBZmDjcJdwx3D3MJMxqVH+K
RkIo/VBL3mnEIhtQ5GlN4RZVHsOgYGNrfWY8OpNTzf1l5SPnhx2OhBB12ptd
/pwa0OZteUOdR33YJWfPNWxA0effTXZRy9sy68Kx2MXNztyuglOARESWJxpQ
bir1msWWoFZGw0578J9c8ugffeKJb/63Jx8989TZs6EBnf/SFx696T+s/+57
Tn/ot7/7n/7g/H1fCDeOfvTomTBZmDjcJXdW+Uvd/NTC9OUtW2Oe7TiNqNyA
Ys6fo6fc6jA7Tw7XVlNf3Lh1vU7e9lQ6X9tase05He1wHITUQpOPmWeXUvLD
giHEcnpfK38DmvoL1NYnRBbQgNIfutoxg9mn+blrXuHQLdjUuAO1hb8Btbgt
RcfP/vENsYubnWYNaOcnv8Lq7djJR9fynv8iItLrrDTIote9w/zCL7y0UqPZ
KkHhjl2v24603oAe+qc/e/ZPDj158sQTJ77z+NePnbvn04/91X8599m7z3/+
8PkvfO7c5z7z2Kf+S7gx/ChMECYLE4e7VGhA05/c3rs3NcbTzm/S3KjUgLa7
1fgj05tnfsWn31WmXNn5vYx55Wtrqs1PMFT/1MLWnJJVq3XKVzVbJ/TFozDk
/zC7c/KnbelzQFN7N/t3qfk1oPzOm7ehcWte5YAs2tSoA7WNzwG1uC35x8/U
CCOzFzczjRrQ9u9rju7YuOkv7Mq+comISJ+z0iCLXvcOc/jw50KXqfQHnTBx
uEu4Y3drlZuWG9CPPu3Bl/yjMzd86LFP3Xn2zz555hM3rL/v2jMf+/D5z93z
xLe++cS3v3X+3s+G/xzd+Ikbzv7pJ8NkYeJwl3DH+AY0yvi71LeL0Og0J/eT
+1VOAse3bs1ztezL6KtMGbeqm18OvznJaIo6n9vOn1O3yf9tfMwPN46OfjO/
d8a+adqANjamxgVLzqoXNBJCamHZe+du6Ow1n9w39oAs3NSZB2rTXdT+tmSP
n7Wj239cjVxceVr9G9Bkhad+hZNeZREREZlH2mxAP/q0+5/59K+/8Ke//W9/
5ZE3vfrhS1/20Ev3fOPFL/zWFf/7d2/9owtHvxKEf4T/DDc+9NJLHn75yx75
9VeHicNdwh2zJaiL7RURERERkSGn9QZ07HnPfPDnLnrw5y8K/7j/Wc/42rOe
8Y2f/fsnr3nbdw/dFIR/hP8cjZ/wrGdMpvy58ZQakIiIiIiIdJ/Wr4K7/8d/
4IHn/kgQ/jEqNT/6tGN/9+88/K//2bdfdUUQ/hH+M7l955SVroITERERERGp
ntZHQsi6/yd/6PjPPO8b//gfBOEf4T8j79jF9oqIiIiIyJAzhwb0tWd/X2g9
D/zUD4++6jTUn2d/nwYkIiIiIiILyTwaUF1dbK+IiIiIiAw5TRqQiIiIiIjI
ckUDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR
4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4UQDEhERERGR4aRuA1oLVldW
gmz27DsabBzdF+xZ2bNndMNGsHmvPavbtywqZeu/urYRzLpvaitytnSeSdZn
dXW04htlK75rE3E0yoyMj+M9K8GO3Tc+qDei92D2OT73Z/3k+biyJ3MoVNyW
5one9gW/hsSnyStnvWXN/f1iaR6LbIoenT0rdbalP+/X807Y7LXV3OO5dJ+s
rY7fitdG9+zkKNodj0jMVtTb0t2xf2R+0YA0oOWPBtQ8GlAX0YCaL0sDio8G
1E40oC6jAUlf0qwBLe/x2WRNunv+1ks/G9D890AfjqvmWWRfyHnHH/9039rG
vtgDa6ENqPSsY211dWSuz5HddGQm2U3P66E8OuE5MX5aNP9tRpN7LdXeTneZ
dFKvltnfrSX7ucvfuS3VPiyMBiR9iQakAXWT3XSmNM9oQA2iAXWe3fS8Hsqj
owFVjgbUYTQg6Us0IA2om+ymM6V5Zp7bsn3lW3vXLy2qAXWxLc2zm47MJLvp
eT2cR2ee79e7ogElTWfPuM+kOmPScVb37Qv2rK7t2X6hSV5/JnfobOuWah8W
RgOSvkQD0oC6yW46U5pnNKB60YDmk930vB7Oo6MBVYwG1GE0IOlLumxA0edC
OZ9cXl3p9nw++pmSWbc94aUvvAAWbtdakPNZ1Ozf01velnQDSq3P6KV6al2m
/0a/fd5Y+InmGY/O9rJWV0fyPiE9nz1Q59HM+wR3douS7V1b21rK2r4gPZ9k
DpOrTQr39nju48/Y5u2ZZLlzPHIme2N1T6XnWvTxMNcGVHlbih7lyQ8KHqOd
980eCdOPeK0pp/ZS+TM04vnbcsofzdIemlxZlLoWq8J+nnEs5d9e97kW/z6V
3dvxr71dpK39Uzq3wleA5BUyu1dH704zXtlmvKrM/zjPNpr0Lcm7fPY9t+Bd
OHv0xhwbUeceRXtv5/5ZyxnbofTxnep37aZBA2ry7jPjFViGGA1IA9KANCAN
SAOKiwakAWlAGlCTaEDSl3QxGvbmsyzm/avgOB+/V3Z5fBatf/bZNLkp9VK9
J/VRyIrb1eG2ZF97x1uXfpdJzkDS21j0ec+pOZc/OtvLijuj6yLxR+POR7N4
zPaiLRovJf2Z4slezbyiZvd24Zov6MgpuNKjOPHHw4IaUMFVK1vveJnnbPZR
jtnqgiOh9FjKO2bK37u3z/oK13DG87eLRLxyFqxV3jlYds613i/a/Y1c6SMe
/+ox47W3k+RvUdxICG29X1d9jCLmuYDjPFmF9BE7Xs89+1a3+/ue8QqO1zln
DUtfN2YcG1XPPSKOzOwaJns4SeoVZl7jOeS/X0+n/CwrtRUz3n1iXqtliNGA
NCANSAPSgKpstQakAY2jAaW2TgPSgCL3a8n7tQYk88yCr4Ir+u7CzZPXRV43
VXh+2OSdurttKf/7e8Gal47tGffoNDknaXcPRDyaBVdJ5bzTNX8HL33Frvw6
30WqXjlW83iYYwMq3JaKa9XgMap7LBU9N0sfnfLnbyeJf+XPvCKlzh43J6y6
n+fzXKv2WDR79Wg3Ef10etWr7Z8u3hFi5rmA4zy1f5J1yDSIdFPIaw0Njt74
c4/4IzMzz0mDS64Nm9x+9OjOa/862a11zh47ePeZ9TsZ2f3RgDQgDUgD0oCm
J9eAiqIBaUAaULLiGlDN3aoBSU/SjwZU8bPYLUQD2rlW6euFpl4zZzw6GlCT
86ijmc/bznO/HS373HrO5PWOh3me+xUtJXqtGj1G2f3ZcQNKJef520liH80Z
54c19/N8nmvL3oAillJv/3TxjtDT4zy1buNdElrC2mh4gMyVZqvj0bFzWkPP
GlB2JIfJbySS1jPajLWj+9aqXRddL00aUFvvPhXf+2SXRgPSgDY3VwPSgMon
14A0IA1IA9KAUj/VgCpHA5K+ZNGjYSe3xHweud3Er//yjoRQ5114+lwl5tFZ
kgZU8Gjmva521oAyowFvLj37Ser57LdkNbevhMl5Lxiv4b61jX3bZ3dVj4f5
bdHmczN7zU/0WlV4jDL7odGxlL1l+z06/rUx72qcdlPxHHvP6p7JcOPTj0jN
50LBecvkGE69Jjd6rpW9T7X96tFuopdSc/908Y5Q5xyg++N8spyt4236HT/J
9po3es2JPt6Kzz1ijsztORSNfrA6Tvd7tcnZY713n5jXahliNCANKB0NSAOa
igakAU1FA9KANKAkGlC9aEDSlyy6AY1T9Bm3zkdCyB+PceqZkvms6KxvRN1I
3TX1fXOL+kbUmHPy6Z2+85V8xqNTdiTMdw/EX/uR3pai97UOGlD2e/1GP1xd
HZ8mLuLISaXoUc6OoFv5eFhkpyt8XheuVcxjtH3f7LcAT7fIJg0oPeXOV6rJ
UmKev23v3NhXzvSezDmGq+3nnJY6tdHJd2629VyLf59q/urRbuKX0mD/R7xf
F72CFb6ylc9zAcd5ak+VjiU+2aKcI7xJA5rMOuLcY7KKEUdmesrMKNBzHR26
3tljej3rvPvMeq2WIUYDykYD0oA0oK3DXQPSgNI7VwPSgDSgrWhA1aMBSV9S
twGJiAwzc+90IiJSOV6rpSwakIhIlXhXFRHpf7xWS1k0IBGRKvGuKiLS/3it
lrJoQCIiVeJdVUSk//FaLWXRgEREqsS7qohI/+O1WsqiAYmIVIl3VRGR/sdr
tZRFAxIRERERkeFEAxIRERERkeEk3YDOiIiIiIiI7OpoQCIiIiIiMpykG9C6
iIiIiIjIro4GJCIiIiIiw0m6AV1z4CAAAMAupgEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEB
AADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADD
oQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDoQEBAADDsQQN
6OZ7gxMbG0GVrAcnjt0bHLr5YNDa+tx2PJha1LE7gsXvqGVz4OY7giOn1oO8
x7ezR7BdfTgeqj5HTq0HRw7fERwID8Sc99h4bY+c2ghyHvFT9waHbjt+aM57
tYvHsQ/HRv/FHA8HDh5a+Hq2tKXTz9NweByP2rr+H0sDegaFFbjjyMbGkRqP
Y3duvuOazffT7PNoYa/20GMaUGU9fU1ePhpQazSgfj6OfTg2+k8D0oCWbKs1
INgNlqABZV8DK6fNV6cDh9eD9NxPHL41WPyOipS8Th4bWdTrYXYfxqTyfp7L
lvbieGj0HBm9P95188G75tAxY5raqXuDQ4fXD813r9Z8HEuPsV4cG30WfTzs
kjO37PM0eusOHdsIFnwsdXG0L+MzKHvcLvYoHR9XUb8B60V/hL7QgKrq6Wty
PA2o423RgIofEQ1oqV4ruqYBaUDL+AzSgGBX6H8Dqne27Lk/Zfwuc9ex9WDB
7yON++yR2w4G/dnS7JnJjDXsQBvPkXlcxZGznuNn5eaZQ3iYbj1w88EDvb3i
MdGfZ9OS2yXHQ+PtnXXH0X6469TGXdNXCc7pdaaLoz16nn14dc3Rn2vzCrrY
5LrxnJ8eD3bJNaXQmAY0CP05Z9OAOqABzVV/nk1LbpccD423d9YdNaBFvrrm
0IBgV+h/A6r+Gjh6v8jea1ddTVFB9jObi3wfKXpccsY6mHyuM/P56MLHcf5b
mj0zmeMVZaV7tXirx8+OzDVmSebfFpetO/Tr2bTslv94iNekxWSPuvm8znRx
tMfPsy+vrln9uTavpw0RloQGtNv165xNA5rPXtWAutGvZ9OyW/7jIZ4GVHWe
fXl1zdKAYHfodwNq8Bo447OKmdfh1E8P3HY8OHFq48SpqZ8eunmkaCzTCq9F
OZ//zd+uA7fdG+SNbzl+1T0VVvJ43t7If7fNS8FyU+NU5yz32B0n6owtUOsc
YMb4sRW39LZ7gwqj0ZY/UhXHtu1mr9Y/O8q5Jqf0twT11j/+Cr3JWUTMXs1O
M7kKJel3x4Pso1bl+djgGOvi2Bg/02eMCd/uPkk9Zyf3Tb8eZtbtrttuDWKO
2MrHQ7t7qd4rfwtXDTVoMXN9RnRxtPfgGRT96ppzDEzmsP29DL3oHU1GVgfG
NKDsTzUgDSjqkdKAItZfAyrcivh9qwG1tZc0oBmPvgakAcFQ9LsB1f/esRmf
OS14vyh8d07uWzqWafynXGOmrPrZ9qlX4Arfj7lzf1ZYbq3PVOZcBTf12eeK
Km/pHYeqHFEzrtKJHtu2w73a5H0w+r5117/WmU/MXs1Mk5yf5H2rZsFS0htY
vsR6z6boY+PQsfVDxyo80wuvt2l3nySvvTPuG71uE/V/M9PaXqr3yl/jpanF
52nM5+7bevS7ONo7fga19eoad4wl39Kb7keLuTYv7/dXo62bfsST70K99cju
vLIUmtKA0j/VgDSg8rXVgKqsvwZUuhWTY0wDmr1WGtCMtdKAYqIBASm9bkAV
v3fswM23BkWvY1MdIft+cSq8rOW++m2/vs34/GPUK3bEtRA540WP3xcmV3cU
jPPQoG0VTjk1RsH47OXYxl0NP7lc+G6YvFbfEdRrQ3FbGn1dZcQZS80m2+5e
bfAdizG/YWht/aPHj435lHHhOU923TLn2zFzK9r/TZ5NcVuRfqaPpxlfBxt1
xWyr+yRmjILkeqHJT8evn8lZd9Sx1+B4aLKX6r3yV30tavd5Ov9nRBdHe/N5
dvjqWu89Nz3lXK89i/9Nwuz9DEOmAU1eFTUgDWjGempADdZfA9KAWjoeNCAN
qHAaDagoGhBk9LkBVb0SrDCZ95riOSefl8//VO+szz9GXLMX8b5/4PDxA6PP
HY/PKMbv6TmfsqxwjU3MeLPRn9Kt2EkLFY10nV7P1CdPY+YZP7JuzOdYY97T
qx8P7e/V+HOPPOVHbJvrH7+eMY9O/Fj3bTyOXRxj1T4XX28r6u6TeYxCHHc8
tL+X6r3yd7G98Wek839GtH20L/QZVHVMpPLrQjPjeC/iWzYK1iTd2pJ32AWM
oA7LRAOajgaU2g8aUOncNKD49deANKDqx60GtJhnRNtH+0KfQRrQjO2C4epz
Ayr+u3N0Cj75mDfn8teHmLOC2dNML7fBK1LUNSTRr+0VrtCoPzZFkfJRTJPM
Gsu06ZlS5SYbczzMZa82Gpe1/Nyg1fWPW8+YZ1m1b2mctdz4s/34Y6zdYyPm
+d71PtlOeuzrJmd9UcdDy3spf7ndnxlWu/Zs0c+IDo72BT+DSl+dKsyn/uOY
vMcduq2+AzeHmVR+xIf0jcNQhwa0GQ0ovd80IA1IA6p3jGlAs2lAGpAGpAHB
YvW1AdX6rN9kpMryb+ir9zoWe45a+P5S+I11BUsc/xX70OF7gyPHjo+tB0Wf
281Z/+jxV5s1zVY/B3rzrddsjmWRHS2h8DGqOtJs9tPQqTnXvT5n9jl/23u1
6dVK5VfmtLf+Tc6RIr75sXBf1Tt7LJhbheXWOTZmvP6Un9u3vE+K5pmf6t/k
G7sOLe+lRk2kibl/F2onj379o30+z6Aq2Z5blauI84+fmO8Urn4mk07mMYr/
RvVG10jD7qcBxb0yaEBF0YDyl6gBaUBFU2pAGpAGpAHFRQOCrvS1AbV/tVXx
nCPej6I/q150Vjl9e+kZYMVvIWx+bVujd5PuPgcaf31C1atlitpo/Ht0xPHQ
/V5t8BwpOL9Nv5u3t/4NzpEivgu1+DcJtfpU82Os1rFRfh5VeRz+JvtkalvK
fiMRtTcarEPLe6lJE2mkwfO01nehtvDot3q0z+cZVCGpuVU5xmr9xqnCt8HO
XtvieeY/jhoQlNOANCANSANKogFpQNPbogE1pwHN4xlUIRpQh0c7LJOeNqC2
Rl3OqvfNdPHvMgXzn3rljPqmzuS+68Hke0LH3/d64MAdB+qePzQfy7Semq/D
Da7iq3xNY/I9eofXD5WNkFDteOh6r9Z9jhQdaU3P0ltYz6ix4qOPpZhnevTz
usIx1vKxMfvam5b3SanicUsaXNkV/ZuZJnup+bbX1OrztN64/VX3QLtH+6Kf
QWUqzKfqtdbJozP+rt7N69jryLuev6vfIcDQaEAakAakAWlARUusfIxpQC0d
DxqQBlQ0Tw1IA4LmetqAKvxlv5p630xX4dV7xl+9G3wGvGjP5LyLVfvMZtd/
K8/7FsLS7x8s+r7UxltaeK9x04w/S4k5Hjq/AqHCc2S0vZP34oJrLBudWbW0
njF7Nf49PeaZHve8rnaMtXxsZPdezZHGZ++TA7cdDzZHXNkYqfCp8OgGFH08
tLuXmnwnaTP5YxefOHxHkHcNWNG3RTc9y43bA+0f7Qt+BpWKf2fP2XsL+C7U
ov2ZPTa6+xwB7B4akAakAWlAGlDxNmpAEc8gDaiQBqQBtUsDgnb0swF1d/ZY
/YqpqufY+e93k1T4jOrojOLIbbce2ewIyRlsTrdq8l2o5dOnG8r4fTnZD7PG
G6+4T6LT7Jv7Zh8Js5ZV9Xjodq82+ixwKsXHfzvrH/dcjtmr1c66Z50ZNn4c
o77JsWCeRePZTu3b2aNVtLxPcnpEMs32q9Dma9GoK01NFH02WOG1vbW9lL/t
8/xUePNna96R2e4zorOjfZ7zrPrqmnPM71y3nKM9yZwadNXn0UgyekneTxez
ttBPGpAGpAHFLavq8aABxT+XNSANKDOxBlS6RRqQBpReHQ0IqupnA+rmE3z1
rpiqc46d935X716zk/fKFtE4CkZVrTBu56njQYW/qled/yQ7m2ALWzqWd21e
sl3l53IVj4dO9mrBaAYVMt6rh289MvM9sfH6t3feFX9dR8yZYfzjGH+MVTs2
Co/AgsQ905t+G2b23GlWqo0pXfW1vY29VO+Vv131v+mg+Hna/qPfzdHe1TOo
jVfX+q+li+4U0UfUQpsa9JkGpAFNaECT7dKA2lx/DUgDKn+V04DK960GpAE1
OqI0ICjQvwbU4DO2M9T6bGCtsUzrfuo2/+/Xm2Nij94HK8x5vOZ549aOUjzm
Z/I53Px7pa8lqPsJ0PE2Hj4enDi1fiJvKZNxCY7dERy4+eCBuPF1K29p4TU/
pedF9ca2bXmv1rmqMNnbmyOrR+zVFtY/+rkcs1cr7PmIZ3rVxzHmGKv3WlE4
vvT2vj1088FDuY9Xu/skvVaTcTNGa5V3hjl6HE8cuzcoXLeC53691/ZGe6lH
nwpPxiQZXVXVwqtfZ49+J0d7Z8+gNl5dx0fmsfW7ct95x79/6+vI0qXnDIW/
OQRGNCANaPpeGpAG1Nb6a0Aa0M7nvgakAbU2z8mcNSANCOroXwOCeejT6KYA
AMyPBsQwaUAAAMOkATE0k6tQsqPstnClJQAAfacBMTQaEADAkGlADEH5SOOL
HtcUAID50YAYAg0IAICEBsRuVzDS6YzvWgUAYHfSgNjtNCAAALZpQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAfbYxzsJX
A3YNDQgAoM80IGiXBgQA0GcaELRLAwIA6DMNCNrVzwb0hyK9zMKfGgAMkAYE
7dKAROKz8KcGAAOkAUG7+tyAjotE5zfG+fY4XcxfAwJgURbVgFZ+/T6Ys/kc
2xqQ7I5oQADsVhoQwzGfY1sDkt0RDQiA3WqxDeiehx4LHjr9OHRKA9KApGo0
IAB2Kw2IIdCANCCpGg0IlsWNf3gr7ALzfNYstgEt/MSYgdCANCCpGg0IlsXC
T1yhFfN81mhADIEGpAFJ1WhAsCySs8cNkaWNBgRd0IA0IKkaDQiWhQYkyx4N
CLqgAWlAUjUaECwLDUiWPRoQdEED0oCkajQgWBYakCx7NCDoggakAUnVaECw
LDQgWfZoQNAFDUgDkqrRgGBZaECy7NGAoAsaUPUGdHtw1UUrwVQuuiq4ffzj
48evDy5duejS8U1X3d7+SfIg05e9qgHleUNwycrKJSs5ueS1B4NFr2E/Jfvt
BcHLrj4YLHp9dhsNSJY9GhB0QQPSgJYnfdmrGlAeDajJftOAuqIBybJHA4Iu
aEAVGtDtV42rz0pw6fXHg+xPr7r++FWj2/tyrt6/NNkzfdmrGlCeds/kl6sX
NFnb5drS5aMBybJHA3ro9K3BZSuvDA6efvzgos+cp9dqT/DWzz4e5N2ScdMr
g+nfEYb/bGW7Ipbei3n2hQakAc03GtDsaEDL1gs0oP7SgGTZowFpQHXXp4tt
3D00oLgGdPvWlW853ScnfTlX7180oNnRgJatF2hA/aUBybJHA+qyATU5w6/Y
gD57XXDRyisv2rEV49vfetPjQdvrs9j90/clakAa0HyjAc2OBrRsvUAD6i8N
SJY9GpAGtLjuoAG1Y4kb0OT6t0vHBej47AKUPle//qoguXZuc8iE2y/acfqe
ur4unaJr7WZNeXvuWA1T0+TM59KV4q0LGxPsmN1KfhUsWvr1I+PFTP/gqqCw
XV5/6XhHJqNMXH97bgOquC3NU9SA/ofolM+/5QZ09WXBc1ZWnjO946dHJ9g+
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
owEBsFtpQAyBBqQBSdVoQADsVhoQQ6AB/aFIL7PwpwYAA7TYBgTzNJ9jWwMS
ic/CnxoADJAGxHDM59juZwMCACCxqAYEu5UGBADQZxoQtEsDAgDoMw0I2qUB
AQD0mQYE7dKAAAD6TAOCdmlAAAB9pgFBuzQgAABgODQgAABgODQgAABgODQg
AABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABg
ODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQg
AABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABgODQgAABg
ODQgAABgODQgAABgONIN6G4REREREZFdHQ1IRERERESGEw1IRERERESGEw1I
RERERESGk3QDuq00t49TPk15VhaUJussIiIiIiLzycY46x1HAxIRERERkT6k
Pw3oL8f5/Be+GJw++1hw7skNAACAFmlAAADAcCy2AWk9AADAPGlAAADAcMy/
AWk9AADAomhAAADAcMy/AS18k3f4n178c8GixtAWEREREZGilJ/Jf/wP7guu
ue5TO3z04OcDDUgDEhERERFZrmhAAAAA5ZIeVPRTDQgAANhNNCAAAGC3yl4L
966xoumrNqDLx9GAAACAPtCAAACAIWvrKrjLM9GAAACAvtGAAACA4WjegLLd
p2oP0oAAAID50IBmOLI/uGTPyBef3PjiIldmLbhiZTW45cmNW6rc95Yr9wbX
HtkIqtxrJVhZ2Rtce2QtqL70/HW+Zd/+YHN/1t+ueqa3q9o+qbnEqe3t6lFO
++K+vcEl+44G5/54NZj8Ozmer1wLmjyChfPv/uEDAGioSQMq6jtVe5AGFEcD
aocGpAEBAEOmAc0w0AbUXSsZz3nP/isWsz/n3baqb2+bDeiKP94Iajag8b1W
Jgn/yGlAOfOf9wMKAFBZWw2o6k81oOo0oEXuw3ltrwYEANAtDWiG6Aa0eW1V
KleurUyfZybnjVPT7Nm/sjnnWXOIPTeens/o3PWKK/deMd2AsstKn8Fm53DL
k2u37Fj6ZM/sHQl3z9ui7DpPzXmydQVXypXvjailz94zOWuVWdbkiq/xsrJd
YGKqL4yStIPs9ia3TLpDelsmrSR2b8xoHOP1STeUyb8ny1oNrggrmb/fwmyP
XrtvLZj8e89qMLXVRfNfcMMFAJiteQMqbzcaUHoaDUgD0oAAABZLA5ohpgEl
Z7+ZvjN1rlswn8nZ9fiMdPrapOTMc+/IpLlENKCcNUnutfeKrU/9F6zt1HVN
OcvK3JKzRTHrnD1DzkxTc39ml55VZ1mT3pqZZnr6ndcZfvHI0SBnezPXoc3Y
81GPV8XjeWX1ku1HpHy/FTQgAICl1dY3ojaJBqQBaUAaEADAfGhAM0Q0oMJz
0fQnxCM+LZ5zjdzUiM2zG1DRmqTPz/OWkr22KroBZT5TP90F6jSgqP0ZtfSs
OsuaGvm5/DhJXY83tSentjfdKTLXFhas4azHq+LxXGG/aUAAwG6jAc2gAWlA
GpAGBADsIhrQDB1fBZf+BP302WxbV8Fl5hM1dvEiG1CF/dm4AcVfBVeha0w9
1mtfzBsZYNK8rlwNpuecv4atjTWtAQEAg6cBzaABaUAakAYEAOwiGtAMmaub
ppI6c645GnYyuvKR/bfsXMro+rdkFOvi0QnyTa/JaD7JSM7lo2EnqTwSQr0G
lIzDPBmBedwR6o2G3bwBRSwrpgFl5zC9J9Pbm+59qREqqq7h1FIqHs8dNiCj
YQMAfacBzaABaUAakAYEAOwiGhAsQPQ37QIA0C4NCBZAAwIAWBANCOZp80rI
9DjnAADMT0wD+kxn0YAYGg0IAGCxNCAAAGA4NCAAAGA4NCAAAGA4NCAAAGA4
NCAAAGA4NCAAAGA4NCAAAGA4NCAAAGA4NKAKjuwPnlpZDR5/cuPxWdM/fuVK
8NS+o8HiVx4AANCAKtGAAABgyWlAcUKFOfrEnpVgY2V1Y1YDOr9vb7CxEibW
gAAAoEc0oDgaEAAA7AYaUBVrwRMrq0/EXQWX9CANCAAA+kMDqkIDAgCA5aYB
VZFqQH88klzntrFnf3A+VJ7p6TUgAADoGw2oCg0IAACWmwZURdKAVoKNK9eC
zVv2jhzZCNLTa0AAANA3GlAVGhAAACw3DaiK7EgIySjZe0c0IAAA6D0NqAoN
CAAAlpsGVIUGBAAAy00DqkIDAgCA5aYBVaEBAQDActOAqtCAAABguWlA8R6/
ciWYfAvqeDTspONkvxd16vYxPQgAAPpAA4qnAQEAwLLTgAAAgOHQgAAAgOHQ
gAAAgOHQgAAAgOHQgAAAgOHQgAAAgOHQgAAAgOGIaUDrHUcDAgAA5kMDAgAA
dp+P/8F9QdJ30t7zvruDontpQAAAwDLSgAAAAMppQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBo
QAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAAwHBoQAAA
wHBoQAAAwHBoQAAAwHCUN6DLxylvNzHTaEAAAEAfaEAAAMBwxDSgoo5T/lMN
CAAA6BsNCAAAGI74BpRuOkW3a0AAAECfaUAAAMBwxIyGne078d1HAwIAAPpD
AwIAAIYj/htR63UfDQgAAOgPDQgAABiO+AaU7kHx02tAAABAf2hAAADAcFRt
QPWiAQEAAH2gAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOhAQEAAMOh
AQEAAMOhAQEAAMMx/wbU9bJERERERHZT7htn0Wsh1aIBiYiIiIjUiwa0jNGA
RERERETqRQNaxmhAIiIiIiL1ogEtYzQgEREREZF60YCWMRqQiIiIiEi9aEDL
GA1IRERERKReNKBljAYkIiIiIlIvGtAyRgMSEREREamXyg3oxsuDlZWRG8N/
5f90Oxe/456g6jT3vOPiID1NWNjlN+6YzUqQvX0I0YBEREREROpFA1rGaEAi
IiIiIvUS14DuGZeSlVEpuTy0jvH/7WxAN45LSfr25JaLLx9VnPVxxYme5uJ3
XD4uRfes591yzztGq3P5jRcPsPyMowGJiIiIiNSLBrSM0YBEREREROql+kgI
2RaT3Dy+tu3yG1emW0lyPdvkOreYaWY0oHvuGZefd1ycdw1eq0muvutyCfWj
AYmIiIiI1IsGVBQNSERERERk96WtBjTdYtKTb7eemGnSc8uOhJDc3vXoByuZ
dLiwgvxFKtmfakAiIiIiIvWiAWWjAYmIiIiI7Nb0swEVLnfq6rj2k+0+i+pB
GpCIiIiISBfRgNLRgEREREREdneWpQGF8nPj5ZMRs2O+L7VqyrvPYq+Iy0YD
EhERERGpFw0oiQYkIiIiIjKE9G807Eymvv804vtSlzDZa95cBSciIiIi0kU0
oD5EAxIRERERmU9aa0BJT1m5/OLt25MpLw6Sq9eippnK+D5T33+qAY2iAYmI
iIiI1IsG1IdoQCIiIiIi80lrDWjyw/F1buVjFMRMM07R1XFdjISwXNGARERE
RETqRQNaxmhAIiIiIiL1Ur0BSdPEXPPmKjgRERERkS6iAc0/GpCIiIiIyKKi
Ac0/GpCIiIiIyKKiAc0/GpCIiIiIyKKiAS1jNCARERERkXrRgJYxGpCIiIiI
iAwnGpCIiIiIiAwn6QYEAAAAAADAbvL/Awp+BO4=
    "], {{0, 490}, {1110, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1110, 490},
  PlotRange->{{0, 1110}, {0, 490}}]], "Input",
 CellLabel->"In[17]:=",
 CellID->48114742,ExpressionUUID->"57de451c-f536-4b8f-9aa5-8117447916b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with Imported CSS Data", "Section",
 CellID->19141817,ExpressionUUID->"8a07fb13-3076-46b1-8c34-f6a244b68bab"],

Cell["\<\
Importing CSS values as WD options does not resolve any ambiguity in the \
interpretations. Ambiguity can arise due to the different box types and \
border specifications between CSS and WD.\
\>", "Text",
 CellID->241743700,ExpressionUUID->"d07cfb29-6867-4ce6-9469-bb79383195c8"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CSSCascade",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/CSSCascade"], "[", 
     RowBox[{
      StyleBox["CSSProperty", "TI"], ",", 
      StyleBox["type", "TI"], ",", 
      StyleBox["CSSData", "TI"], ",", 
      StyleBox["sel", "TI"]}], "]"}], Cell[
    "follow CSS cascade in resolving CSS data to WD options", "TableText",
     ExpressionUUID->"67de61e9-03d8-4a12-a6c6-2161a2295517"]}
  }]], "DefinitionBox",
 CellID->821655351,ExpressionUUID->"de5e946e-6151-4b72-acad-849ea72400bb"],

Cell["Merge and interpret properties within a single CSS selector.", "Caption",
 CellID->546945802,ExpressionUUID->"7488b400-80ba-430d-81bf-eed5c5e42a1f"],

Cell[CellGroupData[{

Cell["Cells and Boxes", "Subsection",
 CellID->354439910,ExpressionUUID->"1601299a-2a57-43f6-9322-ea2f0b33539e"],

Cell["\<\
Considering layout, all elements of a HTML document are boxes. These boxes \
can be nested. Layout of WD notebooks are similar; they begin with a sequence \
of cells and each cell can then nest further cells or box objects.\
\>", "Text",
 CellID->364035884,ExpressionUUID->"512bc3ab-3479-4271-8906-8f6f10b7d19d"],

Cell["\<\
Because WD distinguishes between cells and boxes, some CSS options must be \
further interpreted depending on an interface expression.\
\>", "MathCaption",
 CellID->207531235,ExpressionUUID->"8caa5204-c48d-4ea3-bd67-7372e8fc852b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {border-left-color:red}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellLabel->"In[29]:=",
 CellID->802518388,ExpressionUUID->"6c1b5207-b0da-4ab8-a873-f549964554a0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h3 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "border-left-color", "Value" -> "red", "Important" -> 
           False, "Interpretation" -> 
           Association[
            FrameStyle -> RGBColor[1, 0, 0], $CellContext`CellFrameStyle -> 
             RGBColor[1, 0, 0]], "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 2], 
            TypeSystem`AnyType}], 1]}], 1], "Meta" -> 
     Association["ID" -> 104234756692242], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 2], 
            TypeSystem`AnyType}], 1]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1589933979][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1589933979][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1589933979][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1589933979][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1589933979][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1589933979][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1589933979][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1589933979][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1589933979][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1589933979][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h3\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h3 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["border-left-color", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["red", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FrameStyle", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FrameStyle]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FrameStyle]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "CellFrameStyle", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[$CellContext`CellFrameStyle]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1589933979][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[$CellContext`CellFrameStyle]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1589933979, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1589933979]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1589933979][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1589933979][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1589933979; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{578., {64., 70.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[29]=",
 CellID->259251993,ExpressionUUID->"b2303e41-9489-47ea-885a-c6f51a404ab5"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "020de732-dd65-421c-916d-d5b58452e465"],
 " to process the ambiguous translations from CSS by providing an interface \
expression:"
}], "MathCaption",
 CellID->136067078,ExpressionUUID->"eb8088ab-9a57-43b9-bee4-7c7121fe9bde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{
  "\"\<border-left-color\>\"", ",", "Cell", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[30]:=",
 CellID->85039335,ExpressionUUID->"a44648c7-e6b1-44da-aecb-76c563975e9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameStyle", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False], ",", "Inherited"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[30]=",
 CellID->202535419,ExpressionUUID->"4cc41e32-e118-4d51-8a1f-c0bd27f837e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{
  "\"\<border-left-color\>\"", ",", "Frame", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->34736704,ExpressionUUID->"94a3b01f-983d-498e-83a6-0018f731a10f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FrameBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             DefaultBaseStyle->"ColorSwatchGraphics",
             Frame->True,
             FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}],
             PlotRangePadding->None],
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
             False]],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[1, 0, 0],
          Editable->False,
          Selectable->False], ",", "Inherited"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[31]=",
 CellID->24207535,ExpressionUUID->"f98f9407-50ea-4086-8216-8973f4398dcc"]
}, Open  ]],

Cell["\<\
The result is an empty list if the provided interface expression doesn't have \
a corresponding option for the interpretation:\
\>", "MathCaption",
 CellID->149408332,ExpressionUUID->"dde652cb-f1cc-49f4-9256-2759450d7b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{
  "\"\<border-left-color\>\"", ",", "Pane", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[32]:=",
 CellID->23523617,ExpressionUUID->"e21264dd-29e5-4a29-9766-950b406f6f1b"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[32]=",
 CellID->49979150,ExpressionUUID->"7538d00f-26c9-4792-acd4-9c96af714824"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Border Edges", "Subsection",
 CellID->258973364,ExpressionUUID->"4723685c-7d24-4e8c-93d4-028e703288e2"],

Cell[TextData[{
 "Options like ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FrameMargins"]], "paclet:ref/FrameMargins"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "6b1a8545-104a-4df9-81ea-0330bcf321f8"],
 " and ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ImageMargins"]], "paclet:ref/ImageMargins"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "30952e74-5bb4-4fde-8d2d-28156fb5cd32"],
 " allow the left, right, top, and bottom sides to be individually specified:"
}], "MathCaption",
 CellID->19164079,ExpressionUUID->"10a76afc-3582-412c-acbc-4f0532c50b1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"\"\<ABC\>\"", ",", 
   RowBox[{"FrameMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "15"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[33]:=",
 CellID->82274386,ExpressionUUID->"14e8a796-7c97-4732-a704-bfe90a7c190d"],

Cell[BoxData[
 FrameBox["\<\"ABC\"\>",
  FrameMargins->{{0, 5}, {10, 15}},
  StripOnInput->False]], "Output",
 CellLabel->"Out[33]=",
 CellID->279043060,ExpressionUUID->"16712b2d-3c76-4fd1-a58a-9ac654444142"]
}, Open  ]],

Cell[TextData[{
 "CSS allows the same specification. It further provides properties to \
control each side independently e.g. the ",
 StyleBox["padding-left", "InlineCode"],
 " property",
 ". These individual sides must be merged into a single WD option."
}], "Text",
 CellID->54711701,ExpressionUUID->"9f746a53-cebf-452f-b263-451465cff723"],

Cell["An example of ambiguous padding translation from CSS:", "MathCaption",
 CellID->69472301,ExpressionUUID->"04b666f8-6d39-4a45-8ded-18d2adac8e58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{"\"\<h3 {padding:5px;padding-left:0}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellLabel->"In[35]:=",
 CellID->205641708,ExpressionUUID->"dace133e-817a-41b8-bb20-e1ccf85589ec"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h3 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "padding", "Value" -> "5px", "Important" -> False, 
           "Interpretation" -> {
             Association[
             "Property" -> "padding-left", "Value" -> "5px", "Interpretation" -> 
              Association[FrameMargins -> 5, CellFrameMargins -> 5]], 
             Association[
             "Property" -> "padding-right", "Value" -> "5px", 
              "Interpretation" -> 
              Association[FrameMargins -> 5, CellFrameMargins -> 5]], 
             Association[
             "Property" -> "padding-bottom", "Value" -> "5px", 
              "Interpretation" -> 
              Association[FrameMargins -> 5, CellFrameMargins -> 5]], 
             Association[
             "Property" -> "padding-top", "Value" -> "5px", "Interpretation" -> 
              Association[FrameMargins -> 5, CellFrameMargins -> 5]]}, 
           "Condition" -> None], 
          Association[
          "Property" -> "padding-left", "Value" -> "0", "Important" -> False, 
           "Interpretation" -> 
           Association[FrameMargins -> 0, CellFrameMargins -> 0], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          1, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Block" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[115.20000000000002`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> 
                  TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
            TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
     Association["ID" -> 220177398847871], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          1, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[115.20000000000002`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> 
                  TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
            TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1241462684][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1241462684][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1241462684][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1241462684][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1241462684][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1241462684][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1241462684][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1241462684][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1241462684][{All, "Block", All, "Interpretation"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1241462684][{All, "Block", All, "Interpretation"}, 
                  "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1241462684][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1241462684][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h3\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h3 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["padding", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 4], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 4], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][{
                  1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["padding-left", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Association[FrameMargins -> 0, CellFrameMargins -> 0], 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[
                    Association[FrameMargins -> 0, CellFrameMargins -> 0], 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][{
                  1, 
                   Key["Block"], 2, 
                   Key["Interpretation"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1241462684][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1241462684, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1241462684]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1241462684][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1241462684][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1241462684; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{702., {64., 70.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[35]=",
 CellID->106335839,ExpressionUUID->"dddbf23e-1a15-40d5-b0ae-6a5909d0b907"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "75ec4b61-883f-492e-af96-b6d92fb3a6b5"],
 " to process the ambiguous translations from CSS  by providing an interface \
expression:"
}], "MathCaption",
 CellID->74318702,ExpressionUUID->"e1c5c5e0-3eb9-4d12-8777-6012a629288e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<padding\>\"", ",", "Cell", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->433620215,ExpressionUUID->"0133e313-d1ee-4aee-ac28-4a950d968e0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameMargins", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[36]=",
 CellID->317964501,ExpressionUUID->"72538f57-54c8-45c4-99e5-343dfb1a00e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<padding\>\"", ",", "Pane", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[37]:=",
 CellID->98308474,ExpressionUUID->"4245efc2-da22-4446-9424-210b528bfee9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"FrameMargins", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[37]=",
 CellID->126951026,ExpressionUUID->"896b0bb0-8039-45b8-af07-ec764825be6b"]
}, Open  ]],

Cell[TextData[{
 "Using a shorthand CSS property name like ",
 StyleBox["padding", "InlineCode"],
 " assembles all four sides together. Using a specific side only assembles \
the indicated side:"
}], "MathCaption",
 CellID->23700927,ExpressionUUID->"6fe94cfd-6906-436e-8a2f-0decda2cc7f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<padding-left\>\"", ",", "Cell", ",", "ds", ",", "\"\<h3\>\""}],
   "]"}]], "Input",
 CellLabel->"In[38]:=",
 CellID->738724104,ExpressionUUID->"6022aa9e-ad01-4532-a72b-75490cca3814"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameMargins", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "Inherited"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[38]=",
 CellID->89958719,ExpressionUUID->"5131be63-c618-44f2-8189-8667d2eef4e8"]
}, Open  ]],

Cell["\<\
Using a specific side will pick up any options present in the shorthand CSS \
properties as well:\
\>", "MathCaption",
 CellID->234916321,ExpressionUUID->"02947258-13ef-4183-b980-de504badfed4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{
  "\"\<padding-right\>\"", ",", "Cell", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[39]:=",
 CellID->219900921,ExpressionUUID->"8edb866e-a66b-4938-8806-59ebb1363c58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrameMargins", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Inherited", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[39]=",
 CellID->20312700,ExpressionUUID->"a49542dd-03d8-4c5c-ad74-063e41fcc263"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Width and Height", "Subsection",
 CellID->370300816,ExpressionUUID->"48f75e18-3d09-44c8-a061-82cc445374be"],

Cell[TextData[{
 "Options like ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ImageSize"]], "paclet:ref/ImageSize"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "d399735a-6f78-488f-b25d-4d1aa95a4727"],
 " allow the width and height to be individually specified. Minimum and \
maximum ranges are also allowed."
}], "MathCaption",
 CellID->348727091,ExpressionUUID->"5f2461b7-e97a-4391-82e4-5ce0211dbe21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{"\"\<ABC\>\"", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "50"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[40]:=",
 CellID->633565613,ExpressionUUID->"34aca79b-a006-4f1c-8a09-b6f6e34f9f7e"],

Cell[BoxData[
 FrameBox["\<\"ABC\"\>",
  ImageSize->{{15, 50}, {15, 50}},
  StripOnInput->False]], "Output",
 CellLabel->"Out[40]=",
 CellID->250217341,ExpressionUUID->"8c3a936b-2956-4e51-bef0-bdca014bee2a"]
}, Open  ]],

Cell[TextData[{
 "CSS allows the same specification. It further provides properties to \
control the maximum and minimum widths and heights e.g. the ",
 StyleBox["max-width", "InlineCode"],
 " property. These individual widths must be merged into a single WD option."
}], "Text",
 CellID->75578758,ExpressionUUID->"ab5dfa72-87b8-477e-a6af-2e57edd08b2c"],

Cell["\<\
An example of ambiguous width and height translation from CSS:\
\>", "MathCaption",
 CellID->542365653,ExpressionUUID->"49333bce-adfd-441b-9dfd-1757e1e9c1be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<h3 {width:10px;min-width:5px;height:7px}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellLabel->"In[41]:=",
 CellID->411302082,ExpressionUUID->"dc69e77a-626a-410d-9a68-aa180c905928"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h3 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "width", "Value" -> "10px", "Important" -> False, 
           "Interpretation" -> 
           Association[
            ImageSize -> 
             Association["Width" -> Association["Min" -> 10, "Max" -> 10]]], 
           "Condition" -> None], 
          Association[
          "Property" -> "min-width", "Value" -> "5px", "Important" -> False, 
           "Interpretation" -> 
           Association[
            ImageSize -> Association["Width" -> Association["Min" -> 5]]], 
           "Condition" -> None], 
          Association[
          "Property" -> "height", "Value" -> "7px", "Important" -> False, 
           "Interpretation" -> 
           Association[
            ImageSize -> 
             Association["Height" -> Association["Min" -> 7, "Max" -> 7]]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          4, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`ElidedShape[3]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 3, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 1], 1], 
            TypeSystem`AnyType}], 3]}], 1], "Meta" -> 
     Association["ID" -> 151651195640352], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          4, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`ElidedShape[3]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 3, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 1], 1], 
            TypeSystem`AnyType}], 3]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 44507468][{All, "Selector"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               44507468][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 44507468][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 44507468][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 44507468][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               44507468][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 44507468][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h3\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h3 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "ImageSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[ImageSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                   Row[{"Keys: ", 
                    
                    Row[{"Width"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                   TooltipDelay -> 0.1], 
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Width"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key[ImageSize]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[ImageSize]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["min-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "ImageSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[ImageSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                   Row[{"Keys: ", 
                    Row[{"Width"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                   TooltipDelay -> 0.1], 
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Width"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key[ImageSize]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key[ImageSize]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["height", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 3, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["7px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 3, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 3, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "ImageSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key[ImageSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                   Row[{"Keys: ", 
                    
                    Row[{"Height"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                   TooltipDelay -> 0.1], 
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Height"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][{1, 
                   Key["Block"], 3, 
                   Key["Interpretation"], 
                   Key[ImageSize]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key[ImageSize]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][{1, 
                 Key["Block"], 3, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                44507468, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 44507468]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[44507468][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 44507468; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{514., {79., 85.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[41]=",
 CellID->208492487,ExpressionUUID->"efc05b7d-52bb-4679-8ae6-e41b5af9dbd1"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "fe0b6d04-a316-41bd-91c5-37a6006e689e"],
 " to process the ambiguous translations from CSS  by providing an interface \
expression. CSS properties ",
 StyleBox["width", "InlineCode"],
 " and ",
 StyleBox["height", "InlineCode"],
 " that both translate to the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ImageSize"]], "paclet:ref/ImageSize"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "72869cfa-a623-4888-8202-2ad519c35297"],
 " option may need to be combined:"
}], "MathCaption",
 CellID->405165279,ExpressionUUID->"a68d77db-eabc-4507-8035-f3d0d441e47a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<width\>\"", ",", "Pane", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[42]:=",
 CellID->184746180,ExpressionUUID->"8af05fff-71a0-4d45-a338-49c70bba151b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}], ",", "Automatic"}], "}"}]}], "}"}]}],
   "}"}]], "Output",
 CellLabel->"Out[42]=",
 CellID->111286555,ExpressionUUID->"6db91d96-7563-4557-bdec-165a9339195f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<height\>\"", ",", "Pane", ",", "ds", ",", "\"\<h3\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[43]:=",
 CellID->52088994,ExpressionUUID->"0f98009b-589b-4f0d-a152-c2eae8bbfea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"PaneBoxOptions", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "7"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[43]=",
 CellID->50006365,ExpressionUUID->"45f6aaff-1c99-4e35-9f3c-4442748d3475"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Merging Multiple CSS Rules", "Subsection",
 CellID->316215944,ExpressionUUID->"68a61e06-6c12-4227-b501-526c258ae0cb"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "acf85795-f01a-4acf-934e-d69c0085e865"],
 " follows the CSS cascade algorithm. It takes into account multiple rules \
targeting the same XML element, as well as importance and selector \
specificity. Origin is not considered because there is only the one imported \
stylesheet."
}], "Text",
 CellID->347570650,ExpressionUUID->"c7eb56ce-b70c-4e20-9e47-59001223421d"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CSSCascade",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/CSSCascade"], "[", 
     RowBox[{
      StyleBox["CSSProperty", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["type", "TI"], ",", 
      StyleBox["data", "TI"], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["sel", "TI"], 
         StyleBox["1", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TI"]}], "}"}]}], "]"}], Cell[
    "follow CSS cascade across multiple selectors in CSS data", "TableText",
     ExpressionUUID->"8cefe7ec-4d13-4391-8743-0cd2e0e365d4"]}
  }]], "DefinitionBox",
 CellID->454154062,ExpressionUUID->"72cae841-559f-4d42-a501-5dc826e1bf14"],

Cell["Merge across multiple selectors.", "Caption",
 CellID->353572708,ExpressionUUID->"64e4c296-7fa0-40d5-9d29-e198e7cf28d6"],

Cell["\<\
An example of CSS with identical properties from different rules:\
\>", "MathCaption",
 CellID->104691956,ExpressionUUID->"638e1d5d-e836-4a3c-b5c9-fe1c83599a66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<.h {font-size:30px !important} .header {font-size:20px} .header2 \
{font-size:17px!important} h1 {font-size:10px}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellLabel->"In[45]:=",
 CellID->9491473,ExpressionUUID->"351bfa7c-0c63-484b-b2b2-bb4fced9d56c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ".h ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Class" -> Association[
                "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
                 "Value" -> "h"]}}, "Specificity" -> {0, 0, 1, 0}]], "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "30px", "Important" -> True, 
           "Interpretation" -> Association[FontSize -> 30], "Condition" -> 
           None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ".header ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Class" -> Association[
                "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
                 "Value" -> "header"]}}, "Specificity" -> {0, 0, 1, 0}]], 
        "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "20px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 20], "Condition" -> 
           None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ".header2 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Class" -> Association[
                "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
                 "Value" -> "header2"]}}, "Specificity" -> {0, 0, 1, 0}]], 
        "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "17px", "Important" -> True, 
           "Interpretation" -> Association[FontSize -> 17], "Condition" -> 
           None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "10px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 10], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["font-size"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 4], 
     "Meta" -> Association["ID" -> 226963447175915], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[81.], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`AtomShape[34]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["font-size"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 1], TypeSystem`AnyType}], 1]}], 4], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 4, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1239381138][{All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1239381138][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1239381138][{All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1239381138][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1239381138][{All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1239381138][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1239381138][{All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1239381138][{All, "Block", All, "Important"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1239381138][{All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1239381138][{All, "Block", All, "Condition"}, "ColumnHeader",
                   True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".h\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ".h ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "h"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["30px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ".header ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{2, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\".header2\"", Selectable -> True, StripOnInput -> 
                    False]}, "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ".header2 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Class" -> 
                    Association[
                    "Namespace" -> None, "Name" -> "class", "Match" -> 
                    "Include", "Value" -> "header2"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["17px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{3, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{81., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1239381138][{4, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1239381138, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1239381138]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1239381138][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1239381138][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1239381138; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{529., {104., 110.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[45]=",
 CellID->472088138,ExpressionUUID->"2dfb02d9-eb63-4aa3-a407-832db568d9cd"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "b9959ae2-d28f-4cc5-8ecf-31a1f5751f5b"],
 " takes into account the specificity of each selector. Here ",
 StyleBox[".header", "InlineCode"],
 " and ",
 StyleBox["h1", "InlineCode"],
 " have the same importance but ",
 StyleBox[".header", "InlineCode"],
 " has a higher specificity. In ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "ac45dd1a-b6e7-4ac8-9800-0a9567cd1238"],
 " one can indicate a selector by either a string, ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSSelector"]], "paclet:CSSTools/ref/CSSSelector"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "275d8306-e5d0-4251-b266-f77febef963f"],
 " constructor, or a pre-constructed ",
 Cell[BoxData[
 "CSSSelector"], "InlineFormula",ExpressionUUID->
  "07d7bede-4e89-4f7c-96c9-2006d6f114e1"],
 " object."
}], "Text",
 CellID->44109978,ExpressionUUID->"b381bb5a-f8a5-4c1a-8c84-8355db89947a"],

Cell[TextData[{
 "The ",
 StyleBox[".header", "InlineCode"],
 " selector wins due to specificity:"
}], "MathCaption",
 CellID->339362087,ExpressionUUID->"fabc06d1-28cb-4632-b0c4-4a6a728cc652"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "ds", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<.header\>\"", ",", 
     RowBox[{"CSSSelector", "[", "\"\<h1\>\"", "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->202779533,ExpressionUUID->"1fe1a32c-695a-4edb-8b42-cd692a53e683"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]], "Output",
 CellLabel->"Out[46]=",
 CellID->166108485,ExpressionUUID->"2906780d-760c-4e6e-98e8-367237f4b040"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "73e6a5a8-18ae-447b-8e4a-2be2086e9853"],
 " also takes into account the importance of each declaration. The ",
 StyleBox[".header", "InlineCode"],
 " and ",
 StyleBox[".h", "InlineCode"],
 " selectors have the same specificity, but the ",
 StyleBox["font-size", "InlineCode"],
 " declaration within the ",
 StyleBox[".h", "InlineCode"],
 " rule has a higher importance."
}], "Text",
 CellID->24990749,ExpressionUUID->"3c0edd28-70f0-42a9-aa3e-0952060102d4"],

Cell[TextData[{
 "The ",
 StyleBox["font-size", "InlineCode"],
 " declaration within the ",
 StyleBox[".h", "InlineCode"],
 " rule wins due to importance:"
}], "MathCaption",
 CellID->164666480,ExpressionUUID->"6df97e66-d4ff-4220-90f5-518d8e85c3a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "ds", ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"#CSS \"", 
           RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\".h\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[0.92, 0.98, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
          FontWeight -> Bold, FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0, 0.5, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSelector[
       Association[
       "String" -> ".h", 
        "Sequence" -> {
         "SimpleSelectorSequence" -> {
           "Class" -> Association[
             "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
              "Value" -> "h"]}}, "Specificity" -> {0, 0, 1, 0}]]], ",", 
     "\"\<.header\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[47]:=",
 CellID->481809636,ExpressionUUID->"3c7cd42e-725f-40fc-9628-e530909ca049"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "30"}], "}"}]], "Output",
 CellLabel->"Out[47]=",
 CellID->83332237,ExpressionUUID->"aafa04ca-90c0-46ab-b183-2af8059af991"]
}, Open  ]],

Cell[TextData[{
 "All things being equal, the declaration that appears last is used. ",
 StyleBox[".h", "InlineCode"],
 " and ",
 StyleBox[".header2", "InlineCode"],
 " have the same specificity and importance, but ",
 StyleBox[".header2", "InlineCode"],
 " comes last."
}], "Text",
 CellID->321088230,ExpressionUUID->"def967f2-245c-469e-8194-479ffe9cb7a6"],

Cell[TextData[{
 "The ",
 StyleBox["font-size", "InlineCode"],
 " declaration within the ",
 StyleBox[".header2", "InlineCode"],
 " rule wins due to it being last:"
}], "MathCaption",
 CellID->23603036,ExpressionUUID->"43096b66-6635-4e84-b91f-841aa4de7cfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "ds", ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      StyleBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"#CSS \"", 
           RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\".h\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[0.92, 0.98, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontSize -> 12, 
          FontWeight -> Bold, FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0, 0.5, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSSelector[
       Association[
       "String" -> ".h", 
        "Sequence" -> {
         "SimpleSelectorSequence" -> {
           "Class" -> Association[
             "Namespace" -> None, "Name" -> "class", "Match" -> "Include", 
              "Value" -> "h"]}}, "Specificity" -> {0, 0, 1, 0}]]], ",", 
     "\"\<.header2\>\""}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[48]:=",
 CellID->265568366,ExpressionUUID->"ce4b4f72-baae-498f-af9b-faa0937f13a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "17"}], "}"}]], "Output",
 CellLabel->"Out[48]=",
 CellID->174772876,ExpressionUUID->"038aacfa-18bd-4c51-b458-1be8bf6be0c3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS within SymbolicXML", "Section",
 CellID->69801460,ExpressionUUID->"c20c98ca-41f9-40ec-ba06-325557b7b58b"],

Cell[CellGroupData[{

Cell["Extraction", "Subsection",
 CellID->42316102,ExpressionUUID->"89a0bf36-da60-41b0-827a-5c640a3a3643"],

Cell[TextData[{
 "CSS rules can be found in stylesheets external to the XML document, \
stylesheets declared within the XML document, or inline within the XML \
document. If a ",
 ButtonBox["symbolic XML",
  BaseStyle->"Link",
  ButtonData->"paclet:XML/tutorial/RepresentingXML"],
 " document contains CSS, then it can be extracted into interpreted CSS data."
}], "Text",
 CellID->153517948,ExpressionUUID->"763ef351-25d1-47aa-b77e-d4e36d567d62"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ExtractCSSFromXML",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/ExtractCSSFromXML"], "[", 
     StyleBox["XMLObject", "TI"], "]"}], Cell[
    "extract and interpret all detected CSS", "TableText",ExpressionUUID->
     "ee62121f-c1cd-41d1-956c-e305b487506d"]}
  }]], "DefinitionBox",
 CellID->521402141,ExpressionUUID->"6fafbabc-1b59-47a2-b604-fac259a5a89a"],

Cell["Import CSS directly from symbolic XML.", "Caption",
 CellID->24859362,ExpressionUUID->"28de61f6-4a96-4ebc-8262-942e19d429bc"],

Cell[TextData[{
 "Often external CSS file locations are given relative to the current XML \
file. In these cases it is best to have the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$Path"]], "paclet:ref/$Path"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "467d2a6e-1cee-4f6e-b9ff-aafd6a1abdd2"],
 " defined with these locations included, otherwise the nested CSS files \
won't be found. Optionally the root directory can be specified."
}], "Text",
 CellID->210165798,ExpressionUUID->"249c6be0-b5a8-4f7b-adc1-9e000db926da"],

Cell[BoxData[GridBox[{
   {"\"\<RootDirectory\>\"", "Automatic", Cell[
    "directory from where relative locations are resolved", "TableText",
     ExpressionUUID->"9bf1bc4b-0a08-45cc-ad11-8303081bd034"]}
  }]], "DefinitionBox3Col",
 CellID->535547963,ExpressionUUID->"64557a62-00eb-4150-9da6-2b0e9c2533d6"],

Cell["Options for ExtractCSSFromXML.", "Caption",
 CellID->118552512,ExpressionUUID->"d3b1b30b-4f0a-4494-97fb-a2ba878565a8"],

Cell["An example XML document that contains CSS references:", "MathCaption",
 CellID->285158367,ExpressionUUID->"ae9dcbec-9fdf-4806-a669-920720774e8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"cssExamplesDirectory", ",", "\"\<index.html\>\""}], "}"}], 
      "]"}], ",", "\"\<XMLObject\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"doc", ",", "6"}], "]"}]}], "Input",
 CellLabel->"In[49]:=",
 CellID->82993485,ExpressionUUID->"76342e4e-52b2-432a-9c92-8eb1d05b7c34"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"XMLObject", "[", "\<\"Declaration\"\>", "]"}], "[", 
      RowBox[{
       RowBox[{"\<\"Version\"\>", "\[Rule]", "\<\"1.0\"\>"}], ",", 
       RowBox[{"\<\"Standalone\"\>", "\[Rule]", "\<\"yes\"\>"}]}], "]"}], 
     "}"}], ",", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\<\"html\"\>", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"http://www.w3.org/2000/xmlns/\"\>", 
          ",", "\<\"xmlns\"\>"}], "}"}], 
        "\[Rule]", "\<\"http://www.w3.org/1999/xhtml\"\>"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"XMLElement", "[", 
         RowBox[{"\<\"head\"\>", ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"title\"\>", ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", "\<\"Example\"\>", "}"}]}], "]"}], ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"style\"\>", ",", 
              RowBox[{"{", 
               RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"text/css\"\>"}], "}"}],
               ",", 
              RowBox[{
              "{", "\<\" /* internal CSS */\\n\\t\\tli {color: green;}     \
\\n\\t\"\>", "}"}]}], "]"}], ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"link\"\>", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\<\"rel\"\>", "\[Rule]", "\<\"styleSheet\"\>"}], ",", 
                RowBox[{"\<\"href\"\>", "\[Rule]", "\<\"test.css\"\>"}]}], 
               "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\<\"body\"\>", ",", 
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"\\n\\t\"\>", ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\<\"h1\"\>", ",", 
              RowBox[{"{", "}"}], ",", 
              RowBox[{
              "{", "\<\"Importing CSS 2.1 For Use In Wolfram Desktop\"\>", 
               "}"}]}], "]"}], ",", 
            RowBox[{"\[LeftSkeleton]", "18", "\[RightSkeleton]"}], 
            ",", "\<\"\\n\"\>"}], "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}],
  Short[#, 6]& ]], "Output",
 CellLabel->"Out[50]//Short=",
 CellID->398677993,ExpressionUUID->"1c675623-a9f5-4762-843f-a70cf3640f6a"]
}, Open  ]],

Cell["Extract the CSS references.", "MathCaption",
 CellID->91103281,ExpressionUUID->"a6b62f58-ff5e-48a1-acd1-4e39116d0e5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ExtractCSSFromXML", "[", 
   RowBox[{"doc", ",", 
    RowBox[{"\"\<RootDirectory\>\"", "\[Rule]", "cssExamplesDirectory"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[51]:=",
 CellID->482145865,ExpressionUUID->"fffea070-1e2d-4bfe-87fb-8e8cd38ce036"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          10177606826989064281890901832573088666047591716041033448128], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 10, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], TypeSystem`AnyLength]}], 12], "Meta" -> 
         Association["ID" -> 39943391239386], "RowTarget" -> 20, 
         "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
            1, {All, "Block"} -> 
            Association[{All, "Block", All, "Property"} -> 
              1, {All, "Block", All, "Value"} -> 
              1, {All, "Block", All, "Important"} -> 
              1, {All, "Block", All, "Interpretation"} -> 
              1, {All, "Block", All, "Condition"} -> 1]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Targets" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Block" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Property" -> 
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    "Value" -> 
                    TypeSystem`PackageScope`AtomShape[460.80000000000007`], 
                    "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                    "Interpretation" -> 
                    TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                    TypeSystem`PackageScope`UnknownShape[False]]], 
                    DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
                  DirectedInfinity[1], {All, "Block"}]]], 
              DirectedInfinity[1], 3, {All}]], 10, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
            TypeSystem`AnyType, 
             TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "Property", "Value", "Important", "Interpretation", 
                "Condition"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
                TypeSystem`AnyType}], TypeSystem`AnyLength]}], 12], 
         "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 10, 
         "DisplayedColumnCount" -> 3, "DataRowCount" -> 12, "DataColumnCount" -> 
         3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
         Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Selector"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Selector"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Targets"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Targets"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Block", 
                    Style[
                    "Block", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Block"}, 1]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{All, "Block"}, "ColumnHeader", False], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Block", All, "Property"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Block", All, "Property"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Block", All, "Value"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Block", All, "Value"}, "ColumnHeader", 
                    True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Block", All, "Important"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Block", All, "Important"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Block", All, "Interpretation"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Block", All, "Interpretation"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    All, "Block", All, "Condition"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    608624253][{All, "Block", All, "Condition"}, 
                    "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"li\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "li ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "li"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    1, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["green", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[0, 
                    Rational[128, 255], 0]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[0, 
                    Rational[128, 255], 0]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{1, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"body\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "body ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "body"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "body", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", "Position" -> {2, 3, 2}, 
                    "Attributes" -> Association[], "ID" -> "id", 
                    "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    2, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["background", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                  "url(\"html-background-png-7.png\") repeat darkblue", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 5], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["#dfe366", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[
                    Rational[223, 255], 
                    Rational[227, 255], 
                    Rational[2, 5]]], ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    2, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{2, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "h1", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", 
                    "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "h1", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", 
                    "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    3, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation["font-size", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["32px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontSize -> 32], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontSize -> 32], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    3, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["font-weight", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["bold", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontWeight -> Bold], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontWeight -> Bold], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    3, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{3, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"ul\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "ul ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "ul"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{4, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "ul", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", 
                    "Position" -> {2, 3, 2, 3, 20}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    CSSTools`CSSTarget[
                    Association[
                    "Type" -> "ul", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", 
                    "Position" -> {2, 3, 2, 3, 20}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    4, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{4, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    4, 
                    Key["Block"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{4, 
                    Key["Block"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"p\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "p ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "p"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    5, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["font-family", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Times New Roman", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontFamily -> "Times New Roman"], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontFamily -> "Times New Roman"], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    5, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["font-size", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["20px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontSize -> 20], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontSize -> 20], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    5, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["3 total \:203a ", ""], 
                    Style[
                    Superscript["3 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    5, 
                    Key["Block"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{5, 
                    Key["Block"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h3\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h3 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h3"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    6, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["counter-increment", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["question", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[CounterIncrements -> {"question"}], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[CounterIncrements -> {"question"}], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    6, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["height", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["50px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[
                    ImageSize -> 
                    Association[
                    "Height" -> Association["Min" -> 50, "Max" -> 50]]], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    ImageSize -> 
                    Association[
                    "Height" -> Association["Min" -> 50, "Max" -> 50]]], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    6, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["13 total \:203a ", ""], 
                    Style[
                    Superscript["13 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    6, 
                    Key["Block"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{6, 
                    Key["Block"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["\[Ellipsis]", 
                    Style[
                    "\[Ellipsis]", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    7, 
                    Key["Selector"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 3], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    7, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["content", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["counter(question)", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[DisplayFunction -> (RowBox[{
                    CounterBox["question"]}]& )], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[DisplayFunction -> (RowBox[{
                    CounterBox["question"]}]& )], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    7, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{7, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h2\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "h2 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h2"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    8, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["font-size", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["12px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontSize -> 12], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontSize -> 12], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    8, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["font-family", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 2, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["arial", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 2, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 2, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontFamily -> "Arial"], ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[
                    Association[FontFamily -> "Arial"], ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    8, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 2, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"], 2, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["4 total \:203a ", ""], 
                    Style[
                    Superscript["4 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    8, 
                    Key["Block"]}, 2]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{8, 
                    Key["Block"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
                 Alignment -> {Left, Baseline}, Background -> 
                 GrayLevel[0.98]], SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"a\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> "a ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "a"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    9, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["width", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["20px", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[
                    ImageSize -> 
                    Association[
                    "Width" -> Association["Min" -> 20, "Max" -> 20]]], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[
                    ImageSize -> 
                    Association[
                    "Width" -> Association["Min" -> 20, "Max" -> 20]]], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    9, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{9, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "None", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                    StripOnInput -> False], 
                    CSSTools`CSSSelector[
                    Association[
                    "String" -> None, "Sequence" -> {}, 
                    "Specificity" -> {1, 0, 0, 0}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Selector"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                    Style[
                    Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    10, 
                    Key["Targets"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Targets"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}], 
                Item[
                 Pane[
                  Annotation["color", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Block"], 1, 
                    Key["Property"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["red", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Block"], 1, 
                    Key["Value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{460.80000000000007`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Block"], 1, 
                    Key["Important"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{36, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Association[FontColor -> RGBColor[1, 0, 0]], 
                    ShowStringCharacters -> False], 
                    Style[
                    Style[
                    Association[FontColor -> RGBColor[1, 0, 0]], 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][{
                    10, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, 4]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Block"], 1, 
                    Key["Interpretation"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "None", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   608624253][{10, 
                    Key["Block"], 1, 
                    Key["Condition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[True, 12, 1], {1, 12 - -10 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[False, 12, 1], {1, 12 - -10 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    12, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    12, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 12, 1], {1, 12 - 10 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 12, 1], {1, 12 - 10 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    608624253, {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
                 FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 608624253]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[608624253][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[608624253][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 608624253; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
      DynamicBox[
       ToBoxes[
        Dataset`DatasetContent[
        1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
         TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm], 
       ImageSizeCache -> {2454., {309.5, 314.5}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10177606826989064281890901832573088666047591716041033448128,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[51]=",
 CellID->190654054,ExpressionUUID->"d7089a33-ad19-4573-9aca-ad6a201a6083"]
}, Open  ]],

Cell[TextData[{
 "The CSS data extracted from symbolic XML has an additional column ",
 StyleBox["\"Targets\"", "InlineCode"],
 ". ",
 StyleBox["\"Targets\"", "InlineCode"],
 " contains a list of ",
 Cell[BoxData[
 "CSSTarget"], "InlineFormula",ExpressionUUID->
  "8c9629a2-2868-4e94-a668-9dc341a3a479"],
 " expressions. A ",
 Cell[BoxData[
 "CSSTarget"], "InlineFormula",ExpressionUUID->
  "e195ecf3-4c7f-43e9-b5dc-9ec5afd61ac5"],
 " expression represents the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["XMLElement"]], "paclet:ref/XMLElement"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "98774e9a-4033-40ab-bdf5-ba0542e6de7a"],
 " instance in the symbolic XML that the selectors target. It is often the \
case that selectors target multiple elements. "
}], "Text",
 CellID->102410,ExpressionUUID->"d72fd3b1-6132-48fb-a33d-56165054de8d"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
 "CSSTarget"], "InlineFormula",ExpressionUUID->
  "6fec69b6-7db3-46bb-9b14-2f2747752d7c"],
 " expression contains information such as the position of the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["XMLElement"]], "paclet:ref/XMLElement"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "bb6c5ecb-9101-41cb-9ad2-261422a2c90e"],
 " within the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["XMLObject"]], "paclet:ref/XMLObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "1b96ce83-0769-40a3-9d9f-9ed3430ae5bc"],
 " (indicated on mouseover), as well as the XML element's attributes and any \
declared namespaces."
}], "Text",
 InitializationCell->True,
 CellID->231613338,ExpressionUUID->"6fcb115a-dd09-49a1-9b7e-45c36d41a51e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inheritance", "Subsection",
 CellID->16111444,ExpressionUUID->"75018579-d4c7-4118-a8b8-72456943fcff"],

Cell[TextData[{
 "An XML document consists of nested elements. A subset of CSS styles like ",
 StyleBox["font-family", "InlineCode"],
 " and ",
 StyleBox["color", "InlineCode"],
 " are automatically inherited by child elements. Thus, even if a selector \
targets an element with a set of style rules, the element could also be \
styled due to inheritance of styles from its ancestors."
}], "Text",
 CellID->289490881,ExpressionUUID->"a747082f-8748-4d02-bab3-e4ca82f5348e"],

Cell["\<\
WD style inheritance is similar except most options are inherited. Exceptions \
are those options that are exclusive to a particular scope e.g. notebook-only \
options are not passed down into cells and boxes.\
\>", "Text",
 CellID->43750844,ExpressionUUID->"86f3b622-00a9-49dc-92f8-d702b6bc9b0f"],

Cell["\<\
With CSS data that targets XML, style inheritance becomes another aspect of \
the CSS cascade to consider for proper style transfer to WD.\
\>", "Text",
 CellID->709333429,ExpressionUUID->"673e1595-c3eb-491c-be17-ccf50ca1ed6c"],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CSSInheritance",
      BaseStyle->"Link",
      ButtonData->"paclet:CSSTools/ref/CSSInheritance"], "[", 
     RowBox[{
      StyleBox["pos", "TI"], ",", 
      StyleBox["scope", "TI"], ",", 
      StyleBox["data", "TI"]}], "]"}], Cell[TextData[{
     "calculate style at position ",
     StyleBox["pos", "TI"],
     " taking inheritance into account"
    }], "TableText",ExpressionUUID->"0fb70b24-6301-4044-84a0-921d3b22a685"]}
  }]], "DefinitionBox",
 CellID->36083,ExpressionUUID->"aeaad669-6bdc-457b-bfad-78ce99c2d502"],

Cell["Function to resolve CSS inheritance.", "Caption",
 CellID->796978057,ExpressionUUID->"27883294-fd7b-45c0-900a-e36a3310eb7d"],

Cell[TextData[{
 "The third rule of the example CSS data has two declarations, ",
 StyleBox["font-size", "InlineCode"],
 " and ",
 StyleBox["font-weight", "InlineCode"],
 ":"
}], "MathCaption",
 CellID->4454069,ExpressionUUID->"3915d0f6-f16c-4a03-9cf8-28e0a78da366"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"3", ",", "\"\<Block\>\""}], "]"}]], "Input",
 CellLabel->"In[52]:=",
 CellID->863367331,ExpressionUUID->"e75b80ba-316f-4d26-93a2-1c80954879f8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Property" -> "font-size", "Value" -> "32px", "Important" -> False, 
        "Interpretation" -> Association[FontSize -> 32], "Condition" -> None], 
       Association[
       "Property" -> "font-weight", "Value" -> "bold", "Important" -> False, 
        "Interpretation" -> Association[FontWeight -> Bold], "Condition" -> 
        None]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Property"} -> 1, {All, "Value"} -> 
        1, {All, "Important"} -> 1, {All, "Interpretation"} -> 
        2, {All, "Condition"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Property" -> 
            TypeSystem`PackageScope`AtomShape[105.60000000000002`], "Value" -> 
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
            "Important" -> TypeSystem`PackageScope`AtomShape[36], 
            "Interpretation" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`UnknownShape[True], 
                TypeSystem`PackageScope`UnknownShape[False]]], 1, 
              DirectedInfinity[1], {All, "Interpretation"}], "Condition" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 5, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Property", "Value", "Important", "Interpretation", "Condition"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean], 
         TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
         TypeSystem`AnyType}], 2], "Meta" -> 
     Association["ID" -> 150147957087838], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Property"} -> 1, {All, "Value"} -> 
        1, {All, "Important"} -> 1, {All, "Interpretation"} -> 
        2, {All, "Condition"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Property" -> 
            TypeSystem`PackageScope`AtomShape[105.60000000000002`], "Value" -> 
            TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
            "Important" -> TypeSystem`PackageScope`AtomShape[36], 
            "Interpretation" -> TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`UnknownShape[True], 
                TypeSystem`PackageScope`UnknownShape[False]]], 1, 
              DirectedInfinity[1], {All, "Interpretation"}], "Condition" -> 
            TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 5, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Property", "Value", "Important", "Interpretation", "Condition"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[TypeSystem`Boolean], 
         TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
         TypeSystem`AnyType}], 2], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     2, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1394378160][{All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1394378160][{All, "Property"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1394378160][{All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1394378160][{All, "Value"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1394378160][{All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1394378160][{All, "Important"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][{
                  All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{All, "Interpretation"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1394378160][{All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1394378160][{All, "Condition"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["32px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["font-weight", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["bold", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontWeight", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{2, 
                 Key["Interpretation"], 
                 Key[FontWeight]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Bold", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{2, 
                 Key["Interpretation"], 
                 Key[FontWeight]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1394378160][{2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1394378160, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1394378160]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1394378160][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1394378160][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1394378160; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{475., {51., 57.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[52]=",
 CellID->250038241,ExpressionUUID->"23fc2e11-a7b8-4ee6-a63d-abe79edd90e2"]
}, Open  ]],

Cell["\<\
The third rule's target element has a parent element that may also contribute \
to the computed styles.\
\>", "MathCaption",
 CellID->162844997,ExpressionUUID->"3c338866-9a29-4807-aa11-a80669d2f11f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "[", 
  RowBox[{"3", ",", "\"\<Targets\>\""}], "]"}]], "Input",
 CellLabel->"In[58]:=",
 CellID->474199063,ExpressionUUID->"25abdc9b-eddb-4d6b-8a17-62d0caefa7a4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       CSSTools`CSSTarget[
        Association[
        "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
         "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
         "id", "CaseSensitive" -> 
         Association[
          "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
           False]]]}, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 1], "Meta" -> 
     Association["ID" -> 6322387246860], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 1, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 1, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   TagBox[
                    TooltipBox[
                    FrameBox[
                    TemplateBox[{
                    StyleBox["\"XML \"", 
                    RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[1, 0.9, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0.5, 0, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], 
                    "}"}]], Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ], 
                   Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSTarget[
                   Association[
                   "Type" -> "h1", "Namespace" -> 
                    "http://www.w3.org/1999/xhtml", 
                    "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> 
                    Association[], "ID" -> "id", "CaseSensitive" -> 
                    Association[
                    "Type" -> False, "AttributeName" -> False, 
                    "AttributeValue" -> False]]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               95136704][{1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                95136704, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 95136704]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[95136704][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[95136704][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 95136704; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{89., {32., 38.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[58]=",
 CellID->59960076,ExpressionUUID->"d2c52c03-4f7a-4ecb-9464-34093a55c380"]
}, Open  ]],

Cell[TextData[{
 "In this case the ",
 StyleBox["color", "InlineCode"],
 " property is inheritable:"
}], "MathCaption",
 CellID->4557166,ExpressionUUID->"7aa953d9-53e3-4373-bfe8-537eec625a32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"ds", ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        InterpretationBox[
         StyleBox[
          TagBox[
           TooltipBox[
            FrameBox[
             TemplateBox[{
               StyleBox["\"XML \"", 
                RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                False], 
               StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
              "RowDefault"],
             Background->RGBColor[1, 0.9, 1],
             BaseStyle->{FontFamily -> Dynamic[
                 CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
               FontColor -> GrayLevel[0.2]},
             FrameMargins->{{5, 5}, {2, 2}},
             FrameStyle->Directive[
               RGBColor[0.5, 0, 1], 
               AbsoluteThickness[1]],
             ImageMargins->2,
             RoundingRadius->4,
             StripOnInput->False],
            RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
           Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
          Editable->False,
          StripOnInput->False,
          ShowStringCharacters->False],
         CSSTools`CSSTarget[
          Association[
          "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
           "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
           "id", "CaseSensitive" -> 
           Association[
            "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
             False]]]], "[", "\"\<Position\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", 
         RowBox[{"-", "3"}]}], "]"}], "]"}], ",", 
      RowBox[{"Alternatives", "@@", 
       RowBox[{"Through", "[", 
        RowBox[{"#Targets", "[", "\"\<Position\>\"", "]"}], "]"}]}]}], "]"}], 
    "&"}]}], "]"}]], "Input",
 CellLabel->"In[59]:=",
 CellID->595233906,ExpressionUUID->"8335b0ec-9769-4daf-b18d-1f792e3fcf4c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
G3bWctyLT/9VYh6myDpJ7h4yPxW83tI6B7ZLH/xIdOWLdc7cPbzONljq+Vjd
a/33pg/2V9qUbEjGIQfWG7883lHl35tyeZAU6b03J1o3T9ssKV3DHHbjBV5b
9rgUFaVzmWoLO1lqkvvuch0dneduxOPh+IuehSFw0yvL0/DJ5g/0dWLheZXt
x6Z0aLg7tdy4ulw+u002lfej7w7/mBmOzVwph51Mp1q3wbSbbV0tdHMb+AHa
Mg+7+1Pq+MvxFk6dSFNRr92NB7haj7fT+Z48eURD/JHafv8/PPiW5MqfaZcL
IVZ/iCu84T+2XklHRhucGTGaavSIhoOymz6RYZ6Y9TtnojQWPWHbgqaPDiJ7
kNt9D1YlK1Ze8jOGays13itGnqbeJ6JhoAn/ZTnSmFZtDaLSI+sSslFU7Y+X
8PZLpmtRCVyMxQ+jkR+mXRq2M2g35el4yStN5IIR+uCl2rubdIxkWVGj2O07
kMLn12dVxHWU5Tra7TtcGUgWjGTa9Sge0bMrPIVil3jtjNQqGXKzU0U0nKC3
P5dMuzZJsn57mL2J5k+8f7W1h6ro2uzSnTV8g+7UAqWuR6q2P1myF8d62d2f
Vwsd3cLPpQ/ZRX1waLUTWNxFXZSh3Q64YLZGD6U923M58bZbx/av0Su2Y2Fu
qjAN2n0RuScEK9vZJIhdIwPNSorflEqSdMaVeWB6w0Y0zLfhfC5ENGwtL6Kh
6Z0Lh593Dhd+J7/NXajCmx807Tq4WHFEw2fqMQif/2pqyWOf+cq3Iovt4hS+
85VPp1asBju81RZOMm5EQ4f+t8qUsVgdtHD5Q4H5P9vevnolOdkQDy6cutvf
3aRr47HnTMPpLTj9c+mZG/d4ejS+TC+Wa+skUyi7cOvmukQ07Lc19sB607e1
/Wxb+i+T5TLTORdJ3SLFM+mKD7voAg+WopJ0LpMaA0w0X9N34vYE2bWmk+f5
dHkNXBhiN72yPA2fbOOBpg4gtMW4zmX7JpkOtUs3dbTBru/w5fN48AxIHfQ6
O5LTVfd/TE9pSG/3uBfmVOs2GH6zT627lx0KXPzmNuwDNJ3pxye9hIiG2olk
JpMm1h7gaj34vs89efSIhuo3BY/U0P1/gIiG4guhNde66BIWkGpYDbqDwFa7
3XyiW88c82ARDUdFNz35p/+8qeSdMz9vKvaEHXDe1LBVskJDFcxB20pNy+/v
FwPEMeV33TGioecvCYR3U18+GfCX0fnoOp1dvNofLuGxS6ZLH0jwYix7GE3w
MC1s2M6k3dS8ncymdLwUbiOeYNFLtVc36TjJUjl+NYpwjaLyx+X3WZVxHbUd
v+somMKpS6ch5foUj9JJUK6dZwNcOyO1Sobc7BQRDSfq7U8mU32SYev20o2E
hv7VcA9Vl8nP4e6scRp0pzZWREP0yVI2IFxxNn3ILurDJRZ/URdl6BwOuPk0
iqsYyzjxgvtO9xHAdJ/V0N0XkXtCoLLdcvqRQxloVlL8plSSpLOtzAOnMGxE
w3wbzudCRMPWIiMa3vjS6vP8uoQvVT5fOPjjOz9+fPtL+7cqBKMk3nh39d6H
PouVRjQ0xSBU356Qsn/bwi5aoWlr3/vi85sgPvvF6msg8pEOE0c05Dtgm1Ru
mJvgrbuHxsis0uUT67bPqK+Gh1WCbdNDMIGF63f77SD+4ZsAHjZxar06EZad
/rUfTN9Nr8oNned/JWz1XSUYcB0tmHhM7rKiumxqUldbSyGS8M2j6o8lVY3q
wecWzzbg6+dSObLDEp0s/eFEK7YvxqGNdDrs0gv8sBQ9L55IvEg6lzlavz73
JzM63O062i1bqcW+TH2RDmVrKwzRm15pngZPdr/dg61uN3s8EXpOZfvwiF/n
i3by8Bq+Kkvqht0f7KsloKFpQnjmz/VH5+TrNhhss4dP18IY9ZKb25AP0NaA
huanVGO95fjGOt7C2ROp3/PS2x3qah3intxrNKrp+Oo7Kyh1wft/USdtfjyx
14XQfJMLK7zh79Youu0M1evT6+ZTuJNcyeqX3Pvt1CcQFdXN4pdncnAg/SAI
PGGLBiOa6pZDV8mKlZf87CaGaiu1LF+d59P1kNt23TWiob3pHD6EYI4031db
G0TdDqxkrWi1P1zC49X+jn0m7VsueRhN8zDN3q43i6aS5fTtpqZN6HjJKU3k
xjkBRx1nsUu1RzfpeMmiRlH9Ln57PJM+q3KuowzX0f67UArnKkaZdOtePAon
Qbl2hrx2RmqVDLnZfERD2+rxiIbYZTh4b389mXIzn4s6RcP9q+09VF0mP9e2
ne7OGqlBd3IjRTSkczN7O+3QWD+bPmQX9e40zuOiLsrQYQ44M9jUR4dutEWd
eME1GyvMJX1Ww3ZfhO8JXaZYFF0jA81Kit+USpJ0xpV5YHoFEQ0Zy2g4nwsR
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
B5zZc/E9bRYnHhdeNVCYG8QiGvp0X4Tbg8WJVZryg8xKit+UyorcySrzwBwN
G9Ew34bzuRg4ouHjjz/8xnurdx2c4A0Nm5cs1MQDK5438OX3vvHhx40Hv+iI
hjcK36HwzW9XAhYO99JhsTEjGhoXS0U07P642e/2MI7eATFmRMOuOpirLw14
A9reEkunAOaWj7Q6g+sWLZx+fqQfFS9T7xqLWXj6V3tXV0+/h7XHZOq1N8di
QX/Vh27r87StpZCtHuwf2u0pOfzAerDoxptRRYmWPpYyTalW3KAe4ALPfFd0
iwhKbqTaOZMoAENcR+EvCgtD6KbXoUXffrKx7tCFlO2y/u2Oo8DlPfPrHR0v
n/zj4UFt9vS8TPVmmrmxnmrdtlMfeLMlnbBlFZLBHqCP2fxt3H1UUTd034Xb
TmR7fWd2MOvRqFLBh1dhqYvd//tNwhzsQmhPw0Fv+A0Nq8PDaimGQ+k6ApTc
VvSYc0FJwd20PbxTs+zOb97UGFWy5NEUKniOxRYvvcuFly85iKJdd41oaF9o
6Bwpuq/2bOp06LgoaONESnifan/6wLaLF2258GE0/sO0usLuz6mlZtVuSmxZ
x8vgiRxNsPilevKLt+HYQxtWo8huZcF9VolUK+Q6ch2FkqG9VzlbE+xVPOJn
59rZH9kw185IrZIhN5vvt2xrsA8c0TBwb/9+zf1Pj2YSobD507V/dfLJz6M0
6E5NRMMYfcjtt+9YGrioZ3JRj5Whszjg5H67D0Gd9sTjwqs2nNdAfVZ9ui8K
2oPFiVWW8kO0TKvftt6UOt08p6/MA3M0ZETDnBvO52LgiIbNew6+8N6HU4cz
PA4Q0bDaxu4EmpaaS0TDR4/vfHv7ioQvPb797fU/15+3310HL7z7/M9v/vjx
nXf371B4pyTcYPX5dixUIbhYMKJhF5vwqc9/dfWXr7/1qU+lIg6O/r7752at
589XP/fZRETDLhpiFf5Q/f+pIhoetr+fku9THe4OVNoOaVm+uUVc9G3Zppp7
RB7unl/p0/MWfh7pny1X0bZD014yVfpYirW1FPKpVHlst81YG2Fg/fAsW0Zb
AklalGi1vdwEtTf8Wg/76LvBLvCWJGxO5zKZreyPrn6cg1xHpaPDpefZeNMr
uLrjJxvrDl1I2S7r2Ok4Clw8uzQ5JTw7T3x/VJuD2C2zv5tm76unWrft5Ifd
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
GmlgvTqY2DTP9zgV9hmQLfzNiVauoWtoyMNuvcArQysH5bE5B1vT+fA4YnOB
cz14u12lu/16XEdFXwQLQ/imV5CnJSe7z5tKlu4X3y06t7Id699u6O1t/yp4
+Rxs7ei79Z+P95D8Y31LuZ7mhivkNOtmO6F6bPb5sqjmwMN+ImN9T9lj6HBz
6/sAbc7f4+01lPrqzOrWysQICzecSLZjNnUBDHe1jjIaNcRzJ7fJ1lIXvf8X
JVfL86jHhdBrRO/4wMNbSVYlw9lWvEbpzad0y/FjztehQ1tqmzaVWKLXE7N0
3lRpBfX1Q33R9EBn49zBoapk5YpLfm4Dg7WV2pYvnDhUVMDzxTP9zXNjfZcC
/e5CB3uKnV3TTTjcICpJom4dF63V/ngJD14yHfpASnsYIg+jyR6mRys1lKDZ
tJsaNqDjJa8wkYMJVtBC79FNWpYsahSj1SgeG9sOi+uz6sJ1lDpw19HRdgoK
XntYXK/iUXh2rp0hrp3oOXQKZxh4sw2dEi1rF8wtP01vf+xiOPhrZFQxmPpl
A83xO09hJ2TRCNcCROYwDJOqyS+79xwuoQ+55ERc1OdyURdVlooOuGy2RrHm
CZO1I6sd9bJOPDwTpaAwh/qshu2+6NAeLEmugmtkkJZp9tv0TakkSedcmQcm
N1xEw7wbzudilIiGxw/f+8KT9z4Mr/Dxh08SsQQlf9+EJOx9+b1vpFYd4JiX
G9Hw/GaHLx3EMrz5weM3P9pv7Z0PHt84XOCNdx/f+eh4p6HFgp/vfP2Lv/r5
T3+mGq3w2U9/7itf/U4q/OH9r7xVWfLTn/n8V79TD0P43hd3sQ+f+exb739v
H+ZQi2iovPrhs19M7XH8iIbN/SvTxK/c8tK2daqDAY7kgjepql54+SOBUcj8
HvJvB2tfOHO3b06czhab/unjfv7V64K2Q/ZAn4cEkvNuc1Jt0P0GN1uKtyOr
O2sa8xt8YH2/31wwZFMiNAwttSZamd0JBS+C4Q67vsv0si9v0qXoeKUhAhqa
Z5ZWiuNRi7b3dVT4RagwhG96RXkaP9nH5ltjopO1bblCHct2rH8sf3dq+qr0
8qmukujLSxaLfILtDqu2SP6bk66b6/bss9nSukDDMcRvbsM8QBvzt6lo1c4r
lQjZysTwC2dPJDPCnrqBD3W1jjgaNdBzJ737hMNSFy3oRclV+jyKXwi9RvQO
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
DuE/3kU4qw==
    "], {{0, 149.}, {2083., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{2083., 149.},
  PlotRange->{{0, 2083.}, {0, 149.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[59]=",
 CellID->110463983,ExpressionUUID->"5de2ead6-f08d-49c5-9c5f-3b48721c3393"]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "ae90732a-865c-4973-bc15-7e5819e6d5dd"],
 " to also include inherited styles at the target element:"
}], "MathCaption",
 CellID->102229160,ExpressionUUID->"7e86e011-1380-419a-9793-44eb9b5000b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSInheritance", "[", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     TagBox[
      TooltipBox[
       FrameBox[
        TemplateBox[{
          StyleBox["\"XML \"", 
           RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
          StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
         "RowDefault"],
        Background->RGBColor[1, 0.9, 1],
        BaseStyle->{FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
          FontColor -> GrayLevel[0.2]},
        FrameMargins->{{5, 5}, {2, 2}},
        FrameStyle->Directive[
          RGBColor[0.5, 0, 1], 
          AbsoluteThickness[1]],
        ImageMargins->2,
        RoundingRadius->4,
        StripOnInput->False],
       RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
      Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
     Editable->False,
     StripOnInput->False,
     ShowStringCharacters->False],
    CSSTools`CSSTarget[
     Association[
     "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
      "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
      "id", "CaseSensitive" -> 
      Association[
       "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
        False]]]], ",", "Cell", ",", "ds"}], "]"}]], "Input",
 CellLabel->"In[60]:=",
 CellID->19077661,ExpressionUUID->"1c4ed851-4a99-46f6-a910-fc1e4d39163c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontColor", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[
           Rational[223, 255], 
           Rational[227, 255], 
           Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{
            FractionBox["223", "255"], ",", 
            FractionBox["227", "255"], ",", 
            FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[
      Rational[223, 255], 
      Rational[227, 255], 
      Rational[2, 5]],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellLabel->"Out[60]=",
 CellID->131179283,ExpressionUUID->"9888140d-5ab6-4254-90b5-0a5126abab59"]
}, Open  ]],

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "8bb2e20f-fb09-4a6a-abeb-88ed5adc6945"],
 " would miss the inheritable properties:"
}], "MathCaption",
 CellID->709715062,ExpressionUUID->"c7a1271e-1829-420b-aa78-e9e6d731d27c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"All", ",", "Cell", ",", "ds", ",", "\"\<h1\>\""}], "]"}]], "Input",
 CellLabel->"In[61]:=",
 CellID->10879826,ExpressionUUID->"a71703c9-c7fa-4ed6-bedf-02c3b7c2cb94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FontSize", "\[Rule]", "32"}], ",", 
   RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]], "Output",
 CellLabel->"Out[61]=",
 CellID->128025874,ExpressionUUID->"f723a01c-c660-437c-8d42-6d737a4a31f0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making a Custom Stylesheet from CSS Data", "Section",
 CellID->78394971,ExpressionUUID->"38bebe8d-4785-40af-933b-257d3e857511"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "fcf58dc4-2a17-4bc6-a879-be69819a1d94"],
 " the computed style of XML elements can be calculated and stored as a WD ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleData"]], "paclet:ref/StyleData"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "7a51a362-4683-4264-b7da-5eb4a84a9eca"],
 " expression."
}], "Text",
 CellID->211922561,ExpressionUUID->"4ee8f495-e326-40b9-80f1-7c8a2cd4b193"],

Cell[TextData[{
 "Start with a helper function to create ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StyleData"]], "paclet:ref/StyleData"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "702f65f4-f21f-4648-b283-0a1bf2f5c060"],
 " cells of a particular type from the CSS example data:"
}], "MathCaption",
 CellID->594551925,ExpressionUUID->"c8a0c8a8-29e3-49ed-8a4b-5b34b16ca900"],

Cell[BoxData[
 RowBox[{
  RowBox[{"styleDataCell", "[", 
   RowBox[{"name_", ",", "type_", ",", "target_"}], "]"}], ":=", 
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"StyleData", "[", "name", "]"}], ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"CSSInheritance", "[", 
      RowBox[{"target", ",", "type", ",", "ds"}], "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[63]:=",
 CellID->156314717,ExpressionUUID->"d6dc3b7d-1570-403c-8679-156cddbd0cc2"],

Cell[TextData[{
 "Create a style data cell from options found at the Notebook level scope \
from the ",
 StyleBox["body", "InlineCode"],
 " element:"
}], "MathCaption",
 CellID->62013518,ExpressionUUID->"095658f7-8993-4f6d-adf6-fb325271dc3e"],

Cell[BoxData[
 RowBox[{"body", "=", 
  RowBox[{"styleDataCell", "[", 
   RowBox[{"\"\<Notebook\>\"", ",", "Notebook", ",", 
    InterpretationBox[
     StyleBox[
      TagBox[
       TooltipBox[
        FrameBox[
         TemplateBox[{
           StyleBox["\"XML \"", 
            RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
           StyleBox["\"body\"", Selectable -> True, StripOnInput -> False]},
          "RowDefault"],
         Background->RGBColor[1, 0.9, 1],
         BaseStyle->{FontFamily -> Dynamic[
             CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
           FontColor -> GrayLevel[0.2]},
         FrameMargins->{{5, 5}, {2, 2}},
         FrameStyle->Directive[
           RGBColor[0.5, 0, 1], 
           AbsoluteThickness[1]],
         ImageMargins->2,
         RoundingRadius->4,
         StripOnInput->False],
        RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "2"}], "}"}]],
       Annotation[#, {2, 3, 2}, "Tooltip"]& ],
      Editable->False,
      StripOnInput->False,
      ShowStringCharacters->False],
     CSSTools`CSSTarget[
      Association[
      "Type" -> "body", "Namespace" -> "http://www.w3.org/1999/xhtml", 
       "Position" -> {2, 3, 2}, "Attributes" -> Association[], "ID" -> "id", 
       "CaseSensitive" -> 
       Association[
        "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
         False]]]]}], "]"}]}]], "Input",
 CellLabel->"In[64]:=",
 CellID->400050939,ExpressionUUID->"4f79950d-3cc6-4ff0-92b9-aeff62f864c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cell", "[", 
   RowBox[{
    RowBox[{"StyleData", "[", "\"\<Notebook\>\"", "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 
            Rational[139, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.3633986928104575],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", 
             FractionBox["139", "255"]}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 
             Rational[139, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 
       Rational[139, 255]],
      Editable->False,
      Selectable->False]}], ",", 
    RowBox[{"BackgroundAppearance", "\[Rule]", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt2GdzVVUUgOGA44wf/Qn6yYq9ID30XgKht4SEiCVoggL23nvXX2su59zN
7LXOjj/AZ+adDDADJPeeu/daz4Oz16eurp2YmFi+b+XL1MzNyaWlmdvH71/5
zfTi8rWFxfm5fYs35hfml9bP3rPyhw+sfLl178TE6NdrHtow0MMbU5uqHilt
Hu7RLXVbY4+Vtg33+GTd9ti6rh3NnthZtyv2ZNfu4Z7ak9pb9XRp33DP7E8d
qHq2dHC45w7VHY49Xzoy3AtHU8eqXixNDbf+eN2J2Eul6eE2nKw7FdvYdXq4
TWdSZ2Obu86lzo/akrtQtbV0se5S37bc5arJ0kzdbN/20JXYjtJc3XzfztDV
2K7SQt3LfbtD12J7ul7pWnu3V/v2hl6r2ld6PbU4an/uetWB0hupN0cdzC1V
HSot193oO5x7q+pI6e26m31HQ7dix7pup97pmwq9Gzv+XqP3+06EPqia/rDd
R30nQx9Xnfqk0ad9p3OfVZ35vN0Xo87mvqw691Wjr/vOh76JXfi20Xd9F0Pf
xy790OjHvsuhn2IzPzf6ZdRs7teqK7+1+33UXO6Pqvk/G/3VdzX0d2zhn/8o
/5Xwb5b/q/XNhO85/1DdD7vKqxFet/zCdi946+3Ib1x4Z8s73nok8sMTnq7y
1LUey/wAhye8PPmtj0b4BOWPWPfRW+WzGT7F+WNeToDWERFOknDOlPNnlTMq
nGbhrCtnYOuQzMdpOG/LOTxwRN85uvORHs78chfEO2J8d4Q7JV865T6K99T4
/gr3Wr74ugtx4KIc36Hhbs2Xb3cpD1zW43s83O/h9i9TwXhOWHO3O4NEHjDC
BFImkzixjCeZPOSEKahMR3FqGk9TedAKk1iZ0OLkNp7owqSXR8EyJcbpcTxV
hmkzj6PdmDowvt4Za/O4m0fi1vDcjdZ55A4zeWt0L7N9HvvDXtBaH8p+EfaO
vJi0Vpiy4+T1J+xHrTWq7Flh/8oLWmuVK7te2AHzkthaJ7tlMy+hYUtdZZ/t
Ft68CIdNubVQl407L+NhW28t9WXrDxqQuWBQFTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn
4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNw
Bs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgD
Z+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEz
cAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4
A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyB
M3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZ
OANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4Ayc
gTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7A
GTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AM
nIEzcAbOwBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbO
wBk4A2fgDJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fg
DJyBM3AGzsAZOANn4AycgTNwBs7AGTgDZ+AMnIEzcAbOwBk4A2fgDJyBM3AG
zsAZOANn4AycgTNwhv+rM/wL3KL6dw==
        "], {{0, 800.}, {1400., 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
        Association[
         "XMP" -> Association[
           "DublinCoreSchema" -> Association["Format" -> "image/png"], 
            "BasicSchema" -> 
            Association[
             "CreateDate" -> 
              DateObject[{2011, 9, 23, 20, 14, 5.}, "Instant", 
                "Gregorian", -7.], "CreatorTool" -> 
              "Adobe Fireworks CS5 11.0.0.484 Windows", "ModifyDate" -> 
              DateObject[{2011, 9, 23, 20, 14, 24.}, "Instant", 
                "Gregorian", -7.]]], "Comments" -> 
          Association[
           "Creation Time" -> 
            DateObject[{2020, 3, 11, 10, 3, 6.0818169`8.536608313871445}, 
              "Instant", "Gregorian", -7.], "Software" -> 
            "Adobe Fireworks CS5"]]],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{1400., 800.},
      PlotRange->{{0, 1400.}, {0, 800.}}]}], ",", 
    RowBox[{"FontColor", "\[Rule]", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[
            Rational[223, 255], 
            Rational[227, 255], 
            Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5830065359477125, 0.5934640522875817, 0.26666666666666666`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{
             FractionBox["223", "255"], ",", 
             FractionBox["227", "255"], ",", 
             FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
             Rational[223, 255], 
             Rational[227, 255], 
             Rational[2, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[
       Rational[223, 255], 
       Rational[227, 255], 
       Rational[2, 5]],
      Editable->False,
      Selectable->False]}]}], "]"}], " "}]], "Input",
 CellLabel->"Out[64]=",
 CellID->142448669,ExpressionUUID->"a621a1a3-6c56-4add-a52f-f6fa9611ffa1"],

Cell["A sequence of style data cells at the Cell level.", "MathCaption",
 CellID->343002500,ExpressionUUID->"6daada7c-ccc8-49de-b204-140509ac0462"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h3", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<question\>\"", ",", "Cell", ",", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h3\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "6"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 6}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "h3", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 6}, "Attributes" -> Association[], "ID" -> 
        "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h1", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<h1\>\"", ",", "Cell", ",", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "2"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 2}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "h1", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 2}, "Attributes" -> Association[], "ID" -> 
        "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"li", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<li\>\"", ",", "Cell", ",", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"li\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "20", ",", "3", 
             ",", "1"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 20, 3, 1}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "li", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 20, 3, 1}, "Attributes" -> Association[], 
        "ID" -> "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<p\>\"", ",", "Cell", ",", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"p\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "8"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 8}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "p", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 8}, "Attributes" -> Association[], "ID" -> 
        "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", "=", 
   RowBox[{"styleDataCell", "[", 
    RowBox[{"\"\<h2\>\"", ",", "Cell", ",", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h2\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "4"}], "}"}]],
        Annotation[#, {2, 3, 2, 3, 4}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "h2", "Namespace" -> "http://www.w3.org/1999/xhtml", 
        "Position" -> {2, 3, 2, 3, 4}, "Attributes" -> 
        Association[
         "style" -> Association["Namespace" -> None, "Value" -> "color:red"]],
         "ID" -> "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[67]:=",
 CellID->42427840,ExpressionUUID->"acedad05-b568-42a6-84d5-18846f8637f8"],

Cell[TextData[{
 "A special case: the source XML contains an element ",
 StyleBox["h3", "InlineCode"],
 " with an inline style, but is otherwise identical to other ",
 StyleBox["h3", "InlineCode"],
 " elements. Since we already created a ",
 StyleBox["StyleData[\"question\"]", "InlineCode"],
 " cell with these properties, we exclude the duplicates."
}], "MathCaption",
 CellID->96674661,ExpressionUUID->"5842295b-9e8f-4f5b-b946-28773e5e3d10"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h3special", "=", " ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"StyleData", "[", 
      RowBox[{"\"\<questionSpecial\>\"", ",", " ", 
       RowBox[{"StyleDefinitions", "\[Rule]", 
        RowBox[{"StyleData", "[", "\"\<question\>\"", "]"}]}]}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"CSSInheritance", "[", 
         RowBox[{
          InterpretationBox[
           StyleBox[
            TagBox[
             TooltipBox[
              FrameBox[
               TemplateBox[{
                 StyleBox["\"XML \"", 
                  RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                  False], 
                 StyleBox[
                 "\"h3\"", Selectable -> True, StripOnInput -> False]},
                "RowDefault"],
               Background->RGBColor[1, 0.9, 1],
               BaseStyle->{FontFamily -> Dynamic[
                   CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                 Bold, FontColor -> GrayLevel[0.2]},
               FrameMargins->{{5, 5}, {2, 2}},
               FrameStyle->Directive[
                 RGBColor[0.5, 0, 1], 
                 AbsoluteThickness[1]],
               ImageMargins->2,
               RoundingRadius->4,
               StripOnInput->False],
              RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "14"}], "}"}]],
             Annotation[#, {2, 3, 2, 3, 14}, "Tooltip"]& ],
            Editable->False,
            StripOnInput->False,
            ShowStringCharacters->False],
           CSSTools`CSSTarget[
            Association[
            "Type" -> "h3", "Namespace" -> "http://www.w3.org/1999/xhtml", 
             "Position" -> {2, 3, 2, 3, 14}, "Attributes" -> 
             Association[
              "style" -> Association[
                "Namespace" -> None, "Value" -> "color:lightgreen"]], "ID" -> 
             "id", "CaseSensitive" -> 
             Association[
              "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
               False]]]], ",", "Cell", ",", "ds"}], "]"}], ",", 
        RowBox[{"CSSInheritance", "[", 
         RowBox[{
          InterpretationBox[
           StyleBox[
            TagBox[
             TooltipBox[
              FrameBox[
               TemplateBox[{
                 StyleBox["\"XML \"", 
                  RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> 
                  False], 
                 StyleBox[
                 "\"h3\"", Selectable -> True, StripOnInput -> False]},
                "RowDefault"],
               Background->RGBColor[1, 0.9, 1],
               BaseStyle->{FontFamily -> Dynamic[
                   CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                 Bold, FontColor -> GrayLevel[0.2]},
               FrameMargins->{{5, 5}, {2, 2}},
               FrameStyle->Directive[
                 RGBColor[0.5, 0, 1], 
                 AbsoluteThickness[1]],
               ImageMargins->2,
               RoundingRadius->4,
               StripOnInput->False],
              RowBox[{"{", 
                RowBox[{"2", ",", "3", ",", "2", ",", "3", ",", "6"}], "}"}]],
             Annotation[#, {2, 3, 2, 3, 6}, "Tooltip"]& ],
            Editable->False,
            StripOnInput->False,
            ShowStringCharacters->False],
           CSSTools`CSSTarget[
            Association[
            "Type" -> "h3", "Namespace" -> "http://www.w3.org/1999/xhtml", 
             "Position" -> {2, 3, 2, 3, 6}, "Attributes" -> Association[], 
             "ID" -> "id", "CaseSensitive" -> 
             Association[
              "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
               False]]]], ",", "Cell", ",", "ds"}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->351504644,ExpressionUUID->"f3ee26c2-98be-41fb-8fbe-bb82146c4c0c"],

Cell["Create the custom stylesheet to use later.", "MathCaption",
 CellID->777100582,ExpressionUUID->"cbcd88f9-48b7-434c-83fc-3782de3de931"],

Cell[BoxData[
 RowBox[{
  RowBox[{"customStylesheet", "=", 
   RowBox[{"NotebookPut", "@", 
    RowBox[{"Notebook", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cell", "[", 
         RowBox[{"StyleData", "[", 
          RowBox[{"StyleDefinitions", "\[Rule]", "\"\<Default.nb\>\""}], 
          "]"}], "]"}], ",", "body", ",", "h1", ",", "h2", ",", "h3", ",", 
        "h3special", ",", "p", ",", "li"}], "}"}], ",", 
      RowBox[{
      "StyleDefinitions", "\[Rule]", 
       "\"\<PrivateStylesheetFormatting.nb\>\""}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellLabel->"In[53]:=",
 CellID->22162130,ExpressionUUID->"863f0f60-0722-484d-bc78-a3c007980d31"],

Cell[BoxData[
 RowBox[{"NotebookSave", "[", 
  RowBox[{"customStylesheet", ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"cssExamplesDirectory", ",", "\"\<CustomStylesheet.nb\>\""}], 
     "}"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[54]:=",
 CellID->772499,ExpressionUUID->"ce3b944f-1159-4ddd-8941-5fedc6821560"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using a Custom Stylesheet on a Notebook", "Section",
 CellID->534745247,ExpressionUUID->"97d1cac3-18ff-46aa-a701-22b76521fa5e"],

Cell[TextData[{
 "Style transfer is not the same as content transfer. Any extracted CSS \
styles can be placed in ",
 ButtonBox["StyleData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StyleData"],
 " cells within a WD stylesheet, but cell content needs to be created by the \
user that takes advantage of these new named styles."
}], "Text",
 CellID->194845850,ExpressionUUID->"11b1eebd-be77-4d11-a5a4-9f2e6a778f07"],

Cell["\<\
A prepared example notebook exists in the CSS examples directory. It uses the \
styles extracted from the XML document earlier in this tutorial.\
\>", "Text",
 CellID->770920200,ExpressionUUID->"0907bab5-2b59-4a20-90ac-3e811a6b7210"],

Cell["\<\
Load the example notebook and apply the styles extracted above.\
\>", "MathCaption",
 CellID->608959116,ExpressionUUID->"9229b8d9-e8e0-4d69-82ec-012d529a501f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nb", "=", 
   RowBox[{"NotebookOpen", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"cssExamplesDirectory", ",", "\"\<BareNotebook.nb\>\""}], "}"}],
      "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[55]:=",
 CellID->412792471,ExpressionUUID->"ded31762-7984-4202-aeb7-6d599767c4c0"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{"nb", ",", 
   RowBox[{"StyleDefinitions", "->", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"cssExamplesDirectory", ",", "\"\<CustomStylesheet.nb\>\""}], 
      "}"}], "]"}]}]}], "]"}]], "Input",
 CellLabel->"In[56]:=",
 CellID->683559455,ExpressionUUID->"ea4c2308-36e9-4ed1-9d6d-6eb43b20f994"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQl0nEWW5xuu7D49h3Mex5x+MwVTrtdVDGAaGwqlSBXIW8mWLHlTyauc
sq1MeUlbi+V9wUta3tLGu7ExeJHTGwVOwIAXgcFQCVRhQ5FzikVQ4O7hzWN6
pru6JruqX8155/Wrbl7c2L6Ib0llanPauvdcTGTkt+WXy0//Gzfi/nD2okmR
7xBClv07+s+kulUlS5fWPT65P30wtXlZ/fzmeXPHNC+fN3/e0kdn+2jn7XTb
QvoftBejoaGhoaHlmX2LhoaGhoaWH4ZgQkNDQ0PLK0MwoaGhoaHllSGY0NDQ
0NDyyhBMaGhoaGh5ZQgmNDQ0NLS8ssxg+ts7SE7em1eOhoaGhnZLWifA9Hfj
R1BHMKGhoaGh9YRlCab/8u//7B/mBum/f/u/+/7fzz6mThv/5T/8uehEMKGh
oaGhdZNlr5j+7X/98f/77//tj6++wJ+iDfqQdqJiQkNDQ+tlIxmtl6/ko48+
cvbTzk5fSfZg+pe/+fL/+fD9P/327/lTf/off0cf0s6MYGqLaPcq0ta5a2QH
MXamPcX7rnf6aJ3etxO7d7j99X2RbI9Hj6XdBvPI5nOe18DfkK7cAJeDu7y1
1/cVZ3eaLr4d2RlcTWfPAq/PfHnOHnmOrn3O0dBysAy/+b0MJgqgP/+Lf2dj
k2tn9tYhmP7rA9/7bX3tH1oP/es//+F/blyd3rXlt43hf2gIpXduTm9dRzvp
U3SD/zpogAeY5A8CfHE795WFgxQXe/8mZzhpzs9mdTHdBSZ2S/btA8/uoDp9
zJ9++sj7COoa3H9Su2b83bGdPDP/9HvSc2Dq+pHZLY5E7Dfd6LFO19amNkE0
ofW45Q+YvnVgqItU+jYbMD34f1BxxB+mt2/4/TP7KZL+6YmNfzhxOL1jE++n
G9DNOgBT538o2I5t+i/vLQIm8Xz2sNDwQ5sUaMWRNvsTma6hJygAx4xEzNMD
QCPe57pZwKSOY3t/MqnTjp5FQ+seyyswfavBqOtU+ja7UN43w35ElRF9+Pfh
KentLfDEv/7rPz254x/mBKH5z3+gG3iH8rQgkvy+WgE+0SN+3MRje1BEHMQ8
li7E9K214CHf2/VobaLT+uWyH8er01AfLgHGfeL8xqU6T6d2ga7rCjAdmQIQ
b6h7qt1cz2u27gw7hHHPXd8Rddm0Tx3V5SUQ/Ur0axPbmge3vUEdvh0u75rr
9XR8luueh3a88bYXmAuYkEtovWIkz8D0rWRT16n0bS5g+v0z+/746gt/Xzft
T7/9hz/99u//vq76jy+f/cORAx2BiXh/7Y0feRfo8J9tlz/43WJT1jiCxx/k
1tHkyYxdXI/jdXDXeI2GKmtX19N13uTPnnox8jVZQMlwQ2x3xosy5mVrTbdY
oPVng6nenILF8zIc9zvju5bd9Xh8DDK8B14KK1swCeAhlW51IxmtNy+jE0/1
qPUmmHgo79/+5V9+t3bp71Y2/fPJI79bu+R365f/4ejB361o/N26ZfSprEJ5
+k+C7Y93DwXk8ueu+EmQPSYfrB/tLI+mdnE9jvfBi91/3Fx/Cd1O16FlGEjn
h5AH4hCwAnkd3BDvGFqGd6SDyJv2XhiQNN+1nA7ewbvm+YdHx2fx/oNC29H1
jmfusR2th4KTaGiW5RuYejmUpyc/0J7/+4Vnf3/4yd8f2vPHC+e+ZXG8bJMf
1I+C9eOgflBtKPH6G1g9nROYOjxarmCyp2K4HdmVBd0xLs7uWZs+uARDTe6v
N1swZX5HsgSTujJLzNjeo6wP3sG7lnmXjGdxHtllR5vlCCYM5qH1iuUVmHo/
+UFPF+edv1uz5H9GV/B2FuniDsXkElbJHGIyfwzFn9Ou0TZHIMj9aLLH2MX1
OJ4HN/9Sz/B763q6rhh//WYozDps5hvirTU6eEeyAZMZZFP9nTl45s+AWzvb
szhCeR0H+TKDSV1Am70HDa0nLX/AdEPSxZ0TbP/19/9EhVJ2E2ytKImZ2sw7
VDKXK3rcg2/yeWewzoiYWb/Wbkdjg/5mpMztOG6dxg+ZyShPxeRyui6Y7Re0
zTbMkumavX7eM78jWYPJyOIwb5RxcP0NyiDicgrl5XQW7cBuO5qWHZhck2fQ
0HrMSEbr5Su5URNsxZJE/+HPjSWJ1DpFuPIDGhoaGlo3GS7iioaGhoaWV4Zl
L9DQ0NDQ8sqwUCAaGhoaWl4ZggkNDQ0NLa8MwYSGhoaGlleGYEJDQ0NDyytD
MKGhoaGh5ZUhmNDQ0NDQ8soQTGhoaGhoeWUIJjQ0NDS0vDIEExoaGhpaXhmC
CQ0NDQ0trwzBhIaGhoaWV4ZgQkNDQ0PLK0MwoaGhoaHllWUEk17mjzy29/q3
1/c+xv7PnuKNrphxfEd5NXkK66SdPsuNLd3muI15Z3CLO7o+9Y539q3XTtKF
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
B9tc8VAeHV9qfjcAJlX58DmJJomeUChPG9o6obwJNfGoUJ5XO0nnmG6UDibR
fzP8CBDNM5UPSjSJugslh/IKg0mZBirRFFvxRYmhPGVW64bypnhlkWAiZ0BV
CDE7NuWw55nKByWawNk2GMoDGDkOtphjWl0WBSZMNsm/KDuLhPK8+nk6x9Qa
CSYiUXbvW6GqPF35oERTbPWl4qE8gBFSyYbyZqbLwoppn3+9qSxYlacrH5Ro
iq39uuRQHimmgz6F7+6OqjxjVqvrHNwds2/ieDmbaVJsonEFwno2iGf3TZqJ
Hl4LhUn1uOYNca1sx4dcZf25BeJ4ORXKk1OV1V3ZEbeiqdkbRlQyhrbgYOtW
5VFeKZB4wlCe6FOJru674lFgckr4cmih7trXtngjjFMt1j88GnS2DYimU96r
EeXiNohnxrctWXPPMJtwZOpDisnG8eDZ1QGnWjVCbrZ2nQ0bwkr6rA1/pKvX
s/bZiHNMUCORM1V5b+mXR1Tl0QFbdZTJDFJJCCZv21zn7K2K40kwedvnOfuK
SrSD+aZAS6J443f2Sl0rbkrmso2+T0/1S7p+tXlpJnrqe3PG1q3KyzU3kGjS
d/gwboJ4Zlz73L8W2rrh1YaMa50Dtta4NmIo0QTjQjJYlZc7sdlVTMpjPTB+
8FJbwh8v7FobqMrLndhKpurq2cnqdK1+iHUOOQrcbQvfueWib66csl0/S/UP
jfbilsNleVV5uVONeYqpMe/+XzoWtAETW0wz0TWteWdsnTheToXy5KygmiB0
V6dycSp7UJkm80YzAlV5udN7Is8xqbtBVd7e8Me+/qMtV5hpQ3nu8Ne6bMJx
Zj9VhkN1BNzkaz/4Eix+OOibddWG8D3XdV8wdc9eeVIxeZhgIsXk1uCV3vlB
lT104155quyhe59jukt75YmnJLPmc6887pXXVb3yTNnDbeiVJxWTt3+9OccE
QTxMM3WmV55UTB4mmGhCWO/sIQZTu8CkSsQ1mOIbr4UUU0lggkYQ3bqJK5Q9
LOjuB2zvRjDFt3+n1RODicHURWDSZQ+3AUyqRFyDqWz/j6SYOgMmLBE/aMBU
duD/sWLqgGJy1W524/h29cqDsgc5sFy8e4IJyh5yTliPwcTdxRlM3RVMWDuR
o3Lx2wMmOsdk/wHE8rzOK6bAPUk9MZjY9uLubEnEYGIw9XAwse0Fg4nBxGBi
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
77hRAEwXksVyTA6Yll/IWTBBTO9WguliRTDHVBqYvqwI5pjywCR51Fkw0UMY
RcFk2aTxFAKTEU1YERHIMSGYvqoommOKQRBPCqXFsTXHvZlKNJXt/9qbVdNF
YFLrew9MSjRdbvIvQ3YJwASKSXLHgglSSyWAycVTdsM4Hb7LB5MK5UWCSfx+
AuaAmpMFFJPF03DAU3bTpBCYlGiCfBNkmvLApKsgbg2YaBKesu9NI8VEobxo
ML2m43saTHLdJph0Ful0sqygYpITonyZ/V5mf/zxoWq9ZS3VPJBiolBeJJhI
McFalz0QnrJbq4soJhW+K6H4ISn/96fpkNd0KG7W29NU80BZJH+JBROkltoE
U9uK6VaBiRSTXOvwXQfBhOG788koxaTDd22BCRRTzl9uwSTXXQUmjOAFFBOF
8toJJhXKu0VgojoHSAwNalsxmeIHwlN271shMCnRBPmmSxXl+WBSobwixQ8V
Z6RQOu6dOV6m1k3e/n265oHBVAxMJJogqaQeYuXDle1xCSaAlM0xSekkwYSJ
p4hQnlfdT+eYrgGYVOUDiaZnxJxmCOWpyofmJIJJoicUygMYwbNOKG/YxHgw
lOfN7a9zTC2RYKKd7KZUqCpPVz6gaHp4gJh/ouRQXjSYspunSDDFN8PfBArl
eRpPchPApCofSDSBPgqH8qjy4du9cQWpU8l4CWCSMEIq2VDeqBkRogkuk3CB
7BKVPQCJCEyq8uFMkg4xLToTDuXB9ZhsGn3AWzxC55iuFwSTqnxQoknUnC0S
ygPRVAOlDirThGUPSCIEE1U+QBUElTrYHJOUThJMmHgKhvLo+FLz+jsDJsgx
SaFkKh+UaJL7bYXygmDqDwtd8wBI8uoqdeXDhSTySNRdKBbKo8oHqIKYGgNI
BXJMHQCTKoSAHJPUR+EcU06LptjKiyWF8lTlgxJNMe/LqFBe58AkYQRUckJ5
09eWFQ7lefULdI6pNRJMRKLsvrdDVXm68kGKJoBRbM1X+aE8EE1rvoLfVco0
YdmDv6amZ4IpdMBWDN6WdR5GloubsgfFJsQQDorpPW14BKHUBqq0aU7m55ic
UF6oKg83w1V5sFkoiGeGEk15cTwdypNT1eld2RnvY0QTlD2oTJN6uxZveKAq
L3d0hauY6HRtcLR4I1b6dh0oFycewReymSp2TiVfdTJKGMoLVeXljtVHVeXV
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
K5voSQ==
    "], {{0, 526}, {563, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{563, 526},
  PlotRange->{{0, 563}, {0, 526}}]], "Input",
 Evaluatable->False,
 CellLabel->"In[57]:=",
 CellID->183104000,ExpressionUUID->"b76bd188-4d53-4bbd-b41f-e381dbff5ae9"],

Cell["\<\
Compare the above to a web browser's rendering of the source HTML document \
and CSS information. Most differences are because the web browser's default \
styles (which were not imported) differ from WD's default styles.\
\>", "Text",
 CellID->135774005,ExpressionUUID->"c1d1d519-220a-4130-87c2-40786f8703db"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
VfHlkBkhdWNiTjyirxJVY3a8+z29bsm9dBfFjN9LliVHBW2MWlmS3E3FmWxT
GofGxDA9bIqxf+OkRrGK94Yez2Rde8gtB+MCVjcmKYVnctBYmmQJNSboP4n1
Q8JGBLnvpU9k5pokkW8akyjamyXgJzavKAe7M7aELQ+N2Zp1mbSSHd+kB0Fj
nKtB1Jg1ZsXc5+6rxoRZlN7H4zOlPIJVuVelYIOw5Thf3ZgiJfXtODVGVKbk
gfpHKskboTHigxrPY9P+eELlXnGFdp4dHmklXBqT58U7k9Oahjzvsr0pv3k/
xly5DDWmSNZDvSAf6s9zbZMHvQXb0ovtD37/mzzq3ejzPHn84mlM2Ybz3INb
5mr5EjRGbGacMq9t3lPOUz3mcaGEqDGyoi7HA9QdLazSviyNCf+FVXb4eYE8
iVXFt7iIdWhrLKfYI2QWuW7My0KGt25MdQn1fOLUGPGeEh61Gy+ReGlMmtH8
2P2zyDfXkIr3HiwhX+LaimXp3HVj6owPqOsz/tRVIkMzeKdCWrFHnLxvRZnR
TB9OYxuq/OiHYtfoBZu1yPR1XWhmfXDm3vjLdIN6Yohe1hpTd5p1Me8ZYumY
2VExLaWeb1zdc7nBq4qv+HiF52en7u+qF5NARnbH8+i+V0sq3nso/Frh3JE1
cG3/otSN+cngto8ZGG+K8aria6LLjNC6MWtby1m7ULGpllWzV93A0kV1//WD
1BEyjoIwB05T7yyY/vE8x/+Y1LedP7g63/7gE6EH6tupQ2Xy2386Do2Bxrza
Kr58RVpyLAe2itw7KP17B32Mh9LmuAZWjl2PWvdv9zIyW5lu0m21I7JThXSN
kcVzjzYcH4gL2+jRU0lUKKV56XhHlIhDYzbtMP/Bvr3NqI8l9VQyJrNHJoz/
FhvKqTFhbbShPtlm+faws7zDkOSt1YHVmB3GPtrTuTQm6EA653qqxnuk6z6e
r+UbeiCdNpBjoC2OpjEbfyBvkNHLCYRWStuTOtkPnpKZdQHSGFMGz6fTmyJa
Uo2JD9KmCx0b5nmQjg1kZCT7oDFBm5O0PX4UKXIUrmk7kRbyyjVmXw5h9/tT
FuWiGGgMSWO2/Khwnyjqk8asOa5gX8Nbf1MQWynVs+8pppRHijg1JlJJ5DXn
YagMSlNa+OaeTP6uevdN0BityfsaQGNMIbdSWtusmTkKODUm/LJ3/RnrzTwx
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
p6y2/miwqmlbW6XjK+B5OVPInq90LPx6kffnMm2o0LM0Rr+XVZZKPdbfsIpI
MfwaY19K0cmm4wSNqdtDmpCbb/nZzKIYaAw0RpDGbGxO5b5qmpzKMOd+xqMx
70eepeO8rTcqlKAxW40si5jPXwnJ/2ZrzJfxlmz6qmaYpL5rzKMUyx9K2x/S
5HBPjQmPIbS8mco0K7e5UQxZY+xZ05jsfXPtYBwPjVnTmOLlvTZrChPxFTfF
BP1P9ClSMb2ZjCaGfeiPxgS9H31khGtKxWxyLaad3nVjUhM5CgVYr+0SkTVm
p/wa/ebOlib/2FtjRHVpHD95dJ6MIfZRMpLGOfNmYiJ3xJrTczujpS1ZxsSF
LLLG2CNKTG4ZVZB/lHmcWVOSIOLTmJD0ZNPtnJlehxMyc41UJKjDNTvKwd/S
tkbSNebzJM01uduqKoeupbpRjECNcb61JzLzvuQQOsWEFGd2u1PMRE49m2L8
15jUBVbunUv7oTSSxvDMVOr4JlOQxkRmfcupOpNTCnPxImtMeM6pv3g2wnhv
7pqAakxQhPwIa+hmn0UhcqeYCIWZ9StV7wWFaIZiqBoTeprro7n8zavRmKCd
Gk03dYRM76/qdVF0jYnTGG47GMT2p1ojn6MYnzTGtRTd+ihvjZHd8Pipt/9y
nphCMY5E5jG9PCBD2H/u5X0UE9CeSkwe1ygd1xu5UiDm0ZhCEwfYjjKbWBqz
qZ06lsZ+d3y6fuk1xqOWr+2+fhWVYrg0Jjix+OwcdFgLo+P81pjK4KSypjGv
wQPq/l/KxO4ak2QwP/J+TO8Vg9ibYjw0RtzIBpz5DF8rp2pMSQnHlcxv54zc
GrPqZ3onnZeaKz9W+1g3Zvcerkods5nWXTm7W5xUJ7vNOQbMEa3l+1pvjcmo
OkuVK5VtqHIVQWPqjA/oK/a0NCWTrTH7ErppvbTsKTRVBE5jsutOUmFq9n09
LTE17QuVzQyGCS2uj/ymsvlBgZV9rpjW9t81xs4NifFJYzIOrm0pG+M7/3jH
VmKsJlaVqfX4LXJS3/y1SeylMfI9Hn1dp/XmxsNkisk6sradXI/FmXxHHRiC
xhwNPlZF6a3mzHODoaKJrTHBMlMTR5vs+eRZWo9QCsgcYQa8B9SN369f66Ex
Tcx9r91MPXbP/hgKxQiYqXTlfpFtuuj018c8NcZMUil1/2+HxQSKgcZAY7g1
5rPVaWE1nZmcfepn8yKz7UT4p9s+J2jM+1++o4pqG+O+o1H0XtkRse2LOYoJ
2RZuuJ7Ffak2PhCfr9oaMksxIdu2519N515b26OkGn346v/4WDcmPKr1kXLy
RVbb1zs++GJb0IZtK+Wx7Y9YF+ovMppLwxxQI0BjHCBTKu194bl61tQaTXiI
/V8/2R7RlDLkyTXj96TJEa4xMzSHCV+dFW2/3ebZbveS8nWRKzlMhqwx24Mi
d1nYQ4I9ouw7FyNyr+L72c5Pa5K6rNyMI+++GB8Ru9PNZHasjIszXJdxf5rj
95JlOdEhLor5OHqrKdVre7I+IFnbsV3vhEV7aswu9p2aH7FZs8y7d4kWU2Nc
WVedeukheXtOWGVt51NlBdINMfFzGhMSK91QmFxzPrNnfFZypuRd51Peo8xO
ImjMi5zmvUkhHyeIIpOkp7L6n80ufUrR35dh2puyITFRNIMwie+oUsrOZ88/
xvH03BZTksiDYmgaoxy7k7F1h/0vSav1ac398on5t5bT1p4hVaesDptFmF0p
EfWZLUNy951k7F7mzjASxfirMWHtcl9vGCnJrU8na8wCq/iuzsqSfp3TRW+1
OZ8pxdWLsoj0LFGgNUa0SxZxNPcq3yXuzGE7IjcYclZuD5DGOEHG2Oc9Zan3
F8UH8Q6KWalRmIe8toOy/Wu5G8UQNEaUoIgwKzlagjpfR9Xeovw0bck1xpkP
v1UPUlbP9kx16ZJGqteujJpBmJAM7ad7NOa7atfdxOBNzYdR7hTjs8Y4lvK3
uqVV92GKs2JMis6FPPNH4m3tWg6KcWiMA2RSOjSCLjCceXAjb31MwDpcr8hm
pGd0tG3oGfXgrXxpaeEKksasLi0wD7EL5niueW9BpLJI7KKYJL20PY/7Fsz2
t87cVLQ6eUk1xq2Wr/qsmYNiODUmrlx+e+auqvdiWfBCNMYBMgbjPa3ntlX3
Xiv9UObQmNCSUvOwpzBM69q/LydRzKzGZFRGflfU/Q/nxz2tvfarYYva6O4w
4twq+xOvPeW8YbQvva18i2Y322HEcmPkqSKe88l0Xntb5RZNjXCQER8o5mAl
x470VF+7e7aib00pZ7EUde8vu8UeDlP3TkNF25/chqPpvVkVqds7pzEr8qoN
fYRZZu4Z/6OMadizYpZiVuTVMLcKeC7drSW1R+pW5y5MY+T7tjRVtVuF3PXz
ZVr7YLTMfKbufYVLbA74pzEOkDFX8OwYHtuhXFNGK/BbyxoZrh57WFF7bH+o
3FExJnR/jcd7n85v/+kA0WHE+Y3Si4YH3OeoiRJzc+NqjafGKA7HX9fzXDJN
Frad279a66Uxx4KL93LOp3O8nf7rJjFXRd8jKT3FnjuSeuzBnsjSY8G5x1eU
HjDc85piltd9vZGLYgTVjTkmv1toe6kd7N8r3WMWy0+K9YcM9wpZG0Hbe/PA
WjLFQGOgMUSN4akSIySOSjIzGhPm06sNnAnjmaDEzuguyX99wVFhhpRkxtcq
vhu3F3dl0b8vlGN9CRnR22aGzQjTGEc2RxquZVn5qoParBktTTtC5tteEylm
p4/zKbLNch815v3torhdLQ8psDaV2/VDTIh7TyVFEue3P3tTJ0mcGiM5xzHA
ibXPnIvjLN7LjveUJXqFYV+jHOpKXLPIGuPKSl2yuTv7wTMho5XmM2GVtXyX
JMRh3DQm5wTjWSjmc+nWQxmXxsijdDzyQt55OW3LNi+HoWqMtTd9jeffQzJT
azpzRriRzRnrmKzGkCoiOozfGpOeRZ3m72ueyOK3UDTms/R1x3MJs625Olxz
FewVeuBczF6oxvB0UBISBbNwjXFmXb2iUwBJDd5RZMjcHYakMcd9O6wme1+B
xjimI8Vp8n9Vjwi+kp+cVj24p8nXz3e4Fq4xCZ2Oy/iun3TiqLxtJ7Rcm3pS
3XZKtyLCu7E1SWMcWW/ifDVnJp5ozCZXJZmFagxPlRgheZwvmdUYnllOnrF8
y1m8lxDilKXF05iy6C7niB1rQTQXxfBoTPDeQicR5JmKyheqMc6sP6Lv/Jv3
Dlo9OFCUkU90mFmNOcUxNIWU/jInxZT5cbK1nHbTmNOFPi63XDjIrP+xiCx7
07prHZXr091r+daG/8KQL2Kn89p/rBZ7zFSqNgvTdVcctXmTOScosTNukKTU
c1SYIaWY8UNjeGr2Corted7I07w7D8pauoyyxvrZYTNz8V9j7BGX1pl/z+dx
6cn8zq49pEoyc9nnKKD0vKS2+pA4r4HpLuH4apj4y2DYe8j3CUrsuE1ZavDx
iV4aIzsmrtjX8hfl/Dydf+1X0wq+/kr2rKjf2/anju/qVD32yGhoOOYcMLNA
jbE/4MRH56o4YN82YTA3H6OMioHGQGOEV/F1zxaucFbxFRSvKr7eIRWK8cq7
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
HlVi2IHGvMka4xHBPZWgMdAYaAw0BhoDjYHGQGOgMdAYaMxrrzHzdWP8CDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
GgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQGGgONgcZAY6Ax0BhoDDQG
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
DBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqD
xqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAx
aAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwa
g8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8ag
MWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgM
GoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPG
oDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFo
DBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqD
xqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAx
aAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwa
g8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8ag
MWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgM
GoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPG
oDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFo
DBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqD
xqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAx
aAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwa
g8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8ag
MWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgM
GoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPG
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
MWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgM
GoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPG
oDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFo
DBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqD
xqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAx
aAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwa
g8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8ag
MWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgM
GoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPG
oDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFo
DBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqD
xqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAx
aAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwa
g8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8ag
MWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgM
GoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPG
oDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFo
DBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqD
xqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAx
aAwag8agMWgMGoPGoDFoDBqDxqAxaAwag8agMWgMGoPGoDFoDBqDxqAxaAwa
g8agMWgMGlN1ho7clllcVlGan7b66WF1VmPier+0ZUd6TuHtCunndvHl9OMf
vDxf/9BrTMtp731wJDO7tCLjh9fQmDqvMYFfiE45unoVui6fa2hMv3O6euU6
p9s6j3g05t5pzPPCL0nXokSny647GvOcCDom3G7onCp0fdAYNOa315iYROFc
rtOV67odq5bGjPhG9MzVNa58SYVO95OucbHoecppxItOo1538i2SztvGBSL8
9dquMaN/EK3Lpe13S3MajcagMbVdY5zfTT5XUl5Rfitx7xZnNOYuNWbe2rhv
Uo/klJbmXoitjRrzaYeVP8anFRWXVxz+Fo1BY+q+xgTOmb56947kK9cLbpVW
GH/KigsKLiQfi3//xfZ967jGjNuWYtqpitLkDR3rosYMfHPN+cKS/Cs7volf
sn7fkWz5U6oou5qw2vMh1ZhJAa9t25FRqByL2qsxA1YIj3M6l0JdwzLDlXll
ynSNinVtzgmfFWZ78Tuucz73sGrMHNHvkHC9IR8fTY15VzSXH3XKEYF1TWNC
14mu13TOt6UbMWkvynUNS3Qu13WeR0TAIjH4CeGTrWt79HfVmLCNolu2rn65
fNh/d40J/1B4Z+ia3Zb8zbgNDW7rmuXpPJJEwHIJYQLSdY+kWWhMxBuiT5qu
abn5VHngNWbIUtE/XddcOUrlOv0NncdpEfnivdSYmE+cemVVngyiPxqjoTHC
XTnlbotBjjXmNafALMmNO14S/kmi2w35K1+ha1gogtOFcuq6na3tGtOvSN7r
n4T/Rw+Ixjy9b19hWeXlU/bZfV7KwsfiV1+6WVpRXnw1edr86mjMWx2W/7Dm
xyvJuTeVq5DSklvXs7K27P0hbt5SRWOmnbh5eKM9clnWe+WPWy7mX79Zpqzi
elH+ycSzKz/72mPWEqdZmzdlF8Qvc6Qxzi9sWXk860JRSYl8WVhYdPPCpfT4
HbvGPfOu06R3JxwtSD+y8Q41Zs66GT+kJ+fdqrzhlX7KS3Pzcvft3x04955q
zLyNr57Izi4tjH/7LjVm3eqr8hVhefbyZ9CYO9SYVm/sXpmUly2flRW1TWOe
+DxuS9qR/HJ5+9AYNKaOa0zgwqUHM3NM37jSwqxLCcdO7atM8pXrN+R/YG7n
n/z+nd790Jj7pDEBi+OvlFWUpa2Ik0cqBRqWyP/ynvhsykOoMdP3Xjp5Iimh
lmtM/89EmyKdMFzNijJdsyxdx5PCM0FKh6u6pqXS8kY5wnuFCFgq2tx6eDWm
fYmuUYl0//JgaswTosd10x2ZU5kkMG7XdK4Fugaq/TXm99SYgQd1Lnm6dtd1
DSruj8b4XTLzQrM8XfssXfs8XaMy62PSVK0x74v2BdIzHx6NGXxU18TmPDF9
C27req+/BxozZJ3omaOAGBpztxrjnys9zWufeYxSQK7qU/vJ/N9ozP3QmIiD
+col4a41poXOGzKVa4mUXasdaszbgZ+dPVlougYruZl3Mvn8mm8OvVWZHWd3
pOZck2ozSi+ePRw3b2mrN08nl1doa8yz323JUlaSfzI5Y19yxsks2T3MP4X2
NeYvs4/nlciMc+GStIZ9l/JzS6xXkXFHGtPq/TNJNyu0f0rzt3y6+u41xvmp
zctO5+eUy3uKxtQGjXn77PGrWfvO5V5VzqPapTEb/nw+P+H81ZNoDBrzQGiM
56u7k4qMN/QFibs/jQ60GqAU1X7+F3uzTP9AlWaffmNKVJ3UGN+hIzel5dTV
kUpxTyUUSx/AmS/16r4xcV8evSX/O7vj1YdQY0wJ/ese5TjULo2ZKjwvm27A
RYmu404xQGukkt860UZVENIw/SHVGGMCEh1qzGTRL0nXsM6NVHpCdL1hMge3
EyLUcqTSgCO6lrfvj8Yo8c67DxrT+7rpTVumidCFFiOVwr4THYrtaIyckPMP
hcZEnNA11HIYc8p13b+9c40Zskl45JkLk9AYRyOVjolHqjFSKeqCkH7t3xLh
6o4xrzl535SPcJ7oU1CXRiq5lT5gI5ViDxeYb+I2aCzMOLzersY8sy1eKqEx
EErupWXL33XWGKn058DPziYWmW8VT333gQ3F7D9shI6b1+P/utpZ/dDjqx/b
cemyYkN2NeYvi84bJaYk6ciO3lPVQ5Pe7r3y+L7cMvMe1VxjnN9JSbdGHauf
ksNfrb5jjXF+advK5EJLerp7jfmz87unE28wUunejFSalihfXtcujZG9Zem5
C2gMGlO3NSay96ozpn97yq5uejbWftOYybP3XjX9s3D7cvzC4bVTYybuyTv8
4YPYxffRrUllRnJ5xaqLr+drR87dKistSFoU9+CPVJq4L//wKs2+Ma/FX6uF
GvOqaCf/SbH+ddF7qsO+MdOEZ5Z8oZ71UGtM6OeiiUONqYtdfPtdMu1Rm6N2
+sb8QXjmV0Nj/iRa3xD+v4HG+Kf93hoTdtoElY+kiXDNvjELRd+rpudoakzU
j3VJYyJO65ql11xj3heuhnqMpjmi/zbDuKQnRfS7on+GrpG6WqZEF/TiHWnM
S04+mSJok1P4V6LrTTTm3nTx7WYs7soVVi18474SHW9LmOO7vZZ18f1QtLsp
oh6iLr6q2piC+Lfk5RsyFRSwVxvjvCjhhKlWpDz9xDYvx31jZn69KbtcxpB4
S435y4pLhofKC+L/vExzEJPz83t3mf70r60xXt8Zh6yXpx/Z5KzZN2bqpy+d
MdW411hjpn23VbpDKM+5lr7y43iPORK2OD/5xYwfMlRMJNWfrHjuzjTmiz8l
pLz6/rr+r2xZlaGs8R5ozMPYxfe5Eyeup8b+BhrjvC2rVmvMnOOH65LG7N1S
mL0IjUFj1FUxH8gUU3Hj8AeTquriO3nRqRsVMt3EPxlV6zTG7y97blY8kBrT
9yvTFYKtxjxEcyqFSAUwdjTmj59fqW0aM1V0lClGFAlfLYqx7eLrkYPGPIga
875oYbxxLpRODLtdfJ8QnUuq0JjAFJ2u+LfRmAu/t8Z0MozR05Xp+i501MXX
J8++xiSYe3HUfo3xLtI9UnONCc6Qbt69vtPo4jvkW+GiAplWKXfbNyb8vEBj
7oHGJAjTuD8bjam1cyoNSdfpHi6NcVqv3P9nLlIWvnYmXSaGA+u1+sY8s++w
PGyn4Pw+r+p08Z3yrcE0bDTmkzTjFXjx2V3OWhRj6uL77LFT5fY05vsdxo0p
ufTcVAddfFcZ2aemGtNpa1ZpRcnhb9Y423bxfe7gAVXZT8HpHXfbN2bdpWI0
5i40JuRgQUXub6IxTt/If+yspRpz7IB8JtZ+jXHedK24Ao1BY1SZ+0O6XMBY
cOQ9fXXmVAr/q/LPUEXR8af61S6NCd4k/dv6QGrMyyfK0JjgzdJfY+xoTNyi
07VMY7pfNQ8i6Ly22nMqLTLctt8QvdGYB0hjwn40Q4fjOZVCj+rqO9CYJ0WH
0gdFY76WP+ViEeh4TqWNoqk9jdkkPVQnNCb6oDTa6A40puttXfsTdudUijil
aviTLyLvsovvSTTmHmhMxEX5E6krGvOmkIp5HjKNef6EqZdg9pkI8/I98p1d
/hev2WrM+i/kQpeKmxl/XFDdOZWcP0qVygvO71dLy6iEItNFi3XNjPWcSrFH
CrU15s8ppj9D5STHOp5TaVlyRo015sMVl8rTj3ztbGdOJecV5zIUjim6MO0u
NebtFHltaEzNNWbu/l2Vd2cPqcZ8H59XVzRm6+prP1WgMWiMOfNWpymDSS+v
mVTdGa6Dv76s/PbN2rdEX3s0JvbzowYpehA1ZsFq+a81D6/GjN5g7JBTNzTG
/wfpnto0Rumy8K/JDNe+aWjMg6YxA1LluzPHtTGGdCizqzED0kx88SBojCJU
VdXGVKZHQR3XmOeFp2EQUI01Jl645IsIhzNcd1eGF90UoWhMLdCY4Ow6pjGR
mabz56HSmAnbdxkarpSm7FEt/Hi1EThK0p+2meE6ZHeOMpzmwt41NZnh+v3l
F8utNGbRedOqqqiNqcyLp1I0NWaTfEFeRW1MZf5auV811Jj9B/IvTJvmYIbr
dxalKuUxVxahMfdNYz4a9aNB9tCY2q0xXt9fNxSAoTFojCn6ZSfkmsCKipQN
Hb2rqzFi7FZlZqKKskurJ9cOjfF7Jf6yCZceRI15xdwU5eHUmJA3ldmj6obG
dCk0Dx9ov8HRtNe2GhP4vmhapvNGYx4gjfFXNZu12zdGjq+dGa6Dj8pVEA+G
xhwxDzKy2zdGTlBa3daYfnKz4juojdGOSl2CLqMxtUtj/HPrksbEnhaNKh5K
jXl3xSXDJfCuj9XLpxmbwlxK6GSlMY/t3CvPHl1Rfm25dWGMY415w/lvl4qv
nOynkpY/psiUYb9vjEljJm6Iz9HSGPMMUPb7xsiJPVJ4Z3Mq2deYZZ2+z0Zj
7rvGeH1zzdR0Ao2pxRrj/Jd0uSE2GoPGGDNm+Vlzl/WUjTNE9TWm50ylTkO6
8/3+hfuvMSGvxZvbf6ExD5zGhC+Lz1R9vnVAYzboGqlaa/a0TzHaGmPoHuOF
xjxAGjNoj7lWSleua39IhNnXmIDzGhoT9KOqZeuDoTEfiRaqSXxanheD7WtM
VIIkNnVSY54XfbNV7vQbaExoOiOV0Jg71JihSaLxT2bNe7g05jXDWKGbWz+0
WNjJ0LP0SkK8VWFMp2+vmS9ELiV0sqaYKjTGaeK3Wy+djVVJS7/dOeaL6ZvX
17z3jn2NWfLHlAINjXnplPnPoxUlSfs2t7KvMU4bMtPvtcY4fSU37GOk0v3R
mI96b72aY56BGo2ppRrT6pP0C+bbbjQGjTEkfMMp8y/wgq0vhtVEYwZO3Wee
AbDi6p7YnoPEvD3m0aPyyRY/T4UwK5OsH698oV2NiQv44+Ydaddzb5rO3ZIb
BRdSDn3w/Ey9tcbEhK04ZJqeW+snY/tL6hmu2z++/INDl7JvVy5/2dZh9JGv
vLr97MXKNz31mUldBsyZvzn5grEb/e3iC4k7Zg93rDFjAl7dsiMtR9ny0ptF
l9NOx3/4anv/mmvMR8l2d8z0k7xI0ZjAx0Z8tP/I1Vul0kKJXFrO27hX+t+K
kry0+Ndm2mjMhIA/fbsjPSf3lnKQCy+cO/LBywv0djVmdPtnPl5zODO7tOLw
KhlhBv9x6ZHMy8ZDVHrzwumds0ep1WVM+2c3Vb5LYanxLXJO/vBR7+Dqa8y4
sA8Skm7Y3X8DvNjVGP3Edz44knnNsIOlt/KSj2wMC3WoMWEzRqw6eORyYaE8
nXth/rUjO7+MjqyhxvTINN9jiquOKMaexljHoC4BS0XXNF3TEvOdnVOprmmO
rttXIsC+xvQ5pmtWbHpJ5fObZencd0oLG2TZ1ZjA94RHuq7pbflVZTp9vs5j
swi0pzFPCu/zuubFunoyF1S+xDlf1+WQCKoKYQI+F12ydI1KTS+sd1vnmiz8
11ehMYEfC89MXeNyXZPzGhoTvFJ4GR9Nlb3lGelD0ZeZtq15pvCb51Bj5gu/
w6JNka6BvEf1SnWP5EqdVEPudE4lY3teJQ2viwHPaWuMdZaK7lnmD902XS/Y
eahY+Fvyi2+29XO6baixxgxaLbyv6JqoTo8mBTrvbWJwzbv4+uZabEy9Il3/
D+1ojJJqaEzwMeF2wzRfc8Mbuh67q9CYiL8KH6s9KtT5bBdRDjUmbJfoXKhr
VCYPSLyta3lVBK6y0JjwbaLDLbsfnC7nHmvMI+l328X33mrM0K9E10JpMnoj
QjYtFJ4XRNjXokOp8LNCmFecBp4Q7St/U90Ug4wa86ZT/2uiaanptU0KRZ9d
TrEONSZ2hZP/JeFyW56qu1ynLxbeJ51iHWrM8HedAi6JVrdsXmVHY4Z/JD2/
ebkkLRYas000s/8lNabnNpXGvO4UtV90K5LeV1puT2OWOw06L9yKdQ2MZvKT
rvEt4XHeKeYNuxoTlSi6FEm/AE3va3iJe4aIfttSYz516p/r4BeLCFLPcP2h
0+BU4XpbmrM72oHGvOM0+IJwvSVvbYWu0W2d21UR/oV9jVnqFH1adLpZuSUi
WF4Ye1R0KjZ9Io2KRd8Euxrz1LdbrtwurSgvvnJ61GM11hjnr69UVGStmG+5
fHnyFamF72uWGrN69RXztUf6wb/ZUEyVGmMjLQuOnLCY2bnswo/bez+urTHm
WHTxXSkNgFL9lGSlLnjhbbsgUzOKqYHGlKYedK5NGuP8dPyMnZeSC8srcs/F
amrM/K+Wncm9fMt49MoL83ITTiQ9+8FXy1JLDn9dY41xfmX7yhPXLxTdVoqn
Sm7dupCRtnLV5853qDEfD/kuIznPtMKSWzeS09LXfPl99HfXCi4cNWnMi9+v
PF+sntvK8ufaIkVRbB+y1JjYY9b3UYe/qbHGtHpzz8qkvMvFpcZNKi0puXw1
c+UnG5zvSGOcFx9Yk1aYW/KT4fMpzb2es+PHkzNW7NuUUxT/ftUa0+rdH+PT
CgvLjEev8MihA16ONWbhlhl7Lyfnl5gmW698x/z8HXv39n7SkcY4v7Dz1ePZ
F27In3vZ7evXs+O/3d5KTTFPbXsxMV9122z1cyP+QzTmYdWYdxNV39/UFeE1
0xj9KrUSXFgRbiKXljHL1qQqd86WGlOZfmN9nvn6hPKNt6Mx+sc/35tVuXWl
l499/8wzc/qN+8P0T/YcyTJub1nOuT2zY9UaMyFuxRdLPqnMUXkAbsX5A8Yl
Up5/8lHJYUIWTP/yx+Q8805baMyACSOWbd+Rlq/8FjVqjH7qV8fyzZRp+ik6
u2i4HY0Je2PNBWn4V8GFfc9MnajvHa2PfHXpiVytX5VlSRvmV60xU1Ys+TTe
kJ0J8kyMOad3mhb+tTIrAvvGtJzyzgeHM7JvKyuXNMbztaPp6m2/dfIplcbo
Z6zfm204yMd/eOYPT/ab9PL0NfuPZMsH+fz+2SMtNWbQs9PjT6gPoFFjPF9P
SLXdvRvJi0wgM+e5IzklNo+XZO6Kra7GzIh7f9OSNZU5bv58DxmXSHn+uRn2
NMbzzaO221Z65eDIUG2NafnS7sSCsorSguQTBz9Yu+mDnecuyk5VUXot/qUp
NdCYjsXma9omyfdGY/qcMN3UOF8RPp+Kfm8L7ySds3y93eScJcgYmWWGYcBU
uc4lTfh+Kvr/WfgeFa1vyNumqTEzhXeGdH3esEDXdZfo/47o+61oI3elaHhN
+M2yppgB3+seMWxGw1yd9wbh947odUzX4rbpJQ2yhL89ipktul+T3svptq5d
ouj/rjR7b5cs6QrcqdRcSWKhMc+I3qd1zVW3txYa84zo86NwLTLfXxg1JnC7
aQvVcboh+s3T1pjQFaK9YZf1WaLf69KSkA+Fe771GozpsLO6GhO2UTS12oxy
XbsTIuSJqjRmlfA5LsVDHu2iK9F5HDctrEzg9Mp9FK1LVWsu03X/XLs2ZuAq
0dL40eQK/8U1rI15WvS5LH1A9W/o3FOE7wnRqUC+h628acoWIc/UTGMi3xZu
pdbHpFWaCH3pTjXmOeGTo3GD6XbcDsX8QfS7YtqjrudF71MSsKj3aND/aGhM
1CrRuVja1Gb5Ou9Tos95XcsS8/a3PymiZI0ZuEv0OSXFTf5GNM4xLZGy+95o
jJ98YvT8Wy3SmIFp0pFsXCD673GKWOM0eI/okaMcW7PGDPuz04BMoVe+GgaN
Gfad5fmsfKOzRLQdjQlLk2o86t0WnS8JvzPCO1dXXwaBejfEwDe1NWag8VU3
hfcZp/B1TlE7hFeh6lVvqRxmsVP4SdGhWHV2WWnM+05BSWKAIR7Kr9kbwj/J
nPD3JY0Zsd6pX5ZwVv02sKcxMSdEs3Lp96FHmgQaMd869ctRaF0ErLPRmE+c
ehSbHu2R6BTzhVPUAdGjUN7mMhH0iUpjNjoFnBWV6Z0nb8lt0duwxBCnGIPD
xBwUHkXmL4UDjRlyVtrayq9A13QRud5p2DangEzDEoMIuWU6jbDUmJE/iL7Z
6uNg0JilTv75Gl/hzkmaGjP3lPkSI+vYVzXVGGkGpbzkUVYLHztwtCJn9fOW
GvPYwaPmSwnDdEt3rzET3/TaeNnqNq20KDv+szWtqqsxS5wWHjBPrmHaupuJ
R3YFzv49NCbikHHzS/d+8c7dzql0bzRmZeDqkzuu3DSfFloa4/xeyoXKy70b
17ds+yH61c/7L/th6dGrcreDihpqzMqwHVmG6pTyyymnZiz/ov+ibc8euCyv
rTz96FZtkHFAMXO2Ss2iy28lnjw+4+31/f+0eca280fyZHZTNOaN3W9tO16Z
z9JuyZffWZ8ZlhiyO2jGXzq8f3TndbXXFW3/23pnrdoY5+cO/mC4gSvNufTs
G5/WrDZm/oaXkm6UVPxUnJOz5dCJt75L2XH1lvwR/JSTeqL3/JppjNeWa5WH
tCT/6pr4H/q//lX/vxxek1QglwDdqEpjPg3bdT3HAimln4K04xogI9HKmt6b
pc+r9HbRycTzb20/teZsfrZy+X8j683X12hpzN8mHM6TNrIof9/xs29tPxuf
fqNYftOS6+kTnpM15qWdL2xPfKsySYXythR+Z1wi5ceRL6MxD6nGhG+9qjpD
zyzyrpnGiJcOq8orC7a+pCKXJ/fJfz2w0RhDpu6Tz0YtjdE/ucdgCDcOr5xi
MTqp/8w35Mm1S/NPL4q17eK71jzdvPVIpaFPbUve92NiQqa5xkKtMcHxiSd/
TNx3+qr538RTn+mf3pteVlZ85cI3m79c8smOb1LNqFKQ8KHeVmP8F5kam1w7
MNKiDGbaolNKh57SwvyC61Jydn8w+d6MVHo0/rvTp/cdT7lg3rnkRXHrj94o
PH867bIl0Zgo5tn9hoNcfPgvsyyGJgUteCPRtKmlBUmLRppLYp76PmXf8TMJ
meZWQ4dXxXquOHW1rDQ7/Ux8/IYl8QrmSD/FiZ937D9nkbS2yiec+2bLxjX7
zp0vUHioLOXrP9Swi+8X5s+3GiOVPD8+myNtW1L8hk1LNhxUbVvZiXUzbDVG
/4eDlcek9MqPs8eqS2VeXnFO3uWy7Pg/PFo9jZlquts1ptWhe6AxfvtNOtHo
oqQuyhilgC+Es8ICG601pqehm0SLE9bjkrpn2dGYmaJrngkxAtXVMi+KlvIF
c4Nrwl+tMX8TTQwPOeVKy83DlF4TreSagZY/alOMe6FJRfo8ZTFSyf+oao4Y
S43xPa9re03Xusj8qFpjeqXpXK/p2uZZaExggrS2xvk690ThnSjcVK9tnqSl
MUtEG8NtYP3rIsiyWsZducMq1zUs0TUyxOPL6mpMZYKOynUCahe6ret8RIQ6
0Bg5Zi3RGqk0cJMwo1O+CLE/UqmtgWsqD3tNRyr1MpTWtD5tKoMxJnSXGbsa
XBdhNdKY2SJ8s6HMwOrmq1zX4awIW1hDjXlOeBVJlS2tM0Tvk6LHFdXYrhJd
oJbG9DE4husZEakapjRoj66Z/MKG18VgK41ZIdpVniGlOt8vLIYm+WeaT7x2
x637xnjJQvtbjFTqaqCeBjkWw5Tur8YMPSwaVp7b+SLKcqRS1ElpuVljdoo2
+aJTrqqQ46YY9JFh4jBDuZH+tsoBjF/bi5YVMgaKGXRJOvjNrzhFq0tlNgo3
+beQVHKzyFpjggwlZw1zRfSfLJZ73Ta/KlzWmKizosN1Cevsakw1Ryq9Jnzy
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
CMiMb2PfOf/WDU27xuiplErhcfTYMUGTE/iL9kAfkv8oYIamXqIkK31B7XgF
10m+TFDMgsdwVhT+6vsq/sJQusbYY1YDsQne6II+V0FTKqBPDbxXn8K7gVcx
RjEkjfkxHhpD2uX+0QzND6dozPwCouKNfYV/UsD/kaIxgaXEPZFGFve8NAYO
zxCZpKmb3n63u1vXCUeryQEg5toK2bdrOHsq0S83rObWVn2OQiNVaHIaOrEq
IVa9RrHOQTHONAZ9s7GrU6GCv0Gq0muxjhLmzhZx9Hk3KSYjvd1lirFZC++f
o9aNiTpWayW9GsWtMREfHckQa4mLNGNj1bYjFz37qTGnR16oqiFm3FT4MHHk
GobGIHPV0lgXE5c8Pjh2fIRMXNNlhjWjLmgHM4mJq6fSxb3KHsaVo6k8N33M
ytM+UlIajM2qlicLXcxUwr+os02S/fin/TfH708Jzm1ptC+UpUsivs6ndrjm
r74XR0Oz7ibRLs5MJThCFI6qNn3U711z1vNwoYwon2trUebNCLpA0RgYZBLC
a5nrwTEnbTHnY9zqqSTCM7zsh0+1+siV++MP3Zl3pVyisx/sT/Vapf8mosO1
cEfStlLyWDV9ZGSskKQxnmHyNGI7PK0plU/ZRtaYi/z1MTPTdXr2Pb23XPbI
k6WYzCX++tvrSjpMrB+ydqcn3hVScpccOCDeq6YajrVTHHUVZCoBjaEOkvlx
wcVcRSvr8WRuqc6L2L5KQHEYDo2BQWbL4ey6JuRXwNzdqsi+u8x/HlHFt7dd
8SRh1dIFlDQlTGOQYTAbV8U9KarvMGI/Ix1tDUUZ9o8shF+lU8xsbOjL996n
nija4Pm3n04lFwJxivFNa2FbKBtcf2bTN9DZCo5XHQlNe/D0HMajQoTXjZm0
flcO+7pjPgw5ZwWuaMxmKeN3ljp7kn3QuGsyztd14i0cIAMPg9m2Siwvqu8k
VnJ7Y1HmvVW/LcGGyhAU4yvRcU0DKSAj4l5FOnEAJYOJ/mjK8nVNY6AJP3lH
5mDbt15yeZeDYnwfcM/bBT9o4g3uSWf70lpaf7N9671yRUu34wRr7unU1hZF
BG8VuN3hmi0mBUGflPE82mGBwWkFsvBe7+C9Vwl9sddpk+ufoC/zeG9h+Rpv
tPO8LmH5Squg/7TDV+x/6+H9Ow2hGExj3uzm/bOR938d8LgO/JL+bybe/9VA
X26ijJah1OxdA31RwnvbiGU3WOA/5X9ymbPJ9QQJ5NGDvvnVTt4HEixlaSn0
SQP8PN/M+1c+MSqGHFNjoFGtGERYea918j58AE3D6sbAi3kfmvoLkankU0W/
18DjP7HQeO5X/5kDk8s/ue5hjdAEPB1pG5zu4eKd7z8q3NCYV3TQ1BXQzGBo
Yir0sYr3roGAOB4yDuftNt7HqdBMDodBYzv0cQvvFcTT3mqBxh11VjcGjtXQ
6F62+r1kjbnFoiJoMAvIrIHTqf7bxnsd46NXTbx/qaEpO/vV4doITf4D+mY3
ND0J+qKSN6KN90Yvsa/a9703DbyPcqGv/yANmMEo5j2ueTZC09ZD06o5t9p7
BfSUpdl3oQ9IS/RaL+/9amj6Po4+1xuR+jA7oGklvHe7kG3hOCq7eGPy4T5K
rB2u7TE3BXq/CzkiLPb7WSrFcGvMSKfjcOjRDc1gVPH9RsqDK4pbeR710Dcc
dWPG65197Ygi9zXGyHtXB41u5wl6ea9hi2Bf8HfaIZ+7VIdhVvEN4ftooXd6
iVOQ/VNfplMTlBgaY4/5sdDnOugtbDu+YoYhaGYMo8M1NWYXQSONvFeeotvx
753Ql49gY6F3uC6BuNbPqBIHxRCVW9gDy1r6rJvjDd3QHLLGIPFdJvRRJ7YO
n/LeMEJji9GUJbrG7OH7XYfGOvTDfkqx8EbVQN8hKUuO1CQhct74Px007ziF
YuA4AdfzgT/4lPdOK/QVTjFpJAyhnf00dI2Bh8Hc5k9ohOtHoUexlSc0Qp+q
+d+fxByG0Bjo31wrqgeaJyJ1xGbEv8sJkAmQ2O/RzDarvq7Qf/lzqBtDD8+9
947Iqouau3XdxF/ETN3dWm1DkuTejA1HnHe41uTcFi4N8dx66aersph8jf17
UMaBH4irKBTBxyKESzGKYWqMXum/IpS/Lmr8qYdh0ippXbuuy0x0szb1aBs0
4tvxI1cgQ2Xc0JgbcZzXVmwPa4NoFb2Kr/BgvrwDTvRuUeXPXMWeqeSbwyAp
0kOTc8c9jTlRyXXZrMlJwDTG0KjVSpU6dWe3rgdb21Zza4su6f4dT7Z6Mk46
XPNXRn2bolX3oPjW1Fh39HgU6i3rkuOa7NvCajToxNdihS7Xjalpb5VWNhS1
9Og6e7H7ffvOYCgqKvh2cwRKMRSNieBvSTur7jBaEcFQK9btclY3BonrkVpb
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
2Kg9Tc4dqsbERTuYw9pyLJC1iu+NGPyH3R2N8c1BRp+b6oPWMuv0iu3fyagb
kxSPHcfmLj2cjkSt4iu8WEMq+GeIOUxojEiNLR1DY3xzsUHwmqLRFHK5jS54
S8V0ZgaTqBwXFVtjuQ+tbkyEGlvdrHVjcolbM3XuGEYVX3/s9svWqvKlacwN
LfpaV91KZhXf7SXYEfq0UHLNucb45uGDcTvjjg+axghvNqCHYWkmexXfzTmZ
2K+KuUk5HWgM0JgXR2NGhci1vTZztyZ281xOjWl85MutMXgVX0pEYlfwLVI/
qsb4pmIcAEMNs5vSPpwLGh7sGzyNWRqQpTPZLMbadL+JnBqjSdtD0xgRLubF
V1mK9E66gd8f5Ub/QMljOuEYT1IhYu+mtE9M3Fw0xa59NplKLB2U/A9jFVk1
EhFFY74/n9Jitll6KlMOCTg1RicOGNRMpcCUEgNctyXz/HpOjbEpRYOtMUsf
oz+9NWn7uPooEUNcYFShDY8hrEbz8DAjWWnpYfwGtv7RNJrG/PbQvmCq5D0Q
m8bYL6wKb+5jgMyemHq3NGZDgKzVZLMa67L8ZnFqjCY9bIg0hr2nkl8mdtFW
Fk/RmP0F6GQbn8zm6qm06D6e+GCuuk8ZHrMoFTuIO5NDufoooRpjs+iSj22n
g8zcGxl17mjMT7EpOovNYqp8eFrAqTGt4p3cGkNU8SVHOF44NzeWUjpmGnZS
1csvDXpPpYFqjM1aI7/mRe+ptDmouImiMYFPVPCbcaKhd1DCvg3+wqzLJI35
JR3bvl3Jx7i6KSVj21efHC6i91RacCejflA1JqwU3WOb8mZz9VRank7ssep0
7uExtEyl8+dqjPbTdEtpihenxthk1wc9Uyk6Cp1u2hhOjbHJYskac/BYteO2
XROyiK2n0u8SKVwxzGrUFvovdqen0uJ07Ge3XXzAbY2x2XoKk84J6T2VzsY0
9kdj+KsfY9vRWnzvGFNjlsJ3ZJ1JJ9zsqfRziuPuXnaTvaeSbzaR/lLz+JIr
GuP7BP+IQXyYW2Ow0S8yMXtPJdL32Ccd46LGEJ/Sl/my9FS6id+zN8hvDjON
OX2sFi1zlHWTs6fS0nz8DrQr6QyHxuBVfCnxGB81Gn+iPxpjs5kKU64LaRqz
7HpMs1sacy6wuBO+bGis8F/JqTGanHhujcGr+FJ6KuGVeBvyEsgaI4zToLf/
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
bbvPoJcOC+MT0hxrzLk3+LyIvdBv1pDnHYxPfLx6jbnw4njxYJvKYDArGC40
5kLuOfZwr3JJZz3iTIaZGTWbXekf6kRjQl+fZkt6lYv4aWnQq5TTlXUf/MNI
FEN/wK1UkAvqESe1OIBY4fpqwbk6Gbw1ZsQBzjWGfrUsvn1SOr9sW67l287O
cNtbf7zoXF0u5p+rHxVpTfCSbS9m/Fg1KtIYDMgSpiZGExOeOUMYeiyHJUXP
R8vqpqfZ7Z3nUutKVBrosXONudDGt23P6bQoDzUm7EPJnFktYHuTNOZ54ojL
FL5AY4DGAI0BGgO3k4xujQH+paX6WuT57cfOH0uuZo+hAxQnUY3ZF3PrVX6S
pTWjlxKzojo7P8nWXh7e9y/adzHxNYOj+AUR1hjameIekoTIs49ZPnklvk2N
XRNIGgO3Q/9xIbNKgS3HscbQjmazlQbLVXe4teZa1O/bf71x9n3/JHpDx3t1
gWbTmBOHmQVJOZbWMYwucZhnfeW9pd2KCPH6n+83/fKYJV3Av/ll8tiY/z3x
39cr8D+EqDF7r54t7BIRih7AGnOIWTVBfGZe4qTgFEM7/hr55kujYj7rdWFS
RTc+u+Wb5/xBc6gxO6MTemYsnzPMTbALn/xw4soPDAjqU8PMtaBD79FWpTH/
vJnQiyxZM8GGmD+cvPrDvSKon7JkhxoTlA4NWy7vRvVwe/K9uO2nIo49sjw4
2C74+umBhPNHnVEM7UQeexrZg22ca7eubT9992zRIL4H31yl4WNjjm85X8BR
YZuUpDHwYJj9v//wpFOGvU/QGNovCfF1Q6NL+G+0iMb8urdAoqawhmGiJdAK
MnuTsiXzlKcJo7o738exxpzwf96rsJxIS9O9zQ1JuaWsdsU0JgcaUcKpEMxh
Np3LTK4nfiWrxlwNb56i3AOZZPUpBJCJOZ9XlmRp1cNoeeX59mrkFaSdv4BS
zK8QPH7GMNP0MfdY2K3tYY+vfRQMoyNq5J5pzF0WetILCi+vpDHngz+OWTas
fk7B5bCT3rIhoUqH/qF6RVvwz55rzP7bd7rm4ONTLU6Ji9r0zSmvX+KvNSgc
4rCm4zXQGIrGnPWBxrCDWdcL0ZxqTBILrr86zbp6fgNqDC2qmjdjOYZNasVg
xqOn2y8+tfS9bXC3YNLo0FGbTjTGl9nVZ7mxNy708dlnbydtv/TqGntwWGt7
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
qSv3DvU2JcWboRjT9UpD3SfMrVdS88uJcz1mNWZCwIUrgqVi/Q3X/un1QjVm
4td3mvoa1wVZs1LpiL7H0ND9oqNSjQnON8zNsKQx7ZXOljtc9zUnxX8urzHt
d5wtd7jua0lK2DGKGjNh7fVy46yxvsrLJyaaUMxr31Q3DA6WnjugU5evq/Qv
Qc+JvVKNmXjGMPN11DXm64mp9YZvRr1VVybKaszmCu33qt66gn+GjJbGSH5i
rBLjcV33lbeh8Lg5jZl41lA+qfPgVum1r22/tPnEpbnxaAwag8agMaOrMUP9
1cfektEY72Ttp2T7tQDhSqWPr+gxvfPMJzqKeSu16tapBB2zfPCb/pegZY2x
33RT/1WmvSTG1kgxCs/9GXUPK+sMcKHaj1BjFimM+KC+9D+sSfvqk3/NV2uM
YvHqiN9vqEvfDLQdjpfUjdmi96WhB5e/0GmMy5GS2ou2Oo1Zd1j/a7C/5sz0
D40UMzk2I//Bw8oG/W+HgTtJH0o0JsmwcwsaYzP7OwGtqO9H2XAzLWXvEnVX
640Rv+QVaZpbPbi6R6GvG6PKW7/dNS56HejI+XaFQqQxPn5/tOk3GCj8wd1a
jZmx7K3DDaI9pyQoRBrj55fzQLBnT4HGONss+zXfgDkdJWG2phqzTStU/Y3Z
tqJiMi4KIyZoX8G6tL1b/rVIDS+KZesjjpXWdqtewQeHV4vrxsz6zdBd5UHh
gclGjfGZ/lV+pbKp0vBbtO2as1mN6TixbnQ1xlOx95bgm7Dq+XRXFedu+mK7
uqv1ygNf/qEtLNl1bnvAqNWNWXhS/y4bLD0cp/2hYn1R9c1fFVqNGRosP7pS
RmPcs7QTwB5c3W/dSiU/m/Ac/TPvOfeFeY2x9bfNvC9anf30YVFO9ppNmq7W
m35NK9HUrhm4l+wvopi3fq7VHb3HtUn+ZnoqDTw8sTVmpBrz1i+GPdclBUrg
Zd26Ek1944G+xpKM6Q4j15hvKo1TyypOvHoac1o94M1pzKLIgAJDRZUnOSkr
bIbVmOoshTmNEW5W/8c/htWY5d9ltA0O3S+wtapujCpbku8aT0L6O6o2xn4s
0hjPgyfa9BsM3E1yFmiMY9w/0uoMb88HxekKU43ZfFPz+Aerzxsnxmiy2j3f
uKZLbYy1hWs2bp2sdpjVryceSrmpVA3p/rbrzpLSMeuv68VksDxzp8JIMZ86
HqtvaW+t1h/7/qoshVmNubfDbVQ1Zvm6VWWidtJ93Q+yL2VFblJ3tXZM/iND
W7OlqzLcY9TqxkzM0HPEQMvucC3FrPco0E2J0RBKz7lkuekxyXc0H3+DpSe/
GNncGEndmMAfv77zyPi5VJsz0e2TCT5pR3Kz/qrGuG8KvyH4dd77IG33dhHF
+O7faVxD1JXxxYg1ZuKaK5pJL39eSduq7XBtPnuTGwVdfXubkhLMaUyO+vma
0xivzQHXDb/Xn+b8vH3CsBpTlzfRnMZkGArhDrXfPDW8xqy8rHq+vZXZE62q
G2OcGyOpG/PaFwX5ncajUXJqp+qHE3dXpP9mojGDbbvj5ZYpHWvWfLwPlmcd
0PxETmNUt02QW6Z0vEV32/PfSylGqDF9jatHqjEBuz0MRqG5i9a7t9bu+uE1
tcPsfmNb1oFbne2Dqi9Ulc6GujHGuTGSujHfLD3b3Go8SK07w7+aELTXo+D2
p3qN8SjRD+/uugAdwhzcWf8wbZtVGjMh+PvNNQba6z2XmmyqMbqbD3YcFE+M
+YsaMzT4MPlTGY3550XtR1Vv5ndmVyoZxGaoo8ZZfNXbp1p14+ZJa9J6NAaN
QWPQmNHUGNX3pPaKY3YzxBoTeE7zd5/HhSniKr6LjhmaGvV31Z85cjjtWkt7
V8WmRXpmWZlnmPtY/quPBY1R7BaslOlqybtwetfBC2eq23oH+uvObVEYVyqp
frk05N24VVZyaoYOZJzcTzSKzn+ll8eF34WaVPH1TzYUOxl4dOvy6V2nb9R2
Pcr/NsAwPcb2tLEOfN+D+jOnf9/1+5W8u919A4/yvwsXzmzpbq7Ku1FVlr1f
pzGzjxj+ENN+dbdZjZnuqFid1yDpcSO+9N/Pc59jrOKrSWTSrV7hJsrqoi+T
Nn7g/7H37ktXlP39j3uNVz9uLb5ZUVxfuMYakPkgWrrnmqIvt236IHCl9x7T
PbcV37yt3rOheszaq4bn0n33Dz97gcbYfryxpKNf/dqVr/MQUYwmXu6n7ll8
BXsLU2OlVXxn+ay7YfjlPtDeVJlx7MSus8VlrX39/a2H1/kYVyoNDbTWV+aV
NuRmrNV5S/AlA6aU/OIrozGfFOpf+44Tn8hozD9+b9TvoHaHnUhjbGb7u/+h
lHaTFl0GGv74UiFZu7T9hl5bes5tl9EYd8Ncn+6bYRKNmXvgnOHw9XdcOXcq
5Y/alqdK1UHQzY1R32fP9aNbFWJv0YHJ45oka6v4qrIlTf/1sDpzgwWNsbFd
k3TbuDZb7vKk8Oe14qVJXxjr0qhOLy99IdaYdd83CG7d/+Rhd48x9+/llVep
cuZ85poNH5t0uN4p3vNOocaoXk3h69V96/g/RqgxM84J9t5y1XY4jfnHcQFA
KkucrdaYsCLjDLahqrMKKzVmoxZ/7u5wktcYm4+v6v6yr+5zHSWrMYr0euNR
enQrzIzGKH6oNn5KPK1et8yCxiS8vuWitipInWiZkmWNibUJP1so+qDqKSu8
GLF+5wcrUtdk17b0D3b3GlYzDXW3NuRVNNy+dkyrMTaOK93z2vVP5Ell9k+T
BRSjiDuTo348g62lJ94SUYwmrqkH71kc0r0NSRGmhXz3CBpXDbTcvZWWkZ2S
V1fVPdD/qD4p0rhSSXW86qvr8qpbjn2r15jva/RPtPvEdhmNURjnqt3b4S6j
MWEl+h10lLuLNGaVjcdB4wog2ctAR8bnn0iq+IYbdvioMlxGY34+oT8tai85
ItGYCfvuGJbn9rXXpx3Pz6ju7n1w01k/N0bzarZnpuwSa8yG1eVqx+h/UO5h
ZRXf3ZWCKYoDLdXlB44XZNxWqj6Xu5vKT9Tqh8dA5x9Z1/M7ewuPfK0jl8h8
w1ea8swdphoz0dhbpzU5Uqgx6yf4/io6ngN/Nt6+sfarb2eu/Sny5J1bPaph
Kajo0vkgr7KhrLJ4vlUas2V6apX+7deUpF21ZEljPnO+Jv6bgLLSL0ROY3ZU
aD4ZmncGyGvMhM9u6D4Z1H2ut8hqzMQM4wLAoZ6acDMaM/+yYN2Tam+WNObL
uWm3K7X0JFqmZKlujACO1C24igpLvrxYmdfS2zfUV1l4p0T/ZaFfeffA5abW
nuakVSYao3qb1eZPDxZRzMRP8zWfNoPt1Xlv634opzHq216bHiKimImfXtMs
h1Hd9urbphTjv0Nw8/s7Q2U0RtAdW7KBpqt16ImDzdLWzaLLk5akRGEV3zOZ
gnHR13E/I7voQFFT1aOBoSftGSWthlU5DbdL02oet9dee1uvMf80LmgdbG+q
O5B5O7vtSXvN1X8K5sasrtQPhM4aD6nGfD0h4nTGQ/0b5El7Wsq3Ao1Jnn7s
npqDBh/nHPlZQjGqhBvoWNxrSa8xZww1jdvLL0o1RvWiP25L3vGNWGOOHtTw
U3ddofkqvik79eXC6vMzxFedOGIo3K2eXXMSjUFj0Bg0ZlQ1RvPZ9aSt6MLh
iMioD7zXRhwuqe9RfbVQnaNsUkg6XL/jvemm4DfgkPrEN2PlEq2xTHbamlIl
uLanMePLj1//QF5jbN4NTioX70q9t0fXf12lENWNGerrvJd95Os5tsIZMk52
h6rbZVnjz4fZ+6MVcm2V/vFthVgABhoublUIFyt9uDWjxWSnf94/sy1cVDdm
aKD3flXGgS2vz1ZTjMJhzZqrbcJJJvm/fP4vO/MgE37yepe8yHTXZ/stFPVU
MoDMusJ2ud/BA+2Vp+zWGicL9T99UJSZOmehddNj1BNgos3v+bTd2qviPf84
5yPheiVnRdTp693659LfXpb3x6604ymXbld19qv3UPuHn70pxehAxu5wrfwr
2N+efWClwrSnkirqYjImm3fXJkf7iOrGqCcdlaV8/ulkDbYolm/8qsJ4Ltd/
/8aa8CChxkz2PHCo0XgMumvOe3sGCzTG//V1pwqNfyQfaLj2ywJnfxHIzPG3
+71O/ukM9Vae2ztZTDEKl12ptcZ77K295OoSKKCYwNc/uVRu/CLfW3r8y9cX
CjXGRzUaxf7TW/jTSuNKJd1lsLe1NuPQ90vC13+w6vuU4gfq+gPd9w6uD7a6
w7VmsdIR3Ryq/ltHLWqMv838NTH5bfJfFge6cn5Yr5AWiknYXWs4nRksPZIg
mRvjfOmhReYyXAbb64tiAoQas1K0599XCTVm0aWH4pu3Hoy0XmNWzEkprhSN
w4G66yddvaLMaEz8nJQS8faDrRVZ3oHxw2jM0jULDpSL8fZJ6ekD/3K1rDGx
r6/6/Zx+rkh3XY538McyGrMobl1Zn/rIZKyTUoxaY1b9a1tuqfgxNxQdXeC7
Qqwxq/+17bJ4M9UHRXdVVW3eLWnKWns6nhpeEckypeE0Rg0yx7Mfyr3BBh5f
P7nH3Tg1YrD3QUPa919N1s+N0YKM3clGw9uzr735TPbFXUevZFS0qd9FA49v
6YjGRGOWxtu47k2ueSw7CPvaqzbGrZFtq6TYdtNU3fvu34qJFNWNUZ+/V5Vu
TdqknSEzOeKwcZKP+tfBVdegRAHFJL6+Luuysc7qYEPJyQXB6wQUs2FOarmg
pOvT0rM//8tXoDFqkPkmubZX/j3V25b25UZxT6VP39heKPgg+rP8wk9veAoo
xjPJ7cJ9QXHwlgPbt00UgczBIxL/6W1MijWuVDIcCGVzTdrB9Jmr983cdTGj
Tj2bpa+9Zl3sOqs7XH+x+bbp83pamX/8bddPPsgWFkoaqM9Lm6j1lsCUtaXG
Azr0sGbtJ0lCjXntk7MXjR8Vgw03zs4NkoLMwUbZ4zlQX3LybeNKpaG+bmX2
qfQ3/IabG+O3a8G3hdmtwn2q7jdrQeRW8xTzxb+/LirtlT6C/p62zN+P/Nto
MklvbMo6p9R/MjQU+cTvkNEYr23rbv+p/mQ4s1tKMWqN2fnvPcXi+xpsuHl+
Qcx2kcYE7l6QVtMgfuX7nnSW3WnMk6alqqPXOHtJukzJYk+lFbl5PSa62Psw
IzVlgu+PB+8LftjfeWT3TrmVSp31/UN9HS0ZZzIdNxycuSPzq8IWzVzWgfob
5942Eo3sSiXDbc86bvxp5o6zgttmyVLMa5uNpUtUF+WdqwvivxZSzGtbhBsM
NpT+MTdarDFqkPktuf6J/CdSR8NnG3ZLeir981hTu8lB6m6pikn8asKm8mrh
zR/c8QgXLFZaeTVfTNH9D6s9wg0rlfa98YPwJe4rvXTyjQgJyOyeEPF78l1D
S6OBlnt1aWeLv7xUnXf/SZ96iD5MS0kxoZj9b+y7VW78GtFffvn0G5ECjYlM
dbv80DgGnygPJKdOFGuM5vj1N9bXfHXwxMythx0Plmcr+zSsVOERZaHD9ZUc
7f0OKnevlVz10+57gm8U539CY9AYNAaNGTWN6blffL28+O7Dh52Peg1fVh8/
rLp+Pt59iY2UYjSZEbEx955S/bemfuXd6ztClmjWKxnrwJheCg/IaowaZGJO
36nXftX9s7e+/PLWGFdjFd+Bp42qn3zsqxDVjdHnvUUKr50pBfdadN+UB3q7
7xddTHOcb6HJ9bLp+ws0UKARnoNrFNLSMQ42H67ZUdDU9kR9LPqfdFQVnAny
djZW8f2zW/WTiCBPG33dmKRys8+66eJm80uWAlx/KSxr7tEd8z97HzZXZXy3
cbJJh2thJscdO1Pd2qF5bKqD09FclbZzhUJXN0a96Cklac1kq5cp6TVGncnx
x8/UtHY8Ney5Om2XZtWSum6Mas+lKdvWTv5A5DC6zHS2sQ11/eFqXkO7/guV
6oVoryrN37o2VCHvMIIlS/57UoqaBa9gW9Glw46LzHS41oHMgbSKNu199T1W
bX/EcbGxim//U6XqJ67LjbNfBEQjuWgLyPxeaO569Yok4Qomk0vFUYHGqKNw
2fXV1Yb6R33a59PX+6j+dsHWVaHiir6iOjPiS03SXG+bgzXmrm76Y5cAZML9
TtQ2qk9v1eSStmulsG5Md0ttXlltlfLRQ/2DUf/tUNmSl/XT9I/kHMaixtjY
p+lKDHWXhg2jMepMjvk1raylRXc+Mdj7qKOqJDsoNFS2bK8i/nxRV7/mb7nn
7RaZVvGN8TvfYnEalfHSf++yrWClkuLjC/o9X7BzEK9UCjyS3aY6MoPtzRVn
bner6/UdtEZjTpofLbpL4S9CjTk1/PZpshpzergbdmRskKGYpEqzN2i6vF8K
Ml+UPei8FeYUKaaYbzKUZneie8zpUTaLh9/M0kW6TMkKjVFnrWNGeVlrr/Zj
s/9pb31VYXzsSl3dmP6eqhtXIlYm2iwRrVQyRBHw3da8uqr2p7qv+QN/drS3
5eWddQ1YpZ8qI6cxmnVJ07/Ky27q0n3EqW7Y2pDx67eTzXS41oFM4sXsJu1v
1cHezrbszPTpbsYqvn3dqp/8NsfHsEbpe/PHU7MiaWup2Q8i7Yqk3xrMXd90
NVUAMqttln/y+vacM3fb9Tg28OhRe9HV80v9xB2uk8rM3mPVhQnOa5KqzF3d
lZEkAJmAX7+r7tSsCvyzsbokJlZYN6aj9d7dvNv36x89fvhE//1DdXjb7mee
+PE1Fw3FWKsxn0xw3br0xN163e/HP9uaa77eulW3Xskn7UjLn/3qF+J+xg97
J2rqxiRVm3/8n3864fNys0+/+tIE8ZKl6ak38pq7dcOjv6+lufbrpO26ujGq
Z11za+uOnROtqhuTnvHQ3L0ONV1Ll6EY3VwXS5fCo5vMP9mhpoJDUpDZV/Wg
qyY8YLOYYg4Z6rSYvaOMrRO8Lw/7oWfhYrJMyXKH620TIg59fadTe+T7+x5X
lV9bGqEjl4m7K2r6BocG/2xrrEz4ZKe5Kr4TPz2fVtXeoh9+fU8eVVVVbt2x
W7x2Sb6K78RPL5jc9s7WnXtkFij5XzV7WHQFZMxvUHtVpDGaJUvTD9zMvt+j
G3KD/R0P7mccP/qabIfrwC9f21WU96BP87k32NvVnn326Gs6ctnrUdDRO6g+
dGVFl6aHS0vHTNyYl6lhE9W34aqKIjsDxeyuNjfqmopPiDRGMw3mjb3XMqo7
DAeqv+9py/3mjJNCY9Fnj9k9D9UViDpiSy89GXu1GtNXX9+SV9/R0vOko8+w
gvXPlvstab8emihYuCSjMfqGSt13rkw0LSmzs7Tokfobl7K+1C6alUpoDBqD
xoyWxliInMMY8l/TmC8RY2alksXI8YuJxpjEgsPIxZRiRJH2VJLJdGHMl4ux
ENkO12Y0Rj4zhBkJxQg0xmLkEEaoMdIMIzDSmO9wLa8xpvnQNCaVYSxntofF
eA6fOaaRdrgeJiYrleTiYykWO1xbFXMaY+v31tF7mu993We2Dq8x4phvn2RV
T6Uw99yHfa1F7otj/hX52QeRuyJ+zNz1mz7nb6oXK925r5ef7jPbRt5T6RfV
17u+nG9GWDfGckzrxgwT83Vj5DNs3RhJTOfGCCO/Umm4RFvKsB2un0VjhIkb
Po6mke+pNJzGmIsljdFFpqfSxxazUpplliNdqSQT4dwYQW9rMx2uV0tWKqkj
s0BJmLWW4mIaSx2u9Vk3YcQaYz5upvnUiqw3xt2amFTxFebZO1zrY3Glkj7m
21vr6sZIYjo3Rhj5lUrms3X4DNvhekQaIxNpzV7TWNNTyRqNMddTSU5jBJEt
FzN8dkljtsO1VGNkYlKzd7jIV/EdLnKtlEQ9lZ4he42x1Nhapm6MTMTe4qwt
lTP4MHm9aTcleiqhMWgMGoPGoDFoDBrz0jTGxnbLQc00XXVHpBenMWF2GY3d
A/eSAww/MVe8N3z64freoaHCn0esMc65HUMDjbu90Bg0Bo1BY9AYNAaN+Xtq
zHlNjZ3BhsLTZigGjUFj0Bg0Bo1BY9AYNOZlaYyfjd95dcPfgfsHY1+Qxig0
pWjbC34Q/NB8K6XFZ0qGBvN/HKHGeB3Pfzz0oDBVMdKeSmgMGoPGoDFoDBqD
xowLjXk7+6Gm8US1s1mKQWPQGDQGjUFj0Bg0Bo15eRpj6//WT+rS2f33cm1f
gMYs/uGcpiNH4c+BVmnMjrL2gcbdniPRGIfPk2uf9LcWuz9Dh2s0Bo1BY9AY
NAaNQWPGgcasLVCXLFa3rrZAMWgMGoPGoDFoDBqDxqAxL1Nj9CAz2JCzR369
0uhpjKEJ9YOCHxTDaszifRmtg5otrdSYiOmfX8pv72spOyMq8IvGoDFoDBqD
xqAxaMzfSGPSkur6hp4ok3emWKQYNAaNQWPQGDQGjUFj0JiXrDFqkPnqRl1/
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
vfm8aa/+oWKpl3hvYo3RbDllvnoOjMNpUVWustM+6okxizydfwjXHoqsbzxs
PvSc8UN4nfRtFXv0c0/R3JgF3j5Zuo+OtqrQ6BAv7cSYKSuDpUesLiw60lth
Yd6Lg0/A8SixvkYkGq618/7PusD0Mq3F6TRGnSV+20rEb6jCIPWsmIU+s7eE
HK02XtVWH7EhaviKvoIEJFcJH8yKzGQ/eiqhMWgMGoPGoDFoDBqDxqAxf0ON
URY5TX2BPZUUy5ZlNum/yXcFJ0vI5a0FiVf1ZzRdUZl77RTSlUq2cTmiuje3
TywWLEdasKVYtNSl7Nhik5VKmhkyrf6JDrbPulJpge4xdIXs9h5updIWX9F5
kFZjtHnf6VCD6Gz60NqF0tVJQZ43zWmMNjOWaorfjlBjrKvlO+u3sM6u0Kvl
ktVDcSc/XyTQmEVxuXH6ejJ/WWPedT0mZaKE26eWW7VSaeay7SXSmkidrSHb
A01A5n9LEq/Fd9b6OpisVFJ4eGY2659vV1hykKN4zoxToqHskuo0/JvlConG
dEWkxhuVRlZjtJn2Y6hSrzHq7A4STQoSaIwuzl5ZrUKNUcX1gIhVtRqjjmJ9
oLAflrJGdSsxxcx23XA1Rn+P8QVH3CTkMi05VA+b8XVXfd8xnSSjoRidhGjH
z2XvaeKVSoqPAw122nYn0E1uksyqfNHoKjjsIV2a5Oqfq9pJV+zFNM9JJiuV
Zh2O1D6Lqixv6Role++DNdqdW6sxgr35SK+199HvTagxcVnfeBpWJMlrjGal
kuKz0CqdxqjjcCJaPAdsRdY3XtKVSjvDVB8djTeC5iwQrVSSHrEjvlasRQrM
FPmPQGN0K5V8EgvjRBoz19smOUL0ILUao4uv29kY47Vdsce+9rNWYyLCBEtl
4+uuheimzaAxaAwag8agMWgMGoPGoDFozPjXGEfBN/PoY5/J1ZZ5ThqzyCnL
+Ff7FbnfLZCpD7PIOVfw8LK+WiCtG5PgKeq83ODpLigOo0jyaTZ3rVZj7Fxy
exJKDtk/e90YOxfDjJGqM47DaEy4p+gwCjXm/7F7Lz1EeNCUxW5TpeViXESL
NUw1RpWV3lUj1xgravkuS29IaM51mXYgSLJ6qDnXVWHQmJluWV0JJb8ttRkd
jVmWWmtywpLvbm3dGJmFSAmdrUGJTtK6MWo5ueYhrRuzzFMwPuNzU51kKsYs
8xaMz9isfcuEGtN82UPoMxY0xuZ9t0PNAo2J9RONE1ONeX/p1O9DlSKNcRLv
36gxNu97ilEr7th2oca4JApKeStv+E6TqRvjuv2G8ay/8ZrPNKnGODudijQO
jMYg37mmdWNcfM8b54YpawKd5ko1xuGUaPZX1n4xxczzSq2J72yLSF7rKlM3
xtbXMMUra79c0Rg3vyx16RLrNMbWT7A3uQ3c/DV7E2jMnaBZgvowFjTG5kOv
7TeNGmPzoW9qnXiUtoVFLRBqjPeG4hWdbeGrlkvrxjicFk23UzPO8BrjJ747
U43xsnEJyukSa8zKUNGYFGmMj81c/90VAhfqijmw0iqNicszzKuJLzkfZFzB
hMagMWgMGoPGoDFoDBqDxqAx415jVnnUGk6rrzlNM7eZqcaMJHIaY7vqiuBs
RekT955swd55otkvSr/E+ZIqvvbJt4X3FXsyyVZwrUN6g5lrNRoz61BIZ1fA
FjvbZ9YYh2OCAg5K37jpz64xNrsDRMetxsvBeo2Z4Xoh30Xzb8fUmpFrzLC1
fNf51vZEpa+Uq+XbFbzFXqcxUw8EK3uCt+v++9c1Zsn26ybDqdp7/gg0JixH
ZoaMGGTkNcZpVZ5w4AXGzZIt4esYd1mwqkgZnOhg1JgL34iWL1nUGMdVVyOs
0pgE/wsnXdX/mO2VVWOlxrhJUEutRnqNmbo7RLCgL+7kzuWyVXwVO4MFsBmX
lewi2iAuQLhmsOSIm3wV3+AAIfqVnfIcgcZ85JV6Z4WyOXSDj6t8Fd+NwYaP
ssZcX4VcFV/FrtBmKzVmY4hgb34KuW0Uu8KaBRpz+4yPjbUa4zH/RLRAY3Sz
ZYTbV13wU+g1Zto34Y09sYc2yVTxHW2N8T9YHOowV1suJnokGuOj2BwumoJV
ETprWI0xNFrqiEn/wl8hnDODxqAxaAwag8agMWgMGoPGoDHjXWPcT+tLnsr0
v36eGuPlKpqMUbBcplSvtsDvXn/RScppB0lPpanfBghnayiLnacKrrU9HCq8
ufLqMoVRY9RW05zjpHjmnkrTl0loouTQopejMYk+tTqNecbRONVk0ouyxH2q
vn5vXG6svrSv5t+iLeNzDjho+MVh+3XNrd4dLY1ZlJhvMpxqfRxGoDFBiTOd
Nau3xE/tbkCck0WNCfARjc8iT4WZhkqKb0RFdKvOuplrnGRZY0QxrzFTfwwt
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
0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0
Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1B
Y9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AY
NAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaN
QWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQ
GDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQG
jUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj
0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0
Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1B
Y9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AY
NAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaN
QWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQ
GDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQG
jUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj
0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0
Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1B
Y9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AY
NAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaN
QWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQ
GDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQG
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
Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1B
Y9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AY
NAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaN
QWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQ
GDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQG
jUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj
0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0
Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1B
Y9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AY
NAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaN
QWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQ
GDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQG
jUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj
0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0
Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1B
Y9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AY
NAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaN
QWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQ
GDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQG
jUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj0Bg0Bo1BY9AYNAaNQWPQGDQGjUFj
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
e0kak1St/0aCxqAxaAwag8agMWY15mePGz26yeFoDBozZjVG9e+3Um4bOzCq
K/pukqno+/w0xnZ7RpOx5zYag8aMKY3xn55W1W7wTDTm1dYYRfiZ/G5D90A0
Bo1BYyQa8+n0o3eNH2hoDBqDxqAxaAwa84pqTLrfjUfGHsFoDBozljVG3WLp
QqsRRGQr+o5AY1zmbDqVffdhxxPdV7q+x931VddS1kcqpBSz1C65oFKwVEpy
abqwUaoxs3xdD1wuau5+pJvI3P+o837RxTTH+dZpzIL1XxU0tTzWPNc/e1vu
3kjZGKMYRmM852w5I3061YUpG2MVw9uL15ytmdl326W3/SxOMXKNSbole5Ae
ZqwUeouvY9rNKmVvn+7u2qsqitJ271iSVtV967dn05jJockpV+7Wdz/VjpD+
pz0tDaUpmz9WWNSYyWH7U4qaW7r7dOOq/8nDlrtnMvZMtzWrMYplX2y9VN34
dGDo1hGdusxfFX+2ul77evU/qa/IifE0qzGTPz6Z3dD+SPcon7Q01Jw5+5N3
wsnCx9VJMh2uIxd8fj67sbtPdQDXyGpMiOOvZVXKJ7oj2dtRdbskbd/XS36t
7q44qtMYn90p5Z390lfEcKlJGqnGOG6MOF5epezpHdAP764HZVcvBAUHyWlM
RqHZu9YPoZ9GoDGT1xzLKGtpeaR/yYYGex91VJUVbl0TNQKN+aSwydyD+VmE
MEmSOuJD7RmfSilmcmxqSsl9w0Pqf/q4pbEi5fONClmNcd4acbKiqqt/6EGx
s6Y4zPR9xWWq/6qeSFvVjo83+pysaR0wfVz6h/eLsMP1qgVf/pF9T/VbviNj
vXmNWbLa9efivHudulE3NPCoW1l0+aSjizmBiZ6+448zdcqHvYbHob5JWUFO
UGTMc9OYlY5p11UPsuOpnqEG+joetuZdPuPoJq8xCt9vt16526javvKM5ier
HI/WqP87NKCsvx4TqueXZZ+4pl0veqB6deqTNBozef2FK+r/DvV1NWXs2yS0
l8nrMzNutYpHV1fVrRtb1681ozFr5+y5nN3U0zfUmbFJpzGTN2RnN3VrDt5g
b0db9pE9Cosaowj4bmteg+qzq894tB+WFV6JWLVuWI1RBH4vum3/04etDRm/
pkyWFRjXz1x/KNI82oYkPcJM/uxSdlOXdmz09bYXXfr9LSHCuG1yPVZV1a7d
/8Cj9paMA18qLGrM5DWHU262tfT8qX879LY0Vad8/ZVCVmP89kacra7qHlCL
is5hNjoer67q1Nx84M+2puqdn34i0pjotAOVj8x/oDUmjVBjJob+tDW/sf6R
/hgO/NnR/iAv/+L/z96dvyWZ943DP/Q3+DGP53iOY6Z+uS49nvt+7sfv2HVf
zVUzc98z1zSLUzqttmk1trqUbWpSTWpaWblUlFipoeZGKq64gBuiIioIKgoC
iooiMPwNDydw7ueJULTNfDjeP5TAyblxLi8+7/f7hygqjbkmoTt0wI8F7nUf
NebAg2OvpQOaFfcXDpqBOf7r0tA9njQm6EJ53sAcup7NK+rp8by7Ocx3pzGH
nmY5PtF9nWBdNMx19/Sfy3qaNboqfPn2GvMM6XmEe+iHwiF+eU79LPSC4XBE
Y9KHCVtnquu5B41hnq/Ik+g0ZptzBS7JJIKvD3rUmIO3d3KHRVoTeixdnBd1
tf4QQ6kxt74s6OGrHdc5Rm4GpDHMC3VcFXTZYzEvCCo5TALFHLq7s0xKnLiw
7YdjdBST/fe7Au640WSzC8vIGpP5eTb8bLn7j8yL9Zxx94nAvDIvansd8jYa
8xvnGH9CZlg1uY7ZNovBoOfza0Kj6RwmOzSvv2ZyQbeCObMsLQz09x+6fNuz
xjDPVqSJpmXzZvhAZ9ZpZ7gV3CAvNeZkWVr3jML1uZY1hXw4NultNObe53e7
uKMG9Yr7bGVeWVHIx9Ju5XnSmOOPdr4aE82tLLqX3ra4ZBR1C3849WE15tGX
TwdrpowGs3srmpaXZcODh67m05BLfuhj6PU65EztXJCBgcFDaQXUGnOycGeV
XKS3WOwaltthCkJfyERza2bX2+c0nKIXb6MxzKS6tN4Zx1kDOYbr5rTc6tog
jxoTlN6aJ11QmywW5F06fU1rc+hpWo1hXmxI69OqzH/YJ/rcfzxTfqZLq3Ct
DeuaYmIsNhWnMczsnpoZOKeV/JifCMfay9lXh1onB3Sri+hXxDFXhpq2ttA4
WnsJutqc1jenWnPMlZisMcwrTWn98LMue4mvPCOcQ+dZOR7L8ovGlPzQOOO4
uHVv1gUjX9AemrCOxgRld+bJjGqTFd4KFp1uvkbQEZpI0pjXOjv1w8QteE79
gnlVOLXGvPzyxShfYzI4Vgv0+MNkMslko4fSX9DM54tQrlykM7uOdZY1s2J6
hsvv3P5CpdQrw/9yGuOIA6yBZXQ9kyv6eqcxjMMv2rQWqAJNb31i4m9hu5OO
PmkVaV37glU/1hr7M1Zj9u68W5LBdkT3OPzJ4+2uv0Bx6ew+rMZsSKofXLDa
1xZkfa25T0pyG0ZUyKlnbYabFOFZYxjxr6nkxzrb/TCYRmMY0SXuxenjJ54/
Fbbv0tGnbejijAtid9BSDCOmFPPe02H7Lx99KsC9d6evY2P2bKmYcH+t1vRt
NY927z7IwI57+fJ68bTFcRIebCs7ejIuLCr5aGG7aA6+uH4DjfnX2StCvdkx
t1Nizu30sAPx31/jdejcV4z6AW7oViqN2XrpZr/jXXbz3DDndkbYwYTvr5Vz
h/Sug7nFqOLePIFzmG3RO+4085VG1LedGsP4rabXSLp5Xh5l/UqmmD0R9bPQ
fMp7Mm+khR069/2NV8gnOq6AsRqzIeZBrmh6Dr3loNKYrzOda3JpsL3y6Nmk
sMPXjj7rRNckojHH8jKKXjmiCNmxjONFzr84I/9LHzTmwNccqRraXwxtPM7u
6Ith8XmZTeNq9/6yNNj0MJioMcnHn1VmOAMzA/KiZ1UZcBz/zUuNSYjt0Jhd
H9RRtjvmclhCQWbHJPwT+YrwSaL3Y2M27EtPbJ7GDLezyeozNlCOivnpfpUW
esFsX/mWn/EU893lKz0GMwQpk9V1NRkvBHwV8guITT9YHfodojExn12u4Eox
wgFpzNGvy1SYebDbJ/uvv6jNcES9Ar75WOqur80odsfxU5DDbDjJzu2dwewe
tBqzgdU+aLTZLfOiFt7R82lhvz1I61S7P9Gi5V47TaSY7ek5o05YtMy3VT75
/jdWWFoJRzIPX+TouKnUIPNWGnO4qHoGWi+WxelqTn7YievfZ9VVTyy7l29Z
wTqM1Zj4Ldkt/Mkl9JsIaUxyrONqD7MiTeLSDWc4uX2zmLUEaUzw3UFs0qt9
VRbvppjU2K455961PNhVs/vU72EXizK71Oje9ewqVmM2xBVluizI/XBpzNVY
4ZzZTnjYlG0FDGqNiQt9Ogrhm9XYwX38t12nArYnbSnol5qIk3Au0shJnMZc
2MeHZs9s1AgEgoyXAq7MgOxd5pn+fbtRh9kQ/yK3X4NZFS6NuRbruLwgfY5R
9toNMscq+XqyDFrljQ+pNSYi80r/AvR10KqrGxszuN38qWX06yDlh0YgFHN5
y90mx+2MCTu+5eeEgN9eVpMt0mrg3riAasy5l5llTY54NgqvpsXJZ86/OOPl
v3zQmPTYjlnHIloWZ2vKS7cn3N2cUc0R69wLbTEKuLlMgsbEFF4ub8l0Rh1c
B8s+I8uE/5hZ/jriqPcacyX0+Zjj+GlZ1POba/acy9mcVpY3Amv9ojI9PplC
Y/bkJA8YofU8N1PT3JpZ0cefxqznkZbQvf7XGGaGROGYzyVNzauK7edzN7Mq
bnVOqeE9yh8ak+K4Y91TpcJs/7We2odB6HiYa5+n1PHmkG+c3aSSHEvJZhLG
xhzIju5xHuFsSx1VRUH0Y2NCHo4qSKhnmRuOPEitMUF3BwaXHMdSk2xkOK+y
I69rWmWGZ8Yyz717C3EY5snSNCHmWafGMNNEYtz3Ws++hFJMUI7EPXGZNK+q
M0+oxk08JxvrMMyTL9OwL7DjNIZ5inuubUKG3s65NCbz67oZvc1OeBjH20Pe
RGOyQl9OQPut2TjQN5hZLeQM6pHDi2VpOv1yNpFiol/kTKw4zyxLAv7r7cmc
zfeaOTL4MG4zcu/cptGY+/sEc445N8/PcGvrtqcUbb7XUaN2v8+sHd13Yh2N
Yd7o610iLfnKDIsOZDxTzKlaztSqxW5Ty0dvscs3X32+55VCuuJeDEU3L4hK
Y4LypIPLNrt1RTY6lsfryeueRTefdYGbl/9BNIZ5tYs/b7PbVuXDI+fySjez
Ko81z8y6VWa1g1fCJFDMiYocpfMXT+uyoLlp+7WXm/PaOaPwwce2yH2ABZmC
zx90cKTzc+ie6NSYk6/cE8E91oTVVCCzPsU83depd+4eWm5dy/Yb5ZsLehH9
MM8p9iVQUczpqvQxaLbNC7Ocl/zNNyq2cwa4E+4FsSwbuM9KcRpz5sVO7hh/
dhUzvgXSGGbWUO/yH6RdS8tKRTVmU35PZv2AI+rgnm72uSnXX6B4xd8EUwwz
e9g1Ncdc5RXVbb5ZuadsTLDg3k8s+olIAsjEle6snRAZLOjKxGqM49mycb4G
O8+QxjDvSKnmeY7lAWS80ZiEFvYsBTpZjLNJLBqKSaxPHzc5t4KWU9G2OZO3
/cUwV2mCt8I8t6SKODbmUtUegR53HJuf3ncJHQDDzJD2uOZidYFb0fD5OYqx
Mcx0Md+xVm1W1fQ0hz+cKZqRIccHm7mjoYZJnNVKlsIMfeXH5efYtZszaveU
y/lz8G92839Njfk64IsUpHiLnVzR1wuNYcS1Oq/Gl4V5B3FPhR27KXFTj2Vh
iPUzOV+Jg3ZXp8lUck3cohbFhmMylf6RkCODEcmq4cb/RKcxN+PbnPNmNRmN
ugUT4TrZKHkWTNIYRoLrLSZhfgwuU+mfJ25KTPDiDLOoQIaRIHC/tyAG99Q/
T94cxLyXAmQ8aMzOCL7GYrfqpTXbvyFnKkXEdzumbJUUH8dnJx1nuT7RV435
1+9sBTRBZXPmBuxomZ9eieHdxDjwbCNBY7b+znXe/RkHi4NxSrMr9KnMfa9q
Xex4hILM1orhAfGwYFiD3jsPljCSOpRWq2lWWV1bkcFprlagQ1CMPWwGXmMY
tyWO91rGa4LxA2CCH7vKuWA05it2ybBUIB5ToPRI1ph98b3ONVl6Bp+ddIY1
5FyTiMbAEd4Eu/EbZiodiGhyXnAtj7H24EbLMA4hRU5segmXCDJ+ylQK57su
92ySlwnY0TLBRQr3zmpVZUf6lKl0JLoL2Z567gW6NKUzOXK73SCO/o4wKuY8
a9hxEbYi5l7HDoMJzhpA7veNwxXBrr9nd3RLZALJ9CxGYyKSe6Ys8wMjGj2O
aJz5She74cMCKVPp++clI6MCiQKze1BrTHC+FPq4ZfnNo8exmUpRnfBSW3XF
l7Eacy5lyHVZaeRl/IbJVIqNEMDYMi+O8rPG3CvWuH6jmc45jE1TunJTBv8Q
Km/YCGvMFyVD3YNjAtkc+k2UVgcXK42L2m7FPHrMnFLVycYFgxOYtaRgHXnd
s7w8LkPvIqE/OjXGsXO6966KVOxomeASJbx3TWVHwRoT/rJSoRQMjQ8bsBpz
lTWy4rjXkA315ZY25LaNK5CbL6uGnUChMcHPJpxLsdZTysKmJjFY/cguZFk1
6YzLUEyKwlGNSYgQOGbYpuwuDsbkKDHOtyB3fBZNf8QO15CY8pJRuWBIhc4P
pDHXkgaMFmhu+3O5/FyBErNO1oTPUwOOvRaaoFsn2egQhyuqHtWhe6lVyz5H
1pgbLNmq4xpIXHWPgclUCr4vRb8Osrpg5x8ZDwcHRhWC4dlZrMb8Vu/4RLNR
K2jvyCjr4A7rkU1smRZuI9WNCW9fQN/7JplK6c4Ztlu0A5G7cJlKQbcQsrMq
2gqZ7ypT6UokXwudFLRD+w5gM5VuZk/A+5VJmXqMoDFZrFHneq4pYGIylULy
ZOh6Hm0M8a/G7KuFeldZZ3NO4zOVTjcLnTuVfzTGGduadPCeqGMnkXKUksUK
eK33VFynzlTiTkFfZN49D5lKIdxJvc06p1Zx69sz64dFBmRHtIlrbpMphpk1
rLTZLXPjsXGYTKWDhTlKhMEWuNk3nRrDeyafFIxMDs9jNCb7ZYXeqlap5UtY
onFTDDNb6p54Amboy6Ei/MQz4KcKbw+qBTLs9LEaw3ko0zqe7daix0JheWak
cMFis6hU45zqrsy2ccx7zc1Ft3zVmJByiPSNqp6vj2Aylc5hrGxFzTqP1Zi8
1FHX/Jh4D29jUpNuR/bAcmKUR1FozOMkKcTyxnFhaAz27zU18NHBohsJp9cY
Zs6IwmIz6eZq2kWZtcN8zQpynNP21/qsMRfamqG7Y7OwpoiJ/Xu+QgtvKqWw
kkAxzHtj0PbVTcRexA6V4eZMItvXyL334D1rDPO+FEIk22JF/iNsgtKmeuQL
uNbxqhCjMYWp42vujfgEO3ImP7IP+aFNGYVoTPqwYGpGMKZVrCB7ooZ18jVX
Z7OYFwcGZJmv+zkDhllkT1yZTjjpq8YUJ8lM0O6h6A89hc1UaqqBdwGLfjyc
SDH1XD3EEUZFbwguKYkd+lrr3q1sqx01pYjGbBPMDozPCpSL6FXHRB8zX6G0
/WHS62u6BjLrx2pmTOj1v6yLSariy5pA3kuVqXS5r8O1ohanYs5iRsvENVXA
6KEdbMVqzLZGdfe4RjCzQqkx2wSaAcezuHkWMx8qoXk2GGqEg5kN4zWY9xpH
u5lvrDENLa5Valkz65bNi4RfVFbmWNfIFON+i1EpCcGNWikObdDBW8Hc8bqK
nKkU8lqHLhR29Isjrsskjj1qVce6TpOpdE0ihM6fhpy7xZgPrYodXkZ2e+Hr
SuysbusyOp7SDncycTlKLyL7nW/5y2rMf3wT8BOuxRKuou+6GvPtkw7ne009
+QzysJmwlIpZ+Cusbgr3VWN+LoJmzKrICSfVjfnHw1bkiDTVsJVaY5aNSxZ1
78sd//7ZnZT01aVbYgMuOetBFE5jvi90L07vIwa5bsw/WRWwmVhmWsIJGrOd
g76XPGxmyzXce73VmD37+DNmu1XZfi+Ysm7Mly+E0PeUkLjkeuoh1HzZN42J
ThmArgUtqoatxLox0TnISCb7NPsAVmNiXO+yrw4lbSWnL+2KaIbVwqotTiBk
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
SCISXaYSbbxLjUH0wzQieAONCbrdL9A7oWBqIu3+U6b/MpV80Jj7cqTeJvu6
txoTjhYG8agxv7XykBcaFOHvVWOe/dAwq1qDUpYGJP07LxW+x0yld6ExRein
z6vCnbgRjuaReNSYM53oViA0TsJG6kAHUufT89gYOBGJNlMJCupm3My7Q0ir
ceQBFS5+UAI0BgmKir7rasxKf7wHjTnVitx7Sp7t9VVjphquvFON6WGHEzVm
RRzvQWPOCtDFeXGAqDGO93rQGNx7D9JlKgUXoMNdjN0FjPU0xtlB6fRp/sQc
YcS9dbHjyWmGrxpjV+b89AYaY27O9qAx19BVNF690V8a4+ygFHqrc2CeQDJW
/UB56Fc+a4yzg1Li6SblHHF6Sx2FiYx3oDGm3qceNCa8CdE7Vc5Ov2vMsX2v
J6HbAet888OLDH/VjUEzklyrTpX9KyaDSS3Yuo1eY6zjrO8+ao3RCx/7pjHb
U6/0OvtEL6s5106/j7oxjtj5kDMBVci3GEauHD/pZd0Yf2tM4r4GtXPvMjY/
uc7we90YssZsj3N2qYYeUDfqX7AaEx8vdqWur3RwkvENlRCNmede/cg0xqpk
RXxiGjPKv02vMedZyElmcSTmnWiMXVLzu88aY51k7Xn/GuNsrpRYzVUuo72T
XXvvkio9Mc3PGrMrFeMtHZvcA2Ne8RZcuUtXA++Owgc5AycZrd+raGWTKMY/
GjPVVfzuNGZKWPJJaYxNWJ7lm8ZEP0keXIL2nBUd5/699evGoBqzwnv4MWnM
0kSM7xoz1U1se/0xaIx9amCTTxpzoiTZWc/KvmLgFDz2e92YN9KYVd7TN9AY
pNESpcbUcZFRkdODm96XxjBv9PKdt/zGmbF9595/3Zh3rDGqISZRY6zN5R40
phmZPlR3l8ZYmI+xA1ew/ZVoNcailDB91BhnlP7QqFGhWWOuh03R3xYENIau
oi9PSKUxe3IwfUTYu73RmNXmDG8zlb7lwQecqfqt71BjkPZJB3LgSwtcaV9P
GrPafMuFLdj3TrP3eaMxjvd6qOJ7jDWIaqew4Nj6GuOKbxITa2RqnMnM89Ii
vNKYc53wyFGr+Fm0lxqzsRj9sXO0Mt4bjTH1PPZPppJbY1xxcMvdZhHeULQd
94kjZLzRGFf8+1Ji7ZgaN70F3vX9/tGYnTy04+Fk0xfeaMzqULy/q/hGd7jW
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
VoVq1QZPaH2N2XCtY9Bo1auHOSW83FaF2gK/1brQXHD5z6UxNUIv90HrmsG4
rJudFgxJOIVFX+0/+8E1hnGgIE2gxGzZv4DG7Ms5xhuVLyKL/GlqTGL3KLwA
lom2TUBj3qPGhDXp4HVvE9fc/jQ05tjTYw0TskXkzAc05qPTmAQpcpo01eT/
1TSmILRiSm21qRXyvNf9HKlRjxyhVwzs3AKgMW+mMczLjWl9c2rke0+lMWGd
RvjpP8SNL4HGAI0BGkOrMTvKBRMyQZ8CaAwuvn3CV04I+kcVy8hqARrjrcZ8
W62QDUsFinnkCoCgMd/WKGRSqWAC/4IPrTFmk0EmHREMIDGhRPYsu3FkAPuU
SrFohmfeqTHpvcPjMoH0o9GYrw4GfHd2x5NhJTI/zosP8as7n32HGxuz4cRj
jmzJgn2V3dDwgLWBdmDMyb9d5Qnn4fUy3rQ76tQbjo3Z+ZI/OSmQKDDfsnU0
hpHS41gii4IfDGcqMVJ70GW0Tmbv/TNpjCsSt+T3SZexG8i6qNN0D45wq+sz
Sh3RVT2kREYKOR82k3aC8+AG40NpzN5K/tS0YEilMCGz9KfXmNIqlVowPAk0
BmjMX0ljnj+Z0HfLJofnkd0eaAzQmI9IY0KqNEbH5ZikiQlnKoVUaxAjsC8q
o4DGvIHGlKl1plWdyYJeOgKNARoDNMYfmUpbq2bgb80npjEBOx/zte8qU2lj
8QS8WmgzldjjiyBTiSpT6QEPPhLTZCrhX/BhNOZa8azj7napo+gCg5iRlMHV
ImeaMRYpU2lDYoMYukeeK45DMpUOJYnhe+IPrjHOCOZOoqfLpcFY6kyla+xJ
5FraMefd4etlKjGeO78X2t6I7/2QqbSxfAr+bI8as7242YkSPS9isXVjgl9M
wDf9Bu7lP5/GQLGxYhrdQCO1lJlKjP15aUI16oF2m36ia9+vHzJTaWOlGp6Z
P73GuDOVmE/k8N74aWrMziuR/Fk9yFT6QJlK7MmVTzJTKX9cDzTmY9WYwIsC
/vxfMlMpXToKXdosVzzA1o0piOxbgk9MGhbQmDfPVCrLQ24caTKV2GozyFQC
GgM0hqgx/+aK1a3hlHVj8qWfqsa80yq+5zrhgw2NxoAqvrQas/8mvE/RaAz+
BR9GYyBymWrOoKoPs47GOIJxuXvKrucmoXVjwpvha9KPQ2MCvituRUf4TOb8
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
1t9ZY77/a/dTgUg9a3VIWEBjVrjGbEvOH7FYHTaD7EPoj59fYw6FVqnNNofV
OMK+dohWY4JOPstoUemsDuFLoDFAY+g1hvHHk7i6oeFZu6Ov9JvSmL0pJ8oG
4fXqf7/CNWZtnsx5kjqsk3z2XXqN+eP+ifcSidHmkFR8Bo0Jjn6T2aGFrxv5
tAhzNaxeB195TBr2vWs0DvPno3CefNhid0iqVobG3AgT6D0LnHhzaTUm+GpR
ZqfOua2UTZyVpjHr3ipcx5WJn/MQaMxXrTHM80Vx7fApqRQVftUaE8yqzOwZ
h68txUBjvrTGnK0oGLNaHXbDaH/YuW9FYy7m7ykb6ZyyOyaGQqgac7G6QOtc
5Y8GlTTsoh8ac+nd4XqVZHLO4oAny6xZ0t9/+B6HpDHBj8WQwjQ+9xH+kN02
rtdB76uCgcYAjfmqNIaxPTausn94xubwTF+bxjzrd3zaJHwGOwxjByuOL1HN
oS8DjVnpGrOhVIXsLJv49anPrTFHa6TI11sHylbjNeb/nt3NFoo0Fit6jAGN
8dmCzrKTa3s61VPjzod3zzad0evVglreibPnUI1ZXahU1j7wRjFBMcVQl1pl
Qja7zTJunJD0izkvX27ddypg562Evhkhx5fGMMJfZDQr5cZZC3JcmYxTclkv
VFKw79CFgJ8uHBDoFXXpS6Qxl75PreWPTCHf5fhmNCYoIjejXWdAbykrXWOK
amaRRZ3oOUjQmMur4sshybgZXZdl1Zgw1p7XnSLtHHbdoNWYCBF25ZHXrcEc
5tp3dyoh6QRuaVeGxkS1YAs8JFizNBoT/8MTIV9jRrfVytMYXg16bk9KDgKN
+So1JvW7tAZIhl2lv1aNOfFsD1cq0luxawvQmC+tMRsbJpG9YRdX5X7tGsO8
VhXXrlOhdx86jdnYiK7yRzG/wLfGBLMHu6ftBp2KU9WViZ+zfaaGW+ShmEvv
bvabLTazqKM/uWqQr8N63UbNQFgE0BigMV+Jxmx9zh+SCdr75VPYI8HXqjFz
ZtWQRNDRg7Z2NdrJdmiHevBvdY5OoV1WWGPCuAKFVNAhBxoDNOaTNSb8aouq
s7O/RWVGDyagMV7aiVXXefVjnhuoddYo6e+B3r1Pyne2htKuETn8sGXVyVqi
zp5jnCisnXDQa8yOhHTJNG4mUkGXtGVkwoTemNEd4VVjrp9u1nm63NZZuWxA
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
zhdNTwmK2ZV8psE886G8klcxj+voM9+FO0z0iuQycfuEhhjfgmrMsby8IcY+
bJgQx0USGnMmL+ZxmSky8MP1ZH9GTlmMJfK+mUNjoj6LLaW+Naox3ulCxTRj
MzZ0ScVmkOHH1zVOMrZYw7TkwRV2itlz40wjujRGh/NKy2NyGylLQ/566R66
xvDPV1Wjb6Ed60lOyVx25pZnRqNkDPsVZKTVYy9JYw6m78+TVYzi9/gWjXFO
a1cwvoZuVOZBAxm/jP1FXTLiPpaqMb7JW+40oXyBTajG8C9UVzMXwvSAIJiD
Yg7lifqReaj65UEXrvO94/nHHse1TbEfLorvYMaS6CGdMC06Za8iNi1r2dk7
69OqxB34ycUOjVl0vjC5eWyE+JYUjeEH5ga96pGRDkSoxiStKhpWMr6lqqOC
ATJzaky6Xx16ADDMNNZVeAruL4t/EVunxGY+K83JsEdjHh54WhODRkYnxtRT
wxlPa2OwOBBJppjrS7N7+01Xylp1fb3M9KioZRxfFLqpwShBCg4yi04XxLVr
iPWiHb588RYx+uVw+rcPerqIZaJrkL78NjiVNjaGH/wydwx9WDUYJ7xtz9gY
0Y7yMdNi0U4MiwtK1l/IXpZSkzdgub3Rjih2HKdTDD+uqXrqF+TRicHk9KfL
Ih95itskE5j4KTs9WEDmlkeVaZf8RdnfE5v+bNnFx+vTG8Sd+F7JqjF3dkjR
DzY5IalpjSlsFXdN4ocO7UjnjhN0jeFfVyhMy3xqPK+obH107rIrZbG1I/14
/0fQGNCY+WnMP9YGV+E/TukbMnaza4xLdL4S5RqX1TZrzHr3gkFk359sEWyi
pCbxtt6VWq4r9MpakROuMdsznzU2SmpkiknSzDfdq5pUtzd29JOJBtMYp2st
ppsylSx7FXkYjNulfHzfML27G11jnK61Irdy+iFx4CZKptK3kdnYC7W9L92/
pmcqOd3tJG6Tr3NmJPm8Uhv1ncLNtL//6F40pDPqu14lOpESlHj7Htdh31c3
IHFfjmrMTvGzpiZJrZy0KGSCLferptTtTZ39ZKKxKV/pLk7uNmQqbXV/NqjV
z3S3VYpuP4zOq8MZxGicyD3DojFOqTJkLchzV5GHwXgk5WPFaoxTMoGH7Rpz
Kq3b9MKJ/POelByllVHm6je4xuBVfImRLWyZSrzg1wRhKZ46ceYo3UeW0kxz
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
S38g1Y3Zk09Ae39P3dR0S8ndpT8QdWN4Z6vxe7Su4gQqxRx2L0VAY7jiFo9R
N8aVyMfUlqT44xrjVoraUWses26M67Mh3RtoTO/AyEh3jf/Px4gqMVuzS7DF
rakTUzVGXGz54uPicFqtmIfYQ0ZpBrNuzK1c7EpPWZnBrjGbH5XMGIelt2kV
Y5zuIPSq63zpxKgbw0trJw7vzy/ZqDG8u13Idf5onRujbgwvpU1l79gYS9zM
xniPVWO8Kix7mbwwgV4uxuclNox2pjj1lLVMpVGlQjUkvh7PJ+rGhAc3Yctd
2x74tjXGcXOoRzn2qL5H4MmhMYky5Ahfec+uujFL7pqH4c1WZcUz68Y45w0S
N8ssmUrhUfiw1HeuMQKP18gQyuGabD6jbszKl/iKny1NP0/KVIoXduNfYKhh
sldwFKkY43y9uV6t16qH0mIjUHiJMC1hZOa1j/iMujErS8gzv0DOVApswn46
mpzompwsy72ziFQlxjl/CFt6E5nn35LGYOGBbczG8YGywanqwnuLSElJ/HgZ
PqJW2TPUpTN9NvwJSK0Y54f92Nsbyh7QKCbGQ4oujbo8PqNuzMpSPJ9RV3o3
FlcXl5fYtWP7K1r6EvGQstWNnqn0vBi7iFCOqpQTfXHRQlK5mBRhD3a2HW35
npmp5COtwlcvS6aSKA0flqZUdU0qxaLbfKJuzGXfeuzQZegPZ2iMV63lUXlJ
Or1uTEB1neVzaYvvCKmZSomCDuSx3spHjPSlxECkOabdmUr8POz6lTVT6WwT
nqfYO6pW9rcdCSepy8GifGxN69rL7dGYUmzVTIqFtLoxEnytSXPeicbwk1D3
U3f7HmLUjYmS4XdQGvlrPqliDF/cTzBRCKM+TEg9ttZ0pQ9TWTTmsLRUaxyu
f2FX3Ri3SjTxcLo/0J9eN8YXPy8YdcUPCI1xwY/2nTW0ujHEQ+OdbtSBMYJO
ZCxNb00Bo27M7UDZLFNjnJ+MoHrT7MwoEcPPHsTP2grpE1xj+E/QXzDHu9wY
VWL4DxELAo0BjZm/xvxjW3wrfnc3UxK3jqEx/qJe5CInbfdqWzXG5Wqx+Vgy
IfVhr+K7gRiTo+9N202tG5Pcgs99WBLLY6/ieywNvZdouLOTrWxv8L1+fB4K
4VpcYwLSLHcgCuE69iq+rjn4+UlTHONGq+Lrmos9Ot0qWM+iMYvTO3TGAdFe
GtFcQxeIOv8sa/1eURkx/KTKh1w35jp+nWocfpXAm2eHazs0RtUoXvoNvX6v
ezF2uTVQuoaiMSHoOBZjwz1ftrK9Z+7hy9LYJdxom8akms+cg6J9zCq+nsG1
Wvs1xt3B7b7Usrnp5bmn2TRmByonQ6ID9lXx5V1qRM7kqhof1mq9KTL8Wl35
+qrNdWNis7E31Kl60k7uppXw5V2oxdkC+cx+lLoxgmb8IVV+pDd7Cd/vRMVm
YVPV+bBX8d0TXIddT+gH0n6m5Cu5l2AXnPrJxrwEHq2K75rr+WPE5+t4eo7Q
mEMvkeETxh7hVrYqvgHlXcTLni0maYwbfr1qNDSIT3D2VJpLYxxWBQiasZIe
PaWubBrDuybTIO8fYV8VX7JfIelItMq9By/iu3JLDkVjTuNAxNCYf+dge+5U
fgyjbkx4DX4wkqaHMqv4+lRgiqofzb8UyqjiGyLEL9pacikacwwd5WLsE+5k
q+IbXEmsJsWLxZjGCFrRvwyUuzKr+G7KKpmZv8aoWguWutHL9rrjt/9DVWso
GvMEW2hMjUnG59nwKIxZxde1CNvxZjoFu1k0ZnFWn844KjpOHRizOQsZx2Ja
RwmsVXyfEId3dbOPbRrj9grdxWbag92ZVXyFosH5aUxIVBv2SVg05jFGVZr8
y8ziveeF2FrXKUqWWNEYTXfU0VP0Kr6Rjdi2OpZ55q1rTIjjviKpZbc2yIuS
2DTmTDAiA0rRKXuq+P6UV2y+KJ9o9WKt4vvT01L2TCVLeEixX3/ftcaEVqP7
7JDwIFsVX0EDsc92ly8h1Y0R4JuEaQO+GsFexTesRm5AZ/4zWxXf842kmUuX
kDSGEBVKOhIWu1/hViAVv2WN4T8eIN46PppRqjdR2IO9t2ZIKIhmVPHNy8du
iHulDygac64eXRrDwiNsVXwvNBNLo6dqCUYubhXYlsDQGMcs7Gp1ssOXrjEP
xdipD01Hotfv5efg1+L9Apa6MY/wsQSsdWMEuBZODwhOMKr4Xm7DFqJanEDT
mGIMHKbzU5lVfFOE2FlN1129hKIxj8To5YFGVspnlu2NaFbYrzGOie3Y52St
GyPFL4DZ0pGEHnhFlLE2Nzs0pkKKvyldY/LE2CVQQ9Gtd6AxllEuDc9FbFV8
czKJiolKYTB5eEwRPhxF8foRo1pvarDccsWq661fwtCYJYWjOmvlYtg0JkaG
7ixGRXkOs4qvC6nwl7wsG9cYtxpsjTA0xjEPu/id6vWlaEyBGN3UNW0VfGYV
39g2BU1jzKNcjNr8dNaCvTVl+I+KpjfCNMbywWYHgwOYNXvzRaOgMaAxb6Ix
q3hRtcR4xd5nrlSN4UUjj2qqrvE+t1VjzGNpkD269iZnT6WQcvyOcrgkkqIx
YRXY+Uch/J6jp5Jl9MuI2J+9iZIAH15g1JddxTTmJPam/cVruHoqrXuI19LR
yR4upmqMw/oMKTZ4piP3OENjjot6Ta/KWkz9O+9SA3pN1ypg76Z0FscQ0wXP
vYMkjTlbhS2KTuGG+Xa4ti9TiaWbEu8WdsU29MqNrDGW0S+j4gD2JkqCRtJa
uGaXxhh1A9V+W+kgw0tsks9DY75295Jgh/2xGh/m8Jgfc0wrXdeWs9i+nko7
LaNfTH9n1ZigcqI82uCrNbZqTJQY2zeqRHSKMRf1JY26McrzTpI1hhhG0vF0
MUdDpcX3uix7aOMDzp5K52qIPbTsCllj3IqxrbI1h8fWU4mX1EoM4e95+SX2
d9en6CyHK9zYeyplE1Xs9PIwksYsFmOXzqp6HysdrufWGG+H87hlqfKjmcNj
AuPbDUZ9T/x2O3sqnSa99WmWVkpu+C/Isic8SqaS8HrnlM6oH2nIceLUGKNU
xNAYMuOw9lRKx7RF3ejD1lPJHd8pqBpjGf0yUu3G3lMpj7SaOsJoGmM0dFVk
ONGbKB0Jbhh68yq+5OBlYj/qj9S4UTQmNKAKKUqg6aty/5FTY5AKvcyeSrvz
MbY1dhQlMDQmQTRg1CleLKYOjOHdMI9+6RKw91S6LiaKu4/dO2WPxiCju0tW
udM0JsD1+ej8qviS3IOhMYJ6bHOaEAtYuil54OPYxxo97O2ptO1FFT7z8+9A
YzaHeOF1VSZkvvThMScd90uQI3ynZIk9PZVWYgc6Zc3D+fVUIknLu9UYy+gX
0xzYeyoVk/bZnnCSxvjWYBc03dIlHD2VLKNflM1u7D2VSoiZG3rCWTWGqOJL
jns4NVQ9iny7GuP4sI94OVvvJDcpNv+eyiUsPZViojqwBU7VGMvoF2WrG3tP
pVekpdEXjpNLHFqXRqeRZKVwaoyxX8CtMUQVX3LE4YN8BqNYavmSX25VY/Aq
vpSeSq/xnwOyhVSNSZBj74tDDaWJkkcVdkM93ubBpjFInlfhAwbIZIqG7deY
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
AJrGoOGTJ8UuyXpLr75rjcFtpFeS7DBfjXHYnJGPbRvD0nzWxtZ4kOjGqJI9
deLSmKByua5LsMXGDtfDJWknGCAT4OCeJh7GLi5lz97+2JgL9V16RpoSJd5z
jQlxTGjBDp+zpbcfIPV7kaK+1imGtadSXjH+q6d+UHj4fdaYMC+8obBpn319
l8+hMfxbCpWyyc2+sTFnvapJMy/P5HNoDP9WpwqpLfP71phIrxrS0pA+5HNo
DD+9S6VsdTPrSmQLNowW95bfg8bwhfIugzlNiV7Flx7kDteDvcH7WUwGnRv+
du+7xuADVHqrch1/XY1B8cQy6UY7PA5xaMyhsuLpSXEiy9gYsrcM179C/m0Z
JEOu6GvexkeLWkn1e+3TmBRyn6OuymccGnPTo2ZSJSu3/PdSB7azDAv8bNeY
AvHQYPBRmsYgwb/WSWxXTywas+S5kjhrd9Y5c2lMnFyuHxEcwztcq0qz02ka
g0TAC7ESA5nOOtAY0BhbNManVMWpMZayvdiE5ivNQ2McNmY14DepvQWu7Bpz
tdicGEVrb22jxvzzjJjop2pUKUr9mCNkVl4QKaaMvYWulkyltQ5fxxHFiqcb
gr9m1ZjDlhZI062Cdes4NWbpetdc7KczvV5nHM8Ppze2JmJ9BqnWt36w7v4q
xggZnqeoeFSvqU7jfTiZSg7LzlPWQmeZH3OEzL9jRZ0aY98LVxszlVLlCLaw
jZBxCC63LPEByZp5a4ylUAw6zWhNZ5zeF5EO89SYrYvT5MSQHf14mSicMULG
a+m1xkG9tuSK1zwylXpfRFvvcK1pFi/+xm6NcfjpKbGH9pe6smsM1gKJ2t6a
ojGmh6x3uJ5pF2wlpS+FVJCaJ0+3vExzYlDMwnOSliljxzPBO85U8sYLxaCT
VjODFPp0W/0ra4wQ94EByRW6xmx4gg/0/TU1xuFMNWU1lWY4MShm4YVyZDUV
xjgQGmPsLb3CojFr/dyxW/Wu4kvvWmMEeJqpvIBH15iU7Dl7KmHhWoTt9XqD
zqjOT6A3tiZi91Mpcdo0DLYUrtpC1xje4bziMYOm8THPtkwlt1fjGtmzxUyN
2RjAe2AZdaZryX/LGmMuDjNYtZKTYj4EjbEUijHv1rPIEb7s9lwUw6oxYYGN
xHpVyZ87v8ca43ixibTPzrS8znFmaMyiS3UtGqPi5Q07M5XOOkY1U2ZenuvM
0JhFl9GZl6T93jOVIh1jW0lLQ9siferMoJhFiY0t00ZFabrFW+Lwl0xmX6Jr
DD8HH4T1QWmMuTjMcPNKb5YO19Y0ZkwnfZTKWkkmynJQN5Rlve8aI8DPrp1V
fLrG5Ge/y55Kjvuf4NpjRCqrdPiFMjTmWKFoYNY4IlvJlqlE8RatTmPUlT5M
pXa7xmvLIBNRv9dOjeHf7sH1xGjQFD+8z9CYm0ufDauM03lp2F+u4tVmNNnX
6BrDf4anXjA0ZlwnfXKPqTGOP9+OsvjOL2W5Fo1xDK2TEs2RfhnsaFjFGCHD
j6wuVv2iaavkH8I1ZkrTWbeEqTGHb/ELLAdonaKWqjH3VtypDb/zZBFoDGgM
NQT1Rm6NWe0Q/Brfdyy1fOfQGNlFF4bGfP6dGzb83nQt25DhzdSYxckt6KFg
qjiaOjDGFMck2MnJisZ8z4upw39oR6bZCVl5YdjZk0hXa7/4mMLWfmRfG88P
2+iAa8x/r118tRl/1bAkjsfUmCOl6KFAL88OpPydoTFoEyVsXuTmSmzh+qiP
UkJheriiKO94MNrbOjhFJEV7Z+g7hVuodWOOl2GL4k00JgLPHRsujbUIjPuD
qvbnrhaNScHbJdupMT/y4hsoawHpRv0i7Hw40tXaPzHmuRxtjTSRL9hma92Y
VDmyzWQeYtGYTXkNlhWXQM5Ucn+JnZnGqrws6nL4Yku3aD+rxnjwImqIEwRR
v9cGjel+8SVVYxyWh6Z1U4raaAbbxFm3t6NdrbcLXxb1TeqQxj1PnOZVN0bX
lreYRWMOCZrRX2313cKfzBRDaIx7CfajvhWN+eYnt6IRbIM0NDwIZGrM4pvt
6B46XSykDIyhaIy+O34ri8YsvmV+raFBHEQpJrNyb0ANpQehdmKg6NnDfceR
rtbrovPELWPIFxur8/meUjeGl4Fd+ljXmLW5GF8Y6u4HWAr2nqmS12Xy2DTG
Yd2NfCI7k1a/99ceG0OrG7Mw5FkZqXB/1d2fHf69jxdekZ7C1JjOiz+8VY35
/nBAHW01DRYV5uw7iXS1XhdfIG5Fa5iMN/psPEjWGKO+T+jDojGLs813Rurc
i7ZnKj0gDkrzGhtDqxuDtFjqIb7UQFkqIjC++fdyElk1Bm2ihD9b6spFMWi4
FgxTDu9IN23J8Ui0w3Vktqh2BD289wv321o3xu3VOFJD/tIJpsY4XGpRmrfw
7HNcGiMvjJt/TyVNd9TRk/ZqTGADdmlrv8Z44PfdEy1eFn6JiWofFJ1k05j+
Spc5NCaEnygjHeHnrN/LpTGnHA+XEWptNAw2Fiz9iaIxi+Kbu7An6OQv+L+h
xmwVkO0I2WfVI0Uvn++PQHpbr0+WiNvUyD470ebrRakb4yHFbrqsaMz2iMAm
2sxHi0qK90cgXa3XJ5eJ27GZ73prdWP4j7ARI4ah+MNme7noUaEsvXPRPo0Z
l3m8XY3ZGRPYTKkVoVUri0pL919EulqvT5GK29Gy26oO3z1Y3RhibAytbszl
DXl9pEyKgSikI3acx+umk++7xmA9laYHos5ctlNjkJ/ufNmGx/jWo5uZYSQ+
8H3XGHxsDK1uDNJiaYC4zx+oyUf+froy88Wjt6cxSfzMPsqFt35a1iILv52L
dLW+9DK2eqgfOS5N599KoVMMpjEUb1F3eVEoBgm3arylJql+r50a43jwflQX
+dw4q2ip9xTc4aMtk/6WUiPuROquqDqql+A+Q4yNodWNSaemHY1EISNhbnlU
tZ20aAyadnSUqTFpvuYCBQZl/GlMYw7dXPlaRTlrz05W1LQGpaJdrVMrRK1q
tD7zmPAcUTfGDRkXN52fns7UGMf0PnRX+6Xu+QOSxmTjHbFVnfXOoDGgMUSc
NENKVepado35h39ap/nyAutzzdQYF5GUuERR5Z9h0RiHz3cLGrDxnHplceJ+
HoliFgYXtCA7+lRLdjiPRjFfrOHdwC8Z1flhnBrj8M+N7oVD9DbIlEnfVXiW
R1TxNccm0qumWnIiF5I0hrf9VvEoct08WJnqRCvty9SYpT8GVJp1mbWxNS18
iUQb9kkjvb6fVsWXd7ONWBRn560xe4T4bPTqxtIn0Xm17Sp1WfJei8x88wD/
Cb7hng9TY3i38Nd3CTdSNMZh2Tb358NzrIXnkTzbq/imys2fszozlEfVGNcc
lHam5AJqFd/FmfjBW6/sqEoSFRf1Tirr7y5mHxvj4fCv0zihkOr3cmnMTkET
trmPSt3pGrPVwfOBdIr+nSnTVJvAc55VfJGtQhTMo1DM7qWiNuRErJ8su3kM
oxhcY7wv4mMDVLU+3Brj4BooaMY2SP14ccpJHkljFp4tRct9TLfkJfCoFEPt
tWRUNecsXUPRGN7eHHSBGJSNWU4UikFjzSXxIKW0GmN7GRWH+tCq+LqX4mjS
I9zKrTGrUvPxaxTdeOmzJ0kvO/pnRu+xjpNBvQUv28Ko32unxkQ3YAtlKj+a
RWPcJdg9l6rBh1Q3xqucdFWlG68oKY7OqZL0mK7np1tKavCxirqhlqSC9kG1
QuCNaczVVmz9TWSfZdEY3j18v+i6+AOLxvhUYBuustadojEHHDYmiYesryal
+Kw/uYqveVCKTt0tPO5P1ZjYNHRQtKo1z44qvm7PiIPSo1CmxvAyu7HH+4S7
CI1ZnNVLHI70U+010ugH0lzFmEZvGGyWFuK/Qmv67uc1tqiVYkEgu8ZsCAyw
tJZgbWxNi/OCVsrtKmOakd6JsL2KL6oxyDD03CsXqBoTHIDesOiG69xpVXzd
n+Hn5YHXaWwaE5+G3aEa257z6RrzsIh0gtLNaEbVU3j09/VImhWSZrk4/9n+
oDCGxpyKIk4RkiVMjdn2glibuRdoGrMEH2VqOmh0tyRnVRcNaJStBUuIsTGh
Ajm2NY41esylMY5bktL6sVqrnaVz1e/l1hj3U873e8h3PVrVQN6jrPVBV5bF
PhE1q7T6GRVxXz6jaOuStA3n3CQ0JhBvGj7W7MGuMTFCfEPW9wp2cGjMwdd4
6XWdvJjPojFhjjvvikes77Pj4pjz1Cq+56M6sEcn23w5Neas467MOWZumBDH
XqANmPGtnSZmzqIx97Ox47qy9jFNYxyT2/HTjHasW5RTJW5Xa0aa3GwbG+NC
nKQGorxZNMajErvZpHONWWOuCPEqzorXfIrGRDrueTj30kiIJVXxzckjbUba
sX5xkTS5olem1hunR8WV2CgFo6GrqUYkn1K2lzlbNCY/H/uYyrp8Fo25JMd2
nun8FKbGvMCz7QaqHjE05hrxHXuqlzA1xreC2G0LrlM1pqiIBPY67czo5DQe
/QODEnmfRN4tfl62X3CVRWNMC2FY4RdC1Zj9L9EB84auyhz7qvje7cEW4FR2
IkNjjtfh+05D0U2mxvCf4L+IjAqDbNWYJQUjxInGMNPR3BqT35rXq9YYDIPt
rYX4CI7p0fvFnS1TavGVazZrzG0hPvrKMCT4mUVjHPdf96hWW73wNnRVP+Nz
VPGlegvRWYkSWC1fSv1euzUmxTFMWkwqq8KcdEqFxxFy4lIxeViOdmJYXFKf
XDMomzQYp8fFtSPYuv6lS9Yi6tAoO2udcY0xPX+kx+8sVWOOStHt6peumudY
FV+zrjzEqYRjmpU+eUiu4utmzlLUq/PuZVE1Jj0QrVemU3Z5kKv4Cju7iLlN
ZgpBY0BjkOB9d+R4KXbrMdmeFLhzIYvGrObF1Zu2dl3r/cX/YNGYhT+cTZJR
bj51/dLj3tt5bCDj97IfOxXolT2N4szM6LSCXPkQ0rZ4drTIQjRkivnh0z3J
+f2E9ehGm2KPey9k1xgEZFbdkVMa7hDTVEvOhYWUnkoEyJBfZTop5Obcj76Z
K67pHZlFvQIhmnUOc2vMeoe9RR1GI0dja0b8zz6/0gEt64fVjxVfPUzJUfqf
LZ/6puYPkBdFS2zIvoXz0ZiNi5NbVNT36yq6wEMphrch5HgZiVOmFEnH9/JI
FLNw743CIdILy24s/zdZYxCQWXWvnWMtaFryYhfa1VMpVY6/l2ZQLk6/ss47
yOXIlaSKIRUy9KY7LdiT1uHawe1uGdVDdAOv3b/lylRC1IWXaJYIcv1eVo3Z
+el5aRfx1bTyZ8l/XccEmeu5fewnRp2yMXS3F72SjO2ZSn1DWtMe1lweE3nB
xefkusgccTM6ekQ3lBtDphhUY7479G1ibRf5x9yG3O2e+zg0ZoeDa6Bf2RC2
QRqUfTJxdk70ndLc9lFkD9WNFSFEQ6cYaqbSUIfOqB1tF99NWbcv1OV4Skxx
B0pmuo6yNBaKsYDMeaFskn15TfWLzvlReyr9/Nfw53Wk9avqqjjuf5THrjHe
bs9HqXOelt4O5spUQofHZJagt9GM+r12aAxvuzBVQezZGkXJ5u0HSRRz8NMz
JQ3Ezfp03ePET9djPZV+elRK7/KJtLoWJ5x2+LcgjTQm3qgbuRf+s5liFu6+
nU3SElVH8eaffiZpzKFPA3JK8BZypguzivvf/nSIpDEBy5Nr5eSPlHP9r+40
kIkVyqc4VtOA6EIgracSkSKk13a31sTEC10OR66LLykanEa2rs4y9022drjm
7Yw7XkmkdRs1vUlnT/NIFLPw2EPiche5en+4fBsOMknpA4yDkV5Vdv8Sb/3h
gDrS1Zd+qixDwJWphMRxaYfRiDa29p9LYxCQ8asY5Ti8q4pF0Tw6xdigMeiL
R3plotRbLsfiXC4+E7cjP+dplfLgAzSKObv39RixxGaG7yReWEihmNDlWd3E
WUA/ln/j8iKKxpwPb7EOSsSL+5terMKbK209/+2NVtJhZ6Yu/+Zn20ga45UY
VEtsi7rh1qAT4RSQ8S0oo/5SoRtu8NhOUMxnwkbS/GflJQ//tsu6xoTwbyvQ
Wc6W3g61gWI4NQYBmdvt/Wy7gW6yTxiaISYqos92t9UEnYzAxsaEf3almbJY
nmV8toNKMd7Xgl4Pk0/Nqs6KLfvP0TRm0amn4l7yqjHN6s5nOxkag4DMDWGH
hn2f1YyILl2kUIxX3Le32yjnC1mZp38Uu8YgIHNT2DHNOfPL0VSKufBZTE0D
sT/MNjzP/Gw3iWJ2J2x5PkQqzT+YHJvAJ2uMZ2YmTTw0fYIAWzKVoj47Wy4l
Zm3oqitasZ/sLfF/S2mSE59NW1eY9bf9JI3xTtyS2086wEzkZ6R/tocGMulC
BcfSmB4VJV6i9VRaIu5RMg7zqr5Wv6Aox9B6OemP2uEWj70oxexN2lI8QnwP
7UhqQhKfRDH8I1mpPcRHUHXXbjmSQFCMT7JPFenX/+nh5EvJfIJcrqy400U6
vagL79xZRNaYn+8ENRJ3xbpRRRDiKrjGXA9vYz/aMSZ9v6xi1X66xqAznZY1
NQddvbPs7B3PR/IapAOOob+p1Jkgmrk1hh9YkD1KOhX2NGwJvEpQzOH7QU2T
xGcZ6w6KuE6mmEURkkIi68fQ1SBZ4W9jT6XcdKbIGTRlT7L4vlcCW0mbhmGm
LCfD1kylow+DqsYox4Sepi1B1xkag4DMqufDzI0KnWZbXhcu4u6pRPEWdY/v
YQbFELVldKUPbzi+icYgICPJY9fLX5T95gbWlFiSM8iyswx0+oXfcIyUU3aW
kQ6Po3imEr7Fzcha24JSHy+7+Ngzr7MGsSBDf2ulM+4zBLA89GtUs2/Hhuni
nMd8Su4SpjHowyND/aKsl8uic5fdqBP3IIcC7UR/sIBMNLcdzzTX4V/EMBZ/
BjTmo9eYpGbWzQ2ZBl+6UTXG4R8Rucrx/NB1DlSNcSsY5pyJeWoQMQfJLNwZ
m1TSoVDNWI5Ns5rRvo7czNjlrvhQGZxi0qWcsx4R+7NqDBK878NjSxT4W2in
VIrG0nN+7owO15TgrT17rrBRNoy1J9PPjA33SgrTN691ozuMFY1Zuitepudo
bM3UGKQ+zELvFFFtL9b6Va9RKWXSvN2em6mjYu5YWxTH7NYYhy/dlyZVyMaR
N9WO9xbdOmmmGEEj17uMigPcHAJe9XI93niPpDFI8H64ECvpVKi02FpQK5rK
zh3xsrvDdapc1d8mqWuTjahHsbkhP7mP9EmepCz9dguVYraYjYXndSe3C/2V
EkmVylrFRTGYxjj861qhmla/l6Exx19zfv2mB1SQ2eawfO9y4UtJ95jl5wq9
dmykvygrcenqN+xwvXtpfAkxW2Q59EteiNdv8KRSjKcDMYyKMQ1L3dg1Bh0G
c/B6Ulm3Qo0tat30aH93bnbK8h9YHIZZxZe395aovr8fuwPQasZk9RXnjh9k
dxhSytKnp/JyO4axvi06tWq44mXW+k3UDtcnKzhXgbFdwKYxDqsO7Xjc0Y3M
1qAZ6hDFcVAMrjGr9/hVadjq99qoMZfEI1yfsEPwnY+DqIPr4d4SoSUvaXNC
bMOIeRXrZlSy6mfrN1vylXjhFW2m76LXDnVU+e83U4yQ+x3RAjKh1ZwLbaTa
bc0BUgYT4yOVXnGgpix9Gl6QqxjBVpNerRqtKM1d787S4VrQOq2QtUtkg/2q
Sbwdj+n79Pe2i65E8CijZaxpDKE69GlcHHbIIayG89u1PrGAzI+R/pK+IfNn
0M0oZFL/Q1jKkm9+qQoZ/agebI8NDbFSNwaNsHiFYVh6C/33nBqDFIpZGJgt
ahrq15hvcQ2ayQlZrWT34SB7O1y7vRob7O6QNPUrVFOjGuyGWT87Ntifm3Vt
ISVBKYBEN/RJehelmLvd3E8g1Y3xiDtTb/33VmJSNTzmuwU53uOcc29ZmuOP
aQRW0KduAQEywfyjz/L6ptAD+JSsrngVTjERDZyrm6uAzBZzZBVOmev3hryh
xiCx+2Zc1YBichZdOKbVOlZRnLv0J0vdGK1qpOhp1ordp4m6MZGNXB8byTNC
KCade8mg02iT29Yz1GowrHPLYJiM4LPoV3ldY1iPG71aPVZRXrxhL7XD9QPu
GSub3Vg1Bk1Z+iymLK9rnDTz8Yrylxt8qBV9KXVmqFNbiaOnQMB5slKJo0kg
45t1rX1CgxzLZ7vb6/3oFMOqMaWc107mjCQ8g4k5tUvQDCY11+PSrEhaytJn
8dK8btLSmByvkEo2HGDrcO0VtShaKhnWmlMmNBPKorz7iywPxXm8HjN9TZ12
qr6icCmSrBTtVsH9MbKjHXeVcX9NmduuGO6Xq8XxsY7ZAxyPmhOassVKrscH
BDjI7BOdaeHgesakannJxzVmdKpZ3ifpmRidnMYPNzrtjKJHERebRM1dsq4x
j8nlUyjTWJvb3suCDq6PMym+LHS83Ma5lXZU2KAxiY5+945UjQ6Z175+VqFo
PXL2mkVdTldK0Dbfpgu2uIRU2+rGPOH8OpYvhWYtUVta80/kx9WPKqZ0lgvv
mRmFouPcpZvWO1yTvUXx+hEbxWC1ZaZ6fGkUMw+NQUK0IVdRMarVWPaV2f7B
vuSbWXyOJteLhA2S0Vl0Z/lFo5ooKny2yFI65pZHlQrZWWan62teLz1Kqhuj
1DS3D0r61KNTM2o8gXRWq+jriUvMoIyWodaHWRRbIWqf6LdctPyi0Whkra3e
kSJmh2u3msnBgSFJ+5hiamYUv8gx6MdGx/KKChfR05duOx7OWFU8MoJcccxU
FD/lQ6YSaMwcsdpasNSNYU1N4g6ODtcMjeEOzrExNgdDY6jBxi82aYw9wd5K
idLheo6YZ6YSGizFe5nBVjQGj2XMsNbVmiXm2+GaCDrFbJm7bC+rxqCdlTqe
nHawojFcsZwZVnpbv6HGcPVUYgZ3UhLn2BgrwUkxNvZUsik4O1zvomUqcQaL
xtgcFm9BOyv1v3JloRh7MpUswZKjxAhfB1Kmkg3BqN9LjjXM2G81DtDje1uC
tcM1RWPYOlxzhS11Y8jBVjeGFuuZcdhq+Fuv4ssImzSGEawIM88O19QqMRyx
iRz0ujGOLEHuqRQlkM2oZAXOWwX/DEhYFiAKevgiBovkV3IkWalTaaE2fX+8
D6OAzI/MoFeJYYtgIjiq+FJjzkwlS2clRXGS41vRGJY4bS08mMFeNAaLM/Sg
141hDcbYGHKwd7i2Eme568awBrPDNSM8ycHMVGLGeXpw1u+dq24MHmxFY6xG
JD12Wg+uDtd0jbEnounBzFGiBDNHiRSMcjFzRRw92HpbO3qnCTq0qo7Xzvuu
/TM8fVl4btCTyhgskiu7JSi5WKiKKAVjV9iWqUQEs2gMKZgVY+aIuTSGHlfm
DtvqxpAiiR77rQc3wrBojI3xVjSGGhwIwx03iLDW2JqlpxJLcPezthrsHa65
A3oqgcaAxoDGgMZY0ZgdwbVao74z/kcP0JiPXGN412QapORvIBvFgMaAxnw8
GhPlVzWmm2jx3WqloZK5im/Yjgqkb7RY8N5qTGhw06xRPxC/PwQ0BjQGNOYd
aEyaX71Kp1L47sP/wlXC9+qOWjUyJicBNAY0BjQGNAY0BjQGNAY0BtWYVfel
eqOmVsSjUwxozMemMfsFLQbjjCx4HSvFgMaAxnwsGuP8AKmE2ZBz3irFYD2V
IhsHjGOZZ95XjfEsQo7wTU/4W0BjQGNAY96+xjjnDmropX25GyoJ2waMqsxo
0BjQGNAY0BjQGNAY0BjQGERjnO5361jq94LGfHwas7uwQc9Vvxc0BjTmo9GY
g6VoK+cJscA6xVg0ZknOgHGi2YvZ6vr90BjnvEGdpX4vaAxoDGjM29aY4JoG
JP1ILU6Is0VjlhSMGFUKL7spBjQGNAY0BjQGNAY0BjTm96gxP95DGjANv3Zj
oRjQmI9KYwLDmqaNxjHxKS6KAY0BjfkoNMarwtLqtCEnam6N8SuUaszPfC81
Zj/aoWm0wW1LCGgMaAxozFvXGK9ajeVwUZA2t8YEl0unDQ2Ft+ynGNAY0BjQ
GNAY0BjQGNCYD19jtiWL28Y1Ou1Yf5s4/eq6U5kvkO63muJLrANj3juNaXhw
6L3WmI5niz8YjQn2e9kzNKPTqEcqXj7ZF3TlXA3SC1tVe4d7YAxoDGjMR6Ex
gfV44++Zllc5K3ZyUczJzy5VtWiMKlmhM5NifhON+TlL3Dmp0c2ODfWIs8Xr
Y4peDBtM36I4DR8YAxoDGgMa8zY1JrAF76Skbal8ueIQl8YIP0tpbpk2qjrK
nedDMaAxoDGgMaAxoDGgMaAxH7zGrGFpy65XVtxkqxjz/miMGG9eOVAS9x5q
jKAZ+3yjle4fisYElncxNgWdqimAs2IMaAxozMeiMY4HC6Qa8jFydqivp+hV
WQzRU6lMXNcjQ5qDGwYb8tgp5rfQmO9Lmd29Dcr6XD5BMaAxoDGgMW83U+m1
dJq8w+mGBgaLKutiiJ5KdeKmQZkaPVy0lDp7x8+LYkBjQGNAY0BjQGNAY0Bj
PniNWXynU0e5UNcPVoucOCnmt9cY3o/hx1+PEJ95ZiBbGLrw/dGYfx/+NrGu
S49/Pq28NGP5xg9BY7Y9rdNTNgWdsiV4t3WKAY0Bjfk4NAYBGbG4c0rLoA3K
LqMeEF+L53NRzG+hMUseD1CP8IbBhifOFIoBjQGNAY152z2VggvFPdNzHC4m
R8Xp6XzzOBnQGNAY0BjQGNAY0BjQmI9SYxy+Puz3vAvVDZ26v00UG8g9KuY3
1xhiSAxzoheQ+S00hhgSw5wsBWTeY41Z5e0UV1k/gWwKWs1IxbP0pXOMigGN
AY35mDQGjUVB92NfyeuHpsZmDNi+rVerVbLm+lihcBHeU+m90RjHzbF+ZQPo
EV6vHuoRXb/Ep1MMaAxoDGjMW+9wjcQiQUFsZVf9yPSYlnS4mJyUyeWxN+4u
ImctgcaAxoDGgMaAxoDGgMZ8pBrD1uH6PdUYWnDU730PMpUssZIZ77XGsHW4
Bo0BjQGNoYYtHa7fI41h63ANGgMaAxrz7jWGGtwdrkFjQGNAY0BjQGNAY0Bj
QGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNA
Y0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0Bj
QGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNA
Y0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0Bj
QGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNA
Y0BjQGNAY0BjQGNAY96Zxvy/734CjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
AY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0B
jQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGNAY0BjQGN
+W01pvaSZ4oxBQICAgICAuJ3GaAxoDGgMaAxoDGgMaAxoDGgMe+hxvx//+t/
AchAQEBAQED8XgM0BjQGNAY0BjQGNAY0BjQGNOb91BgAGQgICAgIiN9rgMaA
xoDGgMaAxoDGgMaAxoDGvLcaAyADAQEBAQHxuwzQGNAY0BjQGNAY0BjQGNAY
0Jj3WWMAZCAgICAgIH5/ARoDGgMaAxoDGgMaAxoDGgMa855rDIAMBAQEBATE
7yxAY0BjQGNAY0BjQGNAY0BjQGPef40BkIGAgICAgPg9BWgMaAxoDGgMaAxo
DGgMaAxozAehMQAyEBAQEBAQv5sAjQGNAY0BjQGNAY0BjQGNAY35UDQGQAYC
AgICAuL3EaAxoDGgMaAxoDGgMaAxoDGgMR+QxgDIQEBAQEBA/A4CNAY0BjQG
NAY0BjQGNAY0BjTmw9IYABkICAgICIgPPUBjQGNAY0BjQGNAY0BjQGNAYz44
jQGQgYCAgICA+KADNAY0BjQGNAY0BjQGNAY0BjTmQ9QYABkICAgICIgPN0Bj
QGNAY0BjQGNAY0BjQGNAYz5QjQGQgYCAgICA+EADNAY0BjQGNAY0BjQGNAY0
BjTmw9UYABkICAgICIgPMUBjQGNAY0BjQGNAY0BjQGNAYz5ojQGQgYCAgICA
+OACNAY0BjQGNAY0BjQGNAY0BjTmQ9cYUzj89et3FX/7l9VYPnc4kWPFfML5
mzeN/4ccrnbGShviW2vBsoGtsi9+063REl/822qs+TXin9/bEGutxX8zY519
sXT9m8b/MGODnfGD1dg4d3xJjk32hYst4TZ3LCPHjzbEZiK+siW2vNVwp8fX
toSHtfgXM7ZajW30WP7GsYIZ262Gp53x09zxDTN22Beu1mPn3LGSHF60cGSJ
XfT4dhdoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgM
aAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxo
DGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgM
aAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxo
DGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgM
aAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxo
DGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGjMr6MxC9zc1744c2r8
ciJ6+Zc0nRCuCFzt9+0C+jN3H7B+6Vi3G+WXuZ5mikH/v1A0xpvxkij3g6Ax
oDF2hqv7F7cCd8kvRqquJFk2pKS48digxhNrz279w1eExiy4EX7gGqvGrP8/
of6e8qjIqSTzppg4lXCq8fg3x9wWYNjiUnnB/QgXxWz8r+TjPp2xUdPX0Jdf
u6SKDZIe+WL3Jkxatv7QFe4KGsOhMa6N1g8d51xRdZnraaaIcw+kwAvzJWHP
9zh8tdd9yKab4qQZYeREjH/d6U3XDvx5jc0a863XPx6e9u+/HKcj5hPeddY9
1ecP34LGgMaAxoDGgMaAxoDGgMaAxoDGgMZ8xBrz+ff/8yIikf06MCnkxbY/
0Z7vsm5ZSWQS81alz/9z1xWk8TAr/rBzx46+ZOZsw17t+NT1G7axMd/+x9H9
hyeR58R2/Pz5SlcYGwMaY3ss2LpnU0P0Jb3VW5vZhKDyw1/s2mC6ddraf41F
Y1Z6bWq7xNy8za4S1X4CMZlvfXZPxLBqzILt+3cNJ3G8e1J4DWIyCzyPBhhB
Y6yMjXH/c8Kp08z1qI/Zem7bAtIwmAU/7FpWFsOysoZCl+03PZNlJMwnHj5r
5YnIc6YiNwm2LSDGxmz7j1OBh6dsvkfWXw2tDfyHl4d1jfkk9ETgVErSQOgy
320OX2/9w4nj5LdIUp1fc3AraAxoDGgMaAxoDGgMaAxoDGgMaAxozMeoMZ9v
WNNy2eqlYHKQeD3jhZvcB+nPjCzZypKjtHaP3zR9hgeuMCiGlKnkWmd6TsSm
HZCpBBpje6x3zhFEUe7fky50hqw9u/1/f78OHQmz7g8e27+4HxI0TqESusZ8
tdO93zygJSVxOHTt2W1/+BpJU1qwdotT3DGfgSukG382jfnx4IFJ3G2Cvzmx
5RPUVT5x2/HFrWB/yluDxsyRqfSXolj6sUh16nOWvCTPVc1X6TLc6L/ASqZS
6jnTc0Ke7GJmKi0poL9p2PO9yEMrt/9v7z1fpJ86qrpGNZkE39u7F3BpTGCI
2ZQO3CAlJR0/GUaew5TAdRtoDGgMaAxoDGgMaAxoDGgMaAxoDGjMx6Yxyz8v
iU0cOrUpcuN/uCB/+WTN5tWVUfRxMhPHPmcwzh8TTybQnjZ69O9sRWP+/oJ+
g5NQuXMBp8asXiNLSZHt+yPUjQGNsTGWbV0jE1K2scmITcEbOMrFbPivW6EC
zG2oGuO2os4yn6T+43/7mlk3ZsNnaWew1zI1ZsdmTHJiGw7+iQVYtvx3YUQs
aIyNdWM2Hj4wQ7stTfA8w1Yo5sypCNqxaCbsK1dOjflj5oUU44U1m9jqxqBQ
w6IxeKzcuaoxkcbLIQU+C1g05qfv5JbtIaHpyB+JEjE/rWmnvEVs1c8LQGNA
Y0BjQGNAY0BjQGNAY0BjQGNAYz4mjVlw8lhI3Z7/8zmdaP72lJaIFLnZm5ni
tMVzlHbRGOt5nK2E77c+h2lJB/oz333LoTGr9h0xJh+++R1U8QWNsS3cXBto
FHPG1W2OEr4LAgItgxbIGuN9LASbiV/aeq4qvp+EBKGvpWvMgoTTmE/GbQ3k
quL7w/9JC48FjbGtiu/fSxNot6UREl+2sr3bcPfA4trhjO0cGrN9TXtKkvzo
H1mr+M6pMQjI+LgP0N4u8UDqDrrGrDzqRzwh6gdvYnjMX57H0ezIBTQGNAY0
BjQGNAY0BjQGNAY0BjQGNOZj0hgHl2//QKcYc/rSjr2U9KKwNStZnvaf2efZ
Br0wQWaFax29ekxI9gZWjfnPRxEp0ye++if0VAKNsSXW/q0giiqH0VuPrbWl
p9KfboQnUDXm/2ZfwOdz5I6blZ5Kf3kancTQGJfKK9jLL+0It9JT6Ud0BA5o
jA09lXyPh9DuTJFBLyzDYxaknqNXj+kL+k9WjdkXFGK8ulfozt5TyRaNMUVg
SBjt7abOrthE1ZhASkYSOVmJrjFGgStoDGgMaAxoDGgMaAxoDGgMaAxoDGjM
R6UxnEEpC5PUeeA/WZ+2ci/boBeW4TELok/Q05p6fv5PFo3x8FSipAMdrkFj
bInDgbSb4oQqnwVf2NjheuumXorG/KUwhtjm2TOVsPh6395pusa4NhAfgyNT
CYu9ASGgMTZ1uN7KNuhlG8vwGNef99LTmqI37WPRmL9LLiGks5Kjw7WNGvOV
J+ODpURI9lEzlfx2EQV7r3ongMaAxoDGgMaAxoDGgMaAxoDGgMaAxoDGzBXk
sTH6SPdDyzmeufyrCloJBfOgFwbIfLHXj36FGet5nKExx49FGON3nFpONpa/
PI2ycpka9nQz8rQrp6xdzQ4e2VLP/Wj9HgvF+B2h/95tjHL/2ZrA/OWZtc92
4OpKV473jSj2ZNWYBbEhdLayRKjrz8cYH48eSdOXIofP+xT4/PW776xtjV+u
/2uMv6eM1gM6Jqjx+KaYbX9wYdsak8/MfdcwK4wcv+hfcmTZ0Q0LyAJjy2tp
iy7ZFo3Z+J2Mdkd8xTsafcgmjVn7xzsCLo1BFuboqeXb17NrDFuHa7LGmCJW
EeC8iktabO9w7WetU/zQ+UC2v8c2+v2JrjFeLE2cG392OHpizo2KvscV7WbA
y49/CDywqfT8qYnLeEOrxKlL4V3nPPMO/HXDj2+gMW4LLofR9whk0AtzeMyW
Vc2MvUziy9AYX8+xlMiy/dQ/zkNjtrCMxpkJ/2olpYrvny6eRKv+JodXHPoT
UTfG/fMyauH07qD/CxoDGsMdoDGgMaAxoDGgMaAxoDGgMaAxH4/G/Ol2mOVG
YzbC88x3Vp7JMuhl8PBfGBrzx7QzzC60ES88aBrjIk1MUR77u9Ny+qCXr9Y4
3T0TS3152Kudf/6K9Jx/fvd5Ib3vdmy976ffrkSxZfWf005G0Xvmxu8+v5oy
Nmbpvz8vtgBLYk/Asp9Wzz0kZuka/CVYXD6QtukTbDzMglUea1sZXaumQ75a
ytSYtd+10n9wTxk8sWzHGmz0y5r/CD8SRO1RdSAJeeiT9dtX18YSX19/6WjW
tgUsm+Ka/7p5KnTa/C5J4dUHnDZ8b9oIF3y37ZuX581LOGk6yid1ywKWrXHt
n2NOUPsOR7sfRh765IetywrOkRbvtai2I86uVI3Rx/ne8vzDMkRL/lIQTVmV
BZ4IobhucsLq69qkMbuP0tNYpk+6fGGHxtBiwbUw+laqvxRc/vNf165nagwz
aJiD7j6xB3P3/ZnTZGwdG/OJ92FaY7KkgROfr9uIeMvyzX99cI6xYeMgQxkM
84n3fndFIvryk8u8f0SGvlg0JjGw6MCfV6ODYa6fpcyq8WdkVMwK90/jkU7N
TI355LC/z+BV83JLHAlbHbL1E9PfV3j89fpJ8/PRTtCHP/tmnhrj8I0fY9BL
rHsAQ2M2HqWP0zPF2Km/0zQmISzBeMnzzOY31xiH3UFB9GPaVe8EeodrJL6m
xe5NfeRXJfpe/wl6KoHGgMaAxoDGgMaAxoDGgMaAxoDGgMZ8cswfu+O+fOjO
xk/meL4ttXw3bOpJ+f/Zu9Ovpu5+beCLLl8UVrvWsT69n9PeelZX1dPT3vUU
vavFEa0TCloRcQJFEFQQcVYiCoKgoEyKiLNRVBBRFAHRgMyDzPM8GCCACc16
/oQnO8med0ISAacr6/tCybyzs4dPft/rF1591JtzutS/Z8YvDI3517rN/dF7
7y4x42sMURucWXcXLbXj3eZXJ/YInLCNJ1iNSD884HBNmMu5BdxOJX/Cl4Je
b/3nNIN7lJw8DrDel48lp0Fpx66jyshw1uuPdI9dxNWYBVvdFafcX7Ns53Dy
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
pzBemOK0sza2d5Q0RqBTKTxvy0hpjGZW6y83OC0vOik4Wox4utqd3+kJ9Z22
9CvP7etrQnSRTlC287hR0Biz/132z2siAZCJWjViGrN0J4vdlEet+BRDasy4
WLZv1Hn9wwSNma4zy5fI72XFyBAZMuxbnly+ZeV3D9Q3m82nmDHMjYk6Gt51
4CcBioHGQGOgMdAYaAw0BhoDjYHGQGOgMdAYqhYvrWH1H7mE6c/y9eMcQIa8
XKvO79WwDDV30gpujq7qBtd2+SmDHfZTFDPqGmP26xqHTu4R7+HHduNoihkl
jZnz3V1Wlm/4661f//ecn1JPRde7f/eTyRoz/6sNG+yqGIklb0/Y+9ITKnGn
H9KnMfPY3hJ9+NFfw2rMl0vXzssJJNkh8nTz/nmufwpRzAhqDBH2yz1tqfX4
x4hqjKbGLXKY9/IEfxZpIqZ4nx6N0aLKlxu2LC8SGmaj8J2/eDQ0hgCZyckB
3GdUnHEmQGYkNGbXHnY8kT6NMYtmP2Drnh9M0hihLN9Dlmp74Uyx9MOTU5xF
7ZfhpbrZicytQhRjssY4reYS9HBzKl0QHX3mLEQx0BhoDDQGGgONgcZAY6Ax
0BhoDDQGGsMor53McSz6NcZsrSv3XKl/z+rnwWTLEj2TNd9twhURRMzvFKM0
xpDSrTFT/xh3Yk8Q/8ajrzFm87eyQ4+PLV1FDJjxvr3MzCSNYVZYX8iRmv12
51Z/9RtrDRw1jRGokGKX8cIOM7IaY/3d/RPcZ+/fZ/kOGmNVKLJeJKAxpMms
W1TCbT468NCe5BcHu4q9PwtpDGUy9g3h7Bcc6Rw+ShqjBpkUXhyx4qTD8Z0f
q8ZMX7e8kbOynducevAE1bJEFdGUxHnjkeHK0/aHBCnGVI2ZvdNVyX09G0Ns
9WuMywVBioHGQGP0FTQGGgONgcZAY6Ax0BhoDDTms9OYH1cxmkGCHfbpvbFm
UiTuYSQV50trjDqwl3u0efjhCjPjNObdxsYQZbe67X1ozH/PsypgZfnuLT9K
5PfOn2OaxrBSfHWsgdxOpXLXrw3WmGE7lcZHHGK7VqiLcI/SCGuM2Yad3JNu
5WmHw++iMZHucTa6NEZtLMumPmERx+HHDrTGtLKHyvB15ffVc9kzLrlEjZ7G
qMru1+d8kIkMH/lOJT/rpQZrjKmdSoJZvtGsOF+q1gjMdkQkuoyoxhw7yA2o
GTgyY7ZejdFX0BhoDDQGGgONgcZAY6Ax0BhoDDQGGkPVchpA+r0t9d948u8C
Wb79e2b88jtXYwTcxm/52pljrjG27AccM42Zw83yVUaHZG8c99+jqDFmB71Z
Z45GpPiest87bIrvsrnFZ9mn/L7Wy0dfY35ZZlXIfl5ivvJ1hmvMuNlLx7E0
RnXOvvsHfRqjURddGhMdUrjtaz0ao6rFri6MacVGWWNUtcoqnx8m/O4pvs4O
UvYDGpzi65e+2ZQU3+m6snzPbQ61NeNqzMqvr/hx3vXeB+t1UIyJGvNTxmnu
upexRX0VNAYaA42BxkBjoDHQGGgMNAYaA42BxujXmPm/PvULU0aHdR1avstK
yFhWUKNH9M5wrdUYs8l2nCxfv6d22nmuWRozc9zZ/axzpZpt/5j8GWkML8tX
nd87qhrzP5xn1DPDtbMLs5HKwBmul7m4sucuD2/a9cOoa4y12XI3zvRYaggy
TGNsXFyqSXuhNEYZ6R2/Wq/G/PkzfRoe6RK5hK00oRsDl+jTmGkrrCuoVxto
t3O0NWYpATJFYSOtMct/Smdl6uqZ4dqqiDkSzMQZrqniZvl27f+JSzGExphZ
ebBWY6X/0g26KMYkjZm9netCA75Wy22hMdAYaAw0BhoDjYHGQGOgMdAYaAw0
ZniNYcXCnPF6+Nd4NrCMO+6t7UBRHLZeONxAGrW6/PSU+Tu43/K1vwtqjNkv
6zbTJ++abqbPSmPYWb717t/992hrzNzxV44yBOzs5lMLBNfGcaf2McbtnHWJ
WGxmiMb8PH/8+cPsAT+RBx7ZjxttjfnFmtcnFR1UuHX8cBQzbvN2997o6CbP
SVyNUYerHFupW2NsaE7p3W/57z+5Y2Z6fa2dlujWmE1U91947a7vRmVOJY7G
LFWdSs9lgcwIaIyZ7U6mg4XkbhsnqDF/bGOqRUjR9q8t30ljzA7tZ4ZZ7U10
5FGMWmOm283IPUfdjOhm0kkxJmjMqsmpnKDgMJfzDuS1Qhozx3FmRsBxObG5
O16x79e/oDHQGGgMNAYaA42BxkBjoDHQGGjMZ6wxYfs4h3xhrXsW7V/81c//
Nvt5zo/nfUTas60zLmHzh29r0qgLI8s3/LXT15N1aMzkmZYvydNDxX6rX2Z+
bhrDyPKNdI9dZDb6GmP2P0usCujQkvBy1/ECa+NS63J6JENQofN43tqoe4br
Zcz7qj/ZALtdC0dbY8x+WTQ5/hgbZCIDSrb/c4YuilnyX7EHiXW719d682Iz
vsYQr/z0zvuOXwppzPjIw+RzhbpE2jImUWJ0ML0NWn92ldDs1UsnPyaDXBQn
7byW6qOYEdQYAmQ2rKQzhEdCY35bPj76KL3YFX7WtgIaM/46o2Oo76iVHYdi
jNeY6Y50lq/i2PxlfIrRaMxKs2CKByNdztvpphhjNWbVt5d82etbmNd9p3H0
DQQ0hjPNU3jz3h+gMdAYaAw0BhoDjYHGQGOgMdAYaMxnqzHsKZN01Bn3S0uG
6VFiagydCRO2+eQsM90aY7Z7l+bZQ7LXjZtsiMZscGa1HhyxnjusxkQ6h+rR
mDWMjGJVBa72MFVjnDwOMJ+338eSozEHdp9QhjgcYGjMf8+bka3OPNHk9zI0
ZjL7vJuvMbPyWOjhfWe5YRoz1+y3v5bSs2Cfdb1oM461Ki749uIh6gQ2IG/r
t5b8tXHVyibmQju78STj2mWu3L6h3kNW3AAZglB+ZmdunMhY/w4aQ4DMtye8
975lPXV4/8ltj7dOWWvzJYkw/7F23fT7e727CZQIa9s786/FvBRf1iOEdR9f
f3Pjfy1fqqaYxV+tcvwj7Rg5z3XkgcfrxrGmtGblyain+T5iF7n+/yzSkMvy
/3DbtCiXmuc61CXKdhiKYWvMrHz2h373L7a6EENuTjzfpFNj1CBj1xw5rMZ8
fY095VnFjq91aIzZbysm3ztBuURIice3s1g3GOfg4UoOjAmXHpnrsIJHMSZo
zAoqyzck122cAMWQGqOe/Jp49oHDM2broRiWxvzjvj93G9i6/+dlq9TdSWv+
z34Pu+Jg1tTh8uD1EevGsbiGrzH2CyrYj6kUWUFjoDHQGGgMNAYaA42BxkBj
oDHQmM9WY36ca5kZyJ+jhD4bbd0zz0kwT0aPxpBZvh07f6IpRkhjJq9Sh8yE
bTxO/kWPxvxr/o+3jnAbYR7/9dW/mDeb+58xBzhNKyHlrj/OmS0wvfWc5dMf
izhRukGvXab8Oc9ojfl90b9SA9iL7oxLjM1X07QU8+Xa9Q5NxFlweJPPH+6L
xlEgQxANmd+r1Zh5X23Y6tLL/iBavH6eN5/0lvlfeWzf0c+5wZ7pG/4cZ4jG
EGU99cahI1q4CPV6tPH7+UTL0rj5f/3xjBxh8jbQ6eKqLwXWxkX/GehzmLuE
3acsXUTdZvwVX84aFd5xYN7OJYyWpcX/sduD+xb6fZfsXv7lO4GMtZnVmj/S
fI+zTUag3oZ4PN707QzBOZVUn9HuqbMXfbl+I0NO+I8Q5BSzhk0xWo0JKnT7
9t9LvtrlYl/Jz84lF8ibY3Z+BlAMrTFLv3J258byNO/51wobLbnMWzNdM3eS
4qRDsP1XM3VojKrmbVxNgIwujbH5ytnFsZXzgoMcgx2+miWoMUR9uX/XtnZt
KHdQ9Z7pW1YRLUuzVv0Ytc+rT/MIEUfyPP5rPt9hTNQYMys3dfdTiP0hQYqh
NGalJmg35JWrXoqhNGbVV95e7n0GnyPLz3hn7fova37AL8bGQGOgMdAYaAw0
BhoDjYHGQGOgMdCYYedUmvmt95b11QEB/eQkR4qwgO7jHpnu8/b/+aVREzDR
8LJ2Y3/03vglZsNozMzv4v2iO3b9NHlYjeGMeGHV4Ycriduc3a/vaLZgE5Ni
rAr0H/oesDJYYzhdRZxyOTdb6AYHregsXzK/V1VEN5PuV9Wy64efnPUsB+Jh
DdIY9dr42+Ifz+1aX+Z/QnqWRIPI09KQ/WW7lwf+9ZWl0Nro7qn35Xn+oF0n
bZfWRvJv4BKhphj9D0L0Pb0byKhq+tLvj2yze+m7vzvkFC0z6ndXvs8udsN/
ztYzw7X/8o3kf39d9OWGjYteHj9CLqLw/jMnGkX2Nzf+5xyOw5AaU3tgBh0j
s+Qrz212RQEn+rT9QWF9p4/UHLKLdPzqdwMchtYYV30feqv3Dzu9+YuU0ce0
lFu2Lhs7TgppjJvetSvaJVpYYzSDZL7ycrOTHNv/5sxpcnBU+IBqcR2zT3T5
cYngkJh30JjpKyxfnYtu9P5OmGJojTHb4r1Xedr+kH6KUdVmO65B6Sh52Ik3
gR5Ze+f5bfhqttC01zpTfB1mIDcGGgONgcZAY6Ax0BhoDDQGGgONgcaMRrHs
hV8CGsOtYTqVDCidTUkGl4m5MZqabUDN0VcCK9hc4+q9ro3aEp5KidWpNOpl
2AzX+kr3nEqGloHkYlinEllLjCyexrBKKDeGU78t05UbM3zpQ5h30pjhaiVd
wzgMLzdmBApzKkFjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
GGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQGGgMNAYaA42BxkBjoDHQ
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
l2GTiNSYCQES1UegWVyD/d1Z6Q+nMjVm8znbxJqyrkHtd6SrTXwpxkLQYVS3
vKN+6s4yG43DbLt1qqizSXP0OCRvba6NiLho8Y4a43Z165Pasu4B7UIbknd1
d6Y8eTDNWUhjnCNtr5WkEDvZZhFpLxOCslOaqff7Juv546lMe9kSZZtUV9b9
Vvt+u9vFly9b6IUXC8/7vtktqq8VufK87WhvEd+NnyCoMe43tj6tK+sZIkRF
+8eIJQ/ryqRyuXYp1Qf4n2NRzL6kiMo+3atWi0i/xmy7czC/S6rz7r3iUD0a
EzntfFFKi0y9tIdk0u6UpHgLnfwSOe1CUWKDtIM6DlEO9fRKCwqKN/pGsTTm
4KOISpnud9QqMlxjPB+cKu1uIo8lerq7swvKvaMST1W/lSRoNWZqVEmm9G+d
z1adI6rWdVUum2KSxdyDoDaR0Rpzedbl0pRWWddbzUv6WyaTlb0u3Xg81mCN
SRF3KwUu3TU2eq4lblBrQ2lMRC3nbLch7wlDY65PvpAvru1Tfe6SJNoKpsaU
6VuSBLzo1pi9T3zzOqo1n5RCXl1b5XpMp8ZMEKWrblynWkS1hXwksTj0zDef
vFZDK94PdmQxH7za1e9T1hiOwBhFMWOhMdaH9l+4flJdyfXk7eqzTsZcJyva
1nqYwTDfrAuKK+tjrF4Dhbf3fiM4MMbKI7ZKfZPeqvCda83ZFDNFlFb0RqHa
lhel3dzi6ma5VrT7fk7lG+2BY1PO9bkzOGNgln2/OS61gzrCY2kMUXM2/Xkq
q5a63liNWXklU/XsbzvSE6LWrPOwXHd8d0Iu+XqUDUIaY24fm9ImVyoG6sol
cbG3TibklXVTHNKTeXG7uZDGfLPvCfHG30rL8jLCY8XhKWV1/eSLftss3m9v
pMa4uKarR6eolmT6tTXrd1m6hwam13ZqH1Imid5mrMaY70mvkivl0rqEuLA/
N3hZeoQFPilvIt8ZpTETveNOxt1RVTK9zuVq/kLUuRMTZzutjC6sZR6Tt+Z7
ONoLDYyx//50Qad6wdVmXpy50MixMQuD46pUh3ny9rpS8e34k7dfZLVQNC2v
ehryjeEa8+f+LXcK6M9RydaYedtWhj5LqeuhhwOpNcbc7UGOlHfu0Vch0gky
QkNiFu90SWqkDgnYGrPW7I+N3284HV5BnYHwNWajXUrroHKosyonMMDf0vnA
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
8mlrzD1qpJDk/rkx0xibnDfpt88LmIx7spiKkqnOMVVjoielkOm4SmlcBJHf
qw31NUFjXFMTyfVIOdQrjozVoTGxXmVvG3IfGz02hpnl21O/i/i3dpAMmS3z
isqWyX/drDe/FxoDjflgNWYBw1gGZP2qLVmazS/CGmM2PSiJooz+Ap/pghrj
FqNZl/pLRYsWsjTGI518g4y5liiNWRFNB9IbqTHEIBwBjVls5pWp3Rs1P7Mm
/2jzmMrEVG2V68V+zjyKWeOQUC9VNsdt1nYqmf3vRlERPR+zvKPUf4stV2Nm
uR/M7pIPFPnMMqhTiWaQklvmXI05Hm/SnEo2TzpkRdcn8jVm+grzWO3EDPKC
qyZrjDYoRn2RDahOVBWS8/ZmJmqM3cQL5fToJUV35qVD5lyKcZgWWdSiGEwL
c/gYOpXsqUeWl4jNuRqz0e4hNTqUpzFtg5KL7nyNMbPaSALIUOZ5rcaYrboj
oVfGoZai+3MXcDXGfPPN1M4hWf41c0M6lVS1LrmQOkNpyrAS1pgr2kEanOmt
R0tj7lIfxKurW7kaczjnneZU4mX5EuvzQJmPZmDMfNJbqCxf4sKd7ZqhMVts
mLOU9jWLQw7yKGanw6NmqbI9bqdxnUqOLzUHOv2p4e5mTI3RDpXhzWq9MIKU
hM7rPiOmMWbrH7DWupLkuTZcjTF3u5/aNSQrjDcf4U4lcgYlzWXgrUzZEbeb
mlxJ7S10toySP9s1Q2N2mIeUUJ+prOieuaDG7HipmfFNVpY8cSlLY2hO6ci3
4WnMlBj6xMpIjfGa/biNOgOStxWsWgWNeVeNcdSeXg2kxhz5gtKYVSdF5XTi
v7y7LuDQUS7FOJw9VNQjH6zxcXjvnUpHvnC8SzeJExv8x1P5FLMnQyJTtuXc
pma4/sItTTLIuFdZxtz1XI2x8Hma2j0kK02xGJFOJVV5ZhVS2NlaOFtYYx5r
BywZN731B6MxxH31z3BNTW9tmMZsuENFAxEff1OZK3+EjFtCXNOgsq1k9lh0
KoV84fWStfJUZM/ljpA5bXEoM/XNkKwsw+IT71R6QL3m5twkrsa45VJjGkda
Y3pl1TmTBJNkHpI5LZWvTNYYbVCM+iIblBMZuYkxX5ioMRdschlzgvZ3i6/x
R8hcdnjZLVX2xAUZ36nEyvKVy94qZRXZFqwbxFLZMurvn578XmgMNMYAjQkr
og7GOtMDxkxjzKYHJjH2Ber8Xh0a84v1xLPFdP5aRpA5X2O05KIoj2cPjCEq
lm5OeXH6G1pjlk/zTy9tqyslB4QQumKUxmjbjngas/iuZrhNW1oA/cffI1N7
lYyLvL02Ly789J/ErNYHt1zKyFIfFLc9DzH/X0pjlpptflTOyqIZqCvKCA8+
oZ7h+sTuxLxKKZHGW3h9q4G5MdTYGE5uDDHFEqPHqjn1OPF3u+vXbx4yRGNU
h6ZJotUCk1mLctQfsiL/ijPz73ap5Ba8K9uRnM/av7QubougxthOuVFLB5po
8nsN0xjZqxiOxpj9e39MHWuZyloqxLdj16hntV5z5llKgzq+tfLBlI8jN8be
moI+RV34pg20xiw5EVTY1VTbTH7PhiQXN7I1RrX885zm8zXGQdscpKgNXkVq
jNU6q8RmZqyMfKAjKzVl92H19NaHr8S9alVHQ9eHrjMsN0ZdNk+on8OGCsV7
+BozMVaTztGfGsYeGDPqY2M4uTHEFEul9M6/O/4wYS9TLknO7TZWYxhZvsRG
KVpLMZTGLAil5zNi5fdyNcZsyY1U1hzlivb6krjY2D+Jia1Dttx8laXuFmzL
ijUXzo15E39USGN2PVdvdoZq08PNWQ1KxB3l1U+mCGjMvlANunQXOhrVqbQ8
mTywHMq/fUCjMeai/PLCO+ZqkLFKbmWvdV1Z6em7/dSzWvvdjvv/7Z3bUxvX
AcYHvbGP8WPhDV4y00n70Bm7F8+0tWPSSCWtp0nTyBljx5fKCh0n9UXjGIGL
HNnItWysriGYiAhjEJeAAAWjCxQhIaMbQtUVBJKQQF5p9DdUu9KesxchJNeZ
6WR253sCabV79uyec377ne8sbhC1zi8XUhHNRf6Yn6hYmQ2P4WTzq9MYKm/B
PFN1x+g05tglyQtyHEjN72XRmJrjV67YAVdKaGViNo1pKkSLZCLdBWMMhcbU
PAb+wMTE3cuQxvBvnfsuHPCFqWG85WiM3/AWncbwBH2UQXcu7jOfPEmjMciF
SQNoGTYtTd83jWmegvVh8GaBtyBtVodtBHk9NAbVkI1PxNRXZC9np83ri0eq
ozEJjbQUjblsLt47z3sQ8EcBoc/M9Nb85brTek/VR6xq3Seedrl3svhjcET2
f5Abk9e1Rk0gRTneeMT9D5niR+/jHObQ+a+vz/sDGO7zuXrmGqQx710/MrVJ
u2HTMeO8SSwjVrWWjaPLW/g79mxYfrGK3BhkkIQS2XDnJwUI0yYwRmd72wpA
pmkuBtuRUQWbxtQP+IlzSevQqowxVdGYoPTD74/GpIa7StEYkrdElrTI+2Vo
zFb33xk05hbSsw5nmOKXanfVZrv6UI2vat0+dssYxK9vLqVVfrlPbkxIeuq1
0pgPZUdmt+iVJ2E0WcRdxPLWXTOoLUZUnk35315bbgwyQg4Ashud4gJ1UQgW
tmf7FRXRmLtu8mxTw8oih2kcCVvn1EXeIrE7ih94RW8MIzfmkOzfczE4b8is
vc/7WIEonI8HijQG0ZKdi+xmZ2sBuSgFi7FZtbISGpPva2lVpewxKh/Rk8wu
TfRSaMxDKTmKJ1wuBH45N64JB1vPlaQxysapKLzE6fzHlBXSmNTqPIPG8M7P
6yg4BL+EYT/6TP9bfFXr0Y8n1oxEQUVss+WWty5DYyhZvvhSUI8Y/1XxFF7Q
8pbN762ExvRKybYU86/UF8CCaFoTCbeKipxBBNoPjsb8EGnM4afgaZ/LOQbq
9qUx7bDPFppu+t9pzJtHD2tIF3oxv3dfGlPz5nH+OOiTJ+1DN96goJja5m4d
PujIhIzKBiaKyevt1gXQDc5EfVZ1/5P2oXlLcA97GewTnYAzlfJ7cFv1i57p
J59URmPwRZwXvhLX0mnM4UE/fqg7LyS/o/29VqT3UjtjrA0L6vk/gym+BTXc
X42X+1Iubu1tqDjFt67HA5+EmYTLMNn+r8lnzkgqkwlZJieAaz3p6Vcb7fGI
Wvz7ymhM/uhDz26eodOY5r8SBnssOMenp/jW9YE7PxN1mxSo7tv/JKKW3rrS
3ph3a450g1FnMb+3HI2BUTM5+ze1TBrDr2nuN9DGsKwt6ZC8V22K7yMyZyMX
nO5g0ZgWOSQHI3VsGvPLQfCyY/nrM1XRmJqWGTesQ1uW72bae8bVlsAGlo0u
DzTAmUr584qYLC9MLsNZQGPy7WFgoeWPdBpzFCVKO+vVdZIpvgUDzCXJCq3x
Y227BtWlSlN8ixLDfWZiugef1VJQzBvX9QQA2bWP3K5loJiff1Cn9pG/S661
RKMxp0iHDx6YW1cpjRF1umBXB4tHvh0baR9bsoTTWCY2N2YDRR13GRXPA9GQ
if+b6mnMr74s8hZ8ZSUhi8aALF9Gfi+Lxhw9VXvVfMBTJbzAP85I8X0KiBOW
8KMdrbUUGlN7epS4O7KhpYEGZlxMAeNko46pX7xNpzFFgLNreMxM8X0LpJHn
vG0nWDTm16gW+I2x2OzEuGJ2LbAX7YOLKF2TvDio1vVcpxlmpFaKuShfAuam
V6Yxx0Qkb4ErK1FoDMzypeX3lqAx52vefaAOk1UrFUKllykoRvxj1InnNWXi
uu4viiiGSmP4T2dgI5Zy2ZYU6knUGFjfy6ZDi3w+nKmU38OKzaNfc3VdADSm
VQLSPLaW+Qwac0KEfGGhViFsb1s/OfSHi7KfXunPj8iimb04HJNnQz6PfiWg
H7tToDH1Q3DkJf+ITWMuS53g4uvrK6Ex7/RT6kNcr5u+N+cLpLee3KjYGyMy
kcOfnHngcxaNuSmHjU/Kaprv0DndidTcV22VeWMm4L2zE0LvtCEUGoOIZghy
lQ1ZRxupc5cERTX2+w5ozR1TjVWl+HY5wJxvbVcJGiMwkKW54xCyaYwKvINJ
aDqYNIbXfKfVuoOVOExQHWLqWzcoKb4F3ZU402W+lG9zDOq7VaX48u65wLu7
9NY6OmRWuxKpDRvFJ9MFfzS7o3uiRCgo5pB8mUgqTNt16moSY4o05ic68ONB
6Z9ZNOaxlyzDHY2sBI1BKPeI9C8laIxwiXy+bTsE+9KYHLbhOHmaTmNahjSb
+K2djtgFH1ENM0XwgmgCIK1Ic5tJY3gf3BYY4+Wub74PYBxEGCm+PT6QxaqR
l6AxyDNoF5GeKkFjhBbyWbbtEjDnIqkk7oMqz6CKkeIrXCZ3mFwTlqAxwyBZ
KLo8waAxvG4vrFrbAVS7rPYkU5uOUj6ZUjTm0yUwgMCS0WHdAroSiyaDVz8l
vTEQ1+xpH5WgMQJg8EiuCym5MX+yUFBoJmk0Wzt0Ln1oN517aTd7zGQhYZv+
e89DoWRY8jlpj1GtU84oiI7aiDNy7euTYdIYvBEZ7umj05gHolXcJoJF3QJa
iu99ITTwZwNOR8eMxxjDvKbRfbwxSt655wCh4Pm9p8vTmHHgGMl5lxAGjWl5
iPxzzctY2pG+YdE1wYVXSvEtSLFW6D/DlZWoNOastpjle0B+LyGpEzZM4z0s
GoMKV0DNzwZc7g691xjLeBeATwbimlzAXs+mFpdscBAx/Q0LdGi7Qa9o3YYw
CYlGDpnxaj0bs4gpO58Z5GjMfjSGEydOnDhx4sSJEydOnDhx4sSJEydOnDhx
4sSJEydOnDhx4sSJE6cfpP4LFX65aw==
    "], {{0, 1171}, {1498, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1498, 1171},
  PlotRange->{{0, 1498}, {0, 1171}}]], "Input",
 Evaluatable->False,
 CellLabel->"In[58]:=",
 CellID->34083425,ExpressionUUID->"20158325-a1e8-4025-9c1a-8952a44960a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Beyond CSS 2.1", "Section",
 CellID->350926873,ExpressionUUID->"8f48dbfb-3a01-4c62-bcf4-116e8e57a733"],

Cell["\<\
CSS as a standard continues to evolve. The core features are described in the \
CSS 2.1 specification. Additional features are included via module \
specifications.\
\>", "Text",
 CellID->13241645,ExpressionUUID->"66e76359-cf63-4b27-8d3a-050c3958a133"],

Cell[CellGroupData[{

Cell["CSS Custom Properties Module 1", "Subsection",
 CellID->172356013,ExpressionUUID->"9354acd0-5ba9-4f0a-9f4b-ba8934c0a5e7"],

Cell[CellGroupData[{

Cell["Introduction", "Subsubsection",
 CellID->286665137,ExpressionUUID->"6b761a89-a649-444b-b96c-bae3a4d108d8"],

Cell[TextData[{
 "CSS custom properties are defined as a normal property starting with two \
dashes. The property name is case-sensitive. The property value can be \
accessed in other declarations using the CSS ",
 StyleBox["var()", "InlineCode"],
 " function. "
}], "Text",
 CellID->258934013,ExpressionUUID->"5edd66b9-cf5e-48e5-8e6d-6fdb28e9c015"],

Cell["\<\
As properties they must obey the cascade algorithm. This leads to the concept \
of compute-value-time. Because the property values may not be fully \
resolvable until running the cascade algorithm, many property interpretations \
may remain uninterpreted when importing CSS data.\
\>", "Text",
 CellID->242058889,ExpressionUUID->"0b16d6e0-0dea-4de8-bb8e-ce25b1d3d889"],

Cell[TextData[{
 "The cascade itself can lead to quite complicated WD value interpretations \
due to other CSS module additions or ",
 StyleBox["@media", "InlineCode"],
 " conditions."
}], "Text",
 CellID->19389209,ExpressionUUID->"e6dc2aec-e396-44d9-8a1f-32c1877b8369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["var()", "InlineCode"]], "Subsubsection",
 CellID->491335736,ExpressionUUID->"ae6fff5c-2d44-4159-9cc7-55f86e8390be"],

Cell["\<\
The var() function's first argument is a previously defined custom property \
name. The corresponding custom property value is substituted verbatim where \
the custom property name is referenced. \
\>", "Text",
 CellID->425199334,ExpressionUUID->"7f9e8d05-cdf0-417a-9b70-dd46112c14ba"],

Cell[TextData[{
 "An optional second argument to the ",
 StyleBox["var()", "InlineCode"],
 " function must follow a comma after the first argument. No whitespace is \
needed after the comma. The second argument defines a fallback value if the \
first argument does not match any custom property definition. If no matching \
custom property exists and and no fallback value is provided then the \
declarations is guaranteed to be invalid and fail its interpretation."
}], "Text",
 CellID->578569498,ExpressionUUID->"89c55b02-b6ca-4149-97fb-e6cf1cd02d84"],

Cell[TextData[{
 "The CSS ",
 StyleBox["var()", "InlineCode"],
 " function resolves at compute-value-time, that is, when ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "980e0f0f-f4b4-4679-9da4-26dd31f6a660"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "6ae42ef9-074b-4dab-8da0-46749d276d40"],
 " is used. "
}], "Text",
 CellID->312953253,ExpressionUUID->"79b182e5-dc76-4296-afba-f024c37c96f8"],

Cell["\<\
Here is an example of CSS data that uses custom variables and accesses them \
with the var() function:\
\>", "Text",
 CellID->175903162,ExpressionUUID->"56e090da-7dcc-4e0f-b5c6-48722200941f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<h1 {\n      --customVariable:10px;\n      \
border-right-width:var(--customVariable, 20px);\n      \
border-left-width:var(--customvariable, 20px)}\>\"", ",", "\"\<CSS\>\""}], 
   "]"}]}]], "Input",
 CellLabel->"In[14]:=",
 CellID->173420460,ExpressionUUID->"5ab113e5-a0b7-40e8-bc61-b06f59f52fe2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "--customVariable", "Value" -> "10px", "Important" -> 
           False, "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--customVariable", "Value" -> "10px", 
               "Namespaces" -> {}]], "Condition" -> None], 
          Association[
          "Property" -> "border-right-width", "Value" -> 
           "var(--customVariable, 20px)", "Important" -> False, 
           "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "var(--customVariable, 20px)", "Property" -> 
               "border-right-width", "Namespaces" -> {}]], "Condition" -> 
           None], 
          Association[
          "Property" -> "border-left-width", "Value" -> 
           "var(--customvariable, 20px)", "Important" -> False, 
           "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "var(--customvariable, 20px)", "Property" -> 
               "border-left-width", "Namespaces" -> {}]], "Condition" -> 
           None]}]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          3, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[172.8], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[259.20000000000005`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
                    TypeSystem`PackageScope`ElidedShape[2]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 3, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], TypeSystem`AnyType, 
              TypeSystem`AnyLength], 1], TypeSystem`AnyType}], 3]}], 1], 
     "Meta" -> Association["ID" -> 43027177762382], "RowTarget" -> 20, 
     "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          3, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[172.8], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[259.20000000000005`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
                    TypeSystem`PackageScope`ElidedShape[2]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 3, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], 
             TypeSystem`Assoc[
              TypeSystem`Atom[String], TypeSystem`AnyType, 
              TypeSystem`AnyLength], 1], TypeSystem`AnyType}], 3]}], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 2, "DataRowCount" -> 1, "DataColumnCount" -> 2,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 656509754][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 656509754][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 656509754][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 656509754][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 656509754][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["--customVariable", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSCustomPropertyDefinition", 
                  Style[
                  "CSSCustomPropertyDefinition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                   Row[{"Keys: ", 
                    
                    Row[{"Name", "Value", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                   TooltipDelay -> 0.1], 
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Name", "Value", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["border-right-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["var(--customVariable, 20px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSResolveValueAtComputeTime", 
                  Style[
                  "CSSResolveValueAtComputeTime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                   Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                   TooltipDelay -> 0.1], 
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["border-left-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 3, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["var(--customvariable, 20px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 3, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 3, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSResolveValueAtComputeTime", 
                  Style[
                  "CSSResolveValueAtComputeTime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{1, 
                   Key["Block"], 3, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                   Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                   TooltipDelay -> 0.1], 
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"String", "Property", "Namespaces"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][{1, 
                   Key["Block"], 3, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               656509754][{1, 
                 Key["Block"], 3, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                656509754, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 656509754]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[656509754][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[656509754][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 656509754; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{854., {79., 85.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[14]=",
 CellID->78218064,ExpressionUUID->"c5cb6843-536a-4ed4-b27d-76ac50b09776"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["border-left-width", "InlineCode"],
 " property value does not contain any matching custom variable property \
names and instead uses the fallback value. The ",
 StyleBox["border-right-width", "InlineCode"],
 " does contain a matching custom variable property name so the corresponding \
custom property value is substituted:"
}], "Text",
 CellID->329289187,ExpressionUUID->"828ad265-d7d7-4c52-b659-c04a0ef7ebf6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<border\>\"", ",", "Cell", ",", "cssData", ",", "All"}], 
  "]"}]], "Input",
 CellLabel->"In[55]:=",
 CellID->94937919,ExpressionUUID->"d99ca554-a9b5-4e08-b84c-617d7224535f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrame", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[55]=",
 CellID->155672448,ExpressionUUID->"2008bef0-80e8-48ff-9cb6-d4f1dfdea4fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CSS Values and Units Module 3", "Subsection",
 CellID->260963109,ExpressionUUID->"4e51f726-060b-4ff1-9b56-32ada895c1d1"],

Cell[CellGroupData[{

Cell["Introduction", "Subsubsection",
 CellID->263969780,ExpressionUUID->"c6c69579-a10a-4a65-bd33-fea125aebe62"],

Cell[TextData[{
 "This module introduces new length units (",
 StyleBox["rem", "InlineCode"],
 ", ",
 StyleBox["vw", "InlineCode"],
 ", ",
 StyleBox["vh", "InlineCode"],
 ", ",
 StyleBox["vmin", "InlineCode"],
 ", ",
 StyleBox["vmax", "InlineCode"],
 "), a new function ",
 StyleBox["calc()", "InlineCode"],
 ", and modifies an existing function ",
 StyleBox["attr()", "InlineCode"],
 ". The units that begin with ",
 StyleBox["v", "InlineCode"],
 " are viewport units that always scale with the width of the window. "
}], "Text",
 CellID->117843097,ExpressionUUID->"f829ef22-d1e0-4c76-b4be-5047a4d799d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["rem", "InlineCode"],
 " Length Unit"
}], "Subsubsection",
 CellID->611739938,ExpressionUUID->"38c97efc-64c9-44e9-8e0c-a70776ba4655"],

Cell[TextData[{
 "A ",
 StyleBox["rem", "InlineCode"],
 " represents the ",
 StyleBox["font-size", "InlineCode"],
 " property value of the root XML element. If no ",
 StyleBox["font-size", "InlineCode"],
 " property is defined for the root element, then the WD global ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FontSize"]], "paclet:ref/FontSize"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "1fafd705-9bf6-4753-b7e8-344f26690e6d"],
 " value is used."
}], "Text",
 CellID->33559431,ExpressionUUID->"7ce568ba-ecdc-4e43-9516-21db126bf291"],

Cell[TextData[{
 "Here is an example of CSS data using the ",
 StyleBox["rem", "InlineCode"],
 " length unit:"
}], "MathCaption",
 CellID->171858137,ExpressionUUID->"f3465601-fc38-4471-a27d-8b111af64905"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawCSSData", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<:root {font-size:20px} h1 {font-size:2rem}\>\"", ",", 
     "\"\<CSS\>\""}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->119608728,ExpressionUUID->"b10f9135-e4d5-4f08-834b-587caabc9dbf"],

Cell["Apply the CSS data to a simple HTML document:", "MathCaption",
 CellID->157357000,ExpressionUUID->"b3ef0527-1587-4fcc-b21c-72f1cf9415e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<<html xml:lang='en'><body><h1>H1 content.</h1><label><h1>Another \
tag.</h1></label></body></html>\>\"", ",", "\"\<XML\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[146]:=",
 CellID->409173682,ExpressionUUID->"05a161cb-1821-4935-9a20-2c1fdf6ae06f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"CSSTargets", "[", 
   RowBox[{"doc", ",", "rawCSSData"}], "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->992243304,ExpressionUUID->"34e604e8-b52d-400e-a08e-26125c6d3200"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ":root ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "PseudoClass" -> Association["Name" -> "root"]}}, 
           "Specificity" -> {0, 0, 1, 0}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "html", "Namespace" -> "", "Position" -> {2}, 
            "Attributes" -> 
            Association[
             "lang" -> Association[
               "Namespace" -> "http://www.w3.org/XML/1998/namespace", "Value" -> 
                "en"]], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "20px", "Important" -> False, 
           "Interpretation" -> Association[FontSize -> 20], "Condition" -> 
           None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "h1", "Namespace" -> "", "Position" -> {2, 3, 1, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSTarget[
           Association[
           "Type" -> "h1", "Namespace" -> "", 
            "Position" -> {2, 3, 1, 3, 2, 3, 1}, "Attributes" -> 
            Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> "2rem", "Important" -> False, 
           "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "2rem", "Property" -> "font-size", 
               "Namespaces" -> {}]], "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 2], "Meta" -> 
     Association["ID" -> 41287716023762], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[86.4], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[38.400000000000006`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 1, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 1, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 2, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 1], 
            TypeSystem`AnyType}], 1]}], 2], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     2, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 628183334][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 628183334][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 628183334][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 628183334][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 628183334][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 628183334][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\":root\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ":root ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "PseudoClass" -> Association["Name" -> "root"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["20px", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FontSize", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FontSize]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{2, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2rem", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CSSResolveValueAtComputeTime", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Association[
                   "String" -> "2rem", "Property" -> "font-size", 
                    "Namespaces" -> {}], ShowStringCharacters -> False], 
                  Style[
                   Style[
                    Association[
                    "String" -> "2rem", "Property" -> "font-size", 
                    "Namespaces" -> {}], ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][{2, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               628183334][{2, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                628183334, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 628183334]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[628183334][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[628183334][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 628183334; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{889., {71., 77.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[147]=",
 CellID->628351573,ExpressionUUID->"5904da95-dd6e-41f4-ac73-b79e6ad02ab9"]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "6f498a0b-a288-4f6a-a1b1-a90e8f7f87bb"],
 " function will miss the ",
 StyleBox["font-size", "InlineCode"],
 " defined in the root element because it lacks inheritance:"
}], "MathCaption",
 CellID->92508675,ExpressionUUID->"a01511dc-14b2-4646-9522-93475374face"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"CSSCascade", "[", 
   RowBox[{
   "\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", "\"\<h1\>\""}], 
   "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->412886059,ExpressionUUID->"a31728c0-972a-4fca-b5a3-f2524d710823"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", 
   DynamicBox[ToBoxes[2 CurrentValue[$FrontEnd, FontSize], StandardForm],
    ImageSizeCache->{14., {0., 8.}}]}], "}"}]], "Output",
 CellLabel->"Out[148]=",
 CellID->276961594,ExpressionUUID->"848ce6e2-3b15-438e-8a19-fbd0488d83d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "result", "]"}]], "Input",
 CellLabel->"In[149]:=",
 CellID->486207228,ExpressionUUID->"e7c6d3fa-0681-4cd0-b082-cb50e8e69711"],

Cell["{FontSize -> Dynamic[2*CurrentValue[$FrontEnd, FontSize]]}", "Output",
 CellLabel->"Out[149]//InputForm=",
 CellID->408844571,ExpressionUUID->"f76d325f-5515-483a-9c70-b6d36c32b78c"]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "d3b7713b-2f91-4d66-8a01-d5349b9295f5"],
 " function will pick up the ",
 StyleBox["font-size", "InlineCode"],
 " value declared in the root element, resulting in twice the interpreted \
root value:"
}], "MathCaption",
 CellID->74601511,ExpressionUUID->"5226f107-dc46-4515-aab0-31a7e613460c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"CSSInheritance", "[", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TagBox[
       TooltipBox[
        FrameBox[
         TemplateBox[{
           StyleBox["\"XML \"", 
            RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
           StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
          "RowDefault"],
         Background->RGBColor[1, 0.9, 1],
         BaseStyle->{FontFamily -> Dynamic[
             CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
           FontColor -> GrayLevel[0.2]},
         FrameMargins->{{5, 5}, {2, 2}},
         FrameStyle->Directive[
           RGBColor[0.5, 0, 1], 
           AbsoluteThickness[1]],
         ImageMargins->2,
         RoundingRadius->4,
         StripOnInput->False],
        RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "1", ",", "3", ",", "1"}], "}"}]],
       Annotation[#, {2, 3, 1, 3, 1}, "Tooltip"]& ],
      Editable->False,
      StripOnInput->False,
      ShowStringCharacters->False],
     CSSTools`CSSTarget[
      Association[
      "Type" -> "h1", "Namespace" -> "", "Position" -> {2, 3, 1, 3, 1}, 
       "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
       Association[
        "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
         False]]]], ",", "Cell", ",", "cssData"}], "]"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->368659788,ExpressionUUID->"fcda9e8c-f641-4b0c-810b-32ac506e5fba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "40"}], "}"}]], "Output",
 CellLabel->"Out[150]=",
 CellID->140456599,ExpressionUUID->"6b2f1228-551f-4557-9f18-c2a420beac79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "result", "]"}]], "Input",
 CellLabel->"In[151]:=",
 CellID->310756716,ExpressionUUID->"aea6177f-4c13-4847-93bf-c6b0a0c71538"],

Cell["{FontSize -> 40}", "Output",
 CellLabel->"Out[151]//InputForm=",
 CellID->537653934,ExpressionUUID->"ad9f8767-b1af-48f0-a601-af662c2ffbac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["calc()", "InlineCode"]], "Subsubsection",
 CellID->71024573,ExpressionUUID->"6c6356a3-9e0b-45f5-98dc-ad8dcd266ff8"],

Cell[TextData[{
 "The CSS ",
 StyleBox["calc()", "InlineCode"],
 " function allows the user to specify basic addition, subtraction, \
multiplication and division within a property value. "
}], "Text",
 CellID->275539025,ExpressionUUID->"c6b3675b-bcbe-4ccc-86ab-01f640670dbd"],

Cell[TextData[{
 "Addition is specified by the ",
 StyleBox["+", "InlineCode"],
 " operator. Subtraction is specified by the ",
 StyleBox["-", "InlineCode"],
 " operator. At least one space must be on either side of the operator such \
that the operator is not confused for being either part of the left unit's \
dimension or right number's sign."
}], "Text",
 CellID->122270234,ExpressionUUID->"91b8c9b7-74f2-4616-b4e5-d1be5d81e714"],

Cell[TextData[{
 "Multiplication is specified by the ",
 StyleBox["*", "InlineCode"],
 " operator. Division is specified by the ",
 StyleBox["/", "InlineCode"],
 " operator. Any amount of whitespace is allowed. You cannot multiply two \
dimensions together. You can only divide by a number, not a dimension."
}], "Text",
 CellID->329835918,ExpressionUUID->"be2d5256-f7eb-43b6-bea2-27df35e5bb8e"],

Cell[TextData[{
 "If the CSS ",
 StyleBox["calc()", "InlineCode"],
 " function can resolve to a simple value during parsing, then it will. \
Otherwise the CSS ",
 StyleBox["calc()", "InlineCode"],
 " function resolves at compute-value-time, that is, when ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "806971d5-5506-4b72-8d71-c337ff66c6c8"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "23dda72d-998f-48fe-9a61-42c3c1ff6e64"],
 " is used. The CSS interpretation will have the key ",
 StyleBox["\"CSSResolveValueAtComputeTime\"", "InlineCode"],
 " until ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "73ec03af-eab4-4a0d-843c-2d53ba5a5c9b"],
 " is used."
}], "Text",
 CellID->373777434,ExpressionUUID->"67588a59-644e-48ca-bb4d-f691cd765fb8"],

Cell[TextData[{
 "Here is an example of CSS data that uses the ",
 StyleBox["calc()", "InlineCode"],
 " function:"
}], "Text",
 CellID->810936465,ExpressionUUID->"3f8af368-119f-4f61-8849-ea880a2cd7f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<h1 {border-left-width:calc(10px + 2px);font-size:calc(1mm + \
30px)}\>\"", ",", "\"\<CSS\>\""}], "]"}]}]], "Input",
 CellLabel->"In[10]:=",
 CellID->184842682,ExpressionUUID->"354fd7d3-acd7-4c63-8e3f-92a79523fa64"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "border-left-width", "Value" -> "calc(10px + 2px)", 
           "Important" -> False, "Interpretation" -> 
           Association[FrameStyle -> AbsoluteThickness[12], CellFrame -> 12], 
           "Condition" -> None], 
          Association[
          "Property" -> "font-size", "Value" -> "calc(1mm + 30px)", 
           "Important" -> False, "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "calc(1mm + 30px)", "Property" -> "font-size", 
               "Namespaces" -> {}]], "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[153.60000000000002`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 
            TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
     Association["ID" -> 237765289929713], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          2, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[153.60000000000002`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape[True], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Assoc[
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 
            TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 549090920][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 549090920][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 549090920][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 549090920][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 549090920][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["border-left-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["calc(10px + 2px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "FrameStyle", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FrameStyle]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"AbsoluteThickness", "[", "12", "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[FrameStyle]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "CellFrame", FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[CellFrame]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key[CellFrame]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["calc(1mm + 30px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CSSResolveValueAtComputeTime", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Association[
                   "String" -> "calc(1mm + 30px)", "Property" -> "font-size", 
                    "Namespaces" -> {}], ShowStringCharacters -> False], 
                  Style[
                   Style[
                    Association[
                    "String" -> "calc(1mm + 30px)", "Property" -> "font-size",
                     "Namespaces" -> {}], ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSResolveValueAtComputeTime"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSResolveValueAtComputeTime"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               549090920][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                549090920, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 549090920]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[549090920][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[549090920][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 549090920; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1013., {76., 82.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[12]=",
 CellID->173028883,ExpressionUUID->"66c2c354-0d0b-415e-9d10-ba42d9eef958"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["border-left-width", "InlineCode"],
 " was able to resolve during parsing. The ",
 StyleBox["font-size", "InlineCode"],
 " property resolves when using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "25f2bbad-dff2-4548-9776-cd2a3abf6e86"],
 ":"
}], "Text",
 CellID->657188602,ExpressionUUID->"033425ba-d1cd-4b43-8000-b4dd377090cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{"\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", "All"}], 
  "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->114509981,ExpressionUUID->"e434af7e-0b92-43a7-8848-577e6f73cdb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", "33.77952755905512`"}], "}"}]], "Output",
 CellLabel->"Out[13]=",
 CellID->74656697,ExpressionUUID->"0422bcb6-99d8-41b2-8a5a-7052fb7cc2c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["attr()", "InlineCode"]], "Subsubsection",
 CellID->54517099,ExpressionUUID->"d7898b09-77be-46bc-9fd6-6dd2737e6c11"],

Cell[TextData[{
 "The CSS ",
 StyleBox["attr()", "InlineCode"],
 " function refers to an attribute of an XML element. The first argument is \
the attribute name. The corresponding attribute value is always returned as a \
string. "
}], "Text",
 CellID->8506351,ExpressionUUID->"e77365f9-7457-4d70-9fe1-f4d71ef4d4dc"],

Cell["\<\
The second and third arguments are optional. The second argument must come \
after a space following the first argument. It gives the unit type that the \
returned attribute value string should be interpreted as. The third argument \
must come after a comma following the second argument. It is a fallback value \
that must match the type provided by the second argument.\
\>", "Text",
 CellID->423477363,ExpressionUUID->"fca25985-be00-4822-bb03-d374060765ab"],

Cell[TextData[{
 "If the CSS ",
 StyleBox["attr()", "InlineCode"],
 " function can resolve to a simple value during parsing, then it will. \
Otherwise the CSS ",
 StyleBox["attr()", "InlineCode"],
 " function resolves at compute-value-time, that is, when ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "8283e359-c94d-4c16-9d0c-2e3671f409c5"],
 " or ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "18c95350-d2db-47ad-a2d2-7c1911b2fa35"],
 " is used. "
}], "Text",
 CellID->205564814,ExpressionUUID->"26e377db-12bc-4600-b2b7-7e184df32278"],

Cell[TextData[{
 "The ",
 StyleBox["attr()", "InlineCode"],
 " function is more useful when there is information present from an XML \
document. If there is no XML target information, then the used value is the ",
 StyleBox["attr()", "InlineCode"],
 " function's fallback value. The CSS interpretation will have the key ",
 StyleBox["\"CSSResolveValueAtComputeTime\"", "InlineCode"],
 " until ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "cf413f0f-50fc-41e4-b664-6ef6a2fa50a7"],
 " is used."
}], "Text",
 CellID->422809142,ExpressionUUID->"15f869b1-1c1c-4dab-8eb7-1bf467faf179"],

Cell[TextData[{
 "Note that this ",
 StyleBox["attr()", "InlineCode"],
 " syntax is an experimental CSS syntax and may be dropped from the \
specification."
}], "Text",
 CellID->222929906,ExpressionUUID->"57bb6ea3-8288-45aa-8e52-59b844750b57"],

Cell[TextData[{
 "Here is an example of CSS data that uses the ",
 StyleBox["attr()", "InlineCode"],
 " function:"
}], "Text",
 CellID->632356789,ExpressionUUID->"10d32f52-89d0-4033-bdfc-b8979b07a185"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<h1 {border-left-width:attr(csize length, \
10px);border-right-width:attr(csize string, 10px)}\>\"", ",", "\"\<CSS\>\""}],
    "]"}]}]], "Input",
 CellLabel->"In[20]:=",
 CellID->8621327,ExpressionUUID->"4869b59a-8898-430d-8523-d296de8b85ca"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Block" -> {
          Association[
          "Property" -> "border-left-width", "Value" -> 
           "attr(csize length, 10px)", "Important" -> False, "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "attr(csize length, 10px)", "Property" -> 
               "border-left-width", "Namespaces" -> {}]], "Condition" -> 
           None], 
          Association[
          "Property" -> "border-right-width", "Value" -> 
           "attr(csize string, 10px)", "Important" -> False, "Interpretation" -> 
           Failure["BadParse", 
             Association[
             "MessageTemplate" -> 
              "Property `Prop` is not compatible with the data type.", "Type" -> 
              "string", "MessageParameters" -> 
              Association[
               "Type" -> "Parse", "Prop" -> "border-right-width"]]], 
           "Condition" -> None]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          1, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[172.8], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> 
                  TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
            TypeSystem`AnyType}], 2]}], 1], "Meta" -> 
     Association["ID" -> 229798125536868], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          1, {All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> TypeSystem`PackageScope`AtomShape[172.8], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[230.40000000000003`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> 
                  TypeSystem`PackageScope`UnknownShape[False], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 2, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 2, {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Block"}, {TypeSystem`AnyType, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], TypeSystem`AnyType, 
            TypeSystem`AnyType}], 2]}], 1], "Path" -> {}, "BaseIndices" -> {},
      "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 719841351][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 719841351][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 719841351][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 719841351][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Interpretation", 
                    Style[
                    "Interpretation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                    All, "Block", All, "Interpretation"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 719841351][{All, "Block", All, "Interpretation"}, 
                  "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 719841351][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["border-left-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["attr(csize length, 10px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Association[
                   "CSSResolveValueAtComputeTime" -> 
                    Association[
                    "String" -> "attr(csize length, 10px)", "Property" -> 
                    "border-left-width", "Namespaces" -> {}]], 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[
                    Association[
                    "CSSResolveValueAtComputeTime" -> 
                    Association[
                    "String" -> "attr(csize length, 10px)", "Property" -> 
                    "border-left-width", "Namespaces" -> {}]], 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["border-right-width", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["attr(csize string, 10px)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  RowBox[{
                    TagBox["Failure", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Property border-right-width is not compatible with the \
data type.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BadParse\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"string\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[WarningSign]\"", 
                    Directive["Message", 35], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Property border-right-width is not compatible with the \
data type.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"BadParse\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                    TagBox[
                    GridBox[{{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"string\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                  Failure["BadParse", 
                   Association[
                   "MessageTemplate" -> 
                    "Property `Prop` is not compatible with the data type.", 
                    "Type" -> "string", "MessageParameters" -> 
                    Association[
                    "Type" -> "Parse", "Prop" -> "border-right-width"]]], 
                  Selectable -> False, Editable -> False, SelectWithContents -> 
                  True], FontFamily -> "Source Code Pro", 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               719841351][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                719841351, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 719841351]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[719841351][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[719841351][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 719841351; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1315., {89., 95.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[20]=",
 CellID->64864236,ExpressionUUID->"c57669b2-5623-4e82-9a1f-3737a0b41050"]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["border-right-width", "InlineCode"],
 " property is ignored because the attribute data type ",
 StyleBox["string", "InlineCode"],
 " is not compatible with the property. CSS keywords are not accepted, \
leaving only a length as a compatible data type. The border-left-width uses \
the fallback value since there is no ",
 Cell[BoxData[
 "CSSTarget"], "InlineFormula",ExpressionUUID->
  "499ff5db-2641-4fb6-96f1-51dc4d54a665"],
 " data to reference:"
}], "Text",
 CellID->261819768,ExpressionUUID->"76fd6445-d8ea-4e50-ae9f-57484ab0865b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{
  "\"\<border-left-width\>\"", ",", "Cell", ",", "cssData", ",", "All"}], 
  "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->174164118,ExpressionUUID->"eff1530f-8af8-426e-adc2-f572874fded0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"CellFrame", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "Inherited"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Inherited", ",", "Inherited"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[14]=",
 CellID->40136114,ExpressionUUID->"b9466c5b-0527-4ae6-892c-352cc0dca1ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consequences of Combined Modules", "Subsection",
 CellID->43180724,ExpressionUUID->"e8cff459-6d2c-4015-a790-386d22b04ebf"],

Cell[TextData[{
 "Custom CSS properties, as they are properties themselves, must obey the \
cascade algorithm. This can lead to quite complicated value interpretations \
due to the interplay of ",
 StyleBox["@media", "InlineCode"],
 " conditions, ",
 StyleBox["rem", "InlineCode"],
 " dimension values, or functions like ",
 StyleBox["var()", "InlineCode"],
 ", ",
 StyleBox["calc()", "InlineCode"],
 " and ",
 StyleBox["attr()", "InlineCode"],
 "."
}], "Text",
 CellID->565757231,ExpressionUUID->"b17e1575-9cb0-4cdd-97f1-7547db6ab012"],

Cell["\<\
Here is an example of CSS data with many features from various higher level \
CSS modules:\
\>", "MathCaption",
 CellID->434947135,ExpressionUUID->"91936aa1-8810-491e-bdf3-376bcc7ae449"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawCSSData", "=", 
   RowBox[{"ImportString", "[", 
    RowBox[{
    "\"\<\n :root {\n   --font-scale: 1.2;\n   --font-size-1: \
calc(var(--font-scale)*var(--font-size-2));\n   --font-size-2: \
calc(var(--font-scale)*var(--font-size-3));\n   --font-size-3: 1rem;}\n h1 \
{font-size: attr(size length, var(--font-size-1))}\n @media (min-width:500px) \
{\n   :root {--font-scale: 1.33}}\>\"", ",", "\"\<CSS\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[52]:=",
 CellID->250349650,ExpressionUUID->"1ea43d20-bbd8-47de-9329-629601114289"],

Cell["Apply the CSS data to a simple HTML document:", "MathCaption",
 CellID->117964732,ExpressionUUID->"eec49e1d-583c-4328-8868-7efdb5a4ef5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"doc", "=", 
  RowBox[{"ImportString", "[", 
   RowBox[{
   "\"\<<html xml:lang='en'><body><h1>H1 content.</h1><label><h1>Another \
tag.</h1></label></body></html>\>\"", ",", "\"\<XML\>\""}], "]"}]}]], "Input",
 CellLabel->"In[69]:=",
 CellID->150606441,ExpressionUUID->"461dd745-4743-406c-9756-576a924b8b74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"XMLObject", "[", "\<\"Document\"\>", "]"}], "[", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"XMLElement", "[", 
    RowBox[{"\<\"html\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"http://www.w3.org/XML/1998/namespace\"\>", 
         ",", "\<\"lang\"\>"}], "}"}], "\[Rule]", "\<\"en\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"XMLElement", "[", 
       RowBox[{"\<\"body\"\>", ",", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"XMLElement", "[", 
           RowBox[{"\<\"h1\"\>", ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", "\<\"H1 content.\"\>", "}"}]}], "]"}], ",", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\<\"label\"\>", ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\<\"h1\"\>", ",", 
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", "\<\"Another tag.\"\>", "}"}]}], "]"}], "}"}]}], 
           "]"}]}], "}"}]}], "]"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Output",
 CellLabel->"Out[69]=",
 CellID->51178686,ExpressionUUID->"3fa0c2ab-d4e0-4aac-88eb-3ef2d92c2976"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cssData", "=", 
  RowBox[{"CSSTargets", "[", 
   RowBox[{"doc", ",", "rawCSSData"}], "]"}]}]], "Input",
 CellLabel->"In[70]:=",
 CellID->280148008,ExpressionUUID->"b94eddc7-f876-4869-8abc-985e730808e6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ":root ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "PseudoClass" -> Association["Name" -> "root"]}}, 
           "Specificity" -> {0, 0, 1, 0}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "html", "Namespace" -> "", "Position" -> {2}, 
            "Attributes" -> 
            Association[
             "lang" -> Association[
               "Namespace" -> "http://www.w3.org/XML/1998/namespace", "Value" -> 
                "en"]], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "--font-scale", "Value" -> "1.2", "Important" -> 
           False, "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--font-scale", "Value" -> "1.2", 
               "Namespaces" -> {}]], "Condition" -> None], 
          Association[
          "Property" -> "--font-size-1", "Value" -> 
           "calc(var(--font-scale)*var(--font-size-2))", "Important" -> False,
            "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--font-size-1", "Value" -> 
               "calc(var(--font-scale)*var(--font-size-2))", 
               "Namespaces" -> {}]], "Condition" -> None], 
          Association[
          "Property" -> "--font-size-2", "Value" -> 
           "calc(var(--font-scale)*var(--font-size-3))", "Important" -> False,
            "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--font-size-2", "Value" -> 
               "calc(var(--font-scale)*var(--font-size-3))", 
               "Namespaces" -> {}]], "Condition" -> None], 
          Association[
          "Property" -> "--font-size-3", "Value" -> "1rem", "Important" -> 
           False, "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--font-size-3", "Value" -> "1rem", 
               "Namespaces" -> {}]], "Condition" -> None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> "h1 ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "Type" -> Association[
                "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
           "Specificity" -> {0, 0, 0, 1}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "h1", "Namespace" -> "", "Position" -> {2, 3, 1, 3, 1}, 
            "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]], 
          CSSTools`CSSTarget[
           Association[
           "Type" -> "h1", "Namespace" -> "", 
            "Position" -> {2, 3, 1, 3, 2, 3, 1}, "Attributes" -> 
            Association[], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "font-size", "Value" -> 
           "attr(size length, var(--font-size-1))", "Important" -> False, 
           "Interpretation" -> 
           Association[
            "CSSResolveValueAtComputeTime" -> 
             Association[
              "String" -> "attr(size length, var(--font-size-1))", "Property" -> 
               "font-size", "Namespaces" -> {}]], "Condition" -> None]}], 
       Association["Selector" -> CSSTools`CSSSelector[
          Association[
          "String" -> ":root ", 
           "Sequence" -> {
            "SimpleSelectorSequence" -> {
              "PseudoClass" -> Association["Name" -> "root"]}}, 
           "Specificity" -> {0, 0, 1, 0}]], "Targets" -> {
          CSSTools`CSSTarget[
           Association[
           "Type" -> "html", "Namespace" -> "", "Position" -> {2}, 
            "Attributes" -> 
            Association[
             "lang" -> Association[
               "Namespace" -> "http://www.w3.org/XML/1998/namespace", "Value" -> 
                "en"]], "ID" -> "id", "CaseSensitive" -> 
            Association[
             "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
              False]]]}, "Block" -> {
          Association[
          "Property" -> "--font-scale", "Value" -> "1.33", "Important" -> 
           False, "Interpretation" -> 
           Association[
            "CSSCustomPropertyDefinition" -> 
             Association[
              "Name" -> "--font-scale", "Value" -> "1.33", 
               "Namespaces" -> {}]], "Condition" -> Hold[CurrentValue[
               InputNotebook[], {WindowSize, 1}] >= 500]]}]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          Association[{
             All, "Block", All, "Interpretation", 
              "CSSCustomPropertyDefinition"} -> 2], {
           All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "CSSCustomPropertyDefinition" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]]], 
                    DirectedInfinity[1], 1, {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 3, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Struct[{"CSSCustomPropertyDefinition"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyLength]}], TypeSystem`AnyType}], 
          TypeSystem`AnyLength]}], 3], "Meta" -> 
     Association["ID" -> 227392943920467], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Selector"} -> 1, {All, "Targets"} -> 
        1, {All, "Block"} -> 
        Association[{All, "Block", All, "Property"} -> 
          1, {All, "Block", All, "Value"} -> 
          1, {All, "Block", All, "Important"} -> 
          1, {All, "Block", All, "Interpretation"} -> 
          Association[{
             All, "Block", All, "Interpretation", 
              "CSSCustomPropertyDefinition"} -> 2], {
           All, "Block", All, "Condition"} -> 1]], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Selector" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Targets" -> TypeSystem`PackageScope`UnknownShape[False], "Block" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`RowShape[
                 Association[
                 "Property" -> 
                  TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
                  "Value" -> 
                  TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
                  "Important" -> TypeSystem`PackageScope`AtomShape[36], 
                  "Interpretation" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "CSSCustomPropertyDefinition" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[96.00000000000001], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {
                    All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]]], 
                    DirectedInfinity[1], 1, {
                    All, "Block", All, "Interpretation"}], "Condition" -> 
                  TypeSystem`PackageScope`UnknownShape[False]]], 
                DirectedInfinity[1], 5, {All, "Block", All}]], 3, 
              DirectedInfinity[1], {All, "Block"}]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Selector", "Targets", "Block"}, {
        TypeSystem`AnyType, 
         TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Property", "Value", "Important", "Interpretation", "Condition"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[TypeSystem`Boolean], 
            TypeSystem`Struct[{"CSSCustomPropertyDefinition"}, {
              TypeSystem`Assoc[
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyLength]}], TypeSystem`AnyType}], 
          TypeSystem`AnyLength]}], 3], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     3, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Selector", 
                    Style[
                    "Selector", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                    All, "Selector"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 941688628][{All, "Selector"}, "ColumnHeader", True], 
                 "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Targets", 
                    Style[
                    "Targets", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                    All, "Targets"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 941688628][{All, "Targets"}, "ColumnHeader", True], "Mouse"],
                 " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Block", 
                  Style[
                  "Block", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                  All, "Block"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{All, "Block"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
           SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Property", 
                    Style[
                    "Property", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                    All, "Block", All, "Property"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 941688628][{All, "Block", All, "Property"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Value", 
                    Style[
                    "Value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                    All, "Block", All, "Value"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 941688628][{All, "Block", All, "Value"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Important", 
                    Style[
                    "Important", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                    All, "Block", All, "Important"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 941688628][{All, "Block", All, "Important"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                  All, "Block", All, "Interpretation"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{All, "Block", All, "Interpretation"}, 
                "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["Condition", 
                    Style[
                    "Condition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                    All, "Block", All, "Condition"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 941688628][{All, "Block", All, "Condition"}, "ColumnHeader", 
                  True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CSSCustomPropertyDefinition", 
                  Style[
                  "CSSCustomPropertyDefinition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{
                  All, "Block", All, "Interpretation", 
                   "CSSCustomPropertyDefinition"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{
                All, "Block", All, "Interpretation", 
                 "CSSCustomPropertyDefinition"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\":root\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ":root ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "PseudoClass" -> Association["Name" -> "root"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["--font-scale", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["--font-scale", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Value"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1.2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromAbove}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["--font-size-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["calc(var(--font-scale)*var(--font-size-2))", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["--font-size-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Value"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["calc(var(--font-scale)*var(--font-size-2))", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 2, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 2, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromAbove}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["--font-size-2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["calc(var(--font-scale)*var(--font-size-3))", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 3, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["--font-size-2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 3, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Value"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["calc(var(--font-scale)*var(--font-size-3))", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"], 3, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"], 3, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromAbove}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["4 total \:203a ", ""], 
                  Style[
                   Superscript["4 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{1, 
                   Key["Block"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{1, 
                 Key["Block"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"h1\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> "h1 ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "Type" -> Association[
                    "Namespace" -> Missing["NotFound"], "Name" -> "h1"]}}, 
                    "Specificity" -> {0, 0, 0, 1}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{2, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 2], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{2, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{2, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["font-size", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{2, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["attr(size length, var(--font-size-1))", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{2, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{2, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane["\[LongDash]", ImageMargins -> {{5, 3}, {4, 5}}], 
             Alignment -> {Left, Baseline}, BaseStyle -> GrayLevel[0.85]], 
            SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "None", FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                 True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{2, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 InterpretationBox[
                  StyleBox[
                   FrameBox[
                    TemplateBox[{
                    StyleBox["\"#CSS \"", 
                    RGBColor[0, 0.5, 1], Selectable -> False, StripOnInput -> 
                    False], 
                    StyleBox[
                    "\":root\"", Selectable -> True, StripOnInput -> False]}, 
                    "RowDefault"], RoundingRadius -> 4, Background -> 
                    RGBColor[0.92, 0.98, 1], ImageMargins -> 2, 
                    FrameMargins -> {{5, 5}, {2, 2}}, FrameStyle -> Directive[
                    RGBColor[0, 0.5, 1], 
                    AbsoluteThickness[1]], BaseStyle -> {FontFamily -> Dynamic[
                    CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> 
                    Bold, FontColor -> GrayLevel[0.2]}, StripOnInput -> 
                    False], Editable -> False, ShowStringCharacters -> False, 
                   StripOnInput -> False], 
                  CSSTools`CSSSelector[
                   Association[
                   "String" -> ":root ", 
                    "Sequence" -> {
                    "SimpleSelectorSequence" -> {
                    "PseudoClass" -> Association["Name" -> "root"]}}, 
                    "Specificity" -> {0, 0, 1, 0}]]], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Selector"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 1], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{3, 
                   Key["Targets"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Targets"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}], 
            Item[
             Pane[
              Annotation["--font-scale", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Property"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.33", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Important"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["--font-scale", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Hold", "[", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{
                    RowBox[{"InputNotebook", "[", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"WindowSize", ",", "1"}], "}"}]}], "]"}], 
                    "\[GreaterEqual]", "500"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Condition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Value", 
                  Style[
                  "Value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"], 
                   Key["Value"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1.33", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"], 
                 Key["Value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][{3, 
                   Key["Block"], 1, 
                   Key["Interpretation"], 
                   Key["CSSCustomPropertyDefinition"]}, 2]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               941688628][{3, 
                 Key["Block"], 1, 
                 Key["Interpretation"], 
                 Key["CSSCustomPropertyDefinition"]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Block", All, "Interpretation", 
                    "CSSCustomPropertyDefinition"}]], MenuEvaluator -> 
                  Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Block", All, "Interpretation", "CSSCustomPropertyDefinition"}]], 
                  MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromAbove}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                941688628, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 941688628]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[941688628][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[941688628][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 941688628; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{1106., {220., 226.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[70]=",
 CellID->26803319,ExpressionUUID->"83d32d38-4597-4169-8e7a-a0868248c313"]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSCascade"]], "paclet:CSSTools/ref/CSSCascade"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "3bf7b360-d03b-43c3-96e3-18636d99b128"],
 " function will miss the custom properties defined in the root element:"
}], "MathCaption",
 CellID->27457652,ExpressionUUID->"c2846168-b534-41d5-9fbd-df8d178df596"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CSSCascade", "[", 
  RowBox[{
  "\"\<font-size\>\"", ",", "Cell", ",", "cssData", ",", "\"\<h1\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->96367213,ExpressionUUID->"86deda08-1088-442b-b494-ba6e9091390f"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Failed to reduce declaration.\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Property\"\>", "\[Rule]", "\<\"font-size\"\>"}], ",", 
    RowBox[{"\<\"Value\"\>", 
     "\[Rule]", "\<\"attr(size length, var(--font-size-1))\"\>"}], ",", 
    RowBox[{"\<\"Important\"\>", "\[Rule]", "False"}], ",", 
    RowBox[{"\<\"Interpretation\"\>", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["Failure",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                FrameBox[
                 StyleBox["\"\[WarningSign]\"", 
                  Directive["Message", 35], StripOnInput -> False], 
                 ContentPadding -> False, FrameStyle -> None, 
                 FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Failed to find custom property definition.\"", 
                    "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                   TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GuaranteedInvalidValue\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                   TagBox[
                    GridBox[{{
                    TagBox["\"Prop: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"--font-size-1\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                FrameBox[
                 StyleBox["\"\[WarningSign]\"", 
                  Directive["Message", 35], StripOnInput -> False], 
                 ContentPadding -> False, FrameStyle -> None, 
                 FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"Failed to find custom property definition.\"", 
                    "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                   TagBox[
                    GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"GuaranteedInvalidValue\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}, {
                   TagBox[
                    GridBox[{{
                    TagBox["\"Prop: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"--font-size-1\"", "SummaryItem"]}}, 
                    GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], 
                    "SummaryItem"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Failure["GuaranteedInvalidValue", 
       Association[
       "MessageTemplate" -> "Failed to find custom property definition.", 
        "Prop" -> "--font-size-1", "MessageParameters" -> 
        Association["Type" -> "Compute"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\<\"Condition\"\>", "\[Rule]", "None"}], ",", 
    RowBox[{"\<\"Element\"\>", "\[Rule]", 
     InterpretationBox[
      StyleBox[
       TagBox[
        TooltipBox[
         FrameBox[
          TemplateBox[{
            StyleBox["\"XML \"", 
             RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
            StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
           "RowDefault"],
          Background->RGBColor[1, 0.9, 1],
          BaseStyle->{FontFamily -> Dynamic[
              CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
            FontColor -> GrayLevel[0.2]},
          FrameMargins->{{5, 5}, {2, 2}},
          FrameStyle->Directive[
            RGBColor[0.5, 0, 1], 
            AbsoluteThickness[1]],
          ImageMargins->2,
          RoundingRadius->4,
          StripOnInput->False],
         RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1", ",", "3", ",", "1"}], "}"}]],
        Annotation[#, {2, 3, 1, 3, 1}, "Tooltip"]& ],
       Editable->False,
       StripOnInput->False,
       ShowStringCharacters->False],
      CSSTools`CSSTarget[
       Association[
       "Type" -> "h1", "Namespace" -> "", "Position" -> {2, 3, 1, 3, 1}, 
        "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
        Association[
         "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
          False]]]]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellID->434427734,ExpressionUUID->"0d12293d-b8ce-4582-8733-ce01fb75c36e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[71]=",
 CellID->353032533,ExpressionUUID->"cc3f6758-152d-4552-befd-03eca67f36af"]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CSSInheritance"]], "paclet:CSSTools/ref/CSSInheritance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "008f3967-93b1-40ed-b871-715b5c7a78e1"],
 " function will pick up the custom properties defined in the root element. \
There is no ",
 StyleBox["size", "InlineCode"],
 " attribute in the ",
 StyleBox["h1", "InlineCode"],
 " elements so the ",
 StyleBox["attr()", "InlineCode"],
 " fallback value is used instead. Though custom properties are defined, \
there is no ",
 StyleBox["font-size", "InlineCode"],
 " defined in the root. Moreover, the ",
 StyleBox["@media", "InlineCode"],
 " condition introduces an entirely separate ",
 StyleBox["--font-scale", "InlineCode"],
 " definition. The end result will thus contain a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Dynamic"]], "paclet:ref/Dynamic"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "152e9ebc-be55-490b-9761-5afff29207ab"],
 " interpreted value based on the global ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FontSize"]], "paclet:ref/FontSize"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "f128f136-7837-4602-8139-d609ac1cd305"],
 " value."
}], "Text",
 CellID->19505168,ExpressionUUID->"5bfc482b-dfc9-45a4-b673-9bd24ac93c5c"],

Cell[TextData[{
 "The result is either ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"1.2", "*", "1.2"}], "=", "1.44"}]], "InlineFormula",
  ExpressionUUID->"d68d126b-3597-40bf-bf57-d8e598c29136"],
 " or ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"1.33", "*", "1.33"}], "=", "1.7689"}]], "InlineFormula",
  ExpressionUUID->"834cd7d4-ea4e-4185-bcd9-49635d021834"],
 " times the current ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["FontSize"]], "paclet:ref/FontSize"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "6f6972c8-eec6-4229-828d-94f73db333dc"],
 ":"
}], "MathCaption",
 CellID->711922134,ExpressionUUID->"14ba50a4-426e-41a7-89aa-1081e477ce66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"CSSInheritance", "[", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TagBox[
       TooltipBox[
        FrameBox[
         TemplateBox[{
           StyleBox["\"XML \"", 
            RGBColor[0.5, 0, 1], Selectable -> False, StripOnInput -> False], 
           StyleBox["\"h1\"", Selectable -> True, StripOnInput -> False]},
          "RowDefault"],
         Background->RGBColor[1, 0.9, 1],
         BaseStyle->{FontFamily -> Dynamic[
             CurrentValue[{StyleHints, "CodeFont"}]], FontWeight -> Bold, 
           FontColor -> GrayLevel[0.2]},
         FrameMargins->{{5, 5}, {2, 2}},
         FrameStyle->Directive[
           RGBColor[0.5, 0, 1], 
           AbsoluteThickness[1]],
         ImageMargins->2,
         RoundingRadius->4,
         StripOnInput->False],
        RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "1", ",", "3", ",", "1"}], "}"}]],
       Annotation[#, {2, 3, 1, 3, 1}, "Tooltip"]& ],
      Editable->False,
      StripOnInput->False,
      ShowStringCharacters->False],
     CSSTools`CSSTarget[
      Association[
      "Type" -> "h1", "Namespace" -> "", "Position" -> {2, 3, 1, 3, 1}, 
       "Attributes" -> Association[], "ID" -> "id", "CaseSensitive" -> 
       Association[
        "Type" -> False, "AttributeName" -> False, "AttributeValue" -> 
         False]]]], ",", "Cell", ",", "cssData"}], "]"}]}]], "Input",
 CellLabel->"In[92]:=",
 CellID->363043563,ExpressionUUID->"e29990e1-9529-4ca0-8b77-0ceef6819390"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"FontSize", "\[Rule]", 
   DynamicBox[ToBoxes[
     Which[CurrentValue[
        InputNotebook[], {WindowSize, 1}] >= 500, 
      Dynamic[1.7689 CurrentValue[$FrontEnd, FontSize]], True, 
      Dynamic[1.44 CurrentValue[$FrontEnd, FontSize]]], StandardForm],
    ImageSizeCache->{279., {3., 9.}}]}], "}"}]], "Output",
 CellLabel->"Out[92]=",
 CellID->607620096,ExpressionUUID->"29aca181-c8ab-412c-bb2f-7a3dc419e7fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "result", "]"}]], "Input",
 CellLabel->"In[93]:=",
 CellID->423171875,ExpressionUUID->"39f4380e-fa94-4645-944a-c2f9224d28fe"],

Cell["\<\
{FontSize -> Dynamic[Which[CurrentValue[InputNotebook[], {WindowSize, 1}] >= \
500, 
    Dynamic[1.7689*CurrentValue[$FrontEnd, FontSize]], True, \
Dynamic[1.44*CurrentValue[$FrontEnd, FontSize]]]]}\
\>", "Output",
 CellLabel->"Out[93]//InputForm=",
 CellID->582432645,ExpressionUUID->"56d058c3-6404-4e5f-b42a-e5eae934d16b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]],ExpressionUUID->"b962a58e-0e3e-42ee-91e8-ebb0c4ac2fe1"],
 "Related Guides"
}], "TutorialMoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->23220180,ExpressionUUID->"e781eb13-9253-46f5-a89a-71d58b15b174"],

Cell["", "SectionHeaderSpacer",ExpressionUUID->"b966729b-509a-4672-8fe6-54c041293a43"],

Cell[TextData[ButtonBox["CSSTools",
 BaseStyle->"Link",
 ButtonData->"paclet:CSSTools/guide/CSSTools"]], "TutorialMoreAbout",
 CellID->1567025153,ExpressionUUID->"5bbbc34f-38be-4751-9253-e6cb4e7a204d"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"51b37082-23fc-4c2e-88fd-d5148c6ff1aa"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{726, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"CSS Tools Package",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "CSSTools", ButtonData -> "paclet:CSSTools/guide/CSSTools", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2020, 3, 12, 10, 53, 39.2490241}", 
    "history" -> {"0.0", "", "", ""}, "context" -> "CSSTools`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "C S S Tools Tutorial", "language" -> "en", "paclet" -> "CSSTools", 
    "status" -> "None", "summary" -> 
    "Cascading Style Sheets (CSS) is a stylesheet language used for \
describing the presentation of a document written in markup language like \
HTML and XML. Wolfram Desktop also uses stylesheets to describe the styling \
of notebooks. This package provides tools for importing and processing CSS to \
be used within Wolfram Desktop's stylesheet system. This loads the package : \
It is beyond the scope of this tutorial to provide explanations for every \
difference between the CSS and Wolfram Desktop (WD) stylesheet \
specifications. Please refer to the WD Stylesheets guide page and tutorial \
\"Working with Stylesheets' for more details on the WD system, or the W3C \
learning resource for details with CSS.", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$12274, "title" -> 
    "CSS Tools Package", "titlemodifier" -> "", "windowtitle" -> 
    "CSS Tools Package", "type" -> "Tutorial", "uri" -> 
    "CSSTools/tutorial/CSSTools", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (February 29, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (February 29, 2020)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"07cc346b-4f42-436d-a94e-95aee46ae7a6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[749419, 15074, 34582, 573, 59, "Output",ExpressionUUID->"5de2ead6-f08d-49c5-9c5f-3b48721c3393",
   CellTags->"RasterizedOutput",
   CellID->110463983]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 1570396, 30235}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[589, 21, 5368, 116, 53, "AnchorBarGrid",ExpressionUUID->"5ccd377e-360d-423a-ab01-8eb31ffd8242",
 CellID->1],
Cell[CellGroupData[{
Cell[5982, 141, 109, 1, 63, "Title",ExpressionUUID->"66be0c7f-129c-4236-8284-4c50587b284a",
 CellID->509267359],
Cell[6094, 144, 41370, 732, 138, "TutorialJumpBox",ExpressionUUID->"fd281d40-9808-471d-bc90-30e7f413c4ab"],
Cell[47467, 878, 450, 7, 104, "Text",ExpressionUUID->"58cf0cf3-5168-465c-a524-35cb5b1da76e",
 CellID->1534169418],
Cell[47920, 887, 122, 1, 36, "MathCaption",ExpressionUUID->"6c5f91a0-83cf-46d8-a6f0-c7f574fac3cc",
 CellID->310445284],
Cell[48045, 890, 151, 3, 26, "Input",ExpressionUUID->"6b966142-09bc-409c-8088-88712128147f",
 CellID->575452366],
Cell[CellGroupData[{
Cell[48221, 897, 154, 1, 70, "Section",ExpressionUUID->"27fce8ca-96a5-4e8f-8893-f65ca438ca15",
 CellID->185646103],
Cell[48378, 900, 851, 22, 105, "Text",ExpressionUUID->"a75fc352-5150-4177-b01c-2148207806cc",
 CellID->72334175],
Cell[CellGroupData[{
Cell[49254, 926, 109, 1, 58, "Subsection",ExpressionUUID->"10f8fcb6-a74f-4040-8260-1718748265f8",
 CellID->492661331],
Cell[49366, 929, 1491, 39, 183, "DefinitionBox4Col",ExpressionUUID->"865a3552-2484-4964-8dba-0a00a6ae7876",
 CellID->282349],
Cell[50860, 970, 129, 1, 70, "Caption",ExpressionUUID->"693f37f7-7990-4b5e-8c6c-0ebac88388d2",
 CellID->168574036],
Cell[50992, 973, 1429, 35, 70, "Text",ExpressionUUID->"7d78e86e-edc3-497e-91d2-3b72ed1df102",
 CellID->771639886]
}, Open  ]],
Cell[CellGroupData[{
Cell[52458, 1013, 107, 1, 70, "Subsection",ExpressionUUID->"c7682611-d8ca-4032-b5b3-d1c04d56dffd",
 CellID->27852929],
Cell[52568, 1016, 261, 5, 70, "Text",ExpressionUUID->"88ff5561-8eea-4f7f-a8a1-eed43706ddfc",
 CellID->222985747],
Cell[52832, 1023, 2506, 48, 70, "DefinitionBox3Col",ExpressionUUID->"97a1efd9-6db0-4b17-af87-267ca9f0709c",
 CellID->200218437],
Cell[55341, 1073, 122, 1, 70, "Caption",ExpressionUUID->"b73fe078-6f09-4c7c-9644-bcd9f8c757bb",
 CellID->88591569],
Cell[55466, 1076, 377, 6, 70, "Text",ExpressionUUID->"1029939c-6f27-4ae2-9929-887cc3ff1e7a",
 CellID->51822448],
Cell[55846, 1084, 812, 17, 70, "Text",ExpressionUUID->"e75cd706-2aa6-4a12-b5e3-fd7f0d4a1ba8",
 CellID->271229263],
Cell[56661, 1103, 256, 4, 70, "Text",ExpressionUUID->"38eebda8-096f-4933-8cc0-ef1bb6e62f6e",
 CellID->122626150]
}, Open  ]],
Cell[CellGroupData[{
Cell[56954, 1112, 107, 1, 70, "Subsection",ExpressionUUID->"4d71f6ac-ab32-405b-81ab-cabc314db410",
 CellID->305221324],
Cell[57064, 1115, 616, 14, 70, "Text",ExpressionUUID->"f8bec49d-defc-43d8-8210-438837c82b0f",
 CellID->555909034],
Cell[57683, 1131, 4575, 118, 70, "DefinitionBox",ExpressionUUID->"4eda8d7f-dc70-4246-ab46-0e4fcc2852bd",
 CellID->792685257],
Cell[62261, 1251, 122, 1, 70, "Caption",ExpressionUUID->"3ef0af3d-b25e-43c1-b943-11032c1ecd35",
 CellID->264816302],
Cell[62386, 1254, 327, 7, 70, "Text",ExpressionUUID->"5c74b4fe-8f36-40d6-9d9f-e4b5ce712b93",
 CellID->103579448],
Cell[62716, 1263, 1193, 25, 70, "Text",ExpressionUUID->"fce80ee6-2687-4e71-a404-928889e1954e",
 CellID->112998587],
Cell[63912, 1290, 1027, 24, 70, "Text",ExpressionUUID->"c1b0f50d-dd70-4a75-9282-3959ad72bbc6",
 CellID->120150103],
Cell[64942, 1316, 2054, 60, 70, "Text",ExpressionUUID->"d6bff9bd-99b3-4a74-bc1f-87e7572305f0",
 CellID->281172209]
}, Open  ]],
Cell[CellGroupData[{
Cell[67033, 1381, 121, 1, 70, "Subsection",ExpressionUUID->"9305eb8c-022d-4f49-8197-332309c7b25c",
 CellID->12152049],
Cell[67157, 1384, 285, 5, 70, "Text",ExpressionUUID->"3158fcd9-6a76-4f64-b40a-88932ce43d01",
 CellID->320649723],
Cell[67445, 1391, 2093, 54, 70, "DefinitionBox",ExpressionUUID->"34026ad2-a853-4646-be55-f0d0aa6ff1ee",
 CellID->392524317],
Cell[69541, 1447, 127, 1, 70, "Caption",ExpressionUUID->"0eb282d9-f0bd-483f-82dd-7dff77f410be",
 CellID->46612784],
Cell[69671, 1450, 521, 14, 70, "Text",ExpressionUUID->"b433d696-d2f1-4cb8-b303-e79385146ddf",
 CellID->32504473]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70241, 1470, 107, 1, 70, "Section",ExpressionUUID->"db63729e-1e5d-42ea-8be7-6f76ebc8f9ff",
 CellID->121087292],
Cell[70351, 1473, 146, 1, 70, "MathCaption",ExpressionUUID->"045b02fb-135d-4e3c-b1f6-fd7b454d3fdd",
 CellID->836781195],
Cell[70500, 1476, 445, 11, 70, "Input",ExpressionUUID->"41c5b849-7e33-4381-966e-68d0206cc4f9",
 CellID->31754730],
Cell[70948, 1489, 168, 3, 70, "Text",ExpressionUUID->"45443317-b154-4f73-b949-7a4ea538aecd",
 CellID->102370062],
Cell[71119, 1494, 394, 9, 70, "DefinitionBox",ExpressionUUID->"ece5c163-0f68-453a-b4ea-b52d8f33fc3a",
 CellID->81978558],
Cell[71516, 1505, 108, 1, 70, "Caption",ExpressionUUID->"b896e7ae-72bd-4854-96c3-c6d0d72fed10",
 CellID->123757612],
Cell[71627, 1508, 119, 1, 70, "MathCaption",ExpressionUUID->"67cd4ea0-81ae-4f94-b55c-0b16f9d59100",
 CellID->226527354],
Cell[CellGroupData[{
Cell[71771, 1513, 227, 5, 70, "Input",ExpressionUUID->"8df01d96-31de-4992-938a-289df7a5e291",
 CellID->681723581],
Cell[72001, 1520, 38443, 726, 70, "Output",ExpressionUUID->"a7b10ba0-7d97-4b1d-9c85-b6f221a591c7",
 CellID->133396686]
}, Open  ]],
Cell[110459, 2249, 127, 1, 70, "MathCaption",ExpressionUUID->"31bf620d-cb23-4208-988a-68d7918f3679",
 CellID->154777042],
Cell[CellGroupData[{
Cell[110611, 2254, 324, 8, 70, "Input",ExpressionUUID->"5f14ce15-8798-4d79-b62a-ae304f6338ba",
 CellID->58583108],
Cell[110938, 2264, 36394, 688, 70, "Output",ExpressionUUID->"4adbcfb6-3c7c-487c-97fa-ff47cb80b497",
 CellID->142078965]
}, Open  ]],
Cell[147347, 2955, 752, 21, 70, "Text",ExpressionUUID->"4d91b273-40b2-4aad-a6f3-a924acf7ed9a",
 CellID->745579111],
Cell[148102, 2978, 123, 1, 70, "MathCaption",ExpressionUUID->"13419783-7208-4371-8033-cd7c6654c72f",
 CellID->27523641],
Cell[CellGroupData[{
Cell[148250, 2983, 242, 5, 70, "Input",ExpressionUUID->"277727ea-f36c-4328-9fbe-beb89c01b352",
 CellID->313868854],
Cell[148495, 2990, 34840, 656, 70, "Output",ExpressionUUID->"a53d4ec5-4cf0-49cb-bd52-12a54e05933d",
 CellID->165535879]
}, Open  ]],
Cell[183350, 3649, 125, 1, 70, "MathCaption",ExpressionUUID->"82712f09-cef4-4018-8e83-ab0b98b1117b",
 CellID->610584558],
Cell[CellGroupData[{
Cell[183500, 3654, 310, 7, 70, "Input",ExpressionUUID->"1696c732-bcbe-49a5-963b-87f7fc29a85e",
 CellID->568946600],
Cell[183813, 3663, 42268, 818, 70, "Output",ExpressionUUID->"664a571e-29e0-4ad3-8643-7eb9e5884937",
 CellID->142923443]
}, Open  ]],
Cell[226096, 4484, 737, 18, 70, "Text",ExpressionUUID->"8cf2765a-7072-49ac-bdb5-ef15e4d75fcb",
 CellID->410138926],
Cell[226836, 4504, 357, 6, 70, "MathCaption",ExpressionUUID->"eb4d08fd-55c6-4d89-98c8-2a574646e067",
 CellID->714335307],
Cell[CellGroupData[{
Cell[227218, 4514, 290, 7, 70, "Input",ExpressionUUID->"bc2a696b-73a1-4d0f-b241-5e12ac5277fd",
 CellID->10489580],
Cell[227511, 4523, 203, 8, 70, "Print",ExpressionUUID->"62d70803-c255-45fe-9a7e-adbb9de3725c",
 CellID->325991272]
}, Open  ]],
Cell[CellGroupData[{
Cell[227751, 4536, 291, 7, 70, "Input",ExpressionUUID->"ee301fa1-2f51-40bf-96e0-a104e4124915",
 CellID->719835970],
Cell[228045, 4545, 179, 6, 70, "Print",ExpressionUUID->"3b6daf37-bef7-4d85-861e-8422362626f3",
 CellID->286251346]
}, Open  ]],
Cell[CellGroupData[{
Cell[228261, 4556, 531, 14, 70, "Input",ExpressionUUID->"994deaf4-5f3b-4218-b57f-f2bb4201fac2",
 CellID->971740772],
Cell[228795, 4572, 44122, 853, 70, "Output",ExpressionUUID->"3dc90ae8-36ea-4a96-b105-03f616a5c5ee",
 CellID->49312414]
}, Open  ]],
Cell[272932, 5428, 580, 11, 70, "DefinitionBox",ExpressionUUID->"35794b86-2060-40fc-896e-47af7fc56f03",
 CellID->669987316],
Cell[273515, 5441, 116, 1, 70, "Caption",ExpressionUUID->"a35358a6-c9c9-413f-a237-7d02a2dbe810",
 CellID->40274191],
Cell[273634, 5444, 282, 6, 70, "Text",ExpressionUUID->"9e60f475-5491-4a28-9358-3294397059be",
 CellID->217179338],
Cell[273919, 5452, 128, 1, 70, "MathCaption",ExpressionUUID->"c8b74c4e-6cf8-42f0-8176-8ab50d7a12b7",
 CellID->266594283],
Cell[CellGroupData[{
Cell[274072, 5457, 281, 6, 70, "Input",ExpressionUUID->"76f318ec-44d3-4dd1-b8d9-9a6fe63c96b9",
 CellID->103365394],
Cell[274356, 5465, 32509, 609, 70, "Output",ExpressionUUID->"2d198d9e-b416-4d61-adfc-66d81e96eeee",
 CellID->151922447]
}, Open  ]],
Cell[306880, 6077, 375, 7, 70, "Text",ExpressionUUID->"bf7706d2-9d3d-433b-8b83-3d360f5447c8",
 CellID->260369650],
Cell[307258, 6086, 132, 1, 70, "MathCaption",ExpressionUUID->"8eb17ec5-6227-4012-b603-3f5cef113eb6",
 CellID->24798626],
Cell[CellGroupData[{
Cell[307415, 6091, 287, 7, 70, "Input",ExpressionUUID->"f0120d2a-b987-4f4a-8b10-b08fe03a1f60",
 CellID->169988763],
Cell[307705, 6100, 355, 8, 56, "Output",ExpressionUUID->"aee6d07c-bec4-44cd-9c61-9928a0ff8e41",
 CellID->194992739]
}, Open  ]],
Cell[308075, 6111, 22589, 375, 70, "Input",ExpressionUUID->"57de451c-f536-4b8f-9aa5-8117447916b3",
 CellID->48114742]
}, Open  ]],
Cell[CellGroupData[{
Cell[330701, 6491, 123, 1, 70, "Section",ExpressionUUID->"8a07fb13-3076-46b1-8c34-f6a244b68bab",
 CellID->19141817],
Cell[330827, 6494, 289, 5, 70, "Text",ExpressionUUID->"d07cfb29-6867-4ce6-9469-bb79383195c8",
 CellID->241743700],
Cell[331119, 6501, 565, 14, 70, "DefinitionBox",ExpressionUUID->"de5e946e-6151-4b72-acad-849ea72400bb",
 CellID->821655351],
Cell[331687, 6517, 154, 1, 70, "Caption",ExpressionUUID->"7488b400-80ba-430d-81bf-eed5c5e42a1f",
 CellID->546945802],
Cell[CellGroupData[{
Cell[331866, 6522, 112, 1, 70, "Subsection",ExpressionUUID->"1601299a-2a57-43f6-9322-ea2f0b33539e",
 CellID->354439910],
Cell[331981, 6525, 322, 5, 70, "Text",ExpressionUUID->"512bc3ab-3479-4271-8906-8f6f10b7d19d",
 CellID->364035884],
Cell[332306, 6532, 240, 4, 70, "MathCaption",ExpressionUUID->"8caa5204-c48d-4ea3-bd67-7372e8fc852b",
 CellID->207531235],
Cell[CellGroupData[{
Cell[332571, 6540, 259, 6, 70, "Input",ExpressionUUID->"6c1b5207-b0da-4ab8-a873-f549964554a0",
 CellID->802518388],
Cell[332833, 6548, 42050, 798, 70, "Output",ExpressionUUID->"b2303e41-9489-47ea-885a-c6f51a404ab5",
 CellID->259251993]
}, Open  ]],
Cell[374898, 7349, 440, 12, 70, "MathCaption",ExpressionUUID->"eb8088ab-9a57-43b9-bee4-7c7121fe9bde",
 CellID->136067078],
Cell[CellGroupData[{
Cell[375363, 7365, 247, 6, 70, "Input",ExpressionUUID->"a44648c7-e6b1-44da-aecb-76c563975e9d",
 CellID->85039335],
Cell[375613, 7373, 2141, 55, 70, "Output",ExpressionUUID->"4cc41e32-e118-4d51-8a1f-c0bd27f837e8",
 CellID->202535419]
}, Open  ]],
Cell[CellGroupData[{
Cell[377791, 7433, 248, 6, 70, "Input",ExpressionUUID->"94a3b01f-983d-498e-83a6-0018f731a10f",
 CellID->34736704],
Cell[378042, 7441, 2319, 58, 70, "Output",ExpressionUUID->"f98f9407-50ea-4086-8216-8973f4398dcc",
 CellID->24207535]
}, Open  ]],
Cell[380376, 7502, 232, 4, 70, "MathCaption",ExpressionUUID->"dde652cb-f1cc-49f4-9256-2759450d7b3f",
 CellID->149408332],
Cell[CellGroupData[{
Cell[380633, 7510, 247, 6, 70, "Input",ExpressionUUID->"e21264dd-29e5-4a29-9766-950b406f6f1b",
 CellID->23523617],
Cell[380883, 7518, 143, 3, 35, "Output",ExpressionUUID->"7538d00f-26c9-4792-acd4-9c96af714824",
 CellID->49979150]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[381075, 7527, 109, 1, 70, "Subsection",ExpressionUUID->"4723685c-7d24-4e8c-93d4-028e703288e2",
 CellID->258973364],
Cell[381187, 7530, 667, 19, 70, "MathCaption",ExpressionUUID->"10a76afc-3582-412c-acbc-4f0532c50b1e",
 CellID->19164079],
Cell[CellGroupData[{
Cell[381879, 7553, 394, 11, 70, "Input",ExpressionUUID->"14e8a796-7c97-4732-a704-bfe90a7c190d",
 CellID->82274386],
Cell[382276, 7566, 208, 5, 64, "Output",ExpressionUUID->"16712b2d-3c76-4fd1-a58a-9ac654444142",
 CellID->279043060]
}, Open  ]],
Cell[382499, 7574, 341, 7, 70, "Text",ExpressionUUID->"9f746a53-cebf-452f-b263-451465cff723",
 CellID->54711701],
Cell[382843, 7583, 150, 1, 70, "MathCaption",ExpressionUUID->"04b666f8-6d39-4a45-8ded-18d2adac8e58",
 CellID->69472301],
Cell[CellGroupData[{
Cell[383018, 7588, 264, 6, 70, "Input",ExpressionUUID->"dace133e-817a-41b8-bb20-e1ccf85589ec",
 CellID->205641708],
Cell[383285, 7596, 39932, 765, 70, "Output",ExpressionUUID->"dddbf23e-1a15-40d5-b0ae-6a5909d0b907",
 CellID->106335839]
}, Open  ]],
Cell[423232, 8364, 440, 12, 70, "MathCaption",ExpressionUUID->"e1c5c5e0-3eb9-4d12-8777-6012a629288e",
 CellID->74318702],
Cell[CellGroupData[{
Cell[423697, 8380, 235, 5, 70, "Input",ExpressionUUID->"0133e313-d1ee-4aee-ac28-4a950d968e0a",
 CellID->433620215],
Cell[423935, 8387, 348, 10, 35, "Output",ExpressionUUID->"72538f57-54c8-45c4-99e5-343dfb1a00e8",
 CellID->317964501]
}, Open  ]],
Cell[CellGroupData[{
Cell[424320, 8402, 234, 5, 70, "Input",ExpressionUUID->"4245efc2-da22-4446-9424-210b528bfee9",
 CellID->98308474],
Cell[424557, 8409, 424, 12, 35, "Output",ExpressionUUID->"896b0bb0-8039-45b8-af07-ec764825be6b",
 CellID->126951026]
}, Open  ]],
Cell[424996, 8424, 288, 6, 70, "MathCaption",ExpressionUUID->"6fe94cfd-6906-436e-8a2f-0decda2cc7f0",
 CellID->23700927],
Cell[CellGroupData[{
Cell[425309, 8434, 240, 5, 70, "Input",ExpressionUUID->"6022aa9e-ad01-4532-a72b-75490cca3814",
 CellID->738724104],
Cell[425552, 8441, 374, 11, 35, "Output",ExpressionUUID->"5131be63-c618-44f2-8189-8667d2eef4e8",
 CellID->89958719]
}, Open  ]],
Cell[425941, 8455, 203, 4, 70, "MathCaption",ExpressionUUID->"02947258-13ef-4183-b980-de504badfed4",
 CellID->234916321],
Cell[CellGroupData[{
Cell[426169, 8463, 244, 6, 70, "Input",ExpressionUUID->"8edb866e-a66b-4938-8806-59ebb1363c58",
 CellID->219900921],
Cell[426416, 8471, 374, 11, 35, "Output",ExpressionUUID->"a49542dd-03d8-4c5c-ad74-063e41fcc263",
 CellID->20312700]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[426839, 8488, 113, 1, 70, "Subsection",ExpressionUUID->"48f75e18-3d09-44c8-a061-82cc445374be",
 CellID->370300816],
Cell[426955, 8491, 455, 12, 70, "MathCaption",ExpressionUUID->"5f2461b7-e97a-4391-82e4-5ce0211dbe21",
 CellID->348727091],
Cell[CellGroupData[{
Cell[427435, 8507, 394, 11, 70, "Input",ExpressionUUID->"34aca79b-a006-4f1c-8a09-b6f6e34f9f7e",
 CellID->633565613],
Cell[427832, 8520, 207, 5, 47, "Output",ExpressionUUID->"8c3a936b-2956-4e51-bef0-bdca014bee2a",
 CellID->250217341]
}, Open  ]],
Cell[428054, 8528, 353, 6, 70, "Text",ExpressionUUID->"ab5dfa72-87b8-477e-a6af-2e57edd08b2c",
 CellID->75578758],
Cell[428410, 8536, 168, 3, 70, "MathCaption",ExpressionUUID->"49333bce-adfd-441b-9dfd-1757e1e9c1be",
 CellID->542365653],
Cell[CellGroupData[{
Cell[428603, 8543, 277, 7, 70, "Input",ExpressionUUID->"dc69e77a-626a-410d-9a68-aa180c905928",
 CellID->411302082],
Cell[428883, 8552, 47188, 919, 70, "Output",ExpressionUUID->"efc05b7d-52bb-4679-8ae6-e41b5af9dbd1",
 CellID->208492487]
}, Open  ]],
Cell[476086, 9474, 826, 24, 70, "MathCaption",ExpressionUUID->"a68d77db-eabc-4507-8035-f3d0d441e47a",
 CellID->405165279],
Cell[CellGroupData[{
Cell[476937, 9502, 233, 5, 70, "Input",ExpressionUUID->"8af05fff-71a0-4d45-a338-49c70bba151b",
 CellID->184746180],
Cell[477173, 9509, 376, 11, 35, "Output",ExpressionUUID->"6db91d96-7563-4557-bdec-165a9339195f",
 CellID->111286555]
}, Open  ]],
Cell[CellGroupData[{
Cell[477586, 9525, 233, 5, 70, "Input",ExpressionUUID->"0f98009b-589b-4f0d-a152-c2eae8bbfea3",
 CellID->52088994],
Cell[477822, 9532, 314, 8, 35, "Output",ExpressionUUID->"45f6aaff-1c99-4e35-9f3c-4442748d3475",
 CellID->50006365]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478185, 9546, 123, 1, 70, "Subsection",ExpressionUUID->"68a61e06-6c12-4227-b501-526c258ae0cb",
 CellID->316215944],
Cell[478311, 9549, 571, 13, 70, "Text",ExpressionUUID->"c7eb56ce-b70c-4e20-9e47-59001223421d",
 CellID->347570650],
Cell[478885, 9564, 734, 20, 70, "DefinitionBox",ExpressionUUID->"72cae841-559f-4d42-a501-5dc826e1bf14",
 CellID->454154062],
Cell[479622, 9586, 126, 1, 70, "Caption",ExpressionUUID->"64e4c296-7fa0-40d5-9d29-e198e7cf28d6",
 CellID->353572708],
Cell[479751, 9589, 171, 3, 70, "MathCaption",ExpressionUUID->"638e1d5d-e836-4a3c-b5c9-fe1c83599a66",
 CellID->104691956],
Cell[CellGroupData[{
Cell[479947, 9596, 348, 8, 70, "Input",ExpressionUUID->"351bfa7c-0c63-484b-b2b2-bb4fced9d56c",
 CellID->9491473],
Cell[480298, 9606, 52699, 1055, 70, "Output",ExpressionUUID->"2dfb02d9-eb63-4aa3-a407-832db568d9cd",
 CellID->472088138]
}, Open  ]],
Cell[533012, 10664, 1257, 36, 70, "Text",ExpressionUUID->"b381bb5a-f8a5-4c1a-8c84-8355db89947a",
 CellID->44109978],
Cell[534272, 10702, 192, 5, 70, "MathCaption",ExpressionUUID->"fabc06d1-28cb-4632-b0c4-4a6a728cc652",
 CellID->339362087],
Cell[CellGroupData[{
Cell[534489, 10711, 341, 8, 70, "Input",ExpressionUUID->"1fe1a32c-695a-4edb-8b42-cd692a53e683",
 CellID->202779533],
Cell[534833, 10721, 186, 4, 35, "Output",ExpressionUUID->"2906780d-760c-4e6e-98e8-367237f4b040",
 CellID->166108485]
}, Open  ]],
Cell[535034, 10728, 662, 18, 70, "Text",ExpressionUUID->"3c0edd28-70f0-42a9-aa3e-0952060102d4",
 CellID->24990749],
Cell[535699, 10748, 249, 7, 70, "MathCaption",ExpressionUUID->"6df97e66-d4ff-4220-90f5-518d8e85c3a7",
 CellID->164666480],
Cell[CellGroupData[{
Cell[535973, 10759, 1418, 37, 70, "Input",ExpressionUUID->"3c7cd42e-725f-40fc-9628-e530909ca049",
 CellID->481809636],
Cell[537394, 10798, 185, 4, 35, "Output",ExpressionUUID->"aafa04ca-90c0-46ab-b183-2af8059af991",
 CellID->83332237]
}, Open  ]],
Cell[537594, 10805, 357, 9, 70, "Text",ExpressionUUID->"def967f2-245c-469e-8194-479ffe9cb7a6",
 CellID->321088230],
Cell[537954, 10816, 257, 7, 70, "MathCaption",ExpressionUUID->"43096b66-6635-4e84-b91f-841aa4de7cfc",
 CellID->23603036],
Cell[CellGroupData[{
Cell[538236, 10827, 1419, 37, 70, "Input",ExpressionUUID->"ce4b4f72-baae-498f-af9b-faa0937f13a1",
 CellID->265568366],
Cell[539658, 10866, 186, 4, 35, "Output",ExpressionUUID->"038aacfa-18bd-4c51-b458-1be8bf6be0c3",
 CellID->174772876]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[539905, 10877, 115, 1, 70, "Section",ExpressionUUID->"c20c98ca-41f9-40ec-ba06-325557b7b58b",
 CellID->69801460],
Cell[CellGroupData[{
Cell[540045, 10882, 106, 1, 70, "Subsection",ExpressionUUID->"89a0bf36-da60-41b0-827a-5c640a3a3643",
 CellID->42316102],
Cell[540154, 10885, 446, 9, 70, "Text",ExpressionUUID->"763ef351-25d1-47aa-b77e-d4e36d567d62",
 CellID->153517948],
Cell[540603, 10896, 434, 10, 70, "DefinitionBox",ExpressionUUID->"6fafbabc-1b59-47a2-b604-fac259a5a89a",
 CellID->521402141],
Cell[541040, 10908, 131, 1, 70, "Caption",ExpressionUUID->"28de61f6-4a96-4ebc-8262-942e19d429bc",
 CellID->24859362],
Cell[541174, 10911, 577, 13, 70, "Text",ExpressionUUID->"249c6be0-b5a8-4f7b-adc1-9e000db926da",
 CellID->210165798],
Cell[541754, 10926, 308, 5, 70, "DefinitionBox3Col",ExpressionUUID->"64557a62-00eb-4150-9da6-2b0e9c2533d6",
 CellID->535547963],
Cell[542065, 10933, 124, 1, 70, "Caption",ExpressionUUID->"d3b1b30b-4f0a-4494-97fb-a2ba878565a8",
 CellID->118552512],
Cell[542192, 10936, 151, 1, 70, "MathCaption",ExpressionUUID->"ae9dcbec-9fdf-4806-a669-920720774e8b",
 CellID->285158367],
Cell[CellGroupData[{
Cell[542368, 10941, 471, 13, 70, "Input",ExpressionUUID->"76342e4e-52b2-432a-9c92-8eb1d05b7c34",
 CellID->82993485],
Cell[542842, 10956, 2544, 63, 172, "Output",ExpressionUUID->"1c675623-a9f5-4762-843f-a70cf3640f6a",
 CellID->398677993]
}, Open  ]],
Cell[545401, 11022, 124, 1, 70, "MathCaption",ExpressionUUID->"a6b62f58-ff5e-48a1-acd1-4e39116d0e5f",
 CellID->91103281],
Cell[CellGroupData[{
Cell[545550, 11027, 293, 7, 70, "Input",ExpressionUUID->"fffea070-1e2d-4bfe-87fb-8e8cd38ce036",
 CellID->482145865],
Cell[545846, 11036, 144221, 2858, 647, "Output",ExpressionUUID->"d7089a33-ad19-4573-9aca-ad6a201a6083",
 CellID->190654054]
}, Open  ]],
Cell[690082, 13897, 894, 24, 70, "Text",ExpressionUUID->"d72fd3b1-6132-48fb-a33d-56165054de8d",
 CellID->102410],
Cell[690979, 13923, 870, 25, 70, "Text",ExpressionUUID->"6fcb115a-dd09-49a1-9b7e-45c36d41a51e",
 InitializationCell->True,
 CellID->231613338]
}, Open  ]],
Cell[CellGroupData[{
Cell[691886, 13953, 107, 1, 70, "Subsection",ExpressionUUID->"75018579-d4c7-4118-a8b8-72456943fcff",
 CellID->16111444],
Cell[691996, 13956, 472, 9, 70, "Text",ExpressionUUID->"a747082f-8748-4d02-bab3-e4ca82f5348e",
 CellID->289490881],
Cell[692471, 13967, 307, 5, 70, "Text",ExpressionUUID->"86f3b622-00a9-49dc-92f8-d702b6bc9b0f",
 CellID->43750844],
Cell[692781, 13974, 237, 4, 70, "Text",ExpressionUUID->"673e1595-c3eb-491c-be17-ccf50ca1ed6c",
 CellID->709333429],
Cell[693021, 13980, 579, 15, 70, "DefinitionBox",ExpressionUUID->"aeaad669-6bdc-457b-bfad-78ce99c2d502",
 CellID->36083],
Cell[693603, 13997, 130, 1, 70, "Caption",ExpressionUUID->"27883294-fd7b-45c0-900a-e36a3310eb7d",
 CellID->796978057],
Cell[693736, 14000, 266, 7, 70, "MathCaption",ExpressionUUID->"3915d0f6-f16c-4a03-9cf8-28e0a78da366",
 CellID->4454069],
Cell[CellGroupData[{
Cell[694027, 14011, 189, 4, 70, "Input",ExpressionUUID->"e75b80ba-316f-4d26-93a2-1c80954879f8",
 CellID->863367331],
Cell[694219, 14017, 32396, 615, 70, "Output",ExpressionUUID->"23fc2e11-a7b8-4ee6-a63d-abe79edd90e2",
 CellID->250038241]
}, Open  ]],
Cell[726630, 14635, 209, 4, 70, "MathCaption",ExpressionUUID->"3c338866-9a29-4807-aa11-a80669d2f11f",
 CellID->162844997],
Cell[CellGroupData[{
Cell[726864, 14643, 191, 4, 70, "Input",ExpressionUUID->"25abdc9b-eddb-4d6b-8a17-62d0caefa7a4",
 CellID->474199063],
Cell[727058, 14649, 20092, 359, 70, "Output",ExpressionUUID->"d2c52c03-4f7a-4ecb-9464-34093a55c380",
 CellID->59960076]
}, Open  ]],
Cell[747165, 15011, 192, 5, 70, "MathCaption",ExpressionUUID->"7aa953d9-53e3-4373-bfe8-537eec625a32",
 CellID->4557166],
Cell[CellGroupData[{
Cell[747382, 15020, 2034, 52, 70, "Input",ExpressionUUID->"8335b0ec-9769-4daf-b18d-1f792e3fcf4c",
 CellID->595233906],
Cell[749419, 15074, 34582, 573, 59, "Output",ExpressionUUID->"5de2ead6-f08d-49c5-9c5f-3b48721c3393",
 CellTags->"RasterizedOutput",
 CellID->110463983]
}, Open  ]],
Cell[784016, 15650, 417, 11, 70, "MathCaption",ExpressionUUID->"7e86e011-1380-419a-9793-44eb9b5000b8",
 CellID->102229160],
Cell[CellGroupData[{
Cell[784458, 15665, 1485, 39, 70, "Input",ExpressionUUID->"1c4ed851-4a99-46f6-a910-fc1e4d39163c",
 CellID->19077661],
Cell[785946, 15706, 2309, 63, 70, "Output",ExpressionUUID->"9888140d-5ab6-4254-90b5-0a5126abab59",
 CellID->131179283]
}, Open  ]],
Cell[788270, 15772, 394, 11, 70, "MathCaption",ExpressionUUID->"c7a1271e-1829-420b-aa78-e9e6d731d27c",
 CellID->709715062],
Cell[CellGroupData[{
Cell[788689, 15787, 219, 4, 70, "Input",ExpressionUUID->"a71703c9-c7fa-4ed6-bedf-02c3b7c2cb94",
 CellID->10879826],
Cell[788911, 15793, 252, 6, 35, "Output",ExpressionUUID->"f723a01c-c660-437c-8d42-6d737a4a31f0",
 CellID->128025874]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789224, 15806, 133, 1, 70, "Section",ExpressionUUID->"38bebe8d-4785-40af-933b-257d3e857511",
 CellID->78394971],
Cell[789360, 15809, 665, 19, 70, "Text",ExpressionUUID->"4ee8f495-e326-40b9-80f1-7c8a2cd4b193",
 CellID->211922561],
Cell[790028, 15830, 431, 11, 70, "MathCaption",ExpressionUUID->"c8a0c8a8-29e3-49ed-8a4b-5b34b16ca900",
 CellID->594551925],
Cell[790462, 15843, 456, 11, 70, "Input",ExpressionUUID->"d6dc3b7d-1570-403c-8679-156cddbd0cc2",
 CellID->156314717],
Cell[790921, 15856, 242, 6, 70, "MathCaption",ExpressionUUID->"095658f7-8993-4f6d-adf6-fb325271dc3e",
 CellID->62013518],
Cell[791166, 15864, 1537, 40, 70, "Input",ExpressionUUID->"4f79950d-3cc6-4ff0-92b9-aeff62f864c6",
 CellID->400050939],
Cell[792706, 15906, 35125, 626, 70, "Input",ExpressionUUID->"a621a1a3-6c56-4add-a52f-f6fa9611ffa1",
 CellID->142448669],
Cell[827834, 16534, 147, 1, 70, "MathCaption",ExpressionUUID->"6daada7c-ccc8-49de-b204-140509ac0462",
 CellID->343002500],
Cell[827984, 16537, 7798, 201, 70, "Input",ExpressionUUID->"acedad05-b568-42a6-84d5-18846f8637f8",
 CellID->42427840],
Cell[835785, 16740, 444, 9, 70, "MathCaption",ExpressionUUID->"5842295b-9e8f-4f5b-b946-28773e5e3d10",
 CellID->96674661],
Cell[836232, 16751, 3978, 95, 70, "Input",ExpressionUUID->"f3ee26c2-98be-41fb-8fbe-bb82146c4c0c",
 CellID->351504644],
Cell[840213, 16848, 140, 1, 70, "MathCaption",ExpressionUUID->"cbcd88f9-48b7-434c-83fc-3782de3de931",
 CellID->777100582],
Cell[840356, 16851, 679, 18, 70, "Input",ExpressionUUID->"863f0f60-0722-484d-bc78-a3c007980d31",
 CellID->22162130],
Cell[841038, 16871, 341, 8, 70, "Input",ExpressionUUID->"ce3b944f-1159-4ddd-8941-5fedc6821560",
 CellID->772499]
}, Open  ]],
Cell[CellGroupData[{
Cell[841416, 16884, 133, 1, 70, "Section",ExpressionUUID->"97d1cac3-18ff-46aa-a701-22b76521fa5e",
 CellID->534745247],
Cell[841552, 16887, 420, 9, 70, "Text",ExpressionUUID->"11b1eebd-be77-4d11-a5a4-9f2e6a778f07",
 CellID->194845850],
Cell[841975, 16898, 243, 4, 70, "Text",ExpressionUUID->"0907bab5-2b59-4a20-90ac-3e811a6b7210",
 CellID->770920200],
Cell[842221, 16904, 169, 3, 70, "MathCaption",ExpressionUUID->"9229b8d9-e8e0-4d69-82ec-012d529a501f",
 CellID->608959116],
Cell[842393, 16909, 348, 9, 70, "Input",ExpressionUUID->"ded31762-7984-4202-aeb7-6d599767c4c0",
 CellID->412792471],
Cell[842744, 16920, 372, 9, 70, "Input",ExpressionUUID->"ea4c2308-36e9-4ed1-9d6d-6eb43b20f994",
 CellID->683559455],
Cell[843119, 16931, 70949, 1169, 70, "Input",ExpressionUUID->"b76bd188-4d53-4bbd-b41f-e381dbff5ae9",
 Evaluatable->False,
 CellID->183104000],
Cell[914071, 18102, 319, 5, 70, "Text",ExpressionUUID->"c1d1d519-220a-4130-87c2-40786f8703db",
 CellID->135774005],
Cell[914393, 18109, 328703, 5394, 70, "Input",ExpressionUUID->"20158325-a1e8-4025-9c1a-8952a44960a1",
 Evaluatable->False,
 CellID->34083425]
}, Open  ]],
Cell[CellGroupData[{
Cell[1243133, 23508, 108, 1, 70, "Section",ExpressionUUID->"8f48dbfb-3a01-4c62-bcf4-116e8e57a733",
 CellID->350926873],
Cell[1243244, 23511, 262, 5, 70, "Text",ExpressionUUID->"66e76359-cf63-4b27-8d3a-050c3958a133",
 CellID->13241645],
Cell[CellGroupData[{
Cell[1243531, 23520, 127, 1, 70, "Subsection",ExpressionUUID->"9354acd0-5ba9-4f0a-9f4b-ba8934c0a5e7",
 CellID->172356013],
Cell[CellGroupData[{
Cell[1243683, 23525, 112, 1, 70, "Subsubsection",ExpressionUUID->"6b761a89-a649-444b-b96c-bae3a4d108d8",
 CellID->286665137],
Cell[1243798, 23528, 349, 7, 70, "Text",ExpressionUUID->"5edd66b9-cf5e-48e5-8e6d-6fdb28e9c015",
 CellID->258934013],
Cell[1244150, 23537, 378, 6, 70, "Text",ExpressionUUID->"0b16d6e0-0dea-4de8-bb8e-ce25b1d3d889",
 CellID->242058889],
Cell[1244531, 23545, 270, 6, 70, "Text",ExpressionUUID->"e6dc2aec-e396-44d9-8a1f-32c1877b8369",
 CellID->19389209]
}, Open  ]],
Cell[CellGroupData[{
Cell[1244838, 23556, 139, 1, 70, "Subsubsection",ExpressionUUID->"ae6fff5c-2d44-4159-9cc7-55f86e8390be",
 CellID->491335736],
Cell[1244980, 23559, 295, 5, 70, "Text",ExpressionUUID->"7f9e8d05-cdf0-417a-9b70-dd46112c14ba",
 CellID->425199334],
Cell[1245278, 23566, 553, 9, 70, "Text",ExpressionUUID->"89c55b02-b6ca-4149-97fb-e6cf1cd02d84",
 CellID->578569498],
Cell[1245834, 23577, 703, 21, 70, "Text",ExpressionUUID->"79b182e5-dc76-4296-afba-f024c37c96f8",
 CellID->312953253],
Cell[1246540, 23600, 201, 4, 70, "Text",ExpressionUUID->"56e090da-7dcc-4e0f-b5c6-48722200941f",
 CellID->175903162],
Cell[CellGroupData[{
Cell[1246766, 23608, 412, 9, 70, "Input",ExpressionUUID->"5ab113e5-a0b7-40e8-bc61-b06f59f52fe2",
 CellID->173420460],
Cell[1247181, 23619, 50625, 987, 70, "Output",ExpressionUUID->"c5cb6843-536a-4ed4-b27d-76ac50b09776",
 CellID->78218064]
}, Open  ]],
Cell[1297821, 24609, 448, 9, 70, "Text",ExpressionUUID->"828ad265-d7d7-4c52-b659-c04a0ef7ebf6",
 CellID->329289187],
Cell[CellGroupData[{
Cell[1298294, 24622, 231, 5, 70, "Input",ExpressionUUID->"d99ca554-a9b5-4e08-b84c-617d7224535f",
 CellID->94937919],
Cell[1298528, 24629, 362, 11, 35, "Output",ExpressionUUID->"2008bef0-80e8-48ff-9cb6-d4f1dfdea4fe",
 CellID->155672448]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1298951, 24647, 126, 1, 70, "Subsection",ExpressionUUID->"4e51f726-060b-4ff1-9b56-32ada895c1d1",
 CellID->260963109],
Cell[CellGroupData[{
Cell[1299102, 24652, 112, 1, 70, "Subsubsection",ExpressionUUID->"c6c69579-a10a-4a65-bd33-fea125aebe62",
 CellID->263969780],
Cell[1299217, 24655, 605, 19, 70, "Text",ExpressionUUID->"f829ef22-d1e0-4c76-b4be-5047a4d799d1",
 CellID->117843097]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299859, 24679, 159, 4, 70, "Subsubsection",ExpressionUUID->"38c97efc-64c9-44e9-8e0c-a70776ba4655",
 CellID->611739938],
Cell[1300021, 24685, 593, 17, 70, "Text",ExpressionUUID->"7ce568ba-ecdc-4e43-9516-21db126bf291",
 CellID->33559431],
Cell[1300617, 24704, 204, 5, 70, "MathCaption",ExpressionUUID->"f3465601-fc38-4471-a27d-8b111af64905",
 CellID->171858137],
Cell[1300824, 24711, 311, 8, 70, "Input",ExpressionUUID->"b10f9135-e4d5-4f08-834b-587caabc9dbf",
 CellID->119608728],
Cell[1301138, 24721, 143, 1, 70, "MathCaption",ExpressionUUID->"b3ef0527-1587-4fcc-b21c-72f1cf9415e3",
 CellID->157357000],
Cell[1301284, 24724, 357, 9, 70, "Input",ExpressionUUID->"05a161cb-1821-4935-9a20-2c1fdf6ae06f",
 CellID->409173682],
Cell[CellGroupData[{
Cell[1301666, 24737, 227, 5, 70, "Input",ExpressionUUID->"34e604e8-b52d-400e-a08e-26125c6d3200",
 CellID->992243304],
Cell[1301896, 24744, 47906, 933, 70, "Output",ExpressionUUID->"5904da95-dd6e-41f4-ac73-b79e6ad02ab9",
 CellID->628351573]
}, Open  ]],
Cell[1349817, 25680, 477, 13, 70, "MathCaption",ExpressionUUID->"a01511dc-14b2-4646-9522-93475374face",
 CellID->92508675],
Cell[CellGroupData[{
Cell[1350319, 25697, 277, 7, 70, "Input",ExpressionUUID->"a31728c0-972a-4fca-b5a3-f2524d710823",
 CellID->412886059],
Cell[1350599, 25706, 294, 6, 70, "Output",ExpressionUUID->"848ce6e2-3b15-438e-8a19-fbd0488d83d2",
 CellID->276961594]
}, Open  ]],
Cell[CellGroupData[{
Cell[1350930, 25717, 167, 3, 70, "Input",ExpressionUUID->"e7c6d3fa-0681-4cd0-b082-cb50e8e69711",
 CellID->486207228],
Cell[1351100, 25722, 187, 2, 47, "Output",ExpressionUUID->"f76d325f-5515-483a-9c70-b6d36c32b78c",
 CellID->408844571]
}, Open  ]],
Cell[1351302, 25727, 515, 14, 70, "MathCaption",ExpressionUUID->"5226f107-dc46-4515-aab0-31a7e613460c",
 CellID->74601511],
Cell[CellGroupData[{
Cell[1351842, 25745, 1520, 39, 70, "Input",ExpressionUUID->"fcda9e8c-f641-4b0c-810b-32ac506e5fba",
 CellID->368659788],
Cell[1353365, 25786, 187, 4, 35, "Output",ExpressionUUID->"6b2f1228-551f-4557-9f18-c2a420beac79",
 CellID->140456599]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353589, 25795, 167, 3, 70, "Input",ExpressionUUID->"aea6177f-4c13-4847-93bf-c6b0a0c71538",
 CellID->310756716],
Cell[1353759, 25800, 145, 2, 47, "Output",ExpressionUUID->"ad9f8767-b1af-48f0-a601-af662c2ffbac",
 CellID->537653934]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353953, 25808, 139, 1, 70, "Subsubsection",ExpressionUUID->"6c6356a3-9e0b-45f5-98dc-ad8dcd266ff8",
 CellID->71024573],
Cell[1354095, 25811, 275, 6, 70, "Text",ExpressionUUID->"c6b3675b-bcbe-4ccc-86ab-01f640670dbd",
 CellID->275539025],
Cell[1354373, 25819, 434, 9, 70, "Text",ExpressionUUID->"91b8c9b7-74f2-4616-b4e5-d1be5d81e714",
 CellID->122270234],
Cell[1354810, 25830, 395, 8, 70, "Text",ExpressionUUID->"be2d5256-f7eb-43b6-bea2-27df35e5bb8e",
 CellID->329835918],
Cell[1355208, 25840, 1196, 34, 70, "Text",ExpressionUUID->"67588a59-644e-48ca-bb4d-f691cd765fb8",
 CellID->373777434],
Cell[1356407, 25876, 201, 5, 70, "Text",ExpressionUUID->"3f8af368-119f-4f61-8849-ea880a2cd7f1",
 CellID->810936465],
Cell[CellGroupData[{
Cell[1356633, 25885, 306, 7, 70, "Input",ExpressionUUID->"354fd7d3-acd7-4c63-8e3f-92a79523fa64",
 CellID->184842682],
Cell[1356942, 25894, 42129, 814, 70, "Output",ExpressionUUID->"66c2c354-0d0b-415e-9d10-ba42d9eef958",
 CellID->173028883]
}, Open  ]],
Cell[1399086, 26711, 512, 15, 70, "Text",ExpressionUUID->"033425ba-d1cd-4b43-8000-b4dd377090cf",
 CellID->657188602],
Cell[CellGroupData[{
Cell[1399623, 26730, 235, 5, 70, "Input",ExpressionUUID->"e434af7e-0b92-43a7-8848-577e6f73cdb8",
 CellID->114509981],
Cell[1399861, 26737, 201, 4, 35, "Output",ExpressionUUID->"0422bcb6-99d8-41b2-8a5a-7052fb7cc2c8",
 CellID->74656697]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1400111, 26747, 139, 1, 70, "Subsubsection",ExpressionUUID->"d7898b09-77be-46bc-9fd6-6dd2737e6c11",
 CellID->54517099],
Cell[1400253, 26750, 316, 7, 70, "Text",ExpressionUUID->"e77365f9-7457-4d70-9fe1-f4d71ef4d4dc",
 CellID->8506351],
Cell[1400572, 26759, 470, 7, 70, "Text",ExpressionUUID->"fca25985-be00-4822-bb03-d374060765ab",
 CellID->423477363],
Cell[1401045, 26768, 837, 24, 70, "Text",ExpressionUUID->"26e377db-12bc-4600-b2b7-7e184df32278",
 CellID->205564814],
Cell[1401885, 26794, 726, 18, 70, "Text",ExpressionUUID->"15f869b1-1c1c-4dab-8eb7-1bf467faf179",
 CellID->422809142],
Cell[1402614, 26814, 243, 6, 70, "Text",ExpressionUUID->"57bb6ea3-8288-45aa-8e52-59b844750b57",
 CellID->222929906],
Cell[1402860, 26822, 201, 5, 70, "Text",ExpressionUUID->"10d32f52-89d0-4033-bdfc-b8979b07a185",
 CellID->632356789],
Cell[CellGroupData[{
Cell[1403086, 26831, 333, 8, 70, "Input",ExpressionUUID->"4869b59a-8898-430d-8523-d296de8b85ca",
 CellID->8621327],
Cell[1403422, 26841, 45367, 867, 70, "Output",ExpressionUUID->"c57669b2-5623-4e82-9a1f-3737a0b41050",
 CellID->64864236]
}, Open  ]],
Cell[1448804, 27711, 571, 13, 70, "Text",ExpressionUUID->"76fd6445-d8ea-4e50-ae9f-57484ab0865b",
 CellID->261819768],
Cell[CellGroupData[{
Cell[1449400, 27728, 246, 6, 70, "Input",ExpressionUUID->"eff1530f-8af8-426e-adc2-f572874fded0",
 CellID->174164118],
Cell[1449649, 27736, 368, 11, 35, "Output",ExpressionUUID->"b9466c5b-0527-4ae6-892c-352cc0dca1ff",
 CellID->40136114]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1450078, 27754, 128, 1, 70, "Subsection",ExpressionUUID->"e8cff459-6d2c-4015-a790-386d22b04ebf",
 CellID->43180724],
Cell[1450209, 27757, 536, 15, 70, "Text",ExpressionUUID->"b17e1575-9cb0-4cdd-97f1-7547db6ab012",
 CellID->565757231],
Cell[1450748, 27774, 196, 4, 70, "MathCaption",ExpressionUUID->"91936aa1-8810-491e-bdf3-376bcc7ae449",
 CellID->434947135],
Cell[1450947, 27780, 575, 12, 70, "Input",ExpressionUUID->"1ea43d20-bbd8-47de-9329-629601114289",
 CellID->250349650],
Cell[1451525, 27794, 143, 1, 70, "MathCaption",ExpressionUUID->"eec49e1d-583c-4328-8868-7efdb5a4ef5c",
 CellID->117964732],
Cell[CellGroupData[{
Cell[1451693, 27799, 332, 7, 70, "Input",ExpressionUUID->"461dd745-4743-406c-9756-576a924b8b74",
 CellID->150606441],
Cell[1452028, 27808, 1282, 33, 81, "Output",ExpressionUUID->"3fa0c2ab-d4e0-4aac-88eb-3ef2d92c2976",
 CellID->51178686]
}, Open  ]],
Cell[CellGroupData[{
Cell[1453347, 27846, 226, 5, 70, "Input",ExpressionUUID->"b94eddc7-f876-4869-8abc-985e730808e6",
 CellID->280148008],
Cell[1453576, 27853, 99865, 1960, 70, "Output",ExpressionUUID->"83d32d38-4597-4169-8e7a-a0868248c313",
 CellID->26803319]
}, Open  ]],
Cell[1553456, 29816, 422, 11, 70, "MathCaption",ExpressionUUID->"c2846168-b534-41d5-9fbd-df8d178df596",
 CellID->27457652],
Cell[CellGroupData[{
Cell[1553903, 29831, 244, 6, 70, "Input",ExpressionUUID->"86deda08-1088-442b-b494-ba6e9091390f",
 CellID->96367213],
Cell[1554150, 29839, 7788, 162, 70, "Echo",ExpressionUUID->"0d12293d-b8ce-4582-8733-ce01fb75c36e",
 CellID->434427734],
Cell[1561941, 30003, 144, 3, 35, "Output",ExpressionUUID->"cc3f6758-152d-4552-befd-03eca67f36af",
 CellID->353032533]
}, Open  ]],
Cell[1562100, 30009, 1421, 41, 70, "Text",ExpressionUUID->"5bfc482b-dfc9-45a4-b673-9bd24ac93c5c",
 CellID->19505168],
Cell[1563524, 30052, 695, 21, 70, "MathCaption",ExpressionUUID->"14ba50a4-426e-41a7-89aa-1081e477ce66",
 CellID->711922134],
Cell[CellGroupData[{
Cell[1564244, 30077, 1519, 39, 70, "Input",ExpressionUUID->"e29990e1-9529-4ca0-8b77-0ceef6819390",
 CellID->363043563],
Cell[1565766, 30118, 454, 10, 70, "Output",ExpressionUUID->"29aca181-c8ab-412c-bb2f-7a3dc419e7fa",
 CellID->607620096]
}, Open  ]],
Cell[CellGroupData[{
Cell[1566257, 30133, 166, 3, 70, "Input",ExpressionUUID->"39f4380e-fa94-4645-944a-c2f9224d28fe",
 CellID->423171875],
Cell[1566426, 30138, 334, 7, 50, "Output",ExpressionUUID->"56d058c3-6404-4e5f-b42a-e5eae934d16b",
 CellID->582432645]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1566821, 30152, 274, 7, 70, "TutorialMoreAboutSection",ExpressionUUID->"e781eb13-9253-46f5-a89a-71d58b15b174",
 CellID->23220180],
Cell[1567098, 30161, 86, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"b966729b-509a-4672-8fe6-54c041293a43"],
Cell[1567187, 30163, 201, 3, 70, "TutorialMoreAbout",ExpressionUUID->"5bbbc34f-38be-4751-9253-e6cb4e7a204d",
 CellID->1567025153]
}, Open  ]]
}, Open  ]],
Cell[1567415, 30170, 78, 0, 70, "FooterCell",ExpressionUUID->"51b37082-23fc-4c2e-88fd-d5148c6ff1aa"]
}
]
*)

(* End of internal cache information *)

